cscope 15 $HOME/Public/siplcs               0001315134
	@config.h

8 
	#ENABLE_NLS
 1

	)

11 
	#HAVE_BIND_TEXTDOMAIN_CODESET
 1

	)

14 
	#HAVE_DCGETTEXT
 1

	)

17 
	#HAVE_DLFCN_H
 1

	)

20 
	#HAVE_GETTEXT
 1

	)

26 
	#HAVE_INTTYPES_H
 1

	)

29 
	#HAVE_LANGINFO_CODESET
 1

	)

32 
	#HAVE_LC_MESSAGES
 1

	)

38 
	#HAVE_LIBKRB5
 1

	)

41 
	#HAVE_LOCALE_H
 1

	)

44 
	#HAVE_MEMORY_H
 1

	)

50 
	#HAVE_STDINT_H
 1

	)

53 
	#HAVE_STDLIB_H
 1

	)

56 
	#HAVE_STRINGS_H
 1

	)

59 
	#HAVE_STRING_H
 1

	)

65 
	#HAVE_SYS_STAT_H
 1

	)

68 
	#HAVE_SYS_TYPES_H
 1

	)

71 
	#HAVE_UNISTD_H
 1

	)

74 
	#HAVE_VV
 1

	)

78 
	#LT_OBJDIR
 ".libs/"

	)

81 
	#NICE_HAS_COMPATIBILITY
 1

	)

87 
	#PACKAGE_BUGREPORT
 "hâps://sour˚f‹ge.√t/åackî/?©id=949931&group_id=194563"

	)

90 
	#PACKAGE_NAME
 "pidgö-sùe"

	)

93 
	#PACKAGE_STRING
 "pidgö-sùê1.11.0"

	)

96 
	#PACKAGE_TARNAME
 "pidgö-sùe"

	)

99 
	#PACKAGE_URL
 "hâp://sùe.sour˚f‹ge.√t/"

	)

102 
	#PACKAGE_VERSION
 "1.11.0"

	)

105 
	#STDC_HEADERS
 1

	)

	@src/adium/ESPurpleSIPEAccount.h

9 #imp‹à<
Cocﬂ
/Cocﬂ.
h
>

10 #imp‹à<
AdiumLibpuΩÀ
/
CBPuΩÀAccou¡
.
h
>

12 @
öãrÁ˚
 
	gESPuΩÀSIPEAccou¡
 : 
CBPuΩÀAccou¡
 <
AIAccou¡_Fûes
> {

15 @
íd


	@src/adium/ESSIPELibpurpleServicePlugin.h

9 #imp‹à<
Cocﬂ
/Cocﬂ.
h
>

10 #imp‹à<
Adium
/
AIPlugö
.
h
>

11 #imp‹à<
AdiumLibpuΩÀ
/
AILibpuΩÀPlugö
.
h
>

15 @
öãrÁ˚
 
	gESSIPELibpuΩÀSîvi˚Plugö
 : 
AIPlugö
 <
AILibpuΩÀPlugö
> {

16 
ESSIPESîvi˚
 *
SIPESîvi˚
;

19 @
	gíd


	@src/adium/ESSIPEService.h

9 #imp‹à<
Cocﬂ
/Cocﬂ.
h
>

10 #imp‹à<
Adium
/
AISîvi˚
.
h
>

12 @
öãrÁ˚
 
	gESSIPESîvi˚
 : 
AISîvi˚
 {

16 @
íd


	@src/api/core-depurple.h

26 
	gsùe_c‹e_public
;

28 
sùe_£¨ch_c⁄è˘_wôh_cb
(
PuΩÀC⁄√˘i⁄
 *
gc
,

29 
PuΩÀReque°Fõlds
 *
fõlds
);

30 
GLi°
 *
sùe_buddy_míu
(
PuΩÀBuddy
 *
buddy
);

31 
GLi°
 *
sùe_ch©_míu
(
PuΩÀCh©
 *
ch©
);

32 
sùe_puΩÀ_£tup
(
sùe_c‹e_public
 *
sùe_public
,

33 
PuΩÀC⁄√˘i⁄
 *
gc
);

34 
sùe_im_£nd
(
PuΩÀC⁄√˘i⁄
 *
gc
, c⁄° *
who
, c⁄° *
wh©
,

35 
PuΩÀMesßgeFœgs
 
Êags
);

36 
sùe_£nd_typög
(
PuΩÀC⁄√˘i⁄
 *
gc
, c⁄° *
who
,

37 
PuΩÀTypögSèã
 
°©e
);

38 
sùe_gë_öfo
(
PuΩÀC⁄√˘i⁄
 *
gc
, c⁄° *
u£∫ame
);

39 
sùe_£t_°©us
(
PuΩÀAccou¡
 *
accou¡
, 
PuΩÀSètus
 *
°©us
);

40 
sùe_£t_idÀ
(
PuΩÀC⁄√˘i⁄
 *
gc
, 
öãrvÆ
);

41 
sùe_add_buddy
(
PuΩÀC⁄√˘i⁄
 *
gc
, 
PuΩÀBuddy
 *
buddy
,

42 
PuΩÀGroup
 *
group
);

43 
sùe_ªmove_buddy
(
PuΩÀC⁄√˘i⁄
 *
gc
, 
PuΩÀBuddy
 *
buddy
,

44 
PuΩÀGroup
 *
group
);

45 
sùe_ch©_Àave
(
PuΩÀC⁄√˘i⁄
 *
gc
, 
id
);

46 
sùe_ch©_£nd
(
PuΩÀC⁄√˘i⁄
 *
gc
, 
id
, c⁄° *
wh©
,

47 
PuΩÀMesßgeFœgs
 
Êags
);

48 
sùe_group_buddy
(
PuΩÀC⁄√˘i⁄
 *
gc
, c⁄° *
who
,

49 c⁄° *
ﬁd_group_«me
,

50 c⁄° *
√w_group_«me
);

51 
sùe_ª«me_group
(
PuΩÀC⁄√˘i⁄
 *
gc
, c⁄° *
ﬁd_«me
,

52 
PuΩÀGroup
 *
group
, 
GLi°
 *
moved_buddõs
);

53 
sùe_c⁄vo_˛o£d
(
PuΩÀC⁄√˘i⁄
 *
gc
, c⁄° *
who
);

54 
sùe_ªmove_group
(
PuΩÀC⁄√˘i⁄
 *
gc
, 
PuΩÀGroup
 *
group
);

64 
sùe_·_£nd_fûe
(
PuΩÀC⁄√˘i⁄
 *
gc
, c⁄° *
who
,

65 c⁄° *
fûe
);

73 
PuΩÀX„r
 *
sùe_·_√w_x„r
(
PuΩÀC⁄√˘i⁄
 *
gc
,

74 c⁄° *
who
);

77 
	#PURPLE_ACCOUNT_TO_SIPE_CORE_PRIVATE
 ((
sùe_c‹e_¥iv©e
 *)
accou¡
->
gc
->
¥Ÿo_d©a
)

	)

78 
	#PURPLE_BUDDY_TO_SIPE_CORE_PRIVATE
 ((
sùe_c‹e_¥iv©e
 *)
buddy
->
accou¡
->
gc
->
¥Ÿo_d©a
)

	)

79 
	#PURPLE_CHAT_TO_SIPE_CORE_PRIVATE
 ((
sùe_c‹e_¥iv©e
 *)
ch©
->
accou¡
->
gc
->
¥Ÿo_d©a
)

	)

80 
	#PURPLE_GC_TO_SIPE_CORE_PRIVATE
 ((
sùe_c‹e_¥iv©e
 *)
gc
->
¥Ÿo_d©a
)

	)

81 
	#PURPLE_XFER_TO_SIPE_CORE_PRIVATE
 ((
sùe_c‹e_¥iv©e
 *)
x„r
->
accou¡
->
gc
->
¥Ÿo_d©a
)

	)

82 
	#PURPLE_ACCOUNT_TO_SIPE_ACCOUNT_DATA
 
PURPLE_ACCOUNT_TO_SIPE_CORE_PRIVATE
->
ãmp‹¨y


	)

83 
	#PURPLE_BUDDY_TO_SIPE_ACCOUNT_DATA
 
PURPLE_BUDDY_TO_SIPE_CORE_PRIVATE
->
ãmp‹¨y


	)

84 
	#PURPLE_CHAT_TO_SIPE_ACCOUNT_DATA
 
PURPLE_CHAT_TO_SIPE_CORE_PRIVATE
->
ãmp‹¨y


	)

85 
	#PURPLE_GC_TO_SIPE_ACCOUNT_DATA
 
PURPLE_GC_TO_SIPE_CORE_PRIVATE
->
ãmp‹¨y


	)

86 
	#PURPLE_XFER_TO_SIPE_ACCOUNT_DATA
 
PURPLE_XFER_TO_SIPE_CORE_PRIVATE
->
ãmp‹¨y


	)

	@src/api/sipe-backend.h

40 #ifde‡
__˝lu•lus


45 
sùe_c‹e_public
;

46 
sùe_å™•‹t_c⁄√˘i⁄
;

47 
sùe_medü_ˇŒ
;

48 
sùe_medü
;

56 
gch¨
 *
sùe_backíd_vîsi⁄
();

61 
SIPE_DEBUG_LEVEL_INFO
,

62 
SIPE_DEBUG_LEVEL_WARNING
,

63 
SIPE_DEBUG_LEVEL_ERROR
,

64 
SIPE_DEBUG_LEVEL_FATAL
,

65 } 
	tsùe_debug_Àvñ
;

75 
sùe_backíd_debug
(
sùe_debug_Àvñ
 
Àvñ
,

76 c⁄° 
gch¨
 *
f‹m©
,

77 ...Ë
G_GNUC_PRINTF
(2, 3);

80 
	#SIPE_DEBUG_INFO
(
fmt
, ...Ë
	`sùe_backíd_debug
(
SIPE_DEBUG_LEVEL_INFO
, fmt, 
__VA_ARGS__
)

	)

81 
	#SIPE_DEBUG_INFO_NOFORMAT
(
msg
Ë
	`sùe_backíd_debug
(
SIPE_DEBUG_LEVEL_INFO
, msg)

	)

82 
	#SIPE_DEBUG_WARNING
(
fmt
, ...Ë
	`sùe_backíd_debug
(
SIPE_DEBUG_LEVEL_WARNING
, fmt, 
__VA_ARGS__
)

	)

83 
	#SIPE_DEBUG_WARNING_NOFORMAT
(
msg
Ë
	`sùe_backíd_debug
(
SIPE_DEBUG_LEVEL_WARNING
, msg)

	)

84 
	#SIPE_DEBUG_ERROR
(
fmt
, ...Ë
	`sùe_backíd_debug
(
SIPE_DEBUG_LEVEL_ERROR
, fmt, 
__VA_ARGS__
)

	)

85 
	#SIPE_DEBUG_ERROR_NOFORMAT
(
msg
Ë
	`sùe_backíd_debug
(
SIPE_DEBUG_LEVEL_ERROR
, msg)

	)

86 
	#SIPE_DEBUG_FATAL
(
fmt
, ...Ë
	`sùe_backíd_debug
(
SIPE_DEBUG_LEVEL_FATAL
, fmt, 
__VA_ARGS__
)

	)

87 
	#SIPE_DEBUG_FATAL_NOFORMAT
(
msg
Ë
	`sùe_backíd_debug
(
SIPE_DEBUG_LEVEL_FATAL
, msg)

	)

92 
SIPE_CONNECTION_ERROR_NETWORK
 = 0,

93 
SIPE_CONNECTION_ERROR_INVALID_USERNAME
,

94 
SIPE_CONNECTION_ERROR_INVALID_SETTINGS
,

95 
SIPE_CONNECTION_ERROR_AUTHENTICATION_FAILED
,

96 
SIPE_CONNECTION_ERROR_AUTHENTICATION_IMPOSSIBLE
,

97 
SIPE_CONNECTION_ERROR_LAST


98 } 
	tsùe_c⁄√˘i⁄_îr‹
;

99 
sùe_backíd_c⁄√˘i⁄_îr‹
(
sùe_c‹e_public
 *
sùe_public
,

100 
sùe_c⁄√˘i⁄_îr‹
 
îr‹
,

101 c⁄° 
gch¨
 *
msg
);

105 
sùe_backíd_dns_quîy
(
sùe_c‹e_public
 *
sùe_public
,

106 c⁄° 
gch¨
 *
¥Ÿocﬁ
,

107 c⁄° 
gch¨
 *
å™•‹t
,

108 c⁄° 
gch¨
 *
domaö
);

112 
gch¨
 *
sùe_backíd_m¨kup_css_¥›îty
(c⁄° gch¨ *
°yÀ
,

113 c⁄° 
gch¨
 *
›ti⁄
);

114 
gch¨
 *
sùe_backíd_m¨kup_°rù_html
(c⁄° gch¨ *
html
);

118 
sùe_medü
 *
sùe_backíd_medü_√w
(
sùe_c‹e_public
 *
sùe_public
,

119 
sùe_medü_ˇŒ
 *
ˇŒ
,

120 c⁄° 
gch¨
 *
∑πicù™t
,

121 
gboﬁón
 
öôüt‹
);

125 c⁄° 
gch¨
 *
sùe_backíd_√tw‹k_ù_addªss
();

129 
gpoöãr
 
sùe_backíd_scheduÀ_£c⁄ds
(
sùe_c‹e_public
 *
sùe_public
,

130 
guöt
 
timeout
,

131 
gpoöãr
 
d©a
);

132 
gpoöãr
 
sùe_backíd_scheduÀ_m£c⁄ds
(
sùe_c‹e_public
 *
sùe_public
,

133 
guöt
 
timeout
,

134 
gpoöãr
 
d©a
);

135 
sùe_backíd_scheduÀ_ˇn˚l
(
sùe_c‹e_public
 *
sùe_public
,

136 
gpoöãr
 
d©a
);

141 
SIPE_SETTING_EMAIL_URL
 = 0,

142 
SIPE_SETTING_EMAIL_LOGIN
,

143 
SIPE_SETTING_EMAIL_PASSWORD
,

144 
SIPE_SETTING_USER_AGENT
,

145 
SIPE_SETTING_LAST


146 } 
	tsùe_£âög
;

147 c⁄° 
gch¨
 *
sùe_backíd_£âög
(
sùe_c‹e_public
 *
sùe_public
,

148 
sùe_£âög
 
ty≥
);

152 
	tå™•‹t_c⁄√˘ed_cb
(
	tsùe_å™•‹t_c⁄√˘i⁄
 *
	tc⁄n
);

153 
	tå™•‹t_öput_cb
(
	tsùe_å™•‹t_c⁄√˘i⁄
 *
	tc⁄n
);

154 
	tå™•‹t_îr‹_cb
(
	tsùe_å™•‹t_c⁄√˘i⁄
 *
	tc⁄n
,

155 c⁄° 
	tgch¨
 *
	tmsg
);

158 
guöt
 
ty≥
;

159 c⁄° 
gch¨
 *
£rvî_«me
;

160 
guöt
 
£rvî_p‹t
;

161 
gpoöãr
 
u£r_d©a
;

162 
å™•‹t_c⁄√˘ed_cb
 *
c⁄√˘ed
;

163 
å™•‹t_öput_cb
 *
öput
;

164 
å™•‹t_îr‹_cb
 *
îr‹
;

165 } 
	tsùe_c⁄√˘_£tup
;

166 
sùe_å™•‹t_c⁄√˘i⁄
 *
sùe_backíd_å™•‹t_c⁄√˘
(
sùe_c‹e_public
 *
sùe_public
,

167 c⁄° 
sùe_c⁄√˘_£tup
 *
£tup
);

168 
sùe_backíd_å™•‹t_disc⁄√˘
(
sùe_å™•‹t_c⁄√˘i⁄
 *
c⁄n
);

169 
sùe_backíd_å™•‹t_mesßge
(
sùe_å™•‹t_c⁄√˘i⁄
 *
c⁄n
,

170 c⁄° 
gch¨
 *
buf„r
);

172 #ifde‡
__˝lu•lus


	@src/api/sipe-common.h

30 #ifde‡
__GNUC__


31 
	#SIPE_UNUSED_PARAMETER
 
	`__©åibuã__
((
unu£d
))

	)

33 
	#SIPE_UNUSED_PARAMETER


	)

37 #i‚de‡
G_GNUC_NULL_TERMINATED


38 #i‡ 
__GNUC__
 >= 4

39 
	#G_GNUC_NULL_TERMINATED
 
	`__©åibuã__
((
__£¡öñ__
))

	)

41 
	#G_GNUC_NULL_TERMINATED


	)

	@src/api/sipe-core.h

40 #ifde‡
__˝lu•lus


51 
SIPE_ACTIVITY_UNSET
 = 0,

52 
SIPE_ACTIVITY_ONLINE
,

53 
SIPE_ACTIVITY_INACTIVE
,

54 
SIPE_ACTIVITY_BUSY
,

55 
SIPE_ACTIVITY_BUSYIDLE
,

56 
SIPE_ACTIVITY_DND
,

57 
SIPE_ACTIVITY_BRB
,

58 
SIPE_ACTIVITY_AWAY
,

59 
SIPE_ACTIVITY_LUNCH
,

60 
SIPE_ACTIVITY_OFFLINE
,

61 
SIPE_ACTIVITY_ON_PHONE
,

62 
SIPE_ACTIVITY_IN_CONF
,

63 
SIPE_ACTIVITY_IN_MEETING
,

64 
SIPE_ACTIVITY_OOF
,

65 
SIPE_ACTIVITY_URGENT_ONLY
,

66 
SIPE_ACTIVITY_NUM_TYPES


67 } 
	tsùe_a˘ivôy
;

72 
	#SIPE_TRANSPORT_AUTO
 0

	)

73 
	#SIPE_TRANSPORT_TLS
 1

	)

74 
	#SIPE_TRANSPORT_TCP
 2

	)

86 
	ssùe_å™•‹t_c⁄√˘i⁄
 {

87 
gpoöãr
 
u£r_d©a
;

88 
gch¨
 *
buf„r
;

89 
gsize
 
buf„r_u£d
;

90 
gsize
 
buf„r_Àngth
;

91 
guöt
 
ty≥
;

92 
guöt
 
˛õ¡_p‹t
;

99 
sùe_backíd_¥iv©e
;

104 
	#SIPE_CORE_FLAG_KRB5
 0x00000001

	)

105 
	#SIPE_CORE_FLAG_SSO
 0x00000002

	)

107 
	#SIPE_CORE_FLAG_IS
(
Êag
) \

108 ((
sùe_public
->
Êags
 & 
SIPE_CORE_FLAG_
 ## 
Êag
Ë=SIPE_CORE_FLAG_ ## fœg)

	)

109 
	#SIPE_CORE_FLAG_SET
(
Êag
) \

110 (
sùe_public
->
Êags
 |
SIPE_CORE_FLAG_
 ## 
Êag
)

	)

111 
	#SIPE_CORE_FLAG_UNSET
(
Êag
) \

112 (
sùe_public
->
Êags
 &~
SIPE_CORE_FLAG_
 ## 
Êag
)

	)

119 
	ssùe_c‹e_public
 {

124 
sùe_backíd_¥iv©e
 *
backíd_¥iv©e
;

127 
guöt32
 
Êags
;

130 
gch¨
 *
sù_«me
;

131 
gch¨
 *
sù_domaö
;

134 
guöt
 
kì∑live_timeout
;

141 
sùe_c‹e_öô
();

142 
sùe_c‹e_de°roy
();

145 
gboﬁón
 
sùe_°ªquÆ
(c⁄° 
gch¨
 *
À·
, c⁄° gch¨ *
right
);

146 *
fix_√wlöes
(c⁄° *
°
);

148 
GSLi°
 *

149 
sùe_utûs_«mevÆ_add
(
GSLi°
 *
li°
, c⁄° 
gch¨
 *
«me
, c⁄° gch¨ *
vÆue
);

151 c⁄° 
gch¨
 *

152 
sùe_utûs_«mevÆ_föd
(c⁄° 
GSLi°
 *
li°
, c⁄° 
gch¨
 *
«me
);

154 c⁄° 
gch¨
 *

155 
sùe_utûs_«mevÆ_föd_ö°™˚
(c⁄° 
GSLi°
 *
li°
, c⁄° 
gch¨
 *
«me
, 
which
);

158 
sùe_utûs_«mevÆ_‰ì
(
GSLi°
 *
li°
);

167 
gch¨
 *
sùe_c‹e_about
();

170 
sùe_c‹e_scheduÀ_execuã
(
gpoöãr
 
d©a
);

173 
sùe_c‹e_upd©e_ˇÀnd¨
(
sùe_c‹e_public
 *
sùe_public
);

174 
sùe_c‹e_ª£t_°©us
(
sùe_c‹e_public
 *
sùe_public
);

187 
gch¨
 *
sùe_c‹e_buddy_°©us
(
sùe_c‹e_public
 *
sùe_public
,

188 c⁄° 
gch¨
 *
«me
,

189 c⁄° 
sùe_a˘ivôy
 
a˘ivôy
,

190 c⁄° 
gch¨
 *
°©us_ãxt
);

202 
	ssùe_buddy_öfo
 {

203 c⁄° 
gch¨
 *
œbñ
;

204 
gch¨
 *
ãxt
;

206 
GSLi°
 *
sùe_c‹e_buddy_öfo
(
sùe_c‹e_public
 *
sùe_public
,

207 c⁄° 
gch¨
 *
«me
,

208 c⁄° 
gch¨
 *
°©us_«me
,

209 
gboﬁón
 
is_⁄löe
);

211 
sùe_c‹e_c⁄è˘_Ælow_díy
(
sùe_c‹e_public
 *
sùe_public
,

212 c⁄° 
gch¨
 *
who
, 
gboﬁón
 
Ælow
);

213 
sùe_c‹e_group_£t_u£r
(
sùe_c‹e_public
 *
sùe_public
,

214 c⁄° 
gch¨
 * 
who
);

219 
sùe_c‹e_public
 *
sùe_c‹e_Æloˇã
(c⁄° 
gch¨
 *
signö_«me
,

220 c⁄° 
gch¨
 *
logö_domaö
,

221 c⁄° 
gch¨
 *
logö_accou¡
,

222 c⁄° 
gch¨
 *
∑ssw‹d
,

223 c⁄° 
gch¨
 *
emaû
,

224 c⁄° 
gch¨
 *
emaû_uæ
,

225 c⁄° 
gch¨
 **
îrmsg
);

226 
sùe_c‹e_dóŒoˇã
(
sùe_c‹e_public
 *
sùe_public
);

231 
sùe_c‹e_å™•‹t_sù_c⁄√˘
(
sùe_c‹e_public
 *
sùe_public
,

232 
guöt
 
å™•‹t
,

233 c⁄° 
gch¨
 *
£rvî
,

234 c⁄° 
gch¨
 *
p‹t
);

235 
sùe_c‹e_å™•‹t_sù_kì∑live
(
sùe_c‹e_public
 *
sùe_public
);

244 
sùe_c‹e_dns_ªsﬁved
(
sùe_c‹e_public
 *
sùe_public
,

245 c⁄° 
gch¨
 *
ho°«me
,

246 
guöt
 
p‹t
);

247 
sùe_c‹e_dns_ªsﬁve_Áûuª
(
sùe_c‹e_public
 *
sùe_public
);

252 
sùe_c‹e_ch©_¸óã
(
sùe_c‹e_public
 *
sùe_public
, 
id
,

253 c⁄° *
«me
);

256 
sùe_c‹e_medü_öôüã_ˇŒ
(
sùe_c‹e_public
 *
sùe_public
,

257 c⁄° *
∑πicù™t
);

259 #ifde‡
__˝lu•lus


	@src/api/sipe-crypt.h

23 
sùe_¸y±_des
(c⁄° 
guch¨
 *
key
,

24 c⁄° 
guch¨
 *
∂aöãxt
, 
gsize
 
∂aöãxt_Àngth
,

25 
guch¨
 *
í¸y±ed_ãxt
);

27 
sùe_¸y±_rc4
(c⁄° 
guch¨
 *
key
, 
gsize
 
key_Àngth
,

28 c⁄° 
guch¨
 *
∂aöãxt
, 
gsize
 
∂aöãxt_Àngth
,

29 
guch¨
 *
í¸y±ed_ãxt
);

32 
gpoöãr
 
sùe_¸y±_·_°¨t
(c⁄° 
guch¨
 *
key
);

33 
sùe_¸y±_·_°ªam
(
gpoöãr
 
c⁄ãxt
,

34 c⁄° 
guch¨
 *
ö
, 
gsize
 
Àngth
,

35 
guch¨
 *
out
);

36 
sùe_¸y±_·_de°roy
(
gpoöãr
 
c⁄ãxt
);

	@src/api/sipe-digest.h

23 
	#SIPE_DIGEST_HMAC_MD5_LENGTH
 16

	)

24 
sùe_dige°_hmac_md5
(c⁄° 
guch¨
 *
key
, 
gsize
 
key_Àngth
,

25 c⁄° 
guch¨
 *
d©a
, 
gsize
 
d©a_Àngth
,

26 
guch¨
 *
dige°
);

28 
	#SIPE_DIGEST_MD4_LENGTH
 16

	)

29 
sùe_dige°_md4
(c⁄° 
guch¨
 *
d©a
, 
gsize
 
Àngth
, guch¨ *
dige°
);

31 
	#SIPE_DIGEST_MD5_LENGTH
 16

	)

32 
sùe_dige°_md5
(c⁄° 
guch¨
 *
d©a
, 
gsize
 
Àngth
, guch¨ *
dige°
);

34 
	#SIPE_DIGEST_SHA1_LENGTH
 20

	)

35 
sùe_dige°_sha1
(c⁄° 
guch¨
 *
d©a
, 
gsize
 
Àngth
, guch¨ *
dige°
);

38 
	#SIPE_DIGEST_FILETRANSFER_LENGTH
 20

	)

39 
gpoöãr
 
sùe_dige°_·_°¨t
(c⁄° 
guch¨
 *
sha1_dige°
);

40 
sùe_dige°_·_upd©e
(
gpoöãr
 
c⁄ãxt
, c⁄° 
guch¨
 *
d©a
, 
gsize
 
Àngth
);

41 
sùe_dige°_·_íd
(
gpoöãr
 
c⁄ãxt
, 
guch¨
 *
dige°
);

42 
sùe_dige°_·_de°roy
(
gpoöãr
 
c⁄ãxt
);

	@src/api/sipe-media.h

23 
	gsùe_accou¡_d©a
;

25 
	esùe_medü_ty≥
 {

26 
	mSIPE_MEDIA_AUDIO
,

27 
	mSIPE_MEDIA_VIDEO


28 } 
	tSùeMedüTy≥
;

30 
	esùe_ˇŒ_°©e
 {

31 
	mSIPE_CALL_CONNECTING
,

32 
	mSIPE_CALL_RUNNING
,

33 
	mSIPE_CALL_HELD
,

34 
	mSIPE_CALL_FINISHED


35 } 
	tSùeCÆlSèã
;

37 
	esùe_comp⁄ít_ty≥
 {

38 
	mSIPE_COMPONENT_NONE
 = 0,

39 
	mSIPE_COMPONENT_RTP
 = 1,

40 
	mSIPE_COMPONENT_RTCP
 = 2

41 } 
	tSùeComp⁄ítTy≥
;

43 
	esùe_ˇndid©e_ty≥
 {

44 
	mSIPE_CANDIDATE_TYPE_HOST
,

45 
	mSIPE_CANDIDATE_TYPE_RELAY
,

46 
	mSIPE_CANDIDATE_TYPE_SRFLX


47 } 
	tSùeC™did©eTy≥
;

49 
	esùe_√tw‹k_¥Ÿocﬁ
 {

50 
	mSIPE_NETWORK_PROTOCOL_TCP
,

51 
	mSIPE_NETWORK_PROTOCOL_UDP


52 } 
	tSùeNëw‹kPrŸocﬁ
;

54 
gpoöãr
 
	tsùe_medü
;

55 
gpoöãr
 
	tsùe_codec
;

56 
gpoöãr
 
	tsùe_ˇndid©e
;

58 
	s_sùe_medü_ˇŒ
 {

59 
sùe_medü
 
	mmedü
;

60 
sùe_c‹e_¥iv©e
 *
	msùe_¥iv©e
;

61 
sù_£ssi⁄
 *
	m£ssi⁄
;

62 
sù_dülog
 *
	mdülog
;

64 
gch¨
 *
	mªmŸe_ù
;

65 
guöt16
 
	mªmŸe_p‹t
;

67 
GSLi°
 *
	msdp_©ås
;

68 
sùmsg
 *
	mövô©i⁄
;

69 
GLi°
 *
	mªmŸe_ˇndid©es
;

70 
GLi°
 *
	mªmŸe_codecs
;

71 
gboﬁón
 
	mÀgacy_mode
;

73 
GLi°
 *
	m£t_ªmŸe_codecs
;

76 
sùe_medü
 
	mvideo_medü
;

77 
gch¨
 *
	mªmŸe_video_ù
;

78 
guöt16
 
	mªmŸe_video_p‹t
;

80 
GSLi°
 *
	msdp_video_©ås
;

81 
GLi°
 *
	mªmŸe_video_ˇndid©es
;

82 
GLi°
 *
	mªmŸe_video_codecs
;

84 
gboﬁón
 
	mloˇl_⁄_hﬁd
;

85 
gboﬁón
 
	mªmŸe_⁄_hﬁd
;

87 
	mövôe_˙t
;

89 (*
	mˇndid©es_¥ï¨ed_cb
)(
	m_sùe_medü_ˇŒ
*);

90 (*
	mmedü_c⁄√˘ed_cb
)(
	m_sùe_medü_ˇŒ
*);

91 (*
	mˇŒ_ac˚±_cb
)(
	m_sùe_medü_ˇŒ
*, 
gboﬁón
 
	mloˇl
);

92 (*
	mˇŒ_ªje˘_cb
)(
	m_sùe_medü_ˇŒ
*, 
gboﬁón
 
	mloˇl
);

93 (*
	mˇŒ_hﬁd_cb
Ë(
	m_sùe_medü_ˇŒ
*, 
gboﬁón
 
	mloˇl
, gboﬁó¿
	m°©e
);

94 (*
	mˇŒ_h™gup_cb
)(
	m_sùe_medü_ˇŒ
*, 
gboﬁón
 
	mloˇl
);

95 } 
	tsùe_medü_ˇŒ
;

97 
sùe_medü_öcomög_övôe
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
, 
sùmsg
 *
msg
);

99 
sùe_medü_h™gup
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
);

101 
gch¨
 *
sùe_medü_gë_ˇŒid
(
sùe_medü_ˇŒ
 *
ˇŒ
);

106 
gboﬁón
 
sùe_backíd_medü_add_°ªam
(
sùe_medü
 *
medü
, c⁄° 
gch¨
* 
∑πicù™t
, c⁄° gch¨* 
£ss_id
,

107 
SùeMedüTy≥
 
ty≥
, 
gboﬁón
 
u£_ni˚
,

108 
gboﬁón
 
öôüt‹
);

110 
sùe_backíd_medü_add_ªmŸe_ˇndid©es
(
sùe_medü
 *
medü
, 
gch¨
* 
∑πicù™t
, 
GLi°
 *
ˇndid©es
);

112 
sùe_backíd_medü_add_video_ªmŸe_ˇndid©es
(
sùe_medü
 *
medü
, 
gch¨
* 
∑πicù™t
, 
GLi°
 *
ˇndid©es
);

114 
gboﬁón
 
sùe_backíd_medü_is_öôüt‹
(
sùe_medü
 *
medü
, 
gch¨
 *
∑πicù™t
);

116 
sùe_codec
 * 
sùe_backíd_codec_√w
(
id
, c⁄° *
«me
,

117 
SùeMedüTy≥
 
ty≥
, 
guöt
 
˛ock_øã
);

119 
sùe_backíd_codec_‰ì
(
sùe_codec
 *
codec
);

121 
sùe_backíd_codec_gë_id
(
sùe_codec
 *
codec
);

123 
gch¨
 * 
sùe_backíd_codec_gë_«me
(
sùe_codec
 *
codec
);

125 
guöt
 
sùe_backíd_codec_gë_˛ock_øã
(
sùe_codec
 *
codec
);

127 
sùe_backíd_codec_add_›ti⁄Æ_∑ømëî
(
sùe_codec
 *
codec
,

128 c⁄° 
gch¨
 *
«me
, c⁄° gch¨ *
vÆue
);

129 
GLi°
 *
sùe_backíd_codec_gë_›ti⁄Æ_∑ømëîs
(
sùe_codec
 *
codec
);

131 
gboﬁón
 
sùe_backíd_£t_ªmŸe_codecs
(
sùe_medü_ˇŒ
* 
ˇŒ
, 
gch¨
* 
∑πicù™t
);

133 
GLi°
* 
sùe_backíd_gë_loˇl_codecs
(
sùe_medü_ˇŒ
* 
ˇŒ
);

135 
GLi°
 *
sùe_backíd_gë_video_codecs
(
sùe_medü_ˇŒ
* 
ˇŒ
);

138 
sùe_ˇndid©e
 * 
sùe_backíd_ˇndid©e_√w
(c⁄° 
gch¨
 *
found©i⁄
,

139 
SùeComp⁄ítTy≥
 
comp⁄ít
,

140 
SùeC™did©eTy≥
 
ty≥
,

141 
SùeNëw‹kPrŸocﬁ
 
¥Ÿo
,

142 c⁄° 
gch¨
 *
ù
, 
guöt
 
p‹t
);

144 
sùe_backíd_ˇndid©e_‰ì
(
sùe_ˇndid©e
 *
ˇndid©e
);

146 
gch¨
 *
sùe_backíd_ˇndid©e_gë_u£∫ame
(
sùe_ˇndid©e
 *
ˇndid©e
);

147 
gch¨
 *
sùe_backíd_ˇndid©e_gë_∑ssw‹d
(
sùe_ˇndid©e
 *
ˇndid©e
);

148 
gch¨
 *
sùe_backíd_ˇndid©e_gë_found©i⁄
(
sùe_ˇndid©e
 *
ˇndid©e
);

149 
gch¨
 *
sùe_backíd_ˇndid©e_gë_ù
(
sùe_ˇndid©e
 *
ˇndid©e
);

150 
guöt
 
sùe_backíd_ˇndid©e_gë_p‹t
(
sùe_ˇndid©e
 *
ˇndid©e
);

151 
guöt32
 
sùe_backíd_ˇndid©e_gë_¥i‹ôy
(
sùe_ˇndid©e
 *
ˇndid©e
);

152 
sùe_backíd_ˇndid©e_£t_¥i‹ôy
(
sùe_ˇndid©e
 *
ˇndid©e
, 
guöt32
 
¥i‹ôy
);

153 
SùeComp⁄ítTy≥
 
sùe_backíd_ˇndid©e_gë_comp⁄ít_ty≥
(
sùe_ˇndid©e
 *
ˇndid©e
);

154 
SùeC™did©eTy≥
 
sùe_backíd_ˇndid©e_gë_ty≥
(
sùe_ˇndid©e
 *
ˇndid©e
);

155 
SùeNëw‹kPrŸocﬁ
 
sùe_backíd_ˇndid©e_gë_¥Ÿocﬁ
(
sùe_ˇndid©e
 *
ˇndid©e
);

157 
sùe_backíd_ˇndid©e_£t_u£∫ame_™d_pwd
(
sùe_ˇndid©e
 *
ˇndid©e
,

158 c⁄° 
gch¨
 *
u£∫ame
,

159 c⁄° 
gch¨
 *
∑ssw‹d
);

161 
GLi°
* 
sùe_backíd_gë_loˇl_ˇndid©es
(
sùe_medü_ˇŒ
* 
ˇŒ
, 
gch¨
* 
∑πicù™t
);

163 
GLi°
* 
sùe_backíd_gë_video_ˇndid©es
(
sùe_medü_ˇŒ
* 
ˇŒ
, 
gch¨
* 
∑πicù™t
);

165 
sùe_backíd_medü_hﬁd
(
sùe_medü
* 
ˇŒ
, 
gboﬁón
 
loˇl
);

166 
sùe_backíd_medü_unhﬁd
(
sùe_medü
* 
ˇŒ
, 
gboﬁón
 
loˇl
);

167 
sùe_backíd_medü_h™gup
(
sùe_medü
* 
medü
, 
gboﬁón
 
loˇl
);

168 
sùe_backíd_medü_ªje˘
(
sùe_medü
* 
medü
, 
gboﬁón
 
loˇl
);

	@src/api/sipe-mime.h

31 (*
	tsùe_mime_∑πs_cb
)(
	tgpoöãr
 
	tu£r_d©a
,

32 c⁄° 
	tGSLi°
 *
	tfõlds
,

33 c⁄° 
	tgch¨
 *
	tbody
,

34 
	tgsize
 
	tÀngth
);

44 
	`sùe_mime_∑πs_f‹óch
(c⁄° 
gch¨
 *
ty≥
,

45 c⁄° 
gch¨
 *
body
,

46 
sùe_mime_∑πs_cb
 
ˇŒback
,

47 
gpoöãr
 
u£r_d©a
);

	@src/api/sipe-nls.h

23 #ifde‡
ENABLE_NLS


24 
	~<glib/gi18n.h
>

26 
	#_
(
Såög
Ë((c⁄° *Ë(Såög))

	)

27 
	#N_
(
Såög
Ë((c⁄° *Ë(Såög))

	)

	@src/core/http-conn.c

30 #ifde‡
HAVE_CONFIG_H


31 
	~"c⁄fig.h
"

34 
	~<°dlib.h
>

35 
	~<°rög.h
>

37 
	~<glib.h
>

39 
	~"hâp-c⁄n.h
"

40 
	~"sùmsg.h
"

41 
	~"sù-£c.h
"

42 
	~"sùe-backíd.h
"

43 
	~"sùe-c‹e.h
"

44 
	~"sùe-c‹e-¥iv©e.h
"

45 
	~"sùe-utûs.h
"

53 
	#HTTP_CONN_HEADER
 \

56 "U£r-Agít: Sùe/" 
PACKAGE_VERSION
 "\r\n"

	)

59 
	shâp_c⁄n_°ru˘
 {

60 
sùe_c‹e_public
 *
	msùe_public
;

63 *
	mmëhod
;

64 
guöt
 
	mc⁄n_ty≥
;

65 
gboﬁón
 
	mÆlow_ªdúe˘
;

66 *
	mho°
;

67 
guöt
 
	mp‹t
;

68 *
	muæ
;

69 *
	mbody
;

70 *
	mc⁄ã¡_ty≥
;

71 
HâpC⁄nAuth
 *
	mauth
;

72 
HâpC⁄nCÆlback
 
	mˇŒback
;

73 *
	md©a
;

75 
sùe_å™•‹t_c⁄√˘i⁄
 *
	mc⁄n
;

77 
SùSecC⁄ãxt
 
	m£c_˘x
;

78 
	mªåõs
;

80 
HâpSessi⁄
 *
	mhâp_£ssi⁄
;

83 
gboﬁón
 
	m˛o£d
;

84 
HâpC⁄n
* 
	mdo_˛o£
;

86 
	#HTTP_CONN
 ((
HâpC⁄n
 *Ë
c⁄n
->
u£r_d©a
)

	)

88 
	shâp_£ssi⁄_°ru˘
 {

89 *
	mcookõ
;

92 
HâpC⁄n
*

93 
	$hâp_c⁄n_˛⁄e
(
HâpC⁄n
* 
hâp_c⁄n
)

95 
HâpC⁄n
 *
ªs
 = 
	`g_√w0
(HttpConn, 1);

97 
ªs
->
hâp_£ssi⁄
 = 
hâp_c⁄n
->http_session;

98 
ªs
->
mëhod
 = 
	`g_°rdup
(
hâp_c⁄n
->method);

99 
ªs
->
c⁄n_ty≥
 = 
hâp_c⁄n
->conn_type;

100 
ªs
->
Ælow_ªdúe˘
 = 
hâp_c⁄n
->allow_redirect;

101 
ªs
->
ho°
 = 
	`g_°rdup
(
hâp_c⁄n
->host);

102 
ªs
->
p‹t
 = 
hâp_c⁄n
->port;

103 
ªs
->
uæ
 = 
	`g_°rdup
(
hâp_c⁄n
->url);

104 
ªs
->
body
 = 
	`g_°rdup
(
hâp_c⁄n
->body);

105 
ªs
->
c⁄ã¡_ty≥
 = 
	`g_°rdup
(
hâp_c⁄n
->content_type);

106 
ªs
->
auth
 = 
hâp_c⁄n
->auth;

107 
ªs
->
ˇŒback
 = 
hâp_c⁄n
->callback;

108 
ªs
->
d©a
 = 
hâp_c⁄n
->data;

110 
ªs
->
c⁄n
 = 
hâp_c⁄n
->conn;

111 
ªs
->
£c_˘x
 = 
hâp_c⁄n
->sec_ctx;

112 
ªs
->
ªåõs
 = 
hâp_c⁄n
->retries;

114 
ªs
->
do_˛o£
 = 
NULL
;

116  
ªs
;

117 
	}
}

120 
	$hâp_c⁄n_‰ì
(
HâpC⁄n
* 
hâp_c⁄n
)

122 i‡(!
hâp_c⁄n
) ;

125 
	`g_‰ì
(
hâp_c⁄n
->
mëhod
);

126 
	`g_‰ì
(
hâp_c⁄n
->
ho°
);

127 
	`g_‰ì
(
hâp_c⁄n
->
uæ
);

128 
	`g_‰ì
(
hâp_c⁄n
->
body
);

129 
	`g_‰ì
(
hâp_c⁄n
->
c⁄ã¡_ty≥
);

131 i‡(
hâp_c⁄n
->
£c_˘x
) {

132 
	`sù_£c_de°roy_c⁄ãxt
(
hâp_c⁄n
->
£c_˘x
);

135 
	`g_‰ì
(
hâp_c⁄n
);

136 
	}
}

138 
gboﬁón


139 
	$hâp_c⁄n_is_˛o£d
(
HâpC⁄n
 *
hâp_c⁄n
)

141  
hâp_c⁄n
->
˛o£d
;

142 
	}
}

144 
HâpSessi⁄
 *

145 
	$hâp_c⁄n_£ssi⁄_¸óã
()

147 
HâpSessi⁄
 *
ªs
 = 
	`g_√w0
(HttpSession, 1);

148  
ªs
;

149 
	}
}

152 
	$hâp_c⁄n_£ssi⁄_‰ì
(
HâpSessi⁄
 *
hâp_£ssi⁄
)

154 i‡(!
hâp_£ssi⁄
) ;

156 
	`g_‰ì
(
hâp_£ssi⁄
->
cookõ
);

157 
	`g_‰ì
(
hâp_£ssi⁄
);

158 
	}
}

161 
	$hâp_c⁄n_auth_‰ì
(
hâp_c⁄n_auth
* 
auth
)

163 
	`g_‰ì
(
auth
->
domaö
);

164 
	`g_‰ì
(
auth
->
u£r
);

165 
	`g_‰ì
(
auth
->
∑ssw‹d
);

166 
	`g_‰ì
(
auth
);

167 
	}
}

170 
	$hâp_c⁄n_£t_˛o£
(
HâpC⁄n
* 
hâp_c⁄n
)

172 
hâp_c⁄n
->
do_˛o£
 = http_conn;

173 
	}
}

176 
	$hâp_c⁄n_˛o£
(
HâpC⁄n
 *
hâp_c⁄n
, c⁄° *
mesßge
)

178 
	`SIPE_DEBUG_INFO
("hâp_c⁄n_˛o£: closög hâ∞c⁄√˘i⁄: %s", 
mesßge
 ? message : "");

180 
	`g_ªtu∫_if_Áû
(
hâp_c⁄n
);

182 
	`sùe_backíd_å™•‹t_disc⁄√˘
(
hâp_c⁄n
->
c⁄n
);

183 
	`hâp_c⁄n_‰ì
(
hâp_c⁄n
);

184 
	}
}

193 
	$hâp_c⁄n_∑r£_uæ
(c⁄° *
uæ
,

194 **
ho°
,

195 
guöt
 *
p‹t
,

196 **
ªl_uæ
)

198 **
∑πs
 = 
	`g_°r•lô
(
uæ
, "://", 2);

199 *
no_¥Ÿo
;

200 
guöt
 
p‹t_tmp
;

201 *
tmp
;

202 *
ho°_p‹t
;

204 if(!
∑πs
) {

206 } if(!
∑πs
[0]) {

207 
	`g_°r‰ìv
(
∑πs
);

211 
no_¥Ÿo
 = 
∑πs
[1] ? 
	`g_°rdup
(parts[1]) : g_strdup(parts[0]);

212 
p‹t_tmp
 = 
	`sùe_°ªquÆ
(
∑πs
[0], "https") ? 443 : 80;

213 
	`g_°r‰ìv
(
∑πs
);

215 if(!
no_¥Ÿo
) {

219 
tmp
 = 
	`°r°r
(
no_¥Ÿo
, "/");

220 i‡(
tmp
 && 
ªl_uæ
Ë*ªl_uæ = 
	`g_°rdup
(tmp);

221 
ho°_p‹t
 = 
tmp
 ? 
	`g_°∫dup
(
no_¥Ÿo
,Åm∞-Ço_¥ŸoË: 
	`g_°rdup
(no_proto);

222 
	`g_‰ì
(
no_¥Ÿo
);

224 if(!
ho°_p‹t
) {

228 
∑πs
 = 
	`g_°r•lô
(
ho°_p‹t
, ":", 2);

230 if(
∑πs
) {

231 i‡(
ho°
Ë*ho° = 
	`g_°rdup
(
∑πs
[0]);

232 if(
∑πs
[0]) {

233 
p‹t_tmp
 = 
∑πs
[1] ? (
guöt
Ë
	`©oi
(parts[1]) :Öort_tmp;

235 i‡(
p‹t
Ë*p‹à
p‹t_tmp
;

236 
	`g_°r‰ìv
(
∑πs
);

239 
	`g_‰ì
(
ho°_p‹t
);

240 
	}
}

242 
	$hâp_c⁄n_îr‹
(
sùe_å™•‹t_c⁄√˘i⁄
 *
c⁄n
,

243 c⁄° 
gch¨
 *
msg
)

245 
HâpC⁄n
 *
hâp_c⁄n
 = 
HTTP_CONN
;

246 i‡(
hâp_c⁄n
->
ˇŒback
) {

247 (*
hâp_c⁄n
->
ˇŒback
)(
HTTP_CONN_ERROR
, 
NULL
, NULL, hâp_c⁄n, hâp_c⁄n->
d©a
);

249 
	`hâp_c⁄n_˛o£
(
hâp_c⁄n
, 
msg
);

250 
	}
}

252 
hâp_c⁄n_£nd0
(
HâpC⁄n
 *
hâp_c⁄n
,

253 c⁄° *
auth‹iz©i⁄
);

254 
	$hâp_c⁄n_c⁄√˘ed
(
sùe_å™•‹t_c⁄√˘i⁄
 *
c⁄n
)

256 
	`hâp_c⁄n_£nd0
(
HTTP_CONN
, 
NULL
);

257 
	}
}

259 
hâp_c⁄n_öput
(
sùe_å™•‹t_c⁄√˘i⁄
 *
c⁄n
);

260 
sùe_å™•‹t_c⁄√˘i⁄
 *
	$hâp_c⁄n_£tup
(
HâpC⁄n
 *
hâp_c⁄n
,

261 
sùe_c‹e_public
 *
sùe_public
,

262 
guöt
 
ty≥
,

263 c⁄° 
gch¨
 *
ho°
,

264 
guöt
 
p‹t
) {

265 
sùe_c⁄√˘_£tup
 
£tup
 = {

266 
ty≥
,

267 
ho°
,

268 
p‹t
,

269 
hâp_c⁄n
,

270 
hâp_c⁄n_c⁄√˘ed
,

271 
hâp_c⁄n_öput
,

272 
hâp_c⁄n_îr‹


274 (
	`sùe_backíd_å™•‹t_c⁄√˘
(
sùe_public
, &
£tup
));

275 
	}
}

277 
HâpC⁄n
 *

278 
	$hâp_c⁄n_¸óã
(
sùe_c‹e_public
 *
sùe_public
,

279 
HâpSessi⁄
 *
hâp_£ssi⁄
,

280 c⁄° *
mëhod
,

281 
guöt
 
c⁄n_ty≥
,

282 
gboﬁón
 
Ælow_ªdúe˘
,

283 c⁄° *
fuŒ_uæ
,

284 c⁄° *
body
,

285 c⁄° *
c⁄ã¡_ty≥
,

286 
HâpC⁄nAuth
 *
auth
,

287 
HâpC⁄nCÆlback
 
ˇŒback
,

288 *
d©a
)

290 
HâpC⁄n
 *
hâp_c⁄n
;

291 
sùe_å™•‹t_c⁄√˘i⁄
 *
c⁄n
;

292 
gch¨
 *
ho°
, *
uæ
;

293 
guöt
 
p‹t
;

295 i‡(!
fuŒ_uæ
 || (
	`°æí
(full_url) == 0)) {

296 
	`SIPE_DEBUG_INFO_NOFORMAT
("no URL supplied!");

297  
NULL
;

300 
	`hâp_c⁄n_∑r£_uæ
(
fuŒ_uæ
, &
ho°
, &
p‹t
, &
uæ
);

301 
hâp_c⁄n
 = 
	`g_√w0
(
HâpC⁄n
, 1);

302 
c⁄n
 = 
	`hâp_c⁄n_£tup
(
hâp_c⁄n
, 
sùe_public
, 
c⁄n_ty≥
, 
ho°
, 
p‹t
);

303 i‡(!
c⁄n
) {

304 
	`g_‰ì
(
hâp_c⁄n
);

305 
	`g_‰ì
(
ho°
);

306 
	`g_‰ì
(
uæ
);

307  
NULL
;

310 
hâp_c⁄n
->
sùe_public
 = sipe_public;

311 
c⁄n
->
u£r_d©a
 = 
hâp_c⁄n
;

313 
hâp_c⁄n
->
hâp_£ssi⁄
 = http_session;

314 
hâp_c⁄n
->
mëhod
 = 
	`g_°rdup
(method);

315 
hâp_c⁄n
->
c⁄n_ty≥
 = conn_type;

316 
hâp_c⁄n
->
Ælow_ªdúe˘
 =állow_redirect;

317 
hâp_c⁄n
->
ho°
 = host;

318 
hâp_c⁄n
->
p‹t
 =Öort;

319 
hâp_c⁄n
->
uæ
 = url;

320 
hâp_c⁄n
->
body
 = 
	`g_°rdup
(body);

321 
hâp_c⁄n
->
c⁄ã¡_ty≥
 = 
	`g_°rdup
(content_type);

322 
hâp_c⁄n
->
auth
 =áuth;

323 
hâp_c⁄n
->
ˇŒback
 = callback;

324 
hâp_c⁄n
->
d©a
 = data;

325 
hâp_c⁄n
->
c⁄n
 = conn;

327  
hâp_c⁄n
;

328 
	}
}

332 
	$hâp_c⁄n_£nd0
(
HâpC⁄n
 *
hâp_c⁄n
,

333 c⁄° *
auth‹iz©i⁄
)

335 
GSåög
 *
out°r
 = 
	`g_°rög_√w
("");

337 
	`g_°rög_≠≥nd_¥ötf
(
out°r
, 
HTTP_CONN_HEADER
,

338 
hâp_c⁄n
->
mëhod
 ? http_conn->method : "GET",

339 
hâp_c⁄n
->
uæ
,

340 
hâp_c⁄n
->
ho°
);

341 i‡(
	`sùe_°ªquÆ
(
hâp_c⁄n
->
mëhod
, "POST")) {

342 
	`g_°rög_≠≥nd_¥ötf
(
out°r
, "Content-Length: %d\r\n",

343 
hâp_c⁄n
->
body
 ? ()
	`°æí
(http_conn->body) : 0);

345 
	`g_°rög_≠≥nd_¥ötf
(
out°r
, "Content-Type: %s\r\n",

346 
hâp_c⁄n
->
c⁄ã¡_ty≥
 ? http_conn->content_type : "text/plain");

348 i‡(
hâp_c⁄n
->
hâp_£ssi⁄
 && hâp_c⁄n->hâp_£ssi⁄->
cookõ
) {

349 
	`g_°rög_≠≥nd_¥ötf
(
out°r
, "Cookõ: %s\r\n", 
hâp_c⁄n
->
hâp_£ssi⁄
->
cookõ
);

351 i‡(
auth‹iz©i⁄
) {

352 
	`g_°rög_≠≥nd_¥ötf
(
out°r
, "Auth‹iz©i⁄: %s\r\n", 
auth‹iz©i⁄
);

354 
	`g_°rög_≠≥nd_¥ötf
(
out°r
, "\r\n%s", 
hâp_c⁄n
->
body
 ? http_conn->body : "");

356 
	`sùe_backíd_å™•‹t_mesßge
(
hâp_c⁄n
->
c⁄n
, 
out°r
->
°r
);

357 
	`g_°rög_‰ì
(
out°r
, 
TRUE
);

358 
	}
}

361 
	$hâp_c⁄n_£nd
–
HâpC⁄n
 *
hâp_c⁄n
,

362 c⁄° *
mëhod
,

363 c⁄° *
fuŒ_uæ
,

364 c⁄° *
body
,

365 c⁄° *
c⁄ã¡_ty≥
,

366 
HâpC⁄nCÆlback
 
ˇŒback
,

367 *
d©a
)

369 i‡(!
hâp_c⁄n
) {

370 
	`SIPE_DEBUG_INFO_NOFORMAT
("http_conn_send: NULL http_conn,Éxiting.");

374 
	`g_‰ì
(
hâp_c⁄n
->
mëhod
);

375 
	`g_‰ì
(
hâp_c⁄n
->
uæ
);

376 
	`g_‰ì
(
hâp_c⁄n
->
body
);

377 
	`g_‰ì
(
hâp_c⁄n
->
c⁄ã¡_ty≥
);

378 
hâp_c⁄n
->
mëhod
 = 
	`g_°rdup
(method);

379 
	`hâp_c⁄n_∑r£_uæ
(
fuŒ_uæ
, 
NULL
, NULL, &
hâp_c⁄n
->
uæ
);

380 
hâp_c⁄n
->
body
 = 
	`g_°rdup
(body);

381 
hâp_c⁄n
->
c⁄ã¡_ty≥
 = 
	`g_°rdup
(content_type);

382 
hâp_c⁄n
->
ˇŒback
 = callback;

383 
hâp_c⁄n
->
d©a
 = data;

385 
	`hâp_c⁄n_£nd0
(
hâp_c⁄n
, 
NULL
);

386 
	}
}

389 
	$hâp_c⁄n_¥o˚ss_öput_mesßge
(
HâpC⁄n
 *
hâp_c⁄n
,

390 
sùmsg
 *
msg
)

393 i‡((
msg
->
ª•⁄£
 == 300 ||

394 
msg
->
ª•⁄£
 == 301 ||

395 
msg
->
ª•⁄£
 == 302 ||

396 
msg
->
ª•⁄£
 == 307) &&

397 
hâp_c⁄n
->
Ælow_ªdúe˘
)

399 c⁄° *
loˇti⁄
 = 
	`sùmsg_föd_hódî
(
msg
, "Location");

401 
	`SIPE_DEBUG_INFO
("hâp_c⁄n_¥o˚ss_öput_mesßge: Redúe˘Åo: %s", 
loˇti⁄
 ?Üocation : "");

403 
hâp_c⁄n
->
do_˛o£
 = 
	`hâp_c⁄n_˛⁄e
(http_conn);

404 
hâp_c⁄n
->
£c_˘x
 = 
NULL
;

406 
	`g_‰ì
(
hâp_c⁄n
->
ho°
);

407 
	`g_‰ì
(
hâp_c⁄n
->
uæ
);

408 
	`hâp_c⁄n_∑r£_uæ
(
loˇti⁄
, &
hâp_c⁄n
->
ho°
, &hâp_c⁄n->
p‹t
, &hâp_c⁄n->
uæ
);

409 
hâp_c⁄n
->
c⁄n
 = 
	`hâp_c⁄n_£tup
(http_conn,

410 
hâp_c⁄n
->
sùe_public
,

411 
hâp_c⁄n
->
c⁄n_ty≥
,

412 
hâp_c⁄n
->
ho°
,

413 
hâp_c⁄n
->
p‹t
);

416 i‡(
msg
->
ª•⁄£
 == 401) {

417 *
±mp
;

418 #ifde‡
_WIN32


419 #ifde‡
HAVE_LIBKRB5


420 *
tmp
;

423 
guöt
 
auth_ty≥
;

424 c⁄° *
auth_«me
;

425 *
auth‹iz©i⁄
;

426 *
ouçut_toked_ba£64
;

427 
u£_sso
 = !
hâp_c⁄n
->
auth
 || (hâp_c⁄n->auth && !hâp_c⁄n->auth->
u£r
);

428 
ªt
 = -1;

430 
hâp_c⁄n
->
ªåõs
++;

431 i‡(
hâp_c⁄n
->
ªåõs
 > 2) {

432 i‡(
hâp_c⁄n
->
ˇŒback
) {

433 (*
hâp_c⁄n
->
ˇŒback
)(
HTTP_CONN_ERROR_FATAL
, 
NULL
, NULL, hâp_c⁄n, hâp_c⁄n->
d©a
);

435 
	`SIPE_DEBUG_INFO_NOFORMAT
("http_conn_process_input_message: Authentication failed");

436 
	`hâp_c⁄n_£t_˛o£
(
hâp_c⁄n
);

440 
±mp
 = 
	`sùmsg_föd_auth_hódî
(
msg
, "NTLM");

441 
auth_ty≥
 = 
AUTH_TYPE_NTLM
;

442 
auth_«me
 = "NTLM";

443 #ifde‡
_WIN32


444 #ifde‡
HAVE_LIBKRB5


445 
tmp
 = 
	`sùmsg_föd_auth_hódî
(
msg
, "Negotiate");

446 i‡(
tmp
 && 
hâp_c⁄n
->
auth
 && hâp_c⁄n->auth->
u£_√gŸüã
) {

447 
±mp
 = 
tmp
;

448 
auth_ty≥
 = 
AUTH_TYPE_NEGOTIATE
;

449 
auth_«me
 = "Negotiate";

453 i‡(!
±mp
) {

454 
	`SIPE_DEBUG_INFO
("http_conn_process_input_message: Only %s supported inÅhe moment,Éxiting",

455 #ifde‡
_WIN32


456 #ifde‡
HAVE_LIBKRB5


468 i‡(!
hâp_c⁄n
->
£c_˘x
) {

469 
hâp_c⁄n
->
£c_˘x
 =

470 
	`sù_£c_¸óã_c⁄ãxt
(
auth_ty≥
,

471 
u£_sso
,

473 
hâp_c⁄n
->
auth
 && hâp_c⁄n->auth->
domaö
 ? http_conn->auth->domain : "",

474 
hâp_c⁄n
->
auth
 ? hâp_c⁄n->auth->
u£r
 : 
NULL
,

475 
hâp_c⁄n
->
auth
 ? hâp_c⁄n->auth->
∑ssw‹d
 : 
NULL
);

478 i‡(
hâp_c⁄n
->
£c_˘x
) {

479 **
∑πs
 = 
	`g_°r•lô
(
±mp
, " ", 0);

480 *
•n
 = 
	`g_°rdup_¥ötf
("HTTP/%s", 
hâp_c⁄n
->
ho°
);

481 
ªt
 = 
	`sù_£c_öô_c⁄ãxt_°ï
(
hâp_c⁄n
->
£c_˘x
,

482 
•n
,

483 
∑πs
[1],

484 &
ouçut_toked_ba£64
,

485 
NULL
);

486 
	`g_‰ì
(
•n
);

487 
	`g_°r‰ìv
(
∑πs
);

490 i‡(
ªt
 < 0) {

491 i‡(
hâp_c⁄n
->
ˇŒback
) {

492 (*
hâp_c⁄n
->
ˇŒback
)(
HTTP_CONN_ERROR_FATAL
, 
NULL
, NULL, hâp_c⁄n, hâp_c⁄n->
d©a
);

494 
	`SIPE_DEBUG_INFO_NOFORMAT
("http_conn_process_input_message: FailedÅo initialize security context");

495 
	`hâp_c⁄n_£t_˛o£
(
hâp_c⁄n
);

499 
auth‹iz©i⁄
 = 
	`g_°rdup_¥ötf
("%†%s", 
auth_«me
, 
ouçut_toked_ba£64
 ? output_toked_base64 : "");

500 
	`g_‰ì
(
ouçut_toked_ba£64
);

502 
	`hâp_c⁄n_£nd0
(
hâp_c⁄n
, 
auth‹iz©i⁄
);

503 
	`g_‰ì
(
auth‹iz©i⁄
);

507 c⁄° *
£t_cookõ_hdr
;

508 c⁄° *
c⁄ã¡_ty≥
 = 
	`sùmsg_föd_hódî
(
msg
, "Content-Type");

509 
hâp_c⁄n
->
ªåõs
 = 0;

514 i‡(
hâp_c⁄n
->
hâp_£ssi⁄
 && (
£t_cookõ_hdr
 = 
	`sùmsg_föd_hódî
(
msg
, "Set-Cookie"))) {

515 **
∑πs
;

516 *
tmp
;

517 
i
;

519 
	`g_‰ì
(
hâp_c⁄n
->
hâp_£ssi⁄
->
cookõ
);

520 
hâp_c⁄n
->
hâp_£ssi⁄
->
cookõ
 = 
NULL
;

522 
∑πs
 = 
	`g_°r•lô
(
£t_cookõ_hdr
, ";", 0);

523 
i
 = 0; 
∑πs
[i]; i++) {

524 i‡(!
	`°r°r
(
∑πs
[
i
], "path=") &&

525 !
	`°r°r
(
∑πs
[
i
], "domain=") &&

526 !
	`°r°r
(
∑πs
[
i
], "expires=") &&

527 !
	`°r°r
(
∑πs
[
i
], "secure"))

529 
tmp
 = 
hâp_c⁄n
->
hâp_£ssi⁄
->
cookõ
;

530 
hâp_c⁄n
->
hâp_£ssi⁄
->
cookõ
 = !
tmp
 ?

531 
	`g_°rdup
(
∑πs
[
i
]) :

532 
	`g_°rc⁄ˇt
(
hâp_c⁄n
->
hâp_£ssi⁄
->
cookõ
, ";", 
∑πs
[
i
], 
NULL
);

533 
	`g_‰ì
(
tmp
);

536 
	`g_°r‰ìv
(
∑πs
);

537 
	`SIPE_DEBUG_INFO
("http_conn_process_input_message: Set cookie: %s",

538 
hâp_c⁄n
->
hâp_£ssi⁄
->
cookõ
 ? http_conn->http_session->cookie : "");

541 i‡(
hâp_c⁄n
->
ˇŒback
) {

542 (*
hâp_c⁄n
->
ˇŒback
)(
msg
->
ª•⁄£
, msg->
body
, 
c⁄ã¡_ty≥
, hâp_c⁄n, hâp_c⁄n->
d©a
);

545 
	}
}

547 
	$hâp_c⁄n_öput
(
sùe_å™•‹t_c⁄√˘i⁄
 *
c⁄n
)

549 
HâpC⁄n
 *
hâp_c⁄n
 = 
HTTP_CONN
;

550 *
cur
 = 
c⁄n
->
buf„r
;

553 *
cur
 == '\r' || *cur == '\n') {

554 
cur
++;

556 i‡(
cur
 !
c⁄n
->
buf„r
)

557 
	`sùe_utûs_shrök_buf„r
(
c⁄n
, 
cur
);

559 (
cur
 = 
	`°r°r
(
c⁄n
->
buf„r
, "\r\n\r\n")Ë!
NULL
) {

560 
sùmsg
 *
msg
;

561 *
tmp
;

562 
guöt
 
ªmaödî
;

563 
time_t
 
cuºtime
 = 
	`time
(
NULL
);

564 
cur
 += 2;

565 
cur
[0] = '\0';

566 
	`SIPE_DEBUG_INFO
("ª˚ived - %s******\n%s\n******", 
	`˘ime
(&
cuºtime
), 
tmp
 = 
	`fix_√wlöes
(
c⁄n
->
buf„r
));

567 
	`g_‰ì
(
tmp
);

569 
msg
 = 
	`sùmsg_∑r£_hódî
(
c⁄n
->
buf„r
);

570 
cur
[0] = '\r';

571 
cur
 += 2;

572 
ªmaödî
 = 
c⁄n
->
buf„r_u£d
 - (
cur
 - c⁄n->
buf„r
);

573 i‡(
msg
 && 
ªmaödî
 >(
guöt
Ëmsg->
bodyÀn
) {

574 *
dummy
 = 
	`g_mÆloc
(
msg
->
bodyÀn
 + 1);

575 
	`mem˝y
(
dummy
, 
cur
, 
msg
->
bodyÀn
);

576 
dummy
[
msg
->
bodyÀn
] = '\0';

577 
msg
->
body
 = 
dummy
;

578 
cur
 +
msg
->
bodyÀn
;

579 
	`sùe_utûs_shrök_buf„r
(
c⁄n
, 
cur
);

581 i‡(
msg
){

582 
	`SIPE_DEBUG_INFO
("¥o˚ss_öput: bodyÅoÿsh‹à(%d < %d, såÀ¿%dË- ign‹ög mesßge", 
ªmaödî
, 
msg
->
bodyÀn
, ()
	`°æí
(
c⁄n
->
buf„r
));

583 
	`sùmsg_‰ì
(
msg
);

588 i‡(
msg
->
body
) {

589 
	`SIPE_DEBUG_INFO
("body:\n%s", 
msg
->
body
);

593 i‡(
	`sùe_°rˇ£_equÆ
(
	`sùmsg_föd_hódî
(
msg
, "Connection"), "close")) {

594 
hâp_c⁄n
->
˛o£d
 = 
TRUE
;

597 
	`hâp_c⁄n_¥o˚ss_öput_mesßge
(
hâp_c⁄n
, 
msg
);

599 
	`sùmsg_‰ì
(
msg
);

602 i‡(
hâp_c⁄n
->
˛o£d
) {

603 
	`hâp_c⁄n_˛o£
(
hâp_c⁄n
->
do_˛o£
, "Server closed connection");

604 } i‡(
hâp_c⁄n
->
do_˛o£
) {

605 
	`hâp_c⁄n_˛o£
(
hâp_c⁄n
->
do_˛o£
, "User initiated");

607 
	}
}

	@src/core/http-conn.h

25 
	gsùe_c‹e_public
;

27 
	#HTTP_CONN_GET
 "GET"

	)

28 
	#HTTP_CONN_POST
 "POST"

	)

30 
	#HTTP_CONN_SSL
 
SIPE_TRANSPORT_TLS


	)

31 
	#HTTP_CONN_TCP
 
SIPE_TRANSPORT_TCP


	)

33 
	#HTTP_CONN_ALLOW_REDIRECT
 
TRUE


	)

34 
	#HTTP_CONN_NO_REDIRECT
 
FALSE


	)

36 
	#HTTP_CONN_ERROR
 -100

	)

37 
	#HTTP_CONN_ERROR_FATAL
 -200

	)

40 
	shâp_c⁄n_auth
 {

41 *
	mdomaö
;

42 *
	mu£r
;

43 *
	m∑ssw‹d
;

44 
	mu£_√gŸüã
;

46 
hâp_c⁄n_auth
 
	tHâpC⁄nAuth
;

48 
	ghâp_c⁄n_°ru˘
;

49 
hâp_c⁄n_°ru˘
 
	tHâpC⁄n
;

50 
hâp_£ssi⁄_°ru˘
 
	tHâpSessi⁄
;

53 (*
	tHâpC⁄nCÆlback
Ë(
	tªtu∫_code
, c⁄° *
	tbody
, c⁄° *
	tc⁄ã¡_ty≥
,

54 
	tHâpC⁄n
 *
	tc⁄n
, *
	td©a
);

59 
HâpC⁄n
 *

60 
	`hâp_c⁄n_¸óã
(
sùe_c‹e_public
 *
sùe_public
,

61 
HâpSessi⁄
 *
hâp_£ssi⁄
,

62 c⁄° *
mëhod
,

63 
guöt
 
c⁄n_ty≥
,

64 
gboﬁón
 
Ælow_ªdúe˘
,

65 c⁄° *
fuŒ_uæ
,

66 c⁄° *
body
,

67 c⁄° *
c⁄ã¡_ty≥
,

68 
HâpC⁄nAuth
 *
auth
,

69 
HâpC⁄nCÆlback
 
ˇŒback
,

70 *
d©a
);

76 
	`hâp_c⁄n_£nd
–
HâpC⁄n
 *
hâp_c⁄n
,

77 c⁄° *
mëhod
,

78 c⁄° *
fuŒ_uæ
,

79 c⁄° *
body
,

80 c⁄° *
c⁄ã¡_ty≥
,

81 
HâpC⁄nCÆlback
 
ˇŒback
,

82 *
d©a
);

84 
gboﬁón


85 
	`hâp_c⁄n_is_˛o£d
(
HâpC⁄n
 *
hâp_c⁄n
);

91 
	`hâp_c⁄n_£t_˛o£
(
HâpC⁄n
* 
hâp_c⁄n
);

94 
	`hâp_c⁄n_‰ì
(
HâpC⁄n
* 
hâp_c⁄n
);

97 
	`hâp_c⁄n_auth_‰ì
(
HâpC⁄nAuth
* 
auth
);

99 
HâpSessi⁄
 *

100 
	`hâp_c⁄n_£ssi⁄_¸óã
();

103 
	`hâp_c⁄n_£ssi⁄_‰ì
(
HâpSessi⁄
 *
hâp_£ssi⁄
);

	@src/core/md4.c

42 
	~<°rög.h
>

43 
	~"md4.h
"

45 
PRUöt32
 
	tUöt32
;

46 
PRUöt8
 
	tUöt8
;

49 
	#F
(
x
,
y
,
z
Ë(((xË& (y)Ë| (~(xË& (z)))

	)

52 
	#G
(
x
,
y
,
z
Ë(((xË& (y)Ë| ((xË& (z)Ë| ((yË& (z)))

	)

55 
	#H
(
x
,
y
,
z
Ë((xË^ (yË^ (z))

	)

58 
	#ROTL
(
x
,
n
Ë(((xË<< (n)Ë| ((xË>> (0x20 -Ç)))

	)

61 
	#RD1
(
a
,
b
,
c
,
d
,
k
,
s
Ë®+
	`F
(b,c,dË+ 
X
[k];á = 
	`ROTL
◊,s)

	)

64 
	#RD2
(
a
,
b
,
c
,
d
,
k
,
s
Ë®+
	`G
(b,c,dË+ 
X
[k] + 0x5A827999;á = 
	`ROTL
◊,s)

	)

67 
	#RD3
(
a
,
b
,
c
,
d
,
k
,
s
Ë®+
	`H
(b,c,dË+ 
X
[k] + 0x6ED9EBA1;á = 
	`ROTL
◊,s)

	)

70 
	$w2b
(
Uöt8
 *
out
, c⁄° 
Uöt32
 *
ö
, Uöt32 
Àn
)

72 
Uöt8
 *
bp
; c⁄° 
Uöt32
 *
wp
, *
w≥nd
;

74 
bp
 = 
out
;

75 
wp
 = 
ö
;

76 
w≥nd
 = 
wp
 + (
Àn
 >> 2);

78 ; 
wp
 !
w≥nd
; ++wp, 
bp
 += 4)

80 
bp
[0] = (
Uöt8
Ë((*
wp
 ) & 0xFF);

81 
bp
[1] = (
Uöt8
Ë((*
wp
 >> 8) & 0xFF);

82 
bp
[2] = (
Uöt8
Ë((*
wp
 >> 16) & 0xFF);

83 
bp
[3] = (
Uöt8
Ë((*
wp
 >> 24) & 0xFF);

85 
	}
}

88 
	$b2w
(
Uöt32
 *
out
, c⁄° 
Uöt8
 *
ö
, Uöt32 
Àn
)

90 
Uöt32
 *
wp
; c⁄° 
Uöt8
 *
bp
, *
b≥nd
;

92 
wp
 = 
out
;

93 
bp
 = 
ö
;

94 
b≥nd
 = 
ö
 + 
Àn
;

96 ; 
bp
 !
b≥nd
; b∞+4, ++
wp
)

98 *
wp
 = (
Uöt32
Ë(
bp
[0] ) |

99 (
Uöt32
Ë(
bp
[1] << 8) |

100 (
Uöt32
Ë(
bp
[2] << 16) |

101 (
Uöt32
Ë(
bp
[3] << 24);

103 
	}
}

106 
	$md4°ï
(
Uöt32
 
°©e
[4], c⁄° 
Uöt8
 *
d©a
)

108 
Uöt32
 
A
, 
B
, 
C
, 
D
, 
X
[16];

110 
	`b2w
(
X
, 
d©a
, 64);

112 
A
 = 
°©e
[0];

113 
B
 = 
°©e
[1];

114 
C
 = 
°©e
[2];

115 
D
 = 
°©e
[3];

117 
	`RD1
(
A
,
B
,
C
,
D
, 0,3); RD1(D,A,B,C, 1,7); RD1(C,D,A,B, 2,11); RD1(B,C,D,A, 3,19);

118 
	`RD1
(
A
,
B
,
C
,
D
, 4,3); RD1(D,A,B,C, 5,7); RD1(C,D,A,B, 6,11); RD1(B,C,D,A, 7,19);

119 
	`RD1
(
A
,
B
,
C
,
D
, 8,3); RD1(D,A,B,C, 9,7); RD1(C,D,A,B,10,11); RD1(B,C,D,A,11,19);

120 
	`RD1
(
A
,
B
,
C
,
D
,12,3); RD1(D,A,B,C,13,7); RD1(C,D,A,B,14,11); RD1(B,C,D,A,15,19);

122 
	`RD2
(
A
,
B
,
C
,
D
, 0,3); RD2(D,A,B,C, 4,5); RD2(C,D,A,B, 8, 9); RD2(B,C,D,A,12,13);

123 
	`RD2
(
A
,
B
,
C
,
D
, 1,3); RD2(D,A,B,C, 5,5); RD2(C,D,A,B, 9, 9); RD2(B,C,D,A,13,13);

124 
	`RD2
(
A
,
B
,
C
,
D
, 2,3); RD2(D,A,B,C, 6,5); RD2(C,D,A,B,10, 9); RD2(B,C,D,A,14,13);

125 
	`RD2
(
A
,
B
,
C
,
D
, 3,3); RD2(D,A,B,C, 7,5); RD2(C,D,A,B,11, 9); RD2(B,C,D,A,15,13);

127 
	`RD3
(
A
,
B
,
C
,
D
, 0,3); RD3(D,A,B,C, 8,9); RD3(C,D,A,B, 4,11); RD3(B,C,D,A,12,15);

128 
	`RD3
(
A
,
B
,
C
,
D
, 2,3); RD3(D,A,B,C,10,9); RD3(C,D,A,B, 6,11); RD3(B,C,D,A,14,15);

129 
	`RD3
(
A
,
B
,
C
,
D
, 1,3); RD3(D,A,B,C, 9,9); RD3(C,D,A,B, 5,11); RD3(B,C,D,A,13,15);

130 
	`RD3
(
A
,
B
,
C
,
D
, 3,3); RD3(D,A,B,C,11,9); RD3(C,D,A,B, 7,11); RD3(B,C,D,A,15,15);

132 
°©e
[0] +
A
;

133 
°©e
[1] +
B
;

134 
°©e
[2] +
C
;

135 
°©e
[3] +
D
;

136 
	}
}

138 
	$md4sum
(c⁄° 
Uöt8
 *
öput
, 
Uöt32
 
öputLí
, Uöt8 *
ªsu…
)

140 
Uöt8
 
föÆ
[128];

141 
Uöt32
 
i
, 
n
, 
m
, 
°©e
[4];

144 
°©e
[0] = 0x67452301;

145 
°©e
[1] = 0xEFCDAB89;

146 
°©e
[2] = 0x98BADCFE;

147 
°©e
[3] = 0x10325476;

150 
m
 = 
öputLí
 >> 6;

153 
i
=0; i<
m
; ++i)

154 
	`md4°ï
(
°©e
, (
öput
 + (
i
 << 6)));

157 
n
 = 
öputLí
 % 64;

158 
	`mem˝y
(
föÆ
, 
öput
 + (
m
 << 6), 
n
);

159 
föÆ
[
n
] = 0x80;

160 
	`mem£t
(
föÆ
 + 
n
 + 1, 0, 120 - (n + 1));

162 
öputLí
 = inputLen << 3;

163 
	`w2b
(
föÆ
 + (
n
 >56 ? 120 : 56), &
öputLí
, 4);

165 
	`md4°ï
(
°©e
, 
föÆ
);

166 i‡(
n
 >= 56)

167 
	`md4°ï
(
°©e
, 
föÆ
 + 64);

170 
	`w2b
(
ªsu…
, 
°©e
, 16);

171 
	}
}

	@src/core/md4.h

38 #i‚de‡
md4_h__


39 
	#md4_h__


	)

41 #ifde‡
__˝lu•lus


45 
	~"¥ty≥s.h
"

64 
md4sum
(c⁄° 
PRUöt8
 *
öput
, 
PRUöt32
 
öputLí
, PRUöt8 *
ªsu…
);

66 #ifde‡
__˝lu•lus


	@src/core/sip-csta.c

30 
	~<°dlib.h
>

31 
	~<°rög.h
>

32 
	~<time.h
>

34 
	~<glib.h
>

36 
	~"sùe-comm⁄.h
"

37 
	~"sùmsg.h
"

38 
	~"sù-c°a.h
"

39 
	~"sù-å™•‹t.h
"

40 
	~"sùe-backíd.h
"

41 
	~"sùe-c‹e.h
"

42 
	~"sùe-c‹e-¥iv©e.h
"

43 
	~"sùe-dülog.h
"

44 
	~"sùe-scheduÀ.h
"

45 
	~"sùe-utûs.h
"

46 
	~"sùe-xml.h
"

47 
	~"sùe.h
"

49 
	#ORIGINATED_CSTA_STATUS
 "‹igö©ed"

	)

50 
	#DELIVERED_CSTA_STATUS
 "dñivîed"

	)

51 
	#ESTABLISHED_CSTA_STATUS
 "e°ablished"

	)

58 
	#SIP_SEND_CSTA_REQUEST_SYSTEM_STATUS
 \

68 "</Reque°Sy°emSètus>"

	)

74 
	#SIP_SEND_CSTA_GET_CSTA_FEATURES
 \

84 "</GëCSTAFótuªs>"

	)

90 
	#SIP_SEND_CSTA_MONITOR_START
 \

96 "</M⁄ô‹Sèπ>"

	)

102 
	#SIP_SEND_CSTA_MONITOR_STOP
 \

106 "</M⁄ô‹St›>"

	)

113 
	#SIP_SEND_CSTA_MAKE_CALL
 \

119 "</MakeCÆl>"

	)

127 
	#SIP_SEND_CSTA_CLEAR_CONNECTION
 \

134 "</CÀ¨C⁄√˘i⁄>"

	)

137 
gch¨
 *

138 
	$sù_to_ãl_uri0
(c⁄° 
gch¨
 *
ph⁄e
)

140 i‡(!
ph⁄e
 || 
	`°æí
’h⁄eË=0Ë 
NULL
;

142 i‡(
	`g_°r_has_¥efix
(
ph⁄e
, "tel:")) {

143  
	`g_°rdup
(
ph⁄e
);

145 
gch¨
 *
ãl_uri
 = 
	`g_mÆloc
(
	`°æí
(
ph⁄e
) + 4 + 1);

146 
gch¨
 *
de°_p
 = 
	`g_°p˝y
(
ãl_uri
, "tel:");

147 ; *
ph⁄e
;Öhone++) {

148 i‡(*
ph⁄e
 == ' ') ;

149 i‡(*
ph⁄e
 == '(') ;

150 i‡(*
ph⁄e
 == ')') ;

151 i‡(*
ph⁄e
 == '-') ;

152 i‡(*
ph⁄e
 == '.') ;

153 *
de°_p
++ = *
ph⁄e
;

155 *
de°_p
 = '\0';

156  
ãl_uri
;

158 
	}
}

160 
gch¨
 *

161 
	$sù_to_ãl_uri
(c⁄° 
gch¨
 *
ph⁄e
)

163 
gch¨
 *
ªs
 = 
	`sù_to_ãl_uri0
(
ph⁄e
);

164 
gch¨
 *
v
;

166 i‡(
ªs
 && (
v
 = 
	`°r°r
(res, "v:"))) {

167 
gch¨
 *
tmp
 = 
ªs
;

169 
ªs
 = 
	`g_°∫dup
‘es, 
v
 -Ñes);

170 
	`g_‰ì
(
tmp
);

171  
ªs
;

173  
ªs
;

174 
	}
}

176 
gch¨
 *

177 
	$sù_ãl_uri_dí‹mÆize
(c⁄° 
gch¨
 *
ãl_uri
)

179 i‡(!
ãl_uri
Ë 
NULL
;

181 i‡(
	`g_°r_has_¥efix
(
ãl_uri
, "tel:")) {

182  
	`g_°rdup
(
ãl_uri
 + 4);

184  
	`g_°rdup
(
ãl_uri
);

186 
	}
}

189 
	$sù_c°a_öôülize
(
sùe_accou¡_d©a
 *
sù
,

190 c⁄° 
gch¨
 *
löe_uri
,

191 c⁄° 
gch¨
 *
£rvî
)

193 if(!
sù
->
c°a
) {

194 
sù
->
c°a
 = 
	`g_√w0
(
sù_c°a
, 1);

195 
sù
->
c°a
->
löe_uri
 = 
	`g_°rdup
(line_uri);

196 
sù
->
c°a
->
g©eway_uri
 = 
	`g_°rdup
(
£rvî
);

198 
	`SIPE_DEBUG_INFO_NOFORMAT
("sip_csta_initialize: sip->csta isálready instantiated,Éxiting.");

200 
	}
}

203 
gboﬁón


204 
	$¥o˚ss_c°a_gë_„©uªs_ª•⁄£
(
SIPE_UNUSED_PARAMETER
 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

205 
sùmsg
 *
msg
,

206 
SIPE_UNUSED_PARAMETER
 
å™ß˘i⁄
 *
å™s
)

208 i‡(
msg
->
ª•⁄£
 >= 400) {

209 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_csta_get_features_response: Get CSTA featuresÑesponse isÇot 200. FailedÅo get features.");

211  
FALSE
;

213 i‡(
msg
->
ª•⁄£
 == 200) {

214 
	`SIPE_DEBUG_INFO
("¥o˚ss_c°a_gë_„©uªs_ª•⁄£:\n%s", 
msg
->
body
 ? msg->body : "");

217  
TRUE
;

218 
	}
}

222 
	$sù_c°a_gë_„©uªs
(
sùe_accou¡_d©a
 *
sù
)

224 
gch¨
 *
hdr
;

225 
gch¨
 *
body
;

227 i‡(!
sù
->
c°a
 || !sù->c°a->
dülog
 || !sù->c°a->dülog->
is_e°ablished
) {

228 
	`SIPE_DEBUG_INFO_NOFORMAT
("sip_csta_get_features:Ço dialog with CSTA,Éxiting.");

232 
hdr
 = 
	`g_°rdup
(

236 
body
 = 
	`g_°rdup_¥ötf
(

237 
SIP_SEND_CSTA_GET_CSTA_FEATURES
,

238 
sù
->
c°a
->
löe_uri
);

240 
	`£nd_sù_ªque°
(
SIP_TO_CORE_PRIVATE
,

242 
sù
->
c°a
->
dülog
->
wôh
,

243 
sù
->
c°a
->
dülog
->
wôh
,

244 
hdr
,

245 
body
,

246 
sù
->
c°a
->
dülog
,

247 
¥o˚ss_c°a_gë_„©uªs_ª•⁄£
);

248 
	`g_‰ì
(
body
);

249 
	`g_‰ì
(
hdr
);

250 
	}
}

253 
gboﬁón


254 
	$¥o˚ss_c°a_m⁄ô‹_°¨t_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

255 
sùmsg
 *
msg
,

256 
SIPE_UNUSED_PARAMETER
 
å™ß˘i⁄
 *
å™s
)

258 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

260 
	`SIPE_DEBUG_INFO
("¥o˚ss_c°a_m⁄ô‹_°¨t_ª•⁄£:\n%s", 
msg
->
body
 ? msg->body : "");

262 i‡(!
sù
->
c°a
) {

263 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_csta_monitor_start_response: sip->csta isÇot initializzed,Éxiting");

264  
FALSE
;

267 i‡(
msg
->
ª•⁄£
 >= 400) {

268 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_csta_monitor_start_response: Monitor StartÑesponse isÇot 200. FailedÅo start monitor.");

270  
FALSE
;

272 i‡(
msg
->
ª•⁄£
 == 200) {

273 
sùe_xml
 *
xml
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

274 
	`g_‰ì
(
sù
->
c°a
->
m⁄ô‹_¸oss_ªf_id
);

275 
sù
->
c°a
->
m⁄ô‹_¸oss_ªf_id
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
xml
, "monitorCrossRefID"));

276 
	`SIPE_DEBUG_INFO
("process_csta_monitor_start_response: monitor_cross_ref_id=%s",

277 
sù
->
c°a
->
m⁄ô‹_¸oss_ªf_id
 ? sip->csta->monitor_cross_ref_id : "");

278 
	`sùe_xml_‰ì
(
xml
);

281  
TRUE
;

282 
	}
}

286 
	$sù_c°a_m⁄ô‹_°¨t
(
sùe_accou¡_d©a
 *
sù
)

288 
gch¨
 *
hdr
;

289 
gch¨
 *
body
;

291 i‡(!
sù
->
c°a
 || !sù->c°a->
dülog
 || !sù->c°a->dülog->
is_e°ablished
) {

292 
	`SIPE_DEBUG_INFO_NOFORMAT
("sip_csta_monitor_start:Ço dialog with CSTA,Éxiting.");

296 
hdr
 = 
	`g_°rdup
(

300 
body
 = 
	`g_°rdup_¥ötf
(

301 
SIP_SEND_CSTA_MONITOR_START
,

302 
sù
->
c°a
->
löe_uri
);

304 
	`£nd_sù_ªque°
(
SIP_TO_CORE_PRIVATE
,

306 
sù
->
c°a
->
dülog
->
wôh
,

307 
sù
->
c°a
->
dülog
->
wôh
,

308 
hdr
,

309 
body
,

310 
sù
->
c°a
->
dülog
,

311 
¥o˚ss_c°a_m⁄ô‹_°¨t_ª•⁄£
);

312 
	`g_‰ì
(
body
);

313 
	`g_‰ì
(
hdr
);

314 
	}
}

318 
	$sù_c°a_m⁄ô‹_°›
(
sùe_accou¡_d©a
 *
sù
)

320 
gch¨
 *
hdr
;

321 
gch¨
 *
body
;

323 i‡(!
sù
->
c°a
 || !sù->c°a->
dülog
 || !sù->c°a->dülog->
is_e°ablished
) {

324 
	`SIPE_DEBUG_INFO_NOFORMAT
("sip_csta_monitor_stop:Ço dialog with CSTA,Éxiting.");

328 i‡(!
sù
->
c°a
->
m⁄ô‹_¸oss_ªf_id
) {

329 
	`SIPE_DEBUG_INFO_NOFORMAT
("sip_csta_monitor_stop:Ço monitor_cross_ref_id,Éxiting.");

333 
hdr
 = 
	`g_°rdup
(

337 
body
 = 
	`g_°rdup_¥ötf
(

338 
SIP_SEND_CSTA_MONITOR_STOP
,

339 
sù
->
c°a
->
m⁄ô‹_¸oss_ªf_id
);

341 
	`£nd_sù_ªque°
(
SIP_TO_CORE_PRIVATE
,

343 
sù
->
c°a
->
dülog
->
wôh
,

344 
sù
->
c°a
->
dülog
->
wôh
,

345 
hdr
,

346 
body
,

347 
sù
->
c°a
->
dülog
,

348 
NULL
);

349 
	`g_‰ì
(
body
);

350 
	`g_‰ì
(
hdr
);

351 
	}
}

354 
sùe_övôe_c°a_g©eway
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

355 
gpoöãr
 
unu£d
);

358 
gboﬁón


359 
	$¥o˚ss_övôe_c°a_g©eway_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

360 
sùmsg
 *
msg
,

361 
SIPE_UNUSED_PARAMETER
 
å™ß˘i⁄
 *
å™s
)

363 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

365 
	`SIPE_DEBUG_INFO
("¥o˚ss_övôe_c°a_g©eway_ª•⁄£:\n%s", 
msg
->
body
 ? msg->body : "");

367 i‡(!
sù
->
c°a
) {

368 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_invite_csta_gateway_response: sip->csta isÇot initializzed,Éxiting");

369  
FALSE
;

372 i‡(!
sù
->
c°a
->
dülog
) {

373 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_invite_csta_gateway_response: GSTA dialog is NULL,Éxiting");

374  
FALSE
;

377 
	`sùe_dülog_∑r£
(
sù
->
c°a
->
dülog
, 
msg
, 
TRUE
);

379 i‡(
msg
->
ª•⁄£
 >= 200) {

381 
sù
->
c°a
->
dülog
->
c£q
 = 0;

382 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "ACK", 
sù
->
c°a
->
dülog
->
wôh
, sù->c°a->dülog->wôh, 
NULL
, NULL, sip->csta->dialog, NULL);

383 
sù
->
c°a
->
dülog
->
outgoög_övôe
 = 
NULL
;

384 
sù
->
c°a
->
dülog
->
is_e°ablished
 = 
TRUE
;

387 i‡(
msg
->
ª•⁄£
 >= 400) {

388 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_invite_csta_gateway_response: INVITEÑesponse isÇot 200. FailedÅo join CSTA.");

390  
FALSE
;

392 i‡(
msg
->
ª•⁄£
 == 200) {

393 
sùe_xml
 *
xml
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

395 
	`g_‰ì
(
sù
->
c°a
->
g©eway_°©us
);

396 
sù
->
c°a
->
g©eway_°©us
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
xml
, "systemStatus"));

397 
	`SIPE_DEBUG_INFO
("process_invite_csta_gateway_response: gateway_status=%s",

398 
sù
->
c°a
->
g©eway_°©us
 ? sip->csta->gateway_status : "");

399 i‡(
	`sùe_°rˇ£_equÆ
(
sù
->
c°a
->
g©eway_°©us
, "normal")) {

400 i‡(!
sù
->
c°a
->
m⁄ô‹_¸oss_ªf_id
) {

401 
	`sù_c°a_gë_„©uªs
(
sù
);

402 
	`sù_c°a_m⁄ô‹_°¨t
(
sù
);

405 
	`SIPE_DEBUG_INFO
("process_invite_csta_gateway_response: ERROR: CSTA status is %s, won't continue.",

406 
sù
->
c°a
->
g©eway_°©us
);

409 
	`sùe_xml_‰ì
(
xml
);

412 i‡(
sù
->
c°a
->
dülog
->
expúes
) {

413 
	`sùe_scheduÀ_£c⁄ds
(
sùe_¥iv©e
,

415 
NULL
,

416 
sù
->
c°a
->
dülog
->
expúes
 - 60,

417 
sùe_övôe_c°a_g©eway
,

418 
NULL
);

422  
TRUE
;

423 
	}
}

428 
	$sùe_övôe_c°a_g©eway
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

429 
SIPE_UNUSED_PARAMETER
 
gpoöãr
 
unu£d
)

431 
sùe_accou¡_d©a
 *
sù
 = 
sùe_¥iv©e
->
ãmp‹¨y
;

432 
gch¨
 *
hdr
;

433 
gch¨
 *
c⁄è˘
;

434 
gch¨
 *
body
;

436 i‡(!
sù
->
c°a
) {

437 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_invite_csta_gateway: sip->csta is uninitialized,Éxiting");

441 if(!
sù
->
c°a
->
dülog
) {

442 
sù
->
c°a
->
dülog
 = 
	`g_√w0
(
sù_dülog
, 1);

443 
sù
->
c°a
->
dülog
->
ˇŒid
 = 
	`gíˇŒid
();

444 
sù
->
c°a
->
dülog
->
wôh
 = 
	`g_°rdup
(sù->c°a->
g©eway_uri
);

446 i‡(!(
sù
->
c°a
->
dülog
->
ouπag
)) {

447 
sù
->
c°a
->
dülog
->
ouπag
 = 
	`gíèg
();

450 
c⁄è˘
 = 
	`gë_c⁄è˘
(
sù
);

451 
hdr
 = 
	`g_°rdup_¥ötf
(

456 
c⁄è˘
);

457 
	`g_‰ì
(
c⁄è˘
);

459 
body
 = 
	`g_°rdup_¥ötf
(

460 
SIP_SEND_CSTA_REQUEST_SYSTEM_STATUS
,

461 
sù
->
c°a
->
löe_uri
);

463 
sù
->
c°a
->
dülog
->
outgoög_övôe
 = 
	`£nd_sù_ªque°
(
SIP_TO_CORE_PRIVATE
,

465 
sù
->
c°a
->
dülog
->
wôh
,

466 
sù
->
c°a
->
dülog
->
wôh
,

467 
hdr
,

468 
body
,

469 
sù
->
c°a
->
dülog
,

470 
¥o˚ss_övôe_c°a_g©eway_ª•⁄£
);

471 
	`g_‰ì
(
body
);

472 
	`g_‰ì
(
hdr
);

473 
	}
}

476 
	$sù_c°a_›í
(
sùe_accou¡_d©a
 *
sù
,

477 c⁄° 
gch¨
 *
löe_uri
,

478 c⁄° 
gch¨
 *
£rvî
)

480 
	`sù_c°a_öôülize
(
sù
, 
löe_uri
, 
£rvî
);

481 
	`sùe_övôe_c°a_g©eway
(
SIP_TO_CORE_PRIVATE
, 
NULL
);

482 
	}
}

485 
	$sù_c°a_‰ì
(
sù_c°a
 *
c°a
)

487 i‡(!
c°a
) ;

489 
	`g_‰ì
(
c°a
->
löe_uri
);

490 
	`g_‰ì
(
c°a
->
g©eway_uri
);

492 
	`sùe_dülog_‰ì
(
c°a
->
dülog
);

494 
	`g_‰ì
(
c°a
->
g©eway_°©us
);

495 
	`g_‰ì
(
c°a
->
m⁄ô‹_¸oss_ªf_id
);

496 
	`g_‰ì
(
c°a
->
löe_°©us
);

497 
	`g_‰ì
(
c°a
->
to_ãl_uri
);

498 
	`g_‰ì
(
c°a
->
ˇŒ_id
);

499 
	`g_‰ì
(
c°a
->
devi˚_id
);

501 
	`g_‰ì
(
c°a
);

502 
	}
}

505 
	$sù_c°a_˛o£
(
sùe_accou¡_d©a
 *
sù
)

507 i‡(
sù
->
c°a
) {

508 
	`sù_c°a_m⁄ô‹_°›
(
sù
);

511 i‡(
sù
->
c°a
 && sù->c°a->
dülog
) {

513 
	`£nd_sù_ªque°
(
SIP_TO_CORE_PRIVATE
,

515 
sù
->
c°a
->
dülog
->
wôh
,

516 
sù
->
c°a
->
dülog
->
wôh
,

517 
NULL
,

518 
NULL
,

519 
sù
->
c°a
->
dülog
,

520 
NULL
);

523 
	`sù_c°a_‰ì
(
sù
->
c°a
);

524 
	}
}

529 
gboﬁón


530 
	$¥o˚ss_c°a_make_ˇŒ_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

531 
sùmsg
 *
msg
,

532 
SIPE_UNUSED_PARAMETER
 
å™ß˘i⁄
 *
å™s
)

534 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

536 
	`SIPE_DEBUG_INFO
("¥o˚ss_c°a_make_ˇŒ_ª•⁄£:\n%s", 
msg
->
body
 ? msg->body : "");

538 i‡(!
sù
->
c°a
) {

539 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_csta_make_call_response: sip->csta isÇot initializzed,Éxiting");

540  
FALSE
;

543 i‡(
msg
->
ª•⁄£
 >= 400) {

544 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_csta_make_call_response: Make CallÑesponse isÇot 200. FailedÅo make call.");

546  
FALSE
;

548 i‡(
msg
->
ª•⁄£
 == 200) {

549 
sùe_xml
 *
xml
;

550 c⁄° 
sùe_xml
 *
xn_ˇŒög_devi˚
;

551 
gch¨
 *
devi˚_id
;

553 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_csta_make_call_response: SUCCESS");

555 
xml
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

556 
xn_ˇŒög_devi˚
 = 
	`sùe_xml_chûd
(
xml
, "callingDevice");

557 
devi˚_id
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
xn_ˇŒög_devi˚
, "deviceID"));

558 i‡(
	`sùe_°ªquÆ
(
sù
->
c°a
->
löe_uri
, 
devi˚_id
)) {

559 
	`g_‰ì
(
sù
->
c°a
->
ˇŒ_id
);

560 
sù
->
c°a
->
ˇŒ_id
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
xn_ˇŒög_devi˚
, "callID"));

561 
	`SIPE_DEBUG_INFO
("¥o˚ss_c°a_make_ˇŒ_ª•⁄£: cÆl_id=%s", 
sù
->
c°a
->
ˇŒ_id
 ? sip->csta->call_id : "");

563 
	`g_‰ì
(
devi˚_id
);

564 
	`sùe_xml_‰ì
(
xml
);

567  
TRUE
;

568 
	}
}

572 
	$sù_c°a_make_ˇŒ
(
sùe_accou¡_d©a
 *
sù
,

573 c⁄° 
gch¨
* 
to_ãl_uri
)

575 
gch¨
 *
hdr
;

576 
gch¨
 *
body
;

578 i‡(!
to_ãl_uri
) {

579 
	`SIPE_DEBUG_INFO_NOFORMAT
("sip_csta_make_call:ÇoÅel URIÖarameterÖrovided,Éxiting.");

583 i‡(!
sù
->
c°a
 || !sù->c°a->
dülog
 || !sù->c°a->dülog->
is_e°ablished
) {

584 
	`SIPE_DEBUG_INFO_NOFORMAT
("sip_csta_make_call:Ço dialog with CSTA,Éxiting.");

588 
	`g_‰ì
(
sù
->
c°a
->
to_ãl_uri
);

589 
sù
->
c°a
->
to_ãl_uri
 = 
	`g_°rdup
(to_tel_uri);

591 
hdr
 = 
	`g_°rdup
(

595 
body
 = 
	`g_°rdup_¥ötf
(

596 
SIP_SEND_CSTA_MAKE_CALL
,

597 
sù
->
c°a
->
löe_uri
,

598 
sù
->
c°a
->
to_ãl_uri
);

600 
	`£nd_sù_ªque°
(
SIP_TO_CORE_PRIVATE
,

602 
sù
->
c°a
->
dülog
->
wôh
,

603 
sù
->
c°a
->
dülog
->
wôh
,

604 
hdr
,

605 
body
,

606 
sù
->
c°a
->
dülog
,

607 
¥o˚ss_c°a_make_ˇŒ_ª•⁄£
);

608 
	`g_‰ì
(
body
);

609 
	`g_‰ì
(
hdr
);

610 
	}
}

613 
	$sù_c°a_upd©e_id_™d_°©us
(
sù_c°a
 *
c°a
,

614 c⁄° 
sùe_xml
 *
node
,

615 c⁄° *
°©us
)

617 
gch¨
 *
ˇŒ_id
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "callID"));

619 i‡(!
	`sùe_°ªquÆ
(
ˇŒ_id
, 
c°a
->call_id)) {

620 
	`SIPE_DEBUG_INFO
("sùe_c°a_upd©e_id_™d_°©us: cÆlID (%sËd€†nŸ m©ch", 
ˇŒ_id
);

625 
	`g_‰ì
(
c°a
->
löe_°©us
);

626 
c°a
->
löe_°©us
 = 
NULL
;

628 i‡(
°©us
)

631 
gch¨
 *
devi˚_id
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "deviceID"));

632 
	`SIPE_DEBUG_INFO
("sùe_c°a_upd©e_id_™d_°©us: devi˚_id=(%s)", 
devi˚_id
 ? device_id : "");

633 i‡(
devi˚_id
) {

634 
	`g_‰ì
(
c°a
->
devi˚_id
);

635 
c°a
->
devi˚_id
 = device_id;

639 
c°a
->
löe_°©us
 = 
	`g_°rdup
(
°©us
);

644 
	`g_‰ì
(
c°a
->
to_ãl_uri
);

645 
c°a
->
to_ãl_uri
 = 
NULL
;

646 
	`g_‰ì
(
c°a
->
ˇŒ_id
);

647 
c°a
->
ˇŒ_id
 = 
NULL
;

648 
	`g_‰ì
(
c°a
->
devi˚_id
);

649 
c°a
->
devi˚_id
 = 
NULL
;

653 
	`g_‰ì
(
ˇŒ_id
);

654 
	}
}

657 
	$¥o˚ss_öcomög_öfo_c°a
(
sùe_accou¡_d©a
 *
sù
,

658 
sùmsg
 *
msg
)

660 
gch¨
 *
m⁄ô‹_¸oss_ªf_id
;

661 
sùe_xml
 *
xml
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

663 i‡(!
xml
) ;

665 
m⁄ô‹_¸oss_ªf_id
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
xml
, "monitorCrossRefID"));

667 if(!
sù
->
c°a
 || !
	`sùe_°ªquÆ
(
m⁄ô‹_¸oss_ªf_id
, sip->csta->monitor_cross_ref_id))

669 
	`SIPE_DEBUG_INFO
("process_incoming_info_csta: monitorCrossRefID (%s) doesÇot match,Éxiting",

670 
m⁄ô‹_¸oss_ªf_id
 ? monitor_cross_ref_id : "");

674 i‡(
	`sùe_°ªquÆ
(
	`sùe_xml_«me
(
xml
), "OriginatedEvent"))

676 
	`sù_c°a_upd©e_id_™d_°©us
(
sù
->
c°a
,

677 
	`sùe_xml_chûd
(
xml
, "originatedConnection"),

678 
ORIGINATED_CSTA_STATUS
);

680 i‡(
	`sùe_°ªquÆ
(
	`sùe_xml_«me
(
xml
), "DeliveredEvent"))

682 
	`sù_c°a_upd©e_id_™d_°©us
(
sù
->
c°a
,

683 
	`sùe_xml_chûd
(
xml
, "connection"),

684 
DELIVERED_CSTA_STATUS
);

686 i‡(
	`sùe_°ªquÆ
(
	`sùe_xml_«me
(
xml
), "EstablishedEvent"))

688 
	`sù_c°a_upd©e_id_™d_°©us
(
sù
->
c°a
,

689 
	`sùe_xml_chûd
(
xml
, "establishedConnection"),

690 
ESTABLISHED_CSTA_STATUS
);

692 i‡(
	`sùe_°ªquÆ
(
	`sùe_xml_«me
(
xml
), "ConnectionClearedEvent"))

694 
	`sù_c°a_upd©e_id_™d_°©us
(
sù
->
c°a
,

695 
	`sùe_xml_chûd
(
xml
, "droppedConnection"),

696 
NULL
);

700 
	`g_‰ì
(
m⁄ô‹_¸oss_ªf_id
);

701 
	`sùe_xml_‰ì
(
xml
);

702 
	}
}

	@src/core/sip-csta.h

30 
	gsùmsg
;

31 
	gsù_dülog
;

32 
	gsùe_accou¡_d©a
;

35 
	ssù_c°a
 {

36 
gch¨
 *
	mlöe_uri
;

38 
gch¨
 *
	mg©eway_uri
;

40 
sù_dülog
 *
	mdülog
;

42 
gch¨
 *
	mg©eway_°©us
;

43 
gch¨
 *
	mm⁄ô‹_¸oss_ªf_id
;

45 
gch¨
 *
	mlöe_°©us
;

47 
gch¨
 *
	mto_ãl_uri
;

48 
gch¨
 *
	mˇŒ_id
;

50 
gch¨
 *
	mdevi˚_id
;

62 
gch¨
 *

63 
sù_to_ãl_uri
(c⁄° 
gch¨
 *
ph⁄e
);

77 
gch¨
 *

78 
sù_ãl_uri_dí‹mÆize
(c⁄° 
gch¨
 *
ãl_uri
);

85 
sù_c°a_›í
(
sùe_accou¡_d©a
 *
sù
,

86 c⁄° 
gch¨
 *
löe_uri
,

87 c⁄° 
gch¨
 *
£rvî
);

91 
sù_c°a_˛o£
(
sùe_accou¡_d©a
 *
sù
);

97 
sù_c°a_make_ˇŒ
(
sùe_accou¡_d©a
 *
sù
,

98 c⁄° 
gch¨
* 
to_ãl_uri
);

103 
¥o˚ss_öcomög_öfo_c°a
(
sùe_accou¡_d©a
 *
sù
,

104 
sùmsg
 *
msg
);

	@src/core/sip-sec-krb5.c

25 
	~<glib.h
>

26 
	~<°dio.h
>

27 
	~<°rög.h
>

28 
	~<gsßpi/gsßpi.h
>

29 
	~<gsßpi/gsßpi_krb5.h
>

30 
	~<krb5.h
>

32 
	~"sùe-comm⁄.h
"

33 
	~"sù-£c.h
"

34 
	~"sù-£c-mech.h
"

35 
	~"sù-£c-krb5.h
"

38 
	s_c⁄ãxt_krb5
 {

39 
sù_£c_c⁄ãxt
 
	mcomm⁄
;

40 
gss_¸ed_id_t
 
	m¸ed_krb5
;

41 
gss_˘x_id_t
 
	m˘x_krb5
;

42 } *
	tc⁄ãxt_krb5
;

44 
sù_£c_krb5_¥öt_gss_îr‹
(*
func
, 
OM_uöt32
 
ªt
, OM_uöt32 
mö‹
);

47 
sù_£c_krb5_obèö_tgt
(c⁄° *
ªÆm
,

48 c⁄° *
u£∫ame
,

49 c⁄° *
∑ssw‹d
);

58 
sù_uöt32


59 
	$sù_£c_acquúe_¸ed__krb5
(
SùSecC⁄ãxt
 
c⁄ãxt
,

60 c⁄° *
domaö
,

61 c⁄° *
u£∫ame
,

62 c⁄° *
∑ssw‹d
)

64 
OM_uöt32
 
ªt
;

65 
OM_uöt32
 
mö‹
;

66 
OM_uöt32
 
expúy
;

67 
gss_¸ed_id_t
 
¸edítüls
;

69 i‡(!
c⁄ãxt
->
sso
) {

71 
	`sù_£c_krb5_obèö_tgt
(
	`g_ascii_°rup
(
domaö
, -1), 
u£∫ame
, 
∑ssw‹d
);

75 
ªt
 = 
	`gss_acquúe_¸ed
(&
mö‹
,

76 
GSS_C_NO_NAME
,

77 
GSS_C_INDEFINITE
,

78 
GSS_C_NO_OID_SET
,

79 
GSS_C_INITIATE
,

80 &
¸edítüls
,

81 
NULL
,

82 &
expúy
);

84 i‡(
	`GSS_ERROR
(
ªt
)) {

85 
	`sù_£c_krb5_¥öt_gss_îr‹
("gss_acquúe_¸ed", 
ªt
, 
mö‹
);

86 
	`¥ötf
("ERROR: sù_£c_acquúe_¸ed0__krb5: faûedÅÿacquúê¸edítüls.Ñë=%d\n", ()
ªt
);

87  
SIP_SEC_E_INTERNAL_ERROR
;

89 ((
c⁄ãxt_krb5
)
c⁄ãxt
)->
¸ed_krb5
 = 
¸edítüls
;

90  
SIP_SEC_E_OK
;

92 
	}
}

94 
sù_uöt32


95 
	$sù_£c_öô_£c_c⁄ãxt__krb5
(
SùSecC⁄ãxt
 
c⁄ãxt
,

96 
SùSecBuf„r
 
ö_buff
,

97 
SùSecBuf„r
 *
out_buff
,

98 c⁄° *
£rvi˚_«me
)

100 
OM_uöt32
 
ªt
;

101 
OM_uöt32
 
mö‹
;

102 
OM_uöt32
 
expúy
;

103 
OM_uöt32
 
ªque°_Êags
;

104 
OM_uöt32
 
ª•⁄£_Êags
;

105 
gss_buf„r_desc
 
öput_tokí
;

106 
gss_buf„r_desc
 
ouçut_tokí
;

107 
gss_buf„r_desc
 
öput_«me_buf„r
;

108 
gss_«me_t
 
èrgë_«me
;

109 
c⁄ãxt_krb5
 
˘x
 = (c⁄ãxt_krb5Ë
c⁄ãxt
;

111 
öput_«me_buf„r
.
vÆue
 = (*)
£rvi˚_«me
;

112 
öput_«me_buf„r
.
Àngth
 = 
	`°æí
(öput_«me_buf„r.
vÆue
) + 1;

114 
ªt
 = 
	`gss_imp‹t_«me
(&
mö‹
,

115 &
öput_«me_buf„r
,

116 (
gss_OID
Ë
GSS_KRB5_NT_PRINCIPAL_NAME
,

117 &
èrgë_«me
);

118 i‡(
	`GSS_ERROR
(
ªt
)) {

119 
	`sù_£c_krb5_¥öt_gss_îr‹
("gss_imp‹t_«me", 
ªt
, 
mö‹
);

120 
	`¥ötf
("ERROR: sù_£c_öô_£c_c⁄ãxt__krb5: faûedÅÿc⁄°ru˘Å¨gëÇame. Rëu∫ed.Ñë=%d\n", ()
ªt
);

121  
SIP_SEC_E_INTERNAL_ERROR
;

124 
ªque°_Êags
 = 
GSS_C_INTEG_FLAG
;

126 
öput_tokí
.
Àngth
 = 
ö_buff
.length;

127 
öput_tokí
.
vÆue
 = 
ö_buff
.value;

129 
ouçut_tokí
.
Àngth
 = 0;

130 
ouçut_tokí
.
vÆue
 = 
NULL
;

132 
ªt
 = 
	`gss_öô_£c_c⁄ãxt
(&
mö‹
,

133 
˘x
->
¸ed_krb5
,

134 &(
˘x
->
˘x_krb5
),

135 
èrgë_«me
,

136 
GSS_C_NO_OID
,

137 
ªque°_Êags
,

138 
GSS_C_INDEFINITE
,

139 
GSS_C_NO_CHANNEL_BINDINGS
,

140 &
öput_tokí
,

141 
NULL
,

142 &
ouçut_tokí
,

143 &
ª•⁄£_Êags
,

144 &
expúy
);

146 i‡(
	`GSS_ERROR
(
ªt
)) {

147 
	`sù_£c_krb5_¥öt_gss_îr‹
("gss_öô_£c_c⁄ãxt", 
ªt
, 
mö‹
);

148 
	`¥ötf
("ERROR: sù_£c_öô_£c_c⁄ãxt__krb5: faûedÅÿöôülizêc⁄ãxt.Ñë=%d\n", ()
ªt
);

149  
SIP_SEC_E_INTERNAL_ERROR
;

151 
ªt
 = 
	`gss_ªÀa£_¸ed
(&
mö‹
, &(
˘x
->
¸ed_krb5
));

152 i‡(
	`GSS_ERROR
(
ªt
)) {

153 
	`sù_£c_krb5_¥öt_gss_îr‹
("gss_ªÀa£_¸ed", 
ªt
, 
mö‹
);

154 
	`¥ötf
("ERROR: sù_£c_öô_£c_c⁄ãxt__krb5: faûedÅÿªÀa£ cªdítüls.Ñë=%d\n", ()
ªt
);

157 
öput_tokí
.
vÆue
 = 
NULL
;

158 
öput_tokí
.
Àngth
 = 0;

160 
out_buff
->
Àngth
 = 
ouçut_tokí
.length;

161 
out_buff
->
vÆue
 = 
ouçut_tokí
.value;

163 
c⁄ãxt
->
expúes
 = ()
expúy
;

164  
SIP_SEC_E_OK
;

166 
	}
}

171 
sù_uöt32


172 
	$sù_£c_make_sig«tuª__krb5
(
SùSecC⁄ãxt
 
c⁄ãxt
,

173 c⁄° *
mesßge
,

174 
SùSecBuf„r
 *
sig«tuª
)

176 
OM_uöt32
 
ªt
;

177 
OM_uöt32
 
mö‹
;

178 
gss_buf„r_desc
 
öput_mesßge
;

179 
gss_buf„r_desc
 
ouçut_tokí
;

181 
öput_mesßge
.
vÆue
 = (*)
mesßge
;

182 
öput_mesßge
.
Àngth
 = 
	`°æí
(öput_mesßge.
vÆue
);

184 
ªt
 = 
	`gss_gë_mic
(&
mö‹
,

185 ((
c⁄ãxt_krb5
)
c⁄ãxt
)->
˘x_krb5
,

186 
GSS_C_QOP_DEFAULT
,

187 &
öput_mesßge
,

188 &
ouçut_tokí
);

190 i‡(
	`GSS_ERROR
(
ªt
)) {

191 
	`sù_£c_krb5_¥öt_gss_îr‹
("gss_gë_mic", 
ªt
, 
mö‹
);

192 
	`¥ötf
("ERROR: sù_s•_make_sig«tuª: faûedÅÿmakêsig«tuª.Ñë=%d\n", ()
ªt
);

193  
SIP_SEC_E_INTERNAL_ERROR
;

195 
sig«tuª
->
vÆue
 = 
ouçut_tokí
.value;

196 
sig«tuª
->
Àngth
 = 
ouçut_tokí
.length;

198  
SIP_SEC_E_OK
;

200 
	}
}

205 
sù_uöt32


206 
	$sù_£c_vîify_sig«tuª__krb5
(
SùSecC⁄ãxt
 
c⁄ãxt
,

207 c⁄° *
mesßge
,

208 
SùSecBuf„r
 
sig«tuª
)

210 
OM_uöt32
 
ªt
;

211 
OM_uöt32
 
mö‹
;

212 
gss_q›_t
 
q›_°©e
;

213 
gss_buf„r_desc
 
öput_mesßge
;

214 
gss_buf„r_desc
 
öput_tokí
;

216 
öput_mesßge
.
vÆue
 = (*)
mesßge
;

217 
öput_mesßge
.
Àngth
 = 
	`°æí
(öput_mesßge.
vÆue
);

219 
öput_tokí
.
vÆue
 = 
sig«tuª
.value;

220 
öput_tokí
.
Àngth
 = 
sig«tuª
.length;

222 
ªt
 = 
	`gss_vîify_mic
(&
mö‹
,

223 ((
c⁄ãxt_krb5
)
c⁄ãxt
)->
˘x_krb5
,

224 &
öput_mesßge
,

225 &
öput_tokí
,

226 &
q›_°©e
);

228 i‡(
	`GSS_ERROR
(
ªt
)) {

229 
	`sù_£c_krb5_¥öt_gss_îr‹
("gss_vîify_mic", 
ªt
, 
mö‹
);

230 
	`¥ötf
("ERROR: sù_£c_vîify_sig«tuª__krb5: faûedÅÿmakêsig«tuª.Ñë=%d\n", ()
ªt
);

231  
SIP_SEC_E_INTERNAL_ERROR
;

233  
SIP_SEC_E_OK
;

235 
	}
}

238 
	$sù_£c_de°roy_£c_c⁄ãxt__krb5
(
SùSecC⁄ãxt
 
c⁄ãxt
)

240 
OM_uöt32
 
ªt
;

241 
OM_uöt32
 
mö‹
;

242 
c⁄ãxt_krb5
 
˘x
 = (c⁄ãxt_krb5Ë
c⁄ãxt
;

244 i‡(
˘x
->
¸ed_krb5
) {

245 
ªt
 = 
	`gss_ªÀa£_¸ed
(&
mö‹
, &(
˘x
->
¸ed_krb5
));

246 i‡(
	`GSS_ERROR
(
ªt
)) {

247 
	`sù_£c_krb5_¥öt_gss_îr‹
("gss_ªÀa£_¸ed", 
ªt
, 
mö‹
);

248 
	`¥ötf
("ERROR: sù_£c_de°roy_£c_c⁄ãxt__krb5: faûedÅÿªÀa£ cªdítüls.Ñë=%d\n", ()
ªt
);

252 i‡(
˘x
->
˘x_krb5
) {

253 
ªt
 = 
	`gss_dñëe_£c_c⁄ãxt
(&
mö‹
, &(
˘x
->
˘x_krb5
), 
GSS_C_NO_BUFFER
);

254 i‡(
	`GSS_ERROR
(
ªt
)) {

255 
	`sù_£c_krb5_¥öt_gss_îr‹
("gss_dñëe_£c_c⁄ãxt", 
ªt
, 
mö‹
);

256 
	`¥ötf
("ERROR: sù_£c_de°roy_£c_c⁄ãxt__krb5: faûedÅÿdñëê£curôy c⁄ãxt.Ñë=%d\n", ()
ªt
);

260 
	`g_‰ì
(
˘x
);

261 
	}
}

263 
SùSecC⁄ãxt


264 
	$sù_£c_¸óã_c⁄ãxt__krb5
(
SIPE_UNUSED_PARAMETER
 
guöt
 
ty≥
)

266 
c⁄ãxt_krb5
 
c⁄ãxt
 = 
	`g_mÆloc0
((
_c⁄ãxt_krb5
));

267 i‡(!
c⁄ãxt
Ë(
NULL
);

269 
c⁄ãxt
->
comm⁄
.
acquúe_¸ed_func
 = 
sù_£c_acquúe_¸ed__krb5
;

270 
c⁄ãxt
->
comm⁄
.
öô_c⁄ãxt_func
 = 
sù_£c_öô_£c_c⁄ãxt__krb5
;

271 
c⁄ãxt
->
comm⁄
.
de°roy_c⁄ãxt_func
 = 
sù_£c_de°roy_£c_c⁄ãxt__krb5
;

272 
c⁄ãxt
->
comm⁄
.
make_sig«tuª_func
 = 
sù_£c_make_sig«tuª__krb5
;

273 
c⁄ãxt
->
comm⁄
.
vîify_sig«tuª_func
 = 
sù_£c_vîify_sig«tuª__krb5
;

275 ((
SùSecC⁄ãxt
Ë
c⁄ãxt
);

276 
	}
}

280 
	$sù_£c_krb5_¥öt_gss_îr‹0
(*
func
,

281 
OM_uöt32
 
°©us
,

282 
ty≥
)

284 
OM_uöt32
 
ªt
;

285 
OM_uöt32
 
mö‹
;

286 
OM_uöt32
 
mesßge_c⁄ãxt
 = 0;

287 
gss_buf„r_desc
 
°©us_°rög
;

290 
ªt
 = 
	`gss_di•œy_°©us
(&
mö‹
,

291 
°©us
,

292 
ty≥
,

293 
GSS_C_NO_OID
,

294 &
mesßge_c⁄ãxt
,

295 &
°©us_°rög
);

297 
	`¥ötf
("GSS-APIÉº‹ i¿%†(%s): %s\n", 
func
, (
ty≥
 =
GSS_C_GSS_CODE
 ? "GSS" : "Mech"), (*)
°©us_°rög
.
vÆue
);

298 
	`gss_ªÀa£_buf„r
(&
mö‹
, &
°©us_°rög
);

299 } 
mesßge_c⁄ãxt
 != 0);

300 
	}
}

305 
	$sù_£c_krb5_¥öt_gss_îr‹
(*
func
, 
OM_uöt32
 
ªt
, OM_uöt32 
mö‹
)

307 
	`sù_£c_krb5_¥öt_gss_îr‹0
(
func
, 
ªt
, 
GSS_C_GSS_CODE
);

308 
	`sù_£c_krb5_¥öt_gss_îr‹0
(
func
, 
mö‹
, 
GSS_C_MECH_CODE
);

309 
	}
}

315 
sù_£c_krb5_¥öt_îr‹
(c⁄° *
func
,

316 
krb5_c⁄ãxt
 
c⁄ãxt
,

317 
krb5_îr‹_code
 
ªt
);

330 
	$sù_£c_krb5_obèö_tgt
(
SIPE_UNUSED_PARAMETER
 c⁄° *
ªÆm_ö
,

331 c⁄° *
u£∫ame_ö
,

332 c⁄° *
∑ssw‹d
)

334 
krb5_c⁄ãxt
 
c⁄ãxt
;

335 
krb5_¥öcùÆ
 
¥öcùÆ
 = 
NULL
;

336 
krb5_¸eds
 
¸edítüls
;

337 
krb5_cˇche
 
ccdef
;

338 
krb5_îr‹_code
 
ªt
;

339 *
ªÆm
;

340 *
u£∫ame
;

341 
gch¨
 **
domaö_u£r
;

342 
gch¨
 **
u£r_ªÆm
;

344 
	`¥ötf
("sip_sec_krb5_obtain_tgt started\n");

346 
	`mem£t
(&
¸edítüls
, 0, (
krb5_¸eds
));

351 
domaö_u£r
 = 
	`g_°r•lô
(
u£∫ame_ö
, "\\", 2);

352 i‡(
domaö_u£r
 && domain_user[1]) {

353 
ªÆm
 = 
	`g_ascii_°rup
(
domaö_u£r
[0], -1);

354 
u£∫ame
 = 
	`g_°rdup
(
domaö_u£r
[1]);

356 
ªÆm
 = 
	`g_°rdup
("");

357 
u£∫ame
 = 
	`g_°rdup
(
u£∫ame_ö
);

359 
	`g_°r‰ìv
(
domaö_u£r
);

361 
u£r_ªÆm
 = 
	`g_°r•lô
(
u£∫ame
, "@", 2);

362 i‡(
u£r_ªÆm
 && user_realm[1]) {

363 
	`g_‰ì
(
u£∫ame
);

364 
	`g_‰ì
(
ªÆm
);

365 
u£∫ame
 = 
	`g_°rdup
(
u£r_ªÆm
[0]);

366 
ªÆm
 = 
	`g_ascii_°rup
(
u£r_ªÆm
[1], -1);

368 
	`g_°r‰ìv
(
u£r_ªÆm
);

371 i‡((
ªt
 = 
	`krb5_öô_c⁄ãxt
(&
c⁄ãxt
))) {

372 
	`sù_£c_krb5_¥öt_îr‹
("krb5_öô_c⁄ãxt", 
c⁄ãxt
, 
ªt
);

375 i‡(!
ªt
 && (ªà
	`krb5_buûd_¥öcùÆ
(
c⁄ãxt
, &
¥öcùÆ
, 
	`°æí
(
ªÆm
),Ñólm, 
u£∫ame
, 
NULL
))) {

376 
	`sù_£c_krb5_¥öt_îr‹
("krb5_buûd_¥öcùÆ", 
c⁄ãxt
, 
ªt
);

378 
	`g_‰ì
(
u£∫ame
);

379 
	`g_‰ì
(
ªÆm
);

381 i‡(!
ªt
 && (ªà
	`krb5_gë_öô_¸eds_∑ssw‹d
(
c⁄ãxt
, &
¸edítüls
, 
¥öcùÆ
, (*)
∑ssw‹d
, 
NULL
, NULL, 0, NULL, NULL))) {

382 
	`sù_£c_krb5_¥öt_îr‹
("krb5_gë_öô_¸eds_∑ssw‹d", 
c⁄ãxt
, 
ªt
);

385 i‡(!
ªt
) {

386 
	`¥ötf
("sip_sec_krb5_obtain_tgt:Çew TGT obtained.\n");

391 i‡(!
ªt
 && (ªà
	`krb5_cc_deÁu…
(
c⁄ãxt
, &
ccdef
))) {

392 
	`sù_£c_krb5_¥öt_îr‹
("krb5_cc_deÁu…", 
c⁄ãxt
, 
ªt
);

395 i‡(!
ªt
 && (ªà
	`krb5_cc_öôülize
(
c⁄ãxt
, 
ccdef
, 
¸edítüls
.
˛õ¡
))) {

396 
	`sù_£c_krb5_¥öt_îr‹
("krb5_cc_öôülize", 
c⁄ãxt
, 
ªt
);

399 i‡(!
ªt
 && (ªà
	`krb5_cc_°‹e_¸ed
(
c⁄ãxt
, 
ccdef
, &
¸edítüls
))) {

400 
	`sù_£c_krb5_¥öt_îr‹
("krb5_cc_°‹e_¸ed", 
c⁄ãxt
, 
ªt
);

403 i‡(!
ªt
) {

404 
	`¥ötf
("sip_sec_krb5_obtain_tgt:Çew TGT stored in default credentials cache.\n");

408 i‡(
¥öcùÆ
)

409 
	`krb5_‰ì_¥öcùÆ
(
c⁄ãxt
, 
¥öcùÆ
);

411 i‡(
c⁄ãxt
)

412 
	`krb5_‰ì_c⁄ãxt
(
c⁄ãxt
);

413 
	}
}

415 #i‡
deföed
(
HAVE_KRB5_GET_ERROR_MESSAGE
)

417 
	$sù_£c_krb5_¥öt_îr‹
(c⁄° *
func
,

418 
krb5_c⁄ãxt
 
c⁄ãxt
,

419 
krb5_îr‹_code
 
ªt
)

421 c⁄° *
îr‹_mesßge
 = 
	`krb5_gë_îr‹_mesßge
(
c⁄ãxt
, 
ªt
);

422 
	`¥ötf
("Kîbîo†5 ERROR i¿%s: %s\n", 
func
, 
îr‹_mesßge
);

423 
	`krb5_‰ì_îr‹_mesßge
(
c⁄ãxt
, 
îr‹_mesßge
);

424 
	}
}

427 
	$sù_£c_krb5_¥öt_îr‹
(c⁄° *
func
,

428 
SIPE_UNUSED_PARAMETER
 
krb5_c⁄ãxt
 
c⁄ãxt
,

429 
SIPE_UNUSED_PARAMETER
 
krb5_îr‹_code
 
ªt
)

431 
	`¥ötf
("Kîbîo†5 ERROR i¿%s: %s\n", 
func
, "unknownÉrror");

432 
	}
}

	@src/core/sip-sec-krb5.h

25 
SùSecC⁄ãxt


26 
sù_£c_¸óã_c⁄ãxt__krb5
(
guöt
 
ty≥
);

	@src/core/sip-sec-mech.h

30 
	#SIP_SEC_E_OK
 0

	)

31 
	#SIP_SEC_E_INTERNAL_ERROR
 (-2146893052)

	)

32 
	#SIP_SEC_I_CONTINUE_NEEDED
 590610

	)

34 
	tsù_uöt32
;

37 
gsize
 
	mÀngth
;

38 
guöt8
 *
	mvÆue
;

39 } 
	tSùSecBuf„r
;

41 
	gSùSecC⁄ãxt


42 (*
	tsù_£c_¸óã_c⁄ãxt_func
)(
	tguöt
 
	tty≥
);

44 
	gsù_uöt32


45 (*
	tsù_£c_acquúe_¸ed_func
)(
	tSùSecC⁄ãxt
 
	tc⁄ãxt
,

46 c⁄° *
	tdomaö
,

47 c⁄° *
	tu£∫ame
,

48 c⁄° *
	t∑ssw‹d
);

50 
	gsù_uöt32


51 (*
	tsù_£c_öô_c⁄ãxt_func
)(
	tSùSecC⁄ãxt
 
	tc⁄ãxt
,

52 
	tSùSecBuf„r
 
	tö_buff
,

53 
	tSùSecBuf„r
 *
	tout_buff
,

54 c⁄° *
	t£rvi˚_«me
);

57 (*
	tsù_£c_de°roy_c⁄ãxt_func
)(
	tSùSecC⁄ãxt
 
	tc⁄ãxt
);

59 
	gsù_uöt32


60 (*
	tsù_£c_make_sig«tuª_func
)(
	tSùSecC⁄ãxt
 
	tc⁄ãxt
,

61 c⁄° *
	tmesßge
,

62 
	tSùSecBuf„r
 *
	tsig«tuª
);

64 
	gsù_uöt32


65 (*
	tsù_£c_vîify_sig«tuª_func
)(
	tSùSecC⁄ãxt
 
	tc⁄ãxt
,

66 c⁄° *
	tmesßge
,

67 
	tSùSecBuf„r
 
	tsig«tuª
);

69 
	ssù_£c_c⁄ãxt
 {

70 
sù_£c_acquúe_¸ed_func
 
	macquúe_¸ed_func
;

71 
sù_£c_öô_c⁄ãxt_func
 
	möô_c⁄ãxt_func
;

72 
sù_£c_de°roy_c⁄ãxt_func
 
	mde°roy_c⁄ãxt_func
;

73 
sù_£c_make_sig«tuª_func
 
	mmake_sig«tuª_func
;

74 
sù_£c_vîify_sig«tuª_func
 
	mvîify_sig«tuª_func
;

76 
	msso
;

78 
	mexpúes
;

80 
	mis_c⁄√˘i⁄_ba£d
;

	@src/core/sip-sec-ntlm-tests.c

31 #ifde‡
HAVE_CONFIG_H


32 
	~"c⁄fig.h
"

35 
	~<°dlib.h
>

37 
	~<glib.h
>

38 
	~<glib/g¥ötf.h
>

40 #ifde‡
HAVE_NSS


41 
	~"nss.h
"

44 
	~"sùmsg.h
"

45 
	~"sùe-sign.h
"

46 
	#_SIPE_COMPILING_TESTS


	)

47 
	~"sù-£c-¡lm.c
"

49 
	~"uuid.h
"

51 
	gsuc˚s£s
 = 0;

52 
	gÁûuªs
 = 0;

54 
gboﬁón
 
sù_£c_¡lm_ã°s
();

56 
	$as£π_equÆ
(c⁄° * 
ex≥˘ed
, c⁄° 
guch¨
 * 
gŸ
, 
Àn
, 
gboﬁón
 
°rögify
)

58 c⁄° 
gch¨
 * 
ªs
 = (gch¨ *Ë
gŸ
;

59 
gch¨
 
to_°r
[
Àn
*2];

61 i‡(
°rögify
) {

62 
i
, 
j
;

63 
i
 = 0, 
j
 = 0; i < 
Àn
; i++, j+=2) {

64 
	`g_•rötf
(&
to_°r
[
j
], "%02X", (
gŸ
[
i
]&0xff));

66 
Àn
 *= 2;

67 
ªs
 = 
to_°r
;

70 
	`¥ötf
("ex≥˘ed: %s\n", 
ex≥˘ed
);

71 
	`¥ötf
("ª˚ived: %s\n", 
ªs
);

73 i‡(
	`g_ascii_°∫ˇ£cmp
(
ex≥˘ed
, 
ªs
, 
Àn
) == 0) {

74 
suc˚s£s
++;

75 
	`¥ötf
("PASSED\n");

77 
Áûuªs
++;

78 
	`¥ötf
("FAILED\n");

80 
	}
}

83 
	$as£π_equÆ_guöt32
(
guöt32
 
ex≥˘ed
, guöt32 
gŸ
)

85 
	`¥ötf
("ex≥˘ed: %08X\n", 
ex≥˘ed
);

86 
	`¥ötf
("ª˚ived: %08X\n", 
gŸ
);

88 i‡(
ex≥˘ed
 =
gŸ
) {

89 
suc˚s£s
++;

90 
	`¥ötf
("PASSED\n");

92 
Áûuªs
++;

93 
	`¥ötf
("FAILED\n");

95 
	}
}

97 
gboﬁón
 
	$sù_£c_¡lm_ã°s
()

99 c⁄° *
∑ssw‹d
;

100 c⁄° *
u£r
;

101 c⁄° *
domaö
;

102 c⁄° 
guch¨
 *
˛õ¡_chÆÀnge
;

103 c⁄° 
guch¨
 *
n⁄˚
;

104 c⁄° 
guch¨
 *
exp‹ãd_£ssi⁄_key
;

105 c⁄° 
guch¨
 *
ãxt
;

106 
guch¨
 
md4
 [16];

107 
guch¨
 
md5
 [16];

108 
guch¨
 
hmac_md5
 [16];

109 
guöt32
 
Êags
;

110 
guch¨
 
ª•⁄£_key_lm
 [16];

111 
guch¨
 
ª•⁄£_key_¡
 [16];

112 
guch¨
 
¡_chÆÀnge_ª•⁄£
 [24];

113 
guch¨
 
lm_chÆÀnge_ª•⁄£
 [24];

114 
guch¨
 
£ssi⁄_ba£_key
 [16];

115 
guch¨
 
key_exch™ge_key
 [16];

116 
guch¨
 
í¸y±ed_øndom_£ssi⁄_key
 [16];

117 
guöt32
 
¸c
;

118 
guch¨
 
˛õ¡_£Æ_key
 [16];

119 
guch¨
 
˛õ¡_sign_key
 [16];

120 
guch¨
 
£rvî_sign_key
 [16];

121 
guch¨
 
£rvî_£Æ_key
 [16];

122 
guch¨
 
mac
 [16];

123 
guch¨
 
ãxt_íc
 [18 + 12];

124 
sùmsg
 *
msg
;

125 
sùmsg_bªakdown
 
msgbd
;

126 
gch¨
 *
msg_°r
;

127 
gch¨
 *
sig
;

128 c⁄° *
∑ssw‹d2
;

129 c⁄° *
u£r2
;

130 c⁄° *
domaö2
;

131 c⁄° *
ho°2
;

132 c⁄° *
ty≥2_hex
;

133 c⁄° *
ty≥3_hex
;

134 c⁄° *
ªque°
;

135 c⁄° *
ª•⁄£
;

136 c⁄° 
gch¨
 *
ªque°_sig
;

137 c⁄° 
gch¨
 *
ª•⁄£_sig
;

139 
	`¥ötf
 ("Starting Tests\n");

142 #ifde‡
HAVE_NSS


143 i‡(!
	`NSS_IsInôülized
()) {

144 
	`NSS_NoDB_Inô
(".");

145 
	`SIPE_DEBUG_INFO_NOFORMAT
("NSS initialised");

149 
	`sù_£c_öô__¡lm
();

153 
∑ssw‹d
 = "Password";

154 
u£r
 = "User";

155 
domaö
 = "Domain";

156 
˛õ¡_chÆÀnge
 = (
guch¨
 *)"\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa";

158 
n⁄˚
 = (
guch¨
 *)"\x01\x23\x45\x67\x89\xab\xcd\xef";

160 
exp‹ãd_£ssi⁄_key
 = (
guch¨
 *)"\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55";

161 
ãxt
 = (
guch¨
 *)"\x50\x00\x6c\x00\x61\x00\x69\x00\x6e\x00\x74\x00\x65\x00\x78\x00\x74\x00";

165 
	`¥ötf
 ("\nTesting MD4()\n");

166 
	`MD4
 ((c⁄° *)"mesßgêdige°", 14, 
md4
);

167 
	`as£π_equÆ
("D9130A8164549FE818874806E1C7014B", 
md4
, 16, 
TRUE
);

169 
	`¥ötf
 ("\nTesting MD5()\n");

170 
	`MD5
 ((c⁄° *)"mesßgêdige°", 14, 
md5
);

171 
	`as£π_equÆ
("F96B697D7CB7938D525A2F31AAF161D0", 
md5
, 16, 
TRUE
);

173 
	`¥ötf
 ("\nTesting HMAC_MD5()\n");

174 
	`HMAC_MD5
 ((c⁄° *)"\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b", 16, (c⁄° *)"HòThîe", 8, 
hmac_md5
);

175 
	`as£π_equÆ
("9294727A3638BB1C13F48EF8158BFC9D", 
hmac_md5
, 16, 
TRUE
);

179 
u£_¡lm_v2
 = 
FALSE
;

181 
Êags
 = 0

182 | 
NTLMSSP_NEGOTIATE_KEY_EXCH


183 | 
NTLMSSP_NEGOTIATE_56


184 | 
NTLMSSP_NEGOTIATE_128


185 | 
NTLMSSP_NEGOTIATE_VERSION


186 | 
NTLMSSP_TARGET_TYPE_SERVER


187 | 
NTLMSSP_NEGOTIATE_ALWAYS_SIGN


188 | 
NTLMSSP_NEGOTIATE_NTLM


189 | 
NTLMSSP_NEGOTIATE_SEAL


190 | 
NTLMSSP_NEGOTIATE_SIGN


191 | 
NTLMSSP_NEGOTIATE_OEM


192 | 
NTLMSSP_NEGOTIATE_UNICODE
;

194 
	`¥ötf
 ("\n\nTesting Negotiation Flags\n");

195 
	`as£π_equÆ_guöt32
(0xE2028233, 
Êags
);

197 
	`¥ötf
 ("\n\nTesting LMOWFv1()\n");

198 
	`LMOWFv1
 (
∑ssw‹d
, 
u£r
, 
domaö
, 
ª•⁄£_key_lm
);

199 
	`as£π_equÆ
("E52CAC67419A9A224A3B108F3FA6CB6D", 
ª•⁄£_key_lm
, 16, 
TRUE
);

201 
	`¥ötf
 ("\n\nTesting NTOWFv1()\n");

202 
	`NTOWFv1
 (
∑ssw‹d
, 
u£r
, 
domaö
, 
ª•⁄£_key_¡
);

203 
	`as£π_equÆ
("A4F49C406510BDCAB6824EE7C30FD852", 
ª•⁄£_key_¡
, 16, 
TRUE
);

205 
	`¥ötf
 ("\n\nTesting LM Response Generation\n");

206 
	`¥ötf
 ("Testing NT Response Generation\n");

207 
	`¥ötf
 ("Testing Session Base Key\n");

209 
	`compuã_ª•⁄£
(
Êags
,

210 
ª•⁄£_key_¡
,

211 
ª•⁄£_key_lm
,

212 
n⁄˚
,

213 
˛õ¡_chÆÀnge
,

215 
NULL
,

217 
lm_chÆÀnge_ª•⁄£
,

218 
¡_chÆÀnge_ª•⁄£
,

219 
£ssi⁄_ba£_key
);

221 
	`as£π_equÆ
("98DEF7B87F88AA5DAFE2DF779688A172DEF11C7D5CCDEF13", 
lm_chÆÀnge_ª•⁄£
, 24, 
TRUE
);

222 
	`as£π_equÆ
("67C43011F30298A2AD35ECE64F16331C44BDBED927841F94", 
¡_chÆÀnge_ª•⁄£
, 24, 
TRUE
);

223 
	`as£π_equÆ
("D87262B0CDE4B1CB7499BECCCDF10784", 
£ssi⁄_ba£_key
, 16, 
TRUE
);

225 
	`¥ötf
 ("\n\nTesting Key Exchange Key\n");

226 
	`KXKEY
(
Êags
, 
£ssi⁄_ba£_key
, 
lm_chÆÀnge_ª•⁄£
, 
n⁄˚
, 
key_exch™ge_key
);

227 
	`as£π_equÆ
("D87262B0CDE4B1CB7499BECCCDF10784", 
key_exch™ge_key
, 16, 
TRUE
);

229 
	`¥ötf
 ("\n\nTesting Encrypted Session Key Generation\n");

230 
	`RC4K
 (
key_exch™ge_key
, 16, 
exp‹ãd_£ssi⁄_key
, 16, 
í¸y±ed_øndom_£ssi⁄_key
);

231 
	`as£π_equÆ
("518822B1B3F350C8958682ECBB3E3CB7", 
í¸y±ed_øndom_£ssi⁄_key
, 16, 
TRUE
);

233 
	`¥ötf
 ("\n\nTesting CRC32\n");

234 
¸c
 = 
	`CRC32
((*)
ãxt
, 18);

235 
	`as£π_equÆ_guöt32
(0x93AA847D, 
¸c
);

237 
	`¥ötf
 ("\n\nTesting Encryption\n");

240 
guch¨
 
buff
 [18 + 12];

241 
guöt32
 
to_íc
 [3];

243 
	`mem˝y
(
buff
, 
ãxt
, 18);

244 
to_íc
[0] = 
	`GUINT32_TO_LE
(0);

245 
to_íc
[1] = 
	`GUINT32_TO_LE
(
¸c
);

246 
to_íc
[2] = 
	`GUINT32_TO_LE
(0);

247 
	`mem˝y
(
buff
+18, (
gch¨
 *)
to_íc
, 12);

248 
	`RC4K
 (
exp‹ãd_£ssi⁄_key
, 16, 
buff
, 18 + 12, 
ãxt_íc
);

251 
	`as£π_equÆ
("56FE04D861F9319AF0D7238A2E3B4D457FB8" "45C844E5" "09DCD1DF" "2E459D36", 
ãxt_íc
, 18 + 12, 
TRUE
);

254 
	`¥ötf
 ("\n\nTesting MAC\n");

258 
guöt32
 
íc
 [3];

259 
guöt32
 
mac2
 [4];

261 
	`mem˝y
((
gch¨
 *)
íc
, 
ãxt_íc
+18, 12);

262 
mac2
 [0] = 
	`GUINT32_TO_LE
(1);

263 
mac2
 [1] = 
íc
 [0];

264 
mac2
 [2] = 
íc
 [1];

265 
mac2
 [3] = 
íc
 [2] ^ (
	`GUINT32_TO_LE
(0));

266 
	`as£π_equÆ
("0100000045C844E509DCD1DF2E459D36", (
guch¨
*)
mac2
, 16, 
TRUE
);

271 
u£_¡lm_v2
 = 
FALSE
;

272 
Êags
 = 0

273 | 
NTLMSSP_NEGOTIATE_56


274 | 
NTLMSSP_NEGOTIATE_VERSION


275 | 
NTLMSSP_NEGOTIATE_EXTENDED_SESSIONSECURITY


276 | 
NTLMSSP_TARGET_TYPE_SERVER


277 | 
NTLMSSP_NEGOTIATE_ALWAYS_SIGN


278 | 
NTLMSSP_NEGOTIATE_NTLM


279 | 
NTLMSSP_NEGOTIATE_SEAL


280 | 
NTLMSSP_NEGOTIATE_SIGN


281 | 
NTLMSSP_NEGOTIATE_OEM


282 | 
NTLMSSP_NEGOTIATE_UNICODE
;

284 
	`¥ötf
 ("\n\n(Extended session security) Testing Negotiation Flags\n");

285 
	`as£π_equÆ_guöt32
(0x820A8233, 
Êags
);

289 
	`¥ötf
 ("\n\n(Extended session security) Testing LM Response\n");

290 
	`¥ötf
 ("(Extended session security) Testing NT Response\n");

291 
	`¥ötf
 ("(Extended session security) Testing Session Base Key\n");

292 
	`compuã_ª•⁄£
(
Êags
,

293 
ª•⁄£_key_¡
,

294 
ª•⁄£_key_lm
,

295 
n⁄˚
,

296 
˛õ¡_chÆÀnge
,

298 
NULL
,

300 
lm_chÆÀnge_ª•⁄£
,

301 
¡_chÆÀnge_ª•⁄£
,

302 
£ssi⁄_ba£_key
);

304 
	`as£π_equÆ
("AAAAAAAAAAAAAAAA00000000000000000000000000000000", 
lm_chÆÀnge_ª•⁄£
, 24, 
TRUE
);

305 
	`as£π_equÆ
("7537F803AE367128CA458204BDE7CAF81E97ED2683267232", 
¡_chÆÀnge_ª•⁄£
, 24, 
TRUE
);

306 
	`as£π_equÆ
("D87262B0CDE4B1CB7499BECCCDF10784", 
£ssi⁄_ba£_key
, 16, 
TRUE
);

308 
	`¥ötf
 ("\n\n(Extended session security) Testing Key Exchange Key\n");

309 
	`KXKEY
(
Êags
, 
£ssi⁄_ba£_key
, 
lm_chÆÀnge_ª•⁄£
, 
n⁄˚
, 
key_exch™ge_key
);

310 
	`as£π_equÆ
("EB93429A8BD952F8B89C55B87F475EDC", 
key_exch™ge_key
, 16, 
TRUE
);

312 
	`¥ötf
 ("\n\n(Extended session security) SIGNKEY\n");

313 
	`SIGNKEY
 (
key_exch™ge_key
, 
TRUE
, 
˛õ¡_sign_key
);

314 
	`as£π_equÆ
("60E799BE5C72FC92922AE8EBE961FB8D", 
˛õ¡_sign_key
, 16, 
TRUE
);

316 
	`¥ötf
 ("\n\n(Extended session security) SEALKEY\n");

317 
	`SEALKEY
 (
Êags
, 
key_exch™ge_key
, 
TRUE
, 
˛õ¡_£Æ_key
);

318 
	`as£π_equÆ
("04DD7F014D8504D265A25CC86A3A7C06", 
˛õ¡_£Æ_key
, 16, 
TRUE
);

320 
	`¥ötf
 ("\n\n(Extended session security) Testing Encryption\n");

321 
	`RC4K
 (
˛õ¡_£Æ_key
, 16, 
ãxt
, 18, 
ãxt_íc
);

322 
	`as£π_equÆ
("A02372F6530273F3AA1EB90190CE5200C99D", 
ãxt_íc
, 18, 
TRUE
);

324 
	`¥ötf
 ("\n\n(Extended session security) Testing MAC\n");

325 
	`MAC
 (
Êags
, (
gch¨
*)
ãxt
,18, 
˛õ¡_sign_key
,16, 
˛õ¡_£Æ_key
,16, 0, 0, 
mac
);

326 
	`as£π_equÆ
("01000000FF2AEB52F681793A00000000", 
mac
, 16, 
TRUE
);

330 
u£_¡lm_v2
 = 
TRUE
;

331 
Êags
 = 0

332 | 
NTLMSSP_NEGOTIATE_KEY_EXCH


333 | 
NTLMSSP_NEGOTIATE_56


334 | 
NTLMSSP_NEGOTIATE_128


335 | 
NTLMSSP_NEGOTIATE_VERSION


336 | 
NTLMSSP_NEGOTIATE_TARGET_INFO


337 | 
NTLMSSP_NEGOTIATE_EXTENDED_SESSIONSECURITY


338 | 
NTLMSSP_TARGET_TYPE_SERVER


339 | 
NTLMSSP_NEGOTIATE_ALWAYS_SIGN


340 | 
NTLMSSP_NEGOTIATE_NTLM


341 | 
NTLMSSP_NEGOTIATE_SEAL


342 | 
NTLMSSP_NEGOTIATE_SIGN


343 | 
NTLMSSP_NEGOTIATE_OEM


344 | 
NTLMSSP_NEGOTIATE_UNICODE
;

346 
	`¥ötf
 ("\n\nTesting (NTLMv2) Negotiation Flags\n");

347 
	`as£π_equÆ_guöt32
(0xE28A8233, 
Êags
);

349 
	`¥ötf
 ("\n\nTesting NTOWFv2()\n");

350 
	`NTOWFv2
 (
∑ssw‹d
, 
u£r
, 
domaö
, 
ª•⁄£_key_¡
);

351 
	`NTOWFv2
 (
∑ssw‹d
, 
u£r
, 
domaö
, 
ª•⁄£_key_lm
);

352 
	`as£π_equÆ
("0C868A403BFD7A93A3001EF22EF02E3F", 
ª•⁄£_key_¡
, 16, 
TRUE
);

355 
	`¥ötf
 ("\n\nTesting (NTLMv2) LM Response Generation\n");

356 
	`¥ötf
 ("Testing (NTLMv2) NT Response Generationánd Session Base Key\n");

397 c⁄° 
guöt64
 
time_vÆ
 = 0;

398 c⁄° 
guöt8
 
èrgë_öfo
 [] = {

405 c⁄° 
èrgë_öfo_Àn
 = 32+4;

406 
¡lms•_¡_ª•_Àn
 = (16 + (32+
èrgë_öfo_Àn
));

407 
guch¨
 
¡_chÆÀnge_ª•⁄£_v2
 [
¡lms•_¡_ª•_Àn
];

409 
	`compuã_ª•⁄£
(
Êags
,

410 
ª•⁄£_key_¡
,

411 
ª•⁄£_key_lm
,

412 
n⁄˚
,

413 
˛õ¡_chÆÀnge
,

414 
time_vÆ
,

415 
èrgë_öfo
,

416 
èrgë_öfo_Àn
,

417 
lm_chÆÀnge_ª•⁄£
,

418 
¡_chÆÀnge_ª•⁄£_v2
,

419 
£ssi⁄_ba£_key
);

421 
	`as£π_equÆ
("86C35097AC9CEC102554764A57CCCC19AAAAAAAAAAAAAAAA", 
lm_chÆÀnge_ª•⁄£
, 24, 
TRUE
);

422 
	`as£π_equÆ
("68CD0AB851E51C96AABC927BEBEF6A1C", 
¡_chÆÀnge_ª•⁄£_v2
, 16, 
TRUE
);

424 
	`as£π_equÆ
("68CD0AB851E51C96AABC927BEBEF6A1C01010000000000000000000000000000AAAAAAAAAAAAAAAA0000000002000C0044006F006D00610069006E0001000C005300650072007600650072000000000000000000", 
¡_chÆÀnge_ª•⁄£_v2
, 
¡lms•_¡_ª•_Àn
, 
TRUE
);

425 
	`as£π_equÆ
("8DE40CCADBC14A82F15CB0AD0DE95CA3", 
£ssi⁄_ba£_key
, 16, 
TRUE
);

428 
	`¥ötf
 ("\n\nTesting (NTLMv2) Encrypted Session Key\n");

430 
	`KXKEY
(
Êags
, 
£ssi⁄_ba£_key
, 
lm_chÆÀnge_ª•⁄£
, 
n⁄˚
, 
key_exch™ge_key
);

432 
	`RC4K
 (
key_exch™ge_key
, 16, 
exp‹ãd_£ssi⁄_key
, 16, 
í¸y±ed_øndom_£ssi⁄_key
);

433 
	`as£π_equÆ
("C5DAD2544FC9799094CE1CE90BC9D03E", 
í¸y±ed_øndom_£ssi⁄_key
, 16, 
TRUE
);

435 
	`¥ötf
 ("\n\nTesting (NTLMv2) SIGNKEY\n");

436 
	`SIGNKEY
 (
exp‹ãd_£ssi⁄_key
, 
TRUE
, 
˛õ¡_sign_key
);

437 
	`as£π_equÆ
("4788DC861B4782F35D43FD98FE1A2D39", 
˛õ¡_sign_key
, 16, 
TRUE
);

439 
	`¥ötf
 ("\n\nTesting (NTLMv2) SEALKEY\n");

440 
	`SEALKEY
 (
Êags
, 
exp‹ãd_£ssi⁄_key
, 
TRUE
, 
˛õ¡_£Æ_key
);

441 
	`as£π_equÆ
("59F600973CC4960A25480A7C196E4C58", 
˛õ¡_£Æ_key
, 16, 
TRUE
);

443 
	`¥ötf
 ("\n\nTesting (NTLMv2) Encryption\n");

444 
	`RC4K
 (
˛õ¡_£Æ_key
, 16, 
ãxt
, 18, 
ãxt_íc
);

445 
	`as£π_equÆ
("54E50165BF1936DC996020C1811B0F06FB5F", 
ãxt_íc
, 18, 
TRUE
);

454 
	`¥ötf
 ("\n\nTesting (NTLMv2) MAC (without RC4,ás we don't keep its handle yet)\n");

455 
	`MAC
 (
Êags
 & ~
NTLMSSP_NEGOTIATE_KEY_EXCH
, (
gch¨
*)
ãxt
,18, 
˛õ¡_sign_key
,16, 
˛õ¡_£Æ_key
,16, 0, 0, 
mac
);

456 
	`as£π_equÆ
("0100000070352851F256430900000000", 
mac
, 16, 
TRUE
);

465 c⁄° 
gch¨
 *
ãxt_j
 = "jCIFS";

466 
	`¥ötf
 ("\n\n(davenport) Testing Signature Algorithm\n");

468 
guch¨
 
sk
 [] = {0x01, 0x02, 0x03, 0x04, 0x05, 0xe5, 0x38, 0xb0};

469 
	`MAC
 (
NEGOTIATE_FLAGS_CONNLESS
 & ~
NTLMSSP_NEGOTIATE_EXTENDED_SESSIONSECURITY
, 
ãxt_j
, 
	`°æí
—ext_j), 
sk
, 8, sk,8, 0x00090178, 0, 
mac
);

470 
	`as£π_equÆ
("0100000078010900397420FE0E5A0F89", 
mac
, 16, 
TRUE
);

474 
	`¥ötf
 ("\n\n(davenport) SIGNKEY\n");

476 c⁄° 
guch¨
 
ma°î_key
 [] = {0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x00};

477 
	`SIGNKEY
 (
ma°î_key
, 
TRUE
, 
˛õ¡_sign_key
);

478 
	`as£π_equÆ
("F7F97A82EC390F9C903DAC4F6ACEB132", 
˛õ¡_sign_key
, 16, 
TRUE
);

480 
	`¥ötf
 ("\n\n(davenport) Testing MAC -Ço Key Exchange flag\n");

481 
	`MAC
 (
Êags
 & ~
NTLMSSP_NEGOTIATE_KEY_EXCH
, 
ãxt_j
, 
	`°æí
—ext_j), 
˛õ¡_sign_key
, 16, clõ¡_sign_key,16, 0, 0, 
mac
);

482 
	`as£π_equÆ
("010000000A003602317A759A00000000", 
mac
, 16, 
TRUE
);

489 
	`¥ötf
 ("\n\nTesting MS-SIPE Example Message Signing\n");

491 * 
msg2
;

492 * 
msg1
 = "<NTLM><0878F41B><1><SIP Communications Service><ocs1.ocs.provo.novell.com><8592g5DCBa1694i5887m0D0Bt2247b3F38xAE9Fx><3><REGISTER><sip:gabriel@ocs.provo.novell.com><2947328781><B816D65C2300A32CFA6D371F2AF537FD><900><200>";

493 
guch¨
 
exp‹ãd_£ssi⁄_key2
 [] = { 0x5F, 0x02, 0x91, 0x53, 0xBC, 0x02, 0x50, 0x58, 0x96, 0x95, 0x48, 0x61, 0x5E, 0x70, 0x99, 0xBA };

495 
	`MAC
 (
NEGOTIATE_FLAGS_CONNLESS
 & ~
NTLMSSP_NEGOTIATE_EXTENDED_SESSIONSECURITY
,

496 
msg1
, 
	`°æí
(msg1), 
exp‹ãd_£ssi⁄_key2
, 16,Éxp‹ãd_£ssi⁄_key2,16, 0, 100, 
mac
);

497 
	`as£π_equÆ
("0100000000000000BF2E52667DDF6DED", 
mac
, 16, 
TRUE
);

500 
	`¥ötf
 ("\n\nTesting MS-SIPE Example Message Parsing, Signing,ánd Verification\n(Authentication Protocol Version 2)\n");

501 
msg2
 = "SIP/2.0 200 OK\r\nms-keep-alive: UAS;Åcp=no; hop-hop=yes;Énd-end=no;Åimeout=300\r\nAuthentication-Info: NTLMÑspauth=\"0100000000000000BF2E52667DDF6DED\", srand=\"0878F41B\", snum=\"1\", opaque=\"4452DFB0\", qop=\"auth\",Åargetname=\"ocs1.ocs.provo.novell.com\",Ñealm=\"SIP Communications Service\"\r\nFrom: \"Gabriel Burt\"<sip:gabriel@ocs.provo.novell.com>;tag=2947328781;epid=1234567890\r\nTo: <sip:gabriel@ocs.provo.novell.com>;tag=B816D65C2300A32CFA6D371F2AF537FD\r\nCall-ID: 8592g5DCBa1694i5887m0D0Bt2247b3F38xAE9Fx\r\nCSeq: 3 REGISTER\r\nVia: SIP/2.0/TLS 164.99.194.49:10409;branch=z9hG4bKE0E37DBAF252C3255BAD;received=164.99.195.20;ms-received-port=10409;ms-received-cid=1E00\r\nContact: <sip:164.99.195.20:10409;transport=tls;ms-received-cid=1E00>;expires=900\r\nExpires: 900\r\nAllow-Events: vnd-microsoft-provisioning,vnd-microsoft-roaming-contacts,vnd-microsoft-roaming-ACL,presence,presence.wpending,vnd-microsoft-roaming-self,vnd-microsoft-provisioning-v2\r\nSupported:ádhoclist\r\nServer: RTC/3.0\r\nSupported: com.microsoft.msrtc.presence\r\nContent-Length: 0\r\n\r\n";

502 
msg
 = 
	`sùmsg_∑r£_msg
(
msg2
);

504 
msgbd
.
msg
 = msg;

505 
	`sùmsg_bªakdown_∑r£
(&
msgbd
, "SIP Communications Service", "ocs1.ocs.provo.novell.com");

506 
msg_°r
 = 
	`sùmsg_bªakdown_gë_°rög
(2, &
msgbd
);

507 
	`sù_£c_¡lm_sùe_sig«tuª_make
 (
NEGOTIATE_FLAGS_CONNLESS
 & ~
NTLMSSP_NEGOTIATE_EXTENDED_SESSIONSECURITY
,

508 
msg_°r
, 0, 
exp‹ãd_£ssi⁄_key2
,Éxp‹ãd_£ssi⁄_key2, 
mac
);

509 
	`sùmsg_bªakdown_‰ì
(&
msgbd
);

510 
	`as£π_equÆ
 ("0100000000000000BF2E52667DDF6DED", 
mac
, 16, 
TRUE
);

511 
sig
 = 
	`buff_to_hex_°r
(
mac
, 16);

520 
∑ssw‹d2
 = "Pa$$word";

521 
u£r2
 = "User";

522 
domaö2
 = "COSMO";

523 
ho°2
 = "COSMO-OCS-R2";

528 
ty≥2_hex
 = "4E544C4D53535000020000000000000038000000F38298E2DD1BAAF4E7E218D1000000000000000096009600380000000502CE0E0000000F02000A0043004F0053004D004F000100180043004F0053004D004F002D004F00430053002D00520032000400160063006F0073006D006F002E006C006F00630061006C000300300063006F0073006D006F002D006F00630073002D00720032002E0063006F0073006D006F002E006C006F00630061006C000500160063006F0073006D006F002E006C006F00630061006C0000000000";

567 
ty≥3_hex


622 
ªque°
 =

640 
ªque°_sig
 = "<NTLM><13317733><1><SIP Communications Service><cosmo-ocs-r2.cosmo.local><4037df9284354df39065195bd57a4b14><3><REGISTER><sip:user@cosmo.local><3e49177a52><sip:user@cosmo.local><><><><>";

644 
ª•⁄£
 =

663 
ª•⁄£_sig
 = "<NTLM><9616454F><1><SIP Communications Service><cosmo-ocs-r2.cosmo.local><4037df9284354df39065195bd57a4b14><3><REGISTER><sip:user@cosmo.local><3e49177a52><sip:user@cosmo.local><5E61CCD925D17E043D9A74835A88F664><><><7200><200>";

667 
u£_¡lm_v2
 = 
TRUE
;

668 
Êags
 = 0

669 | 
NTLMSSP_NEGOTIATE_UNICODE


670 | 
NTLMSSP_REQUEST_TARGET


671 | 
NTLMSSP_NEGOTIATE_SIGN


672 | 
NTLMSSP_NEGOTIATE_DATAGRAM


673 | 
NTLMSSP_NEGOTIATE_NTLM


674 | 
NTLMSSP_NEGOTIATE_ALWAYS_SIGN


675 | 
NTLMSSP_NEGOTIATE_EXTENDED_SESSIONSECURITY


676 | 
NTLMSSP_NEGOTIATE_IDENTIFY


677 | 
NTLMSSP_NEGOTIATE_TARGET_INFO


678 | 
NTLMSSP_NEGOTIATE_VERSION


679 | 
NTLMSSP_NEGOTIATE_128


680 | 
NTLMSSP_NEGOTIATE_KEY_EXCH
;

683 
ã°_vîsi⁄
.
¥odu˘_maj‹_vîsi⁄
 = 5;

684 
ã°_vîsi⁄
.
¥odu˘_mö‹_vîsi⁄
 = 2;

685 
ã°_vîsi⁄
.
¥odu˘_buûd
 = 
	`GUINT16_FROM_LE
(3790);

686 
ã°_vîsi⁄
.
¡lm_ªvisi⁄_cuºít
 = 0x0F;

688 
	`NTOWFv2
 (
∑ssw‹d2
, 
u£r2
, 
domaö2
, 
ª•⁄£_key_¡
);

689 
	`NTOWFv2
 (
∑ssw‹d2
, 
u£r2
, 
domaö2
, 
ª•⁄£_key_lm
);

692 
¡lms•_¡_ª•_Àn
;

693 
èrgë_öfo2_Àn
;

694 
guöt8
 *
n⁄˚2
;

695 
guöt8
 *
èrgë_öfo2
;

696 
guöt8
 *
buff2
;

697 
	`hex_°r_to_buff
("59519A1727B9CA01", &
buff2
);

699 
ã°_time_vÆ
 = 
	`GUINT64_FROM_LE
(*((
guöt64
 *)
buff2
));

700 
	`g_‰ì
(
buff2
);

702 
èrgë_öfo2_Àn
 = 
	`hex_°r_to_buff
("02000A0043004F0053004D004F000100180043004F0053004D004F002D004F00430053002D00520032000400160063006F0073006D006F002E006C006F00630061006C000300300063006F0073006D006F002D006F00630073002D00720032002E0063006F0073006D006F002E006C006F00630061006C000500160063006F0073006D006F002E006C006F00630061006C0000000000", &
èrgë_öfo2
);

704 
	`hex_°r_to_buff
("DD1BAAF4E7E218D1", &
n⁄˚2
);

706 
	`hex_°r_to_buff
("D6AE875CB0FDAA41", &
buff2
);

708 
	`mem˝y
(
ã°_˛õ¡_chÆÀnge
, 
buff2
, 8);

709 
	`g_‰ì
(
buff2
);

711 
¡lms•_¡_ª•_Àn
 = (16 + (32+
èrgë_öfo2_Àn
));

713 
guch¨
 
¡_chÆÀnge_ª•⁄£_v2_2
 [
¡lms•_¡_ª•_Àn
];

715 
	`¥ötf
 ("\n\nTesting (NTLMv2 / OC 2007 R2) LM Response Generation\n");

716 
	`¥ötf
 ( "Testing (NTLMv2 / OC 2007 R2) NT Response Generation\n");

717 
	`compuã_ª•⁄£
(
Êags
,

718 
ª•⁄£_key_¡
,

719 
ª•⁄£_key_lm
,

720 
n⁄˚2
,

721 
ã°_˛õ¡_chÆÀnge
,

722 
ã°_time_vÆ
,

723 
èrgë_öfo2
,

724 
èrgë_öfo2_Àn
,

725 
lm_chÆÀnge_ª•⁄£
,

726 
¡_chÆÀnge_ª•⁄£_v2_2
,

727 
£ssi⁄_ba£_key
);

728 
	`g_‰ì
(
n⁄˚2
);

729 
	`g_‰ì
(
èrgë_öfo2
);

731 
	`as£π_equÆ
("A1E92EFE4E078BF7C5C0049ACC6166C2D6AE875CB0FDAA41", 
lm_chÆÀnge_ª•⁄£
, 24, 
TRUE
);

732 
	`as£π_equÆ
("8DC0C800AE76ECA606D2B9FBEBD04731", 
¡_chÆÀnge_ª•⁄£_v2_2
, 16, 
TRUE
);

734 
	`as£π_equÆ
("8DC0C800AE76ECA606D2B9FBEBD04731010100000000000059519A1727B9CA01D6AE875CB0FDAA410000000002000A0043004F0053004D004F000100180043004F0053004D004F002D004F00430053002D00520032000400160063006F0073006D006F002E006C006F00630061006C000300300063006F0073006D006F002D006F00630073002D00720032002E0063006F0073006D006F002E006C006F00630061006C000500160063006F0073006D006F002E006C006F00630061006C000000000000000000", 
¡_chÆÀnge_ª•⁄£_v2_2
, 
¡lms•_¡_ª•_Àn
, 
TRUE
);

737 
	`KXKEY
(
Êags
, 
£ssi⁄_ba£_key
, 
lm_chÆÀnge_ª•⁄£
, 
n⁄˚2
, 
key_exch™ge_key
);

743 
guöt8
 *
í¸y±ed_øndom_£ssi⁄_key2
;

744 
	`hex_°r_to_buff
("31CB739E1CA80A498591E8AE797115E4", &
í¸y±ed_øndom_£ssi⁄_key2
);

747 
	`RC4K
 (
key_exch™ge_key
, 16, 
í¸y±ed_øndom_£ssi⁄_key2
, 16, 
ã°_øndom_£ssi⁄_key
);

748 
	`g_‰ì
(
í¸y±ed_øndom_£ssi⁄_key2
);

751 
	`SIGNKEY
 (
ã°_øndom_£ssi⁄_key
, 
TRUE
, 
˛õ¡_sign_key
);

752 
	`SEALKEY
 (
Êags
, 
ã°_øndom_£ssi⁄_key
, 
TRUE
, 
˛õ¡_£Æ_key
);

753 
	`SIGNKEY
 (
ã°_øndom_£ssi⁄_key
, 
FALSE
, 
£rvî_sign_key
);

754 
	`SEALKEY
 (
Êags
, 
ã°_øndom_£ssi⁄_key
, 
FALSE
, 
£rvî_£Æ_key
);

756 
	`¥ötf
 ("\n\nTesting (NTLMv2 / OC 2007 R2) Message Parsing, Signing,ánd Verification\nClientÑequest\n(Authentication Protocol version 4)\n");

757 
msg
 = 
	`sùmsg_∑r£_msg
(
ªque°
);

758 
msgbd
.
msg
 = msg;

759 
	`sùmsg_bªakdown_∑r£
(&
msgbd
, "SIP Communications Service", "cosmo-ocs-r2.cosmo.local");

760 
msg_°r
 = 
	`sùmsg_bªakdown_gë_°rög
(4, &
msgbd
);

761 
	`as£π_equÆ
 (
ªque°_sig
, (
guch¨
 *)
msg_°r
, 
	`°æí
‘eque°_sig), 
FALSE
);

762 
	`sù_£c_¡lm_sùe_sig«tuª_make
 (
Êags
, 
msg_°r
, 0, 
˛õ¡_sign_key
, 
˛õ¡_£Æ_key
, 
mac
);

763 
	`sùmsg_bªakdown_‰ì
(&
msgbd
);

764 
	`as£π_equÆ
 ("0100000029618e9651b65a7764000000", 
mac
, 16, 
TRUE
);

765 
sig
 = 
	`buff_to_hex_°r
(
mac
, 16);

767 
	`¥ötf
 ("\n\nTesting (NTLMv2 / OC 2007 R2) Message Parsing, Signing,ánd Verification\nServerÑesponse\n(Authentication Protocol version 4)\n");

768 
msg
 = 
	`sùmsg_∑r£_msg
(
ª•⁄£
);

769 
msgbd
.
msg
 = msg;

770 
	`sùmsg_bªakdown_∑r£
(&
msgbd
, "SIP Communications Service", "cosmo-ocs-r2.cosmo.local");

771 
msg_°r
 = 
	`sùmsg_bªakdown_gë_°rög
(4, &
msgbd
);

772 
	`as£π_equÆ
 (
ª•⁄£_sig
, (
guch¨
 *)
msg_°r
, 
	`°æí
‘e•⁄£_sig), 
FALSE
);

774 
	`sù_£c_¡lm_sùe_sig«tuª_make
 (
Êags
, 
msg_°r
, 0, 
£rvî_sign_key
, 
£rvî_£Æ_key
, 
mac
);

775 
	`sùmsg_bªakdown_‰ì
(&
msgbd
);

776 
	`as£π_equÆ
 ("01000000E615438A917661BE64000000", 
mac
, 16, 
TRUE
);

777 
sig
 = 
	`buff_to_hex_°r
(
mac
, 16);

779 
	`¥ötf
 ("\n\nTesting (NTLMv2 / OC 2007 R2) MAC - client signing\n");

780 
	`MAC
 (
Êags
, (
gch¨
*)
ªque°_sig
,
	`°æí
‘eque°_sig), 
˛õ¡_sign_key
,16, 
˛õ¡_£Æ_key
,16, 0, 100, 
mac
);

781 
	`as£π_equÆ
("0100000029618e9651b65a7764000000", 
mac
, 16, 
TRUE
);

783 
	`¥ötf
 ("\n\nTesting (NTLMv2 / OC 2007 R2) MAC - server's verifying\n");

784 
	`MAC
 (
Êags
, (
gch¨
*)
ª•⁄£_sig
,
	`°æí
‘e•⁄£_sig), 
£rvî_sign_key
,16, 
£rvî_£Æ_key
,16, 0, 100, 
mac
);

785 
	`as£π_equÆ
("01000000E615438A917661BE64000000", 
mac
, 16, 
TRUE
);

787 
	`¥ötf
 ("\n\nTesting (NTLMv2 / OC 2007 R2) Type3 generationÅest\n");

789 
guch¨
 *
˛õ¡_sign_key2
;

790 
guch¨
 *
£rvî_sign_key2
;

791 
guch¨
 *
˛õ¡_£Æ_key2
;

792 
guch¨
 *
£rvî_£Æ_key2
;

794 
guch¨
 *
£rvî_chÆÀnge
 = 
NULL
;

795 
guöt64
 
time_vÆ2
 = 0;

796 
guch¨
 *
èrgë_öfo3
 = 
NULL
;

797 
èrgë_öfo3_Àn
 = 0;

798 
guöt32
 
Êags2
;

799 
SùSecBuf„r
 
ö_buff
;

800 
SùSecBuf„r
 
out_buff
;

802 
ö_buff
.
Àngth
 = 
	`hex_°r_to_buff
(
ty≥2_hex
, (
guöt8
 **)&(ö_buff.
vÆue
));

804 
	`sù_£c_¡lm_∑r£_chÆÀnge
(
ö_buff
,

805 &
Êags2
,

806 &
£rvî_chÆÀnge
,

807 &
time_vÆ2
,

808 &
èrgë_öfo3
,

809 &
èrgë_öfo3_Àn
);

811 
	`sù_£c_¡lm_gí_authítiˇã
(&
˛õ¡_sign_key2
,

812 &
£rvî_sign_key2
,

813 &
˛õ¡_£Æ_key2
,

814 &
£rvî_£Æ_key2
,

815 
u£r2
,

816 
∑ssw‹d2
,

817 
ho°2
,

818 
domaö2
,

819 
£rvî_chÆÀnge
,

820 
ã°_time_vÆ
,

821 
èrgë_öfo3
,

822 
èrgë_öfo3_Àn
,

824 &
out_buff
,

825 &
Êags2
);

827 
	`g_‰ì
(
£rvî_chÆÀnge
);

828 
	`g_‰ì
(
èrgë_öfo3
);

830 
	`as£π_equÆ
(
ty≥3_hex
, 
out_buff
.
vÆue
, out_buff.
Àngth
, 
TRUE
);

833 
	`¥ötf
 ("\n\nTesting Authentication Algorithm's v4 Signature String\n");

835 *
ª•⁄£_symbün
 =

852 
ª•⁄£_sig
 = "<NTLM><1B6D47A1><11><SIP Communications Service><LOC-COMPANYT-FE03.COMPANY.COM><41CEg82ECa0AC8i3DD7mE673t9CF4b19DAxF780x><1><INVITE><sip:sender@company.com><2420628112><sip:recipient@company.com><7aee15546a><SIP:recipient@company.com><><><180>";

854 
msg
 = 
	`sùmsg_∑r£_msg
(
ª•⁄£_symbün
);

855 
msgbd
.
msg
 = msg;

856 
	`sùmsg_bªakdown_∑r£
(&
msgbd
, "SIP Communications Service", "LOC-COMPANYT-FE03.COMPANY.COM");

857 
msg_°r
 = 
	`sùmsg_bªakdown_gë_°rög
(4, &
msgbd
);

859 
	`as£π_equÆ
 (
ª•⁄£_sig
, (
guch¨
 *)
msg_°r
, 
	`°æí
‘e•⁄£_sig), 
FALSE
);

861 
	`sùmsg_bªakdown_‰ì
(&
msgbd
);

867 c⁄° *
ã°Epid
 = "01010101";

868 c⁄° *
ex≥˘edUUID
 = "4b1682a8-f968-5701-83fc-7c6741dc6697";

869 
gch¨
 *
ˇlcUUID
 = 
	`gíî©eUUID‰omEPID
(
ã°Epid
);

871 
	`¥ötf
("\n\nTesting MS-SIPRE UUID derivation\n");

873 
	`as£π_equÆ
(
ex≥˘edUUID
, (
guch¨
 *Ë
ˇlcUUID
, 
	`°æí
”x≥˘edUUID), 
FALSE
);

874 
	`g_‰ì
(
ˇlcUUID
);

879 
	`¥ötf
 ("\nFöished Wôh Te°s; %d suc˚ss†%d faûuªs\n", 
suc˚s£s
, 
Áûuªs
);

881 
	`sù_£c_de°roy__¡lm
();

883 (
Áûuªs
 == 0);

884 
	}
}

	@src/core/sip-sec-ntlm.c

49 
	~<°dlib.h
>

50 
	~<°rög.h
>

51 
	~<time.h
>

53 
	~<glib.h
>

55 #ifde‡
HAVE_LANGINFO_CODESET


56 
	~<œngöfo.h
>

59 
	~"sùe-comm⁄.h
"

60 
	~"sù-£c.h
"

61 
	~"sù-£c-mech.h
"

62 
	~"sù-£c-¡lm.h
"

63 
	~"sùe-backíd.h
"

64 
	~"sùe-¸y±.h
"

65 
	~"sùe-dige°.h
"

66 
	~"sùe-utûs.h
"

69 
	#NTLMSSP_NEGOTIATE_UNICODE
 0x00000001

	)

70 
	#NTLMSSP_NEGOTIATE_OEM
 0x00000002

	)

71 
	#NTLMSSP_REQUEST_TARGET
 0x00000004

	)

72 
	#r9
 0x00000008

	)

73 
	#NTLMSSP_NEGOTIATE_SIGN
 0x00000010

	)

74 
	#NTLMSSP_NEGOTIATE_SEAL
 0x00000020

	)

75 
	#NTLMSSP_NEGOTIATE_DATAGRAM
 0x00000040

	)

76 
	#NTLMSSP_NEGOTIATE_LM_KEY
 0x00000080

	)

77 
	#r8
 0x00000100

	)

78 
	#NTLMSSP_NEGOTIATE_NTLM
 0x00000200

	)

79 
	#NTLMSSP_NEGOTIATE_NT_ONLY
 0x00000400

	)

80 
	#™⁄ymous
 0x00000800

	)

81 
	#NTLMSSP_NEGOTIATE_OEM_DOMAIN_SUPPLIED
 0x00001000

	)

82 
	#NTLMSSP_NEGOTIATE_OEM_WORKSTATION_SUPPLIED
 0x00002000

	)

83 
	#r7
 0x00004000

	)

84 
	#NTLMSSP_NEGOTIATE_ALWAYS_SIGN
 0x00008000

	)

85 
	#NTLMSSP_TARGET_TYPE_DOMAIN
 0x00010000

	)

86 
	#NTLMSSP_TARGET_TYPE_SERVER
 0x00020000

	)

87 
	#r6
 0x00040000

	)

88 
	#NTLMSSP_NEGOTIATE_EXTENDED_SESSIONSECURITY
 0x00080000

	)

89 
	#NTLMSSP_NEGOTIATE_IDENTIFY
 0x00100000

	)

90 
	#r5
 0x00200000

	)

91 
	#NTLMSSP_REQUEST_NON_NT_SESSION_KEY
 0x00400000

	)

92 
	#NTLMSSP_NEGOTIATE_TARGET_INFO
 0x00800000

	)

93 
	#r4
 0x01000000

	)

94 
	#NTLMSSP_NEGOTIATE_VERSION
 0x02000000

	)

95 
	#r3
 0x04000000

	)

96 
	#r2
 0x08000000

	)

97 
	#r1
 0x10000000

	)

98 
	#NTLMSSP_NEGOTIATE_128
 0x20000000

	)

99 
	#NTLMSSP_NEGOTIATE_KEY_EXCH
 0x40000000

	)

100 
	#NTLMSSP_NEGOTIATE_56
 0x80000000

	)

103 
	#MsvAvEOL
 0

	)

104 
	#MsvAvNbCompuãrName
 1

	)

105 
	#MsvAvNbDomaöName
 2

	)

106 
	#MsvAvDnsCompuãrName
 3

	)

107 
	#MsvAvDnsDomaöName
 4

	)

109 
	#MsvAvDnsTªeName
 5

	)

111 
	#MsvAvFœgs
 6

	)

113 
	#MsvAvTime°amp
 7

	)

115 
	#MsAvRe°ri˘i⁄s
 8

	)

117 
	#MsvAvT¨gëName
 9

	)

119 
	#MsvCh™√lBödögs
 10

	)

122 
	#TIME_VAL_FACTOR
 10000000

	)

123 
	#TIME_VAL_OFFSET
 116444736000000000LL

	)

124 
	#TIME_T_TO_VAL
(
time_t
Ë(((
guöt64
)—ime_t)Ë* 
TIME_VAL_FACTOR
 + 
TIME_VAL_OFFSET
)

	)

125 
	#TIME_VAL_TO_T
(
time_vÆ
Ë((
time_t
)((
	`GUINT64_FROM_LE
(—ime_vÆ)Ë- 
TIME_VAL_OFFSET
Ë/ 
TIME_VAL_FACTOR
))

	)

129 
	svîsi⁄
 {

130 
guöt8
 
	m¥odu˘_maj‹_vîsi⁄
;

131 
guöt8
 
	m¥odu˘_mö‹_vîsi⁄
;

132 
guöt16
 
	m¥odu˘_buûd
;

133 
guöt8
 
	mzîo2
[3];

134 
guöt8
 
	m¡lm_ªvisi⁄_cuºít
;

142 #ifde‡
_SIPE_COMPILING_TESTS


143 
gboﬁón
 
	gu£_¡lm_v2
 = 
FALSE
;

145 
guöt64
 
	gã°_time_vÆ
 = 0;

146 
guch¨
 
	gã°_˛õ¡_chÆÀnge
 [8];

147 
guch¨
 
	gã°_øndom_£ssi⁄_key
[16];

148 
vîsi⁄
 
	gã°_vîsi⁄
;

153 
	#NEGOTIATE_FLAGS_COMMON_MIN
 \

154 –
NTLMSSP_NEGOTIATE_UNICODE
 | \

155 
NTLMSSP_NEGOTIATE_NTLM
 | \

156 
NTLMSSP_NEGOTIATE_ALWAYS_SIGN
 | \

157 
NTLMSSP_NEGOTIATE_EXTENDED_SESSIONSECURITY
 | \

158 
NTLMSSP_NEGOTIATE_TARGET_INFO
 \

159 )

	)

162 
	#NEGOTIATE_FLAGS_CONN
 \

163 –
NEGOTIATE_FLAGS_COMMON_MIN
 | \

164 
NTLMSSP_NEGOTIATE_VERSION
 | \

165 
NTLMSSP_NEGOTIATE_128
 | \

166 
NTLMSSP_NEGOTIATE_56
 | \

167 
NTLMSSP_REQUEST_TARGET
 \

168 )

	)

171 
	#NEGOTIATE_FLAGS_CONNLESS_EXTRA
 \

172 –
NTLMSSP_NEGOTIATE_SIGN
 | \

173 
NTLMSSP_NEGOTIATE_DATAGRAM
 | \

174 
NTLMSSP_NEGOTIATE_IDENTIFY
 | \

175 
NTLMSSP_NEGOTIATE_KEY_EXCH
 \

176 )

	)

179 
	#NEGOTIATE_FLAGS_CONNLESS
 \

180 –
NEGOTIATE_FLAGS_CONN
 | \

181 
NEGOTIATE_FLAGS_CONNLESS_EXTRA
 \

182 )

	)

184 
	#NTLMSSP_LN_OR_NT_KEY_LEN
 16

	)

185 
	#NTLMSSP_LM_RESP_LEN
 24

	)

186 
	#NTLMSSP_SESSION_KEY_LEN
 16

	)

188 
	#IS_FLAG
(
Êags
, 
Êag
Ë(((ÊagsË& (Êag)Ë=(Êag))

	)

192 
	sav_∑ú
 {

193 
guöt16
 
	mav_id
;

194 
guöt16
 
	mav_Àn
;

199 
	#ALIGN_AV
 \

200 
	`mem˝y
(&
av_Æig√d
, 
av
, (av_aligned)); \

201 
av_id
 = 
	`GUINT16_FROM_LE
(
av_Æig√d
.av_id); \

202 
av_Àn
 = 
	`GUINT16_FROM_LE
(
av_Æig√d
.av_Àn)

	)

203 
	#ALIGN_AV_LOOP_START
 \

204 
av_∑ú
 
av_Æig√d
; \

205 
guöt16
 
av_id
; \

206 
guöt16
 
av_Àn
; \

207 
ALIGN_AV
; \

208 
av_id
 !
MsvAvEOL
) { \

209 
gch¨
 *
av_vÆue
 = ((gch¨ *)
av
) + \

210 (
av_∑ú
); \

211 
av_id
)

	)

212 
	#ALIGN_AV_LOOP_END
 \

213 
av
 = 
av_vÆue
 + 
av_Àn
; \

214 
ALIGN_AV
; \

215 }

	)

219 
	ssmb_hódî
 {

220 
guöt16
 
	mÀn
;

221 
guöt16
 
	mmaxÀn
;

222 
guöt32
 
	moff£t
;

226 
	s¡lm_mesßge
 {

227 
guöt8
 
	m¥Ÿocﬁ
[8];

228 
guöt32
 
	mty≥
;

232 
	s√gŸüã_mesßge
 {

233 
guöt8
 
	m¥Ÿocﬁ
[8];

234 
guöt32
 
	mty≥
;

235 
guöt32
 
	mÊags
;

236 
smb_hódî
 
	mdomaö
;

237 
smb_hódî
 
	mho°
;

238 
vîsi⁄
 
	mvî
;

246 
	schÆÀnge_mesßge
 {

247 
guöt8
 
	m¥Ÿocﬁ
[8];

248 
guöt32
 
	mty≥
;

249 
smb_hódî
 
	mèrgë_«me
;

250 
guöt32
 
	mÊags
;

251 
guöt8
 
	mn⁄˚
[8];

252 
guöt8
 
	mzîo1
[8];

253 
smb_hódî
 
	mèrgë_öfo
;

254 
vîsi⁄
 
	mvî
;

262 
	sauthítiˇã_mesßge
 {

263 
guöt8
 
	m¥Ÿocﬁ
[8];

264 
guöt32
 
	mty≥
;

266 
smb_hódî
 
	mlm_ª•
;

268 
smb_hódî
 
	m¡_ª•
;

270 
smb_hódî
 
	mdomaö
;

272 
smb_hódî
 
	mu£r
;

274 
smb_hódî
 
	mho°
;

276 
smb_hódî
 
	m£ssi⁄_key
;

277 
guöt32
 
	mÊags
;

278 
vîsi⁄
 
	mvî
;

290 #i‚de‡
HAVE_LANGINFO_CODESET


291 
	gSIPE_DEFAULT_CODESET
[] = "ANSI_X3.4-1968";

297 
GIC⁄v
 
	gc⁄vît_‰om_utf16À
 = (GIConv)-1;

298 
GIC⁄v
 
	gc⁄vît_to_utf16À
 = (GIConv)-1;

300 
gsize


301 
	$unicode_°rc⁄vc›y
(
gch¨
 *
de°
, c⁄° gch¨ *
sour˚
, 
gsize
 
ªmÀn
)

303 
gsize
 
öbyãs
 = 
	`°æí
(
sour˚
);

304 
gsize
 
outbyãs
 = 
ªmÀn
;

305 
	`g_ic⁄v
(
c⁄vît_to_utf16À
, (
gch¨
 **)&
sour˚
, &
öbyãs
, &
de°
, &
outbyãs
);

306 (
ªmÀn
 - 
outbyãs
);

307 
	}
}

311 
gch¨
 *

312 
	$unicode_°rc⁄vc›y_back
(c⁄° 
gch¨
 *
sour˚
, 
gsize
 
Àn
)

314 
gsize
 
outbyãs
 = 2 * 
Àn
;

315 
gch¨
 *
de°
 = 
	`g_√w0
(gch¨, 
outbyãs
 + 1);

316 
gch¨
 *
outbuf
 = 
de°
;

317 
	`g_ic⁄v
(
c⁄vît_‰om_utf16À
, (
gch¨
 **)&
sour˚
, &
Àn
, &
outbuf
, &
outbyãs
);

318  
de°
;

319 
	}
}

322 
guöt32
 
	g¸c32_èbÀ
[256];

323 
	g¸c32_öôülized
 = 0;

325 
	$¸c32_make_èbÀ
()

327 
guöt32
 
h
 = 1;

328 
i
, 
j
;

330 
	`mem£t
(
¸c32_èbÀ
, 0, (crc32_table));

332 
i
 = 128; i; i >>= 1) {

333 
h
 = (h >> 1) ^ ((h & 1) ? 0xedb88320L : 0);

335 
j
 = 0; j < 256; j +2 * 
i
)

336 
¸c32_èbÀ
[
i
 + 
j
] = crc32_èbÀ[j] ^ 
h
;

339 
¸c32_öôülized
 = 1;

340 
	}
}

342 
guöt32
 
	$¸c32
(
guöt32
 
¸c
, c⁄° 
guöt8
 *
buf
, 
Àn
)

344 i‡(!
¸c32_öôülized
)

345 
	`¸c32_make_èbÀ
();

347 i‡(!
buf
 || 
Àn
 < 0)

348  
¸c
;

350 
¸c
 ^= 0xffffffffL;

352 
Àn
--)

353 
¸c
 = (¸¯>> 8Ë^ 
¸c32_èbÀ
[(¸¯^ *
buf
++) & 0xff];

355  
¸c
 ^ 0xffffffffL;

356 
	}
}

358 
guöt32


359 
	$CRC32
 (c⁄° *
msg
, 
Àn
)

361 
guöt32
 
¸c
 = 0L;

362 
¸c
 = 
	`¸c32
(¸c, (
guöt8
 *Ë
msg
, 
Àn
);

363  
¸c
;

364 
	}
}

368 #ifde‡
_SIPE_COMPILING_TESTS


369 
	$£tup_des_key
(c⁄° 
key_56
[], *
key
)

371 
key
[0] = 
key_56
[0];

372 
key
[1] = ((
key_56
[0] << 7) & 0xFF) | (key_56[1] >> 1);

373 
key
[2] = ((
key_56
[1] << 6) & 0xFF) | (key_56[2] >> 2);

374 
key
[3] = ((
key_56
[2] << 5) & 0xFF) | (key_56[3] >> 3);

375 
key
[4] = ((
key_56
[3] << 4) & 0xFF) | (key_56[4] >> 4);

376 
key
[5] = ((
key_56
[4] << 3) & 0xFF) | (key_56[5] >> 5);

377 
key
[6] = ((
key_56
[5] << 2) & 0xFF) | (key_56[6] >> 6);

378 
key
[7] = (
key_56
[6] << 1) & 0xFF;

379 
	}
}

383 
	$DES
 (c⁄° *
k
, c⁄° *
d
, * 
ªsu…s
)

385 
key
[8];

386 
	`£tup_des_key
(
k
, 
key
);

387 
	`sùe_¸y±_des
(
key
, 
d
, 8, 
ªsu…s
);

388 
	}
}

392 
	$DESL
 (c⁄° *
k
, c⁄° *
d
, * 
ªsu…s
)

394 
keys
[21];

397 
	`mem˝y
(
keys
, 
k
, 16);

400 
	`mem£t
(
keys
 + 16, 0, 5);

402 
	`DES
(
keys
, 
d
, 
ªsu…s
);

403 
	`DES
(
keys
 + 7, 
d
, 
ªsu…s
 + 8);

404 
	`DES
(
keys
 + 14, 
d
, 
ªsu…s
 + 16);

405 
	}
}

408 
	#RC4K
(
key
, 
key_Àn
, 
∂aö
, 
∂aö_Àn
, 
í¸y±ed
) \

409 
	`sùe_¸y±_rc4
((
key
), (
key_Àn
), (
∂aö
), (
∂aö_Àn
), (
í¸y±ed
))

	)

412 
	#MD4
(
d
, 
Àn
, 
ªsu…
Ë
	`sùe_dige°_md4
((d), (Àn), (ªsu…))

	)

415 
	#MD5
(
d
, 
Àn
, 
ªsu…
Ë
	`sùe_dige°_md5
((d), (Àn), (ªsu…))

	)

447 
	#HMAC_MD5
(
key
, 
key_Àn
, 
d©a
, 
d©a_Àn
, 
ªsu…
) \

448 
	`sùe_dige°_hmac_md5
((
key
), (
key_Àn
), (
d©a
), (
d©a_Àn
), (
ªsu…
))

	)

453 
	$NONCE
(*
buf„r
, 
num
)

455 
i
;

456 
i
 = 0; i < 
num
; i++) {

457 
buf„r
[
i
] = (
	`ønd
() & 0xff);

459 
	}
}

461 #ifde‡
_SIPE_COMPILING_TESTS


463 
	$Z
(*
buf„r
, 
num
)

465 
	`mem£t
(
buf„r
, 0, 
num
);

466 
	}
}

469 
	$LMOWFv1
 (c⁄° *
∑ssw‹d
, 
SIPE_UNUSED_PARAMETER
 c⁄° *
u£r
, SIPE_UNUSED_PARAMETER c⁄° *
domaö
, *
ªsu…
)

472 
magic
[] = { 0x4B, 0x47, 0x53, 0x21, 0x40, 0x23, 0x24, 0x25 };

473 
uµîˇ£_∑ssw‹d
[14];

474 
i
;

476 
Àn
 = 
	`°æí
(
∑ssw‹d
);

477 i‡(
Àn
 > 14) {

478 
Àn
 = 14;

482 
i
 = 0; i < 
Àn
; i++) {

483 
uµîˇ£_∑ssw‹d
[
i
] = 
	`g_ascii_touµî
(
∑ssw‹d
[i]);

487 ; 
i
 < 14; i++) {

488 
uµîˇ£_∑ssw‹d
[
i
] = 0;

491 
	`DES
 (
uµîˇ£_∑ssw‹d
, 
magic
, 
ªsu…
);

492 
	`DES
 (
uµîˇ£_∑ssw‹d
 + 7, 
magic
, 
ªsu…
 + 8);

493 
	}
}

503 
	$NTOWFv1
 (c⁄° * 
∑ssw‹d
, 
SIPE_UNUSED_PARAMETER
 c⁄° *
u£r
, SIPE_UNUSED_PARAMETER c⁄° *
domaö
, *
ªsu…
)

505 
Àn_u
 = 2 * 
	`°æí
(
∑ssw‹d
);

506 *
unicode_∑ssw‹d
 = 
	`g_mÆloc
(
Àn_u
);

508 
Àn_u
 = 
	`unicode_°rc⁄vc›y
((
gch¨
 *)
unicode_∑ssw‹d
, 
∑ssw‹d
,Üen_u);

509 
	`MD4
 (
unicode_∑ssw‹d
, 
Àn_u
, 
ªsu…
);

510 
	`g_‰ì
(
unicode_∑ssw‹d
);

511 
	}
}

520 
	$NTOWFv2
 (c⁄° * 
∑ssw‹d
, c⁄° *
u£r
, c⁄° *
domaö
, *
ªsu…
)

522 
ª•⁄£_key_¡_v1
 [16];

523 
Àn_u£r
 = 
u£r
 ? 
	`°æí
(user) : 0;

524 
Àn_domaö
 = 
domaö
 ? 
	`°æí
(domain) : 0;

525 
Àn_u£r_u
 = 2 * 
Àn_u£r
;

526 
Àn_domaö_u
 = 2 * 
Àn_domaö
;

527 *
u£r_uµî
 = 
	`g_mÆloc
(
Àn_u£r
 + 1);

528 *
buff
 = 
	`g_mÆloc
((
Àn_u£r
 + 
Àn_domaö
)*2);

529 
i
;

532 
i
 = 0; i < 
Àn_u£r
; i++) {

533 
u£r_uµî
[
i
] = 
	`g_ascii_touµî
(
u£r
[i]);

535 
u£r_uµî
[
Àn_u£r
] = 0;

537 
Àn_u£r_u
 = 
	`unicode_°rc⁄vc›y
((
gch¨
 *)
buff
, (gch¨ *)
u£r_uµî
,Üen_user_u);

538 
Àn_domaö_u
 = 
	`unicode_°rc⁄vc›y
((
gch¨
 *)(
buff
+
Àn_u£r_u
), 
domaö
 ? (gchar *)domain : "",Üen_domain_u);

540 
	`NTOWFv1
(
∑ssw‹d
, 
u£r
, 
domaö
, 
ª•⁄£_key_¡_v1
);

542 
	`HMAC_MD5
(
ª•⁄£_key_¡_v1
, 16, 
buff
, 
Àn_u£r_u
 + 
Àn_domaö_u
, 
ªsu…
);

544 
	`g_‰ì
(
buff
);

545 
	`g_‰ì
(
u£r_uµî
);

546 
	}
}

549 
	$compuã_ª•⁄£
(c⁄° 
guöt32
 
√g_Êags
,

550 c⁄° *
ª•⁄£_key_¡
,

551 c⁄° *
ª•⁄£_key_lm
,

552 c⁄° 
guöt8
 *
£rvî_chÆÀnge
,

553 c⁄° 
guöt8
 *
˛õ¡_chÆÀnge
,

554 c⁄° 
guöt64
 
time_vÆ
,

555 c⁄° 
guöt8
 *
èrgë_öfo
,

556 
èrgë_öfo_Àn
,

557 *
lm_chÆÀnge_ª•⁄£
,

558 *
¡_chÆÀnge_ª•⁄£
,

559 *
£ssi⁄_ba£_key
)

561 #ifde‡
_SIPE_COMPILING_TESTS


562 i‡(
u£_¡lm_v2
)

588 
guöt8
 
tmp
 [16];

589 
guöt8
 
¡_¥oof_°r
 [16];

592 
ãmp_Àn
 = 8+8+8+4+
èrgë_öfo_Àn
+4;

593 
guöt8
 *
ãmp2
 = 
	`g_mÆloc
(8 + 
ãmp_Àn
);

594 
	`mem£t
(
ãmp2
, 0, 8 + 
ãmp_Àn
);

595 
ãmp2
[8+0] = 1;

596 
ãmp2
[8+1] = 1;

597 *((
guöt64
 *)(
ãmp2
+8+8)Ë
	`GUINT64_TO_LE
(
time_vÆ
);

598 
	`mem˝y
(
ãmp2
+8+16, 
˛õ¡_chÆÀnge
, 8);

599 
	`mem˝y
(
ãmp2
+8+28, 
èrgë_öfo
, 
èrgë_öfo_Àn
);

603 
	`mem˝y
(
ãmp2
, 
£rvî_chÆÀnge
, 8);

604 
	`HMAC_MD5
(
ª•⁄£_key_¡
, 16, 
ãmp2
, 8+
ãmp_Àn
, 
¡_¥oof_°r
);

608 
	`mem˝y
(
¡_chÆÀnge_ª•⁄£
, 
¡_¥oof_°r
, 16);

609 
	`mem˝y
(
¡_chÆÀnge_ª•⁄£
+16, 
ãmp2
+8, 
ãmp_Àn
);

613 
	`HMAC_MD5
(
ª•⁄£_key_¡
, 16, 
¡_¥oof_°r
, 16, 
£ssi⁄_ba£_key
);

616 
	`mem˝y
(
tmp
, 
£rvî_chÆÀnge
, 8);

617 
	`mem˝y
(
tmp
+8, 
˛õ¡_chÆÀnge
, 8);

618 
	`HMAC_MD5
(
ª•⁄£_key_lm
, 16, 
tmp
, 16, 
lm_chÆÀnge_ª•⁄£
);

619 
	`mem˝y
(
lm_chÆÀnge_ª•⁄£
+16, 
˛õ¡_chÆÀnge
, 8);

621 
	`g_‰ì
(
ãmp2
);

623 #i‚de‡
_SIPE_COMPILING_TESTS


625 ()
√g_Êags
;

630 i‡(
	`IS_FLAG
(
√g_Êags
, 
NTLMSSP_NEGOTIATE_LM_KEY
)) {

632 
	`Z
 (
¡_chÆÀnge_ª•⁄£
, 
NTLMSSP_LM_RESP_LEN
);

633 
	`DESL
 (
ª•⁄£_key_lm
, 
£rvî_chÆÀnge
, 
lm_chÆÀnge_ª•⁄£
);

634 } i‡(
	`IS_FLAG
(
√g_Êags
, 
NTLMSSP_NEGOTIATE_EXTENDED_SESSIONSECURITY
)) {

635 
¥ehash
 [16];

636 
hash
 [16];

639 
	`mem˝y
(
¥ehash
, 
£rvî_chÆÀnge
, 8);

640 
	`mem˝y
(
¥ehash
 + 8, 
˛õ¡_chÆÀnge
, 8);

641 
	`MD5
 (
¥ehash
, 16, 
hash
);

642 
	`DESL
 (
ª•⁄£_key_¡
, 
hash
, 
¡_chÆÀnge_ª•⁄£
);

645 
	`mem˝y
(
lm_chÆÀnge_ª•⁄£
, 
˛õ¡_chÆÀnge
, 8);

646 
	`Z
 (
lm_chÆÀnge_ª•⁄£
+8, 16);

648 
	`DESL
 (
ª•⁄£_key_¡
, 
£rvî_chÆÀnge
, 
¡_chÆÀnge_ª•⁄£
);

649 i‡(
	`IS_FLAG
(
√g_Êags
, 
NTLMSSP_NEGOTIATE_NT_ONLY
)) {

650 
	`mem˝y
(
lm_chÆÀnge_ª•⁄£
, 
¡_chÆÀnge_ª•⁄£
, 
NTLMSSP_LM_RESP_LEN
);

652 
	`DESL
 (
ª•⁄£_key_lm
, 
£rvî_chÆÀnge
, 
lm_chÆÀnge_ª•⁄£
);

657 
	`MD4
(
ª•⁄£_key_¡
, 16, 
£ssi⁄_ba£_key
);

663 
	`KXKEY
 ( 
guöt32
 
Êags
,

664 c⁄° * 
£ssi⁄_ba£_key
,

665 c⁄° * 
lm_chÆÀnge_ªs⁄£
,

666 c⁄° 
guöt8
 * 
£rvî_chÆÀnge
,

667 * 
key_exch™ge_key
)

669 #ifde‡
_SIPE_COMPILING_TESTS


670 i‡(
u£_¡lm_v2
)

674 ()
Êags
;

675 ()
lm_chÆÀnge_ªs⁄£
;

676 ()
£rvî_chÆÀnge
;

678 
	`mem˝y
(
key_exch™ge_key
, 
£ssi⁄_ba£_key
, 16);

679 #ifde‡
_SIPE_COMPILING_TESTS


683 i‡(
	`IS_FLAG
(
Êags
, 
NTLMSSP_NEGOTIATE_EXTENDED_SESSIONSECURITY
)) {

688 
guöt8
 
tmp
[16];

689 
	`mem˝y
(
tmp
, 
£rvî_chÆÀnge
, 8);

690 
	`mem˝y
(
tmp
+8, 
lm_chÆÀnge_ªs⁄£
, 8);

691 
	`HMAC_MD5
(
£ssi⁄_ba£_key
, 16, 
tmp
, 16, 
key_exch™ge_key
);

694 
	`mem˝y
(
key_exch™ge_key
, 
£ssi⁄_ba£_key
, 16);

710 
	`SIGNKEY
 (c⁄° * 
øndom_£ssi⁄_key
, 
gboﬁón
 
˛õ¡
, * 
ªsu…
)

712 * 
magic
 = 
˛õ¡


716 
Àn
 = 
	`°æí
(
magic
) + 1;

717 *
md5_öput
 = 
	`g_mÆloc
(16 + 
Àn
);

718 
	`mem˝y
(
md5_öput
, 
øndom_£ssi⁄_key
, 16);

719 
	`mem˝y
(
md5_öput
 + 16, 
magic
, 
Àn
);

721 
	`MD5
 (
md5_öput
, 
Àn
 + 16, 
ªsu…
);

722 
	`g_‰ì
(
md5_öput
);

751 
	`SEALKEY
 (
guöt32
 
Êags
, c⁄° * 
øndom_£ssi⁄_key
, 
gboﬁón
 
˛õ¡
, * 
ªsu…
)

753 i‡(
	`IS_FLAG
(
Êags
, 
NTLMSSP_NEGOTIATE_EXTENDED_SESSIONSECURITY
))

755 * 
magic
 = 
˛õ¡


759 
Àn
 = 
	`°æí
(
magic
) + 1;

760 *
md5_öput
 = 
	`g_mÆloc
(16 + 
Àn
);

761 
key_Àn
;

763 i‡(
	`IS_FLAG
(
Êags
, 
NTLMSSP_NEGOTIATE_128
)) {

764 
	`SIPE_DEBUG_INFO_NOFORMAT
("NTLM SEALKEY(): 128-bit key (Extended session security)");

765 
key_Àn
 = 16;

766 } i‡(
	`IS_FLAG
(
Êags
, 
NTLMSSP_NEGOTIATE_56
)) {

767 
	`SIPE_DEBUG_INFO_NOFORMAT
("NTLM SEALKEY(): 56-bit key (Extended session security)");

768 
key_Àn
 = 7;

770 
	`SIPE_DEBUG_INFO_NOFORMAT
("NTLM SEALKEY(): 40-bit key (Extended session security)");

771 
key_Àn
 = 5;

774 
	`mem˝y
(
md5_öput
, 
øndom_£ssi⁄_key
, 
key_Àn
);

775 
	`mem˝y
(
md5_öput
 + 
key_Àn
, 
magic
, 
Àn
);

777 
	`MD5
 (
md5_öput
, 
key_Àn
 + 
Àn
, 
ªsu…
);

778 
	`g_‰ì
(
md5_öput
);

780 i‡(
	`IS_FLAG
(
Êags
, 
NTLMSSP_NEGOTIATE_LM_KEY
))

782 i‡(
	`IS_FLAG
(
Êags
, 
NTLMSSP_NEGOTIATE_56
)) {

783 
	`SIPE_DEBUG_INFO_NOFORMAT
("NTLM SEALKEY(): 56-bit key");

784 
	`mem˝y
(
ªsu…
, 
øndom_£ssi⁄_key
, 7);

785 
ªsu…
[7] = 0xA0;

787 
	`SIPE_DEBUG_INFO_NOFORMAT
("NTLM SEALKEY(): 40-bit key");

788 
	`mem˝y
(
ªsu…
, 
øndom_£ssi⁄_key
, 5);

789 
ªsu…
[5] = 0xE5;

790 
ªsu…
[6] = 0x38;

791 
ªsu…
[7] = 0xB0;

796 
	`SIPE_DEBUG_INFO_NOFORMAT
("NTLM SEALKEY(): 128-bit key");

797 
	`mem˝y
(
ªsu…
, 
øndom_£ssi⁄_key
, 16);

821 
	`MAC
 (
guöt32
 
Êags
,

822 c⁄° *
buf
,

823 
buf_Àn
,

824 *
sign_key
,

825 
sign_key_Àn
,

826 *
£Æ_key
,

827 
£Æ_key_Àn
,

828 
guöt32
 
øndom_∑d
,

829 
guöt32
 
£quí˚
,

830 *
ªsu…
)

832 
guöt32
 *
ªs_±r
;

834 i‡(
	`IS_FLAG
(
Êags
, 
NTLMSSP_NEGOTIATE_EXTENDED_SESSIONSECURITY
)) {

854 
£Æ_key_
 [16];

855 
guch¨
 
hmac
[16];

856 
guch¨
 *
tmp
 = 
	`g_mÆloc
(4 + 
buf_Àn
);

861 i‡(
	`IS_FLAG
(
Êags
, 
NTLMSSP_NEGOTIATE_DATAGRAM
)) {

862 
tmp2
 [16+4];

864 
	`mem˝y
(
tmp2
, 
£Æ_key
, 
£Æ_key_Àn
);

865 *((
guöt32
 *)(
tmp2
+16)Ë
	`GUINT32_TO_LE
(
£quí˚
);

866 
	`MD5
 (
tmp2
, 16+4, 
£Æ_key_
);

868 
	`mem˝y
(
£Æ_key_
, 
£Æ_key
, 
£Æ_key_Àn
);

871 
	`SIPE_DEBUG_INFO_NOFORMAT
("NTLM MAC(): Extented Session Security");

873 
ªs_±r
 = (
guöt32
 *)
ªsu…
;

874 
ªs_±r
[0] = 
	`GUINT32_TO_LE
(1);

875 
ªs_±r
[3] = 
	`GUINT32_TO_LE
(
£quí˚
);

877 
ªs_±r
 = (
guöt32
 *)
tmp
;

878 
ªs_±r
[0] = 
	`GUINT32_TO_LE
(
£quí˚
);

879 
	`mem˝y
(
tmp
+4, 
buf
, 
buf_Àn
);

881 
	`HMAC_MD5
(
sign_key
, 
sign_key_Àn
, 
tmp
, 4 + 
buf_Àn
, 
hmac
);

883 i‡(
	`IS_FLAG
(
Êags
, 
NTLMSSP_NEGOTIATE_KEY_EXCH
)) {

884 
	`SIPE_DEBUG_INFO_NOFORMAT
("NTLM MAC(): Key Exchange");

885 
	`RC4K
(
£Æ_key_
, 
£Æ_key_Àn
, 
hmac
, 8, 
ªsu…
+4);

887 
	`SIPE_DEBUG_INFO_NOFORMAT
("NTLM MAC(): *NO* Key Exchange");

888 
	`mem˝y
(
ªsu…
+4, 
hmac
, 8);

890 
	`g_‰ì
(
tmp
);

893 
guöt32
 
¸c
 = 
	`CRC32
(
buf
, 
	`°æí
(buf));

894 
guöt32
 
∂aöãxt
 [] = {

895 
	`GUINT32_TO_LE
(0),

896 
	`GUINT32_TO_LE
(
¸c
),

897 
	`GUINT32_TO_LE
(
£quí˚
)

900 
	`SIPE_DEBUG_INFO_NOFORMAT
("NTLM MAC(): *NO* Extented Session Security");

902 
	`RC4K
(
£Æ_key
, 
£Æ_key_Àn
, (c⁄° 
guch¨
 *)
∂aöãxt
, 12, 
ªsu…
+4);

904 
ªs_±r
 = (
guöt32
 *)
ªsu…
;

906 
ªs_±r
[0] = 
	`GUINT32_TO_LE
(0x00000001);

909 
ªs_±r
[1] = 
	`GUINT32_TO_LE
(
øndom_∑d
);

921 
	`sù_£c_¡lm_∑r£_chÆÀnge
(
SùSecBuf„r
 
ö_buff
,

922 
guöt32
 *
Êags
,

923 
guch¨
 **
£rvî_chÆÀnge
,

924 
guöt64
 *
time_vÆ
,

925 
guch¨
 **
èrgë_öfo
,

926 *
èrgë_öfo_Àn
)

928 
chÆÀnge_mesßge
 *
cmsg
 = (chÆÀnge_mesßge*)
ö_buff
.
vÆue
;

929 
guöt32
 
ho°_Êags
 = 
	`GUINT32_FROM_LE
(
cmsg
->
Êags
);

932 i‡(
£rvî_chÆÀnge
) {

933 *
£rvî_chÆÀnge
 = 
	`g_memdup
(
cmsg
->
n⁄˚
, 8);

937 i‡(
Êags
) {

938 *
Êags
 = 
ho°_Êags
;

942 i‡(
cmsg
->
èrgë_öfo
.
Àn
 && cmsg->èrgë_öfo.
off£t
) {

943 *
c⁄ã¡
 = (
gch¨
 *)
cmsg
 + 
	`GUINT32_FROM_LE
(cmsg->
èrgë_öfo
.
off£t
);

944 *
av
 = 
c⁄ã¡
;

945 
guöt16
 
Àn
 = 
	`GUINT16_FROM_LE
(
cmsg
->
èrgë_öfo
.len);

947 
ALIGN_AV_LOOP_START


950 
MsvAvTime°amp
:

951 i‡(
time_vÆ
) {

952 
guöt64
 
tmp
;

955 
	`mem˝y
(&
tmp
, 
av_vÆue
, (tmp));

956 *
time_vÆ
 = 
	`GUINT64_FROM_LE
(
tmp
);

960 
ALIGN_AV_LOOP_END
;

962 i‡(
èrgë_öfo_Àn
) {

963 *
èrgë_öfo_Àn
 = 
Àn
;

965 i‡(
èrgë_öfo
) {

966 *
èrgë_öfo
 = 
	`g_memdup
(
c⁄ã¡
, 
Àn
);

978 
sù_uöt32


979 
	`sù_£c_¡lm_gí_authítiˇã
(
guch¨
 **
˛õ¡_sign_key
,

980 
guch¨
 **
£rvî_sign_key
,

981 
guch¨
 **
˛õ¡_£Æ_key
,

982 
guch¨
 **
£rvî_£Æ_key
,

983 c⁄° 
gch¨
 *
u£r
,

984 c⁄° 
gch¨
 *
∑ssw‹d
,

985 c⁄° 
gch¨
 *
ho°«me
,

986 c⁄° 
gch¨
 *
domaö
,

987 c⁄° 
guöt8
 *
£rvî_chÆÀnge
,

988 c⁄° 
guöt64
 
time_vÆ
,

989 c⁄° 
guöt8
 *
èrgë_öfo
,

990 
èrgë_öfo_Àn
,

991 
gboﬁón
 
is_c⁄√˘i⁄_ba£d
,

992 
SùSecBuf„r
 *
out_buff
,

993 
guöt32
 *
Êags
)

995 
guöt32
 
‹ig_Êags
 = 
is_c⁄√˘i⁄_ba£d
 ? 
NEGOTIATE_FLAGS_CONN
 : 
NEGOTIATE_FLAGS_CONNLESS
;

996 
guöt32
 
√g_Êags
 = (*
Êags
 & 
‹ig_Êags
Ë| 
NTLMSSP_REQUEST_TARGET
;

997 
¡lms•_¡_ª•_Àn
 =

998 #ifde‡
_SIPE_COMPILING_TESTS


999 
u£_¡lm_v2
 ?

1001 (16 + (32+
èrgë_öfo_Àn
))

1002 #ifde‡
_SIPE_COMPILING_TESTS


1003 : 
NTLMSSP_LM_RESP_LEN


1006 
gsize
 
msgÀn
 = (
authítiˇã_mesßge
)

1007 + 2*(
	`°æí
(
domaö
Ë+ såÀn(
u£r
)+ såÀn(
ho°«me
))

1008 + 
NTLMSSP_LM_RESP_LEN
 + 
¡lms•_¡_ª•_Àn


1009 + (
	`IS_FLAG
(
√g_Êags
, 
NTLMSSP_NEGOTIATE_KEY_EXCH
Ë? 
NTLMSSP_SESSION_KEY_LEN
 : 0);

1010 
authítiˇã_mesßge
 *
tmsg
;

1011 *
tmp
;

1012 
guöt32
 
off£t
;

1013 
guöt16
 
Àn
;

1014 
ª•⁄£_key_lm
 [
NTLMSSP_LN_OR_NT_KEY_LEN
];

1015 
ª•⁄£_key_¡
 [
NTLMSSP_LN_OR_NT_KEY_LEN
];

1016 
lm_chÆÀnge_ª•⁄£
 [
NTLMSSP_LM_RESP_LEN
];

1017 *
¡_chÆÀnge_ª•⁄£
 = 
	`g_mÆloc
(
¡lms•_¡_ª•_Àn
);

1018 
£ssi⁄_ba£_key
 [16];

1019 
key_exch™ge_key
 [16];

1020 
exp‹ãd_£ssi⁄_key
[16];

1021 
í¸y±ed_øndom_£ssi⁄_key
 [16];

1022 
key
 [16];

1023 
˛õ¡_chÆÀnge
 [8];

1024 
guöt64
 
time_vl
 = 
time_vÆ
 ?Åime_vÆ : 
	`TIME_T_TO_VAL
(
	`time
(
NULL
));

1026 i‡(!
	`IS_FLAG
(*
Êags
, 
NEGOTIATE_FLAGS_COMMON_MIN
) ||

1027 !(
is_c⁄√˘i⁄_ba£d
 || 
	`IS_FLAG
(*
Êags
, 
NEGOTIATE_FLAGS_CONNLESS_EXTRA
)))

1029 
	`SIPE_DEBUG_INFO_NOFORMAT
("sip_sec_ntlm_gen_authenticate:Ñeceived incompatible NTLM NegotiateFlags,Éxiting.");

1030  
SIP_SEC_E_INTERNAL_ERROR
;

1033 i‡(
	`IS_FLAG
(
√g_Êags
, 
NTLMSSP_NEGOTIATE_128
)) {

1034 
√g_Êags
 =Çeg_Êag†& ~
NTLMSSP_NEGOTIATE_56
;

1037 
tmsg
 = 
	`g_mÆloc0
(
msgÀn
);

1039 
	`NONCE
 (
˛õ¡_chÆÀnge
, 8);

1041 #ifde‡
_SIPE_COMPILING_TESTS


1042 
	`mem˝y
(
˛õ¡_chÆÀnge
, 
ã°_˛õ¡_chÆÀnge
, 8);

1043 
time_vl
 = 
ã°_time_vÆ
 ?Åest_time_val :Åime_vl;

1045 i‡(
u£_¡lm_v2
) {

1048 
	`NTOWFv2
 (
∑ssw‹d
, 
u£r
, 
domaö
, 
ª•⁄£_key_¡
);

1049 
	`mem˝y
(
ª•⁄£_key_lm
, 
ª•⁄£_key_¡
, 
NTLMSSP_LN_OR_NT_KEY_LEN
);

1050 #ifde‡
_SIPE_COMPILING_TESTS


1052 
	`NTOWFv1
 (
∑ssw‹d
, 
u£r
, 
domaö
, 
ª•⁄£_key_¡
);

1053 
	`LMOWFv1
 (
∑ssw‹d
, 
u£r
, 
domaö
, 
ª•⁄£_key_lm
);

1057 
	`compuã_ª•⁄£
(
√g_Êags
,

1058 
ª•⁄£_key_¡
,

1059 
ª•⁄£_key_lm
,

1060 
£rvî_chÆÀnge
,

1061 
˛õ¡_chÆÀnge
,

1062 
time_vl
,

1063 
èrgë_öfo
,

1064 
èrgë_öfo_Àn
,

1065 
lm_chÆÀnge_ª•⁄£
,

1066 
¡_chÆÀnge_ª•⁄£
,

1067 
£ssi⁄_ba£_key
);

1073 
	`KXKEY
(
√g_Êags
, 
£ssi⁄_ba£_key
, 
lm_chÆÀnge_ª•⁄£
, 
£rvî_chÆÀnge
, 
key_exch™ge_key
);

1075 i‡(
	`IS_FLAG
(
√g_Êags
, 
NTLMSSP_NEGOTIATE_KEY_EXCH
)) {

1076 
	`NONCE
 (
exp‹ãd_£ssi⁄_key
, 16);

1077 #ifde‡
_SIPE_COMPILING_TESTS


1078 
	`mem˝y
(
exp‹ãd_£ssi⁄_key
, 
ã°_øndom_£ssi⁄_key
, 16);

1080 
	`RC4K
 (
key_exch™ge_key
, 16, 
exp‹ãd_£ssi⁄_key
, 16, 
í¸y±ed_øndom_£ssi⁄_key
);

1082 
	`mem˝y
(
exp‹ãd_£ssi⁄_key
, 
key_exch™ge_key
, 16);

1085 
tmp
 = 
	`buff_to_hex_°r
(
exp‹ãd_£ssi⁄_key
, 16);

1086 
	`SIPE_DEBUG_INFO
("NTLM AUTHENTICATE:Éxp‹ãd sessi⁄ key (nŸÉn¸y±ed): %s", 
tmp
);

1087 
	`g_‰ì
(
tmp
);

1089 i‡(
	`IS_FLAG
(
√g_Êags
, 
NTLMSSP_NEGOTIATE_SIGN
) ||

1090 
	`IS_FLAG
(
√g_Êags
, 
NTLMSSP_NEGOTIATE_SEAL
))

1096 
	`SIGNKEY
(
exp‹ãd_£ssi⁄_key
, 
TRUE
, 
key
);

1097 *
˛õ¡_sign_key
 = (
guch¨
 *)
	`g_°∫dup
((
gch¨
 *)
key
, 16);

1098 
	`SIGNKEY
(
exp‹ãd_£ssi⁄_key
, 
FALSE
, 
key
);

1099 *
£rvî_sign_key
 = (
guch¨
 *)
	`g_°∫dup
((
gch¨
 *)
key
, 16);

1100 
	`SEALKEY
(
√g_Êags
, 
exp‹ãd_£ssi⁄_key
, 
TRUE
, 
key
);

1101 *
˛õ¡_£Æ_key
 = (
guch¨
 *)
	`g_°∫dup
((
gch¨
 *)
key
, 16);

1102 
	`SEALKEY
(
√g_Êags
, 
exp‹ãd_£ssi⁄_key
, 
FALSE
, 
key
);

1103 *
£rvî_£Æ_key
 = (
guch¨
 *)
	`g_°∫dup
((
gch¨
 *)
key
, 16);

1154 
	`mem˝y
(
tmsg
->
¥Ÿocﬁ
, "NTLMSSP\0", 8);

1155 
tmsg
->
ty≥
 = 
	`GUINT32_TO_LE
(3);

1158 
off£t
 = (
authítiˇã_mesßge
);

1159 
tmp
 = ((*Ë
tmsg
Ë+ 
off£t
;

1161 
	#_FILL_SMB_HEADER
(
hódî
) \

1162 
tmsg
->
hódî
.
off£t
 = 
	`GUINT32_TO_LE
(offset); \

1163 
tmsg
->
hódî
.
Àn
 =Åmsg->hódî.
maxÀn
 = 
	`GUINT16_TO_LE
(len); \

1164 
tmp
 +
Àn
; \

1165 
off£t
 +
Àn


	)

1166 
	#_APPEND_STRING
(
hódî
, 
§c
) \

1167 
Àn
 = 
	`unicode_°rc⁄vc›y
(
tmp
, (
§c
), 
msgÀn
 - 
off£t
); \

1168 
	`_FILL_SMB_HEADER
(
hódî
)

	)

1169 
	#_APPEND_DATA
(
hódî
, 
§c
, 
§˛í
) \

1170 
Àn
 = (
§˛í
); \

1171 
	`mem˝y
(
tmp
, (
§c
), 
Àn
); \

1172 
	`_FILL_SMB_HEADER
(
hódî
)

	)

1175 
	`_APPEND_STRING
(
domaö
, domain);

1178 
	`_APPEND_STRING
(
u£r
, user);

1181 
	`_APPEND_STRING
(
ho°
, 
ho°«me
);

1189 
	`_APPEND_DATA
(
lm_ª•
, 
lm_chÆÀnge_ª•⁄£
, 
NTLMSSP_LM_RESP_LEN
);

1192 
	`_APPEND_DATA
(
¡_ª•
, 
¡_chÆÀnge_ª•⁄£
, 
¡lms•_¡_ª•_Àn
);

1195 i‡(
	`IS_FLAG
(
√g_Êags
, 
NTLMSSP_NEGOTIATE_KEY_EXCH
))

1197 
	`_APPEND_DATA
(
£ssi⁄_key
, 
í¸y±ed_øndom_£ssi⁄_key
, 
NTLMSSP_SESSION_KEY_LEN
);

1201 
tmsg
->
£ssi⁄_key
.
off£t
 = 
	`GUINT32_TO_LE
(offset);

1202 
tmsg
->
£ssi⁄_key
.
Àn
 =Åmsg->£ssi⁄_key.
maxÀn
 = 0;

1206 #ifde‡
_SIPE_COMPILING_TESTS


1207 
	`mem˝y
(&(
tmsg
->
vî
), &
ã°_vîsi⁄
, (
vîsi⁄
));

1209 i‡(
	`IS_FLAG
(
√g_Êags
, 
NTLMSSP_NEGOTIATE_VERSION
)) {

1210 
tmsg
->
vî
.
¥odu˘_maj‹_vîsi⁄
 = 5;

1211 
tmsg
->
vî
.
¥odu˘_mö‹_vîsi⁄
 = 1;

1212 
tmsg
->
vî
.
¥odu˘_buûd
 = 
	`GUINT16_FROM_LE
(2600);

1213 
tmsg
->
vî
.
¡lm_ªvisi⁄_cuºít
 = 0x0F;

1218 
tmsg
->
Êags
 = 
	`GUINT32_TO_LE
(
√g_Êags
);

1219 *
Êags
 = 
√g_Êags
;

1221 
out_buff
->
vÆue
 = (
guöt8
 *)
tmsg
;

1222 
out_buff
->
Àngth
 = 
msgÀn
;

1224 
	`g_‰ì
(
¡_chÆÀnge_ª•⁄£
);

1226  
SIP_SEC_E_OK
;

1233 
	`sù_£c_¡lm_gí_√gŸüã
(
SùSecBuf„r
 *
out_buff
)

1235 
guöt32
 
off£t
;

1236 
guöt16
 
Àn
;

1237 
msgÀn
 = (
√gŸüã_mesßge
);

1238 
√gŸüã_mesßge
 *
tmsg
 = 
	`g_mÆloc0
(
msgÀn
);

1241 
	`mem˝y
(
tmsg
->
¥Ÿocﬁ
, "NTLMSSP\0", 8);

1242 
tmsg
->
ty≥
 = 
	`GUINT32_TO_LE
(1);

1245 
tmsg
->
Êags
 = 
	`GUINT32_TO_LE
(
NEGOTIATE_FLAGS_CONN
);

1248 
off£t
 = (
√gŸüã_mesßge
);

1249 
tmsg
->
domaö
.
off£t
 = 
	`GUINT32_TO_LE
(offset);

1250 
tmsg
->
domaö
.
Àn
 =Åmsg->domaö.
maxÀn
 =Üen = 0;

1253 
off£t
 +
Àn
;

1254 
tmsg
->
ho°
.
off£t
 = 
	`GUINT32_TO_LE
(offset);

1255 
tmsg
->
ho°
.
Àn
 =Åmsg->ho°.
maxÀn
 =Üen = 0;

1258 
tmsg
->
vî
.
¥odu˘_maj‹_vîsi⁄
 = 5;

1259 
tmsg
->
vî
.
¥odu˘_mö‹_vîsi⁄
 = 1;

1260 
tmsg
->
vî
.
¥odu˘_buûd
 = 
	`GUINT16_FROM_LE
(2600);

1261 
tmsg
->
vî
.
¡lm_ªvisi⁄_cuºít
 = 0x0F;

1263 
out_buff
->
vÆue
 = (
guöt8
 *)
tmsg
;

1264 
out_buff
->
Àngth
 = 
msgÀn
;

1268 
	`sù_£c_¡lm_sùe_sig«tuª_make
(
guöt32
 
Êags
,

1269 c⁄° *
msg
,

1270 
guöt32
 
øndom_∑d
,

1271 *
sign_key
,

1272 *
£Æ_key
,

1273 *
ªsu…
)

1275 *
ªs
;

1277 
	`MAC
(
Êags
, 
msg
,
	`°æí
(msg), 
sign_key
,16, 
£Æ_key
,16, 
øndom_∑d
, 100, 
ªsu…
);

1279 
ªs
 = 
	`buff_to_hex_°r
(
ªsu…
, 16);

1280 
	`SIPE_DEBUG_INFO
("NTLM cÆcuœãd MAC: %s", 
ªs
);

1281 
	`g_‰ì
(
ªs
);

1287 
	#APPEND_NEG_FLAG
(
°r
, 
Êags
, 
Êag
, 
desc
) \

1288 i‡((
Êags
 & 
Êag
Ë=ÊagË
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s\n", 
desc
);

	)

1290 
gch¨
 *

1291 
	`sù_£c_¡lm_√gŸüã_Êags_des¸ibe
(
guöt32
 
Êags
)

1293 
GSåög
* 
°r
 = 
	`g_°rög_√w
(
NULL
);

1295 
Êags
 = 
	`GUINT32_FROM_LE
(flags);

1297 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_NEGOTIATE_UNICODE
, "NTLMSSP_NEGOTIATE_UNICODE");

1298 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_NEGOTIATE_OEM
, "NTLMSSP_NEGOTIATE_OEM");

1299 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_REQUEST_TARGET
, "NTLMSSP_REQUEST_TARGET");

1300 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
r9
, "r9");

1301 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_NEGOTIATE_SIGN
, "NTLMSSP_NEGOTIATE_SIGN");

1302 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_NEGOTIATE_SEAL
, "NTLMSSP_NEGOTIATE_SEAL");

1303 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_NEGOTIATE_DATAGRAM
, "NTLMSSP_NEGOTIATE_DATAGRAM");

1304 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_NEGOTIATE_LM_KEY
, "NTLMSSP_NEGOTIATE_LM_KEY");

1305 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
r8
, "r8");

1306 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_NEGOTIATE_NTLM
, "NTLMSSP_NEGOTIATE_NTLM");

1307 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_NEGOTIATE_NT_ONLY
, "NTLMSSP_NEGOTIATE_NT_ONLY");

1308 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
™⁄ymous
, "anonymous");

1309 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_NEGOTIATE_OEM_DOMAIN_SUPPLIED
, "NTLMSSP_NEGOTIATE_OEM_DOMAIN_SUPPLIED");

1310 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_NEGOTIATE_OEM_WORKSTATION_SUPPLIED
, "NTLMSSP_NEGOTIATE_OEM_WORKSTATION_SUPPLIED");

1311 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
r7
, "r7");

1312 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_NEGOTIATE_ALWAYS_SIGN
, "NTLMSSP_NEGOTIATE_ALWAYS_SIGN");

1313 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_TARGET_TYPE_DOMAIN
, "NTLMSSP_TARGET_TYPE_DOMAIN");

1314 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_TARGET_TYPE_SERVER
, "NTLMSSP_TARGET_TYPE_SERVER");

1315 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
r6
, "r6");

1316 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_NEGOTIATE_EXTENDED_SESSIONSECURITY
, "NTLMSSP_NEGOTIATE_EXTENDED_SESSIONSECURITY");

1317 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_NEGOTIATE_IDENTIFY
, "NTLMSSP_NEGOTIATE_IDENTIFY");

1318 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
r5
, "r5");

1319 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_REQUEST_NON_NT_SESSION_KEY
, "NTLMSSP_REQUEST_NON_NT_SESSION_KEY");

1320 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_NEGOTIATE_TARGET_INFO
, "NTLMSSP_NEGOTIATE_TARGET_INFO");

1321 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
r4
, "r4");

1322 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_NEGOTIATE_VERSION
, "NTLMSSP_NEGOTIATE_VERSION");

1323 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
r3
, "r3");

1324 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
r2
, "r2");

1325 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
r1
, "r1");

1326 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_NEGOTIATE_128
, "NTLMSSP_NEGOTIATE_128");

1327 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_NEGOTIATE_KEY_EXCH
, "NTLMSSP_NEGOTIATE_KEY_EXCH");

1328 
	`APPEND_NEG_FLAG
(
°r
, 
Êags
, 
NTLMSSP_NEGOTIATE_56
, "NTLMSSP_NEGOTIATE_56");

1330  
	`g_°rög_‰ì
(
°r
, 
FALSE
);

1333 
gch¨
 *

1334 
	`sù_£c_¡lm_des¸ibe_vîsi⁄
(
vîsi⁄
 *
vî
) {

1335 
GSåög
* 
°r
 = 
	`g_°rög_√w
(
NULL
);

1336 
gch¨
 *
vî_desc
 = "";

1337 
gch¨
 *
¡lm_ªvisi⁄_desc
 = "";

1339 i‡(
vî
->
¥odu˘_maj‹_vîsi⁄
 == 6) {

1340 
vî_desc
 = "Windows Vista, Windows Server 2008, Windows 7 or Windows Server 2008 R2";

1341 } i‡(
vî
->
¥odu˘_maj‹_vîsi⁄
 =5 && vî->
¥odu˘_mö‹_vîsi⁄
 == 2) {

1342 
vî_desc
 = "Windows Server 2003";

1343 } i‡(
vî
->
¥odu˘_maj‹_vîsi⁄
 =5 && vî->
¥odu˘_mö‹_vîsi⁄
 == 1) {

1344 
vî_desc
 = "Windows XP SP2";

1347 i‡(
vî
->
¡lm_ªvisi⁄_cuºít
 == 0x0F) {

1348 
¡lm_ªvisi⁄_desc
 = "NTLMSSP_REVISION_W2K3";

1349 } i‡(
vî
->
¡lm_ªvisi⁄_cuºít
 == 0x0A) {

1350 
¡lm_ªvisi⁄_desc
 = "NTLMSSP_REVISION_W2K3_RC1";

1353 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\tproduct: %d.%d.%d (%s)\n",

1354 
vî
->
¥odu˘_maj‹_vîsi⁄
, vî->
¥odu˘_mö‹_vîsi⁄
, vî->
¥odu˘_buûd
, 
vî_desc
);

1355 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\äém_ªvisi⁄_cuºít: 0x%02X (%s)\n", 
vî
->
¡lm_ªvisi⁄_cuºít
, 
¡lm_ªvisi⁄_desc
);

1357  
	`g_°rög_‰ì
(
°r
, 
FALSE
);

1360 
gch¨
 *

1361 
	`sù_£c_¡lm_des¸ibe_smb_hódî
(
smb_hódî
 *
hódî
,

1362 c⁄° * 
«me
)

1364 
GSåög
* 
°r
 = 
	`g_°rög_√w
(
NULL
);

1366 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s.À¿ : %d\n", 
«me
, 
	`GUINT16_FROM_LE
(
hódî
->
Àn
));

1367 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s.maxÀn: %d\n", 
«me
, 
	`GUINT16_FROM_LE
(
hódî
->
maxÀn
));

1368 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s.off£t: %d\n", 
«me
, 
	`GUINT32_FROM_LE
(
hódî
->
off£t
));

1370  
	`g_°rög_‰ì
(
°r
, 
FALSE
);

1373 
gch¨
 *

1374 
	`sù_£c_¡lm_√gŸüã_mesßge_des¸ibe
(
√gŸüã_mesßge
 *
cmsg
)

1376 
GSåög
* 
°r
 = 
	`g_°rög_√w
(
NULL
);

1377 *
tmp
;

1379 
	`g_°rög_≠≥nd
(
°r
, (
tmp
 = 
	`sù_£c_¡lm_√gŸüã_Êags_des¸ibe
(
cmsg
->
Êags
)));

1380 
	`g_‰ì
(
tmp
);

1382 
	`g_°rög_≠≥nd
(
°r
, (
tmp
 = 
	`sù_£c_¡lm_des¸ibe_smb_hódî
(&(
cmsg
->
domaö
), "domain")));

1383 
	`g_‰ì
(
tmp
);

1385 
	`g_°rög_≠≥nd
(
°r
, (
tmp
 = 
	`sù_£c_¡lm_des¸ibe_smb_hódî
(&(
cmsg
->
ho°
), "host")));

1386 
	`g_‰ì
(
tmp
);

1388 
tmp
 = 
	`sù_£c_¡lm_des¸ibe_vîsi⁄
(&(
cmsg
->
vî
));

1389 
	`g_°rög_≠≥nd
(
°r
, 
tmp
);

1390 
	`g_‰ì
(
tmp
);

1392 i‡(
cmsg
->
domaö
.
Àn
 && cmsg->domaö.
off£t
) {

1393 
gch¨
 *
domaö
 = 
	`g_°∫dup
(((gch¨ *)
cmsg
 + 
	`GUINT32_FROM_LE
(cmsg->domaö.
off£t
)), 
	`GUINT16_FROM_LE
(cmsg->domaö.
Àn
));

1394 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\tdomaö: %s\n", 
domaö
);

1395 
	`g_‰ì
(
domaö
);

1398 i‡(
cmsg
->
ho°
.
Àn
 && cmsg->ho°.
off£t
) {

1399 
gch¨
 *
ho°
 = 
	`g_°∫dup
(((gch¨ *)
cmsg
 + 
	`GUINT32_FROM_LE
(cmsg->ho°.
off£t
)), 
	`GUINT16_FROM_LE
(cmsg->ho°.
Àn
));

1400 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\tho°: %s\n", 
ho°
);

1401 
	`g_‰ì
(
ho°
);

1404  
	`g_°rög_‰ì
(
°r
, 
FALSE
);

1408 
	`des¸ibe_av_∑ús
(
GSåög
* 
°r
, c⁄° *
av
)

1410 
	#AV_DESC
(
av_«me
) \

1412 
gch¨
 *
tmp
 = 
	`unicode_°rc⁄vc›y_back
(
av_vÆue
, 
av_Àn
); \

1413 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %s\n", 
av_«me
, 
tmp
); \

1414 
	`g_‰ì
(
tmp
); \

1415 }

	)

1417 
ALIGN_AV_LOOP_START


1419 
MsvAvNbCompuãrName
:

1420 
	`AV_DESC
("MsvAvNbComputerName");

1422 
MsvAvNbDomaöName
:

1423 
	`AV_DESC
("MsvAvNbDomainName");

1425 
MsvAvDnsCompuãrName
:

1426 
	`AV_DESC
("MsvAvDnsComputerName");

1428 
MsvAvDnsDomaöName
:

1429 
	`AV_DESC
("MsvAvDnsDomainName");

1431 
MsvAvDnsTªeName
:

1432 
	`AV_DESC
("MsvAvDnsTreeName");

1434 
MsvAvFœgs
:

1436 
guöt32
 
Êags
;

1439 
	`mem˝y
(&
Êags
, 
av_vÆue
, (
guöt32
));

1440 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %d\n", "MsvAvFœgs", 
	`GUINT32_FROM_LE
(
Êags
));

1443 
MsvAvTime°amp
:

1445 *
tmp
;

1446 
guöt64
 
time_vÆ
;

1447 
time_t
 
time_t_vÆ
;

1450 
	`mem˝y
(&
time_vÆ
, 
av_vÆue
, (time_val));

1451 
time_t_vÆ
 = 
	`TIME_VAL_TO_T
(
time_vÆ
);

1453 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %†- %s", "MsvAvTime°amp", (
tmp
 = 
	`buff_to_hex_°r
((
guöt8
 *Ë
av_vÆue
, 8)),

1454 
	`as˘ime
(
	`gmtime
(&
time_t_vÆ
)));

1455 
	`g_‰ì
(
tmp
);

1458 
MsAvRe°ri˘i⁄s
:

1459 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s\n", "MsAvRestrictions");

1461 
MsvAvT¨gëName
:

1462 
	`AV_DESC
("MsvAvTargetName");

1464 
MsvCh™√lBödögs
:

1465 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s\n", "MsvChannelBindings");

1468 
ALIGN_AV_LOOP_END
;

1471 
gch¨
 *

1472 
	`sù_£c_¡lm_authítiˇã_mesßge_des¸ibe
(
authítiˇã_mesßge
 *
cmsg
)

1474 
GSåög
* 
°r
 = 
	`g_°rög_√w
(
NULL
);

1475 *
tmp
;

1476 
gsize
 
vÆue_Àn
;

1477 
guöt8
 *
vÆue
;

1479 
	`g_°rög_≠≥nd
(
°r
, (
tmp
 = 
	`sù_£c_¡lm_√gŸüã_Êags_des¸ibe
(
cmsg
->
Êags
)));

1480 
	`g_‰ì
(
tmp
);

1482 
	`g_°rög_≠≥nd
(
°r
, (
tmp
 = 
	`sù_£c_¡lm_des¸ibe_smb_hódî
(&(
cmsg
->
lm_ª•
), "lm_resp")));

1483 
	`g_‰ì
(
tmp
);

1485 
	`g_°rög_≠≥nd
(
°r
, (
tmp
 = 
	`sù_£c_¡lm_des¸ibe_smb_hódî
(&(
cmsg
->
¡_ª•
), "nt_resp")));

1486 
	`g_‰ì
(
tmp
);

1488 
	`g_°rög_≠≥nd
(
°r
, (
tmp
 = 
	`sù_£c_¡lm_des¸ibe_smb_hódî
(&(
cmsg
->
domaö
), "domain")));

1489 
	`g_‰ì
(
tmp
);

1491 
	`g_°rög_≠≥nd
(
°r
, (
tmp
 = 
	`sù_£c_¡lm_des¸ibe_smb_hódî
(&(
cmsg
->
u£r
), "user")));

1492 
	`g_‰ì
(
tmp
);

1494 
	`g_°rög_≠≥nd
(
°r
, (
tmp
 = 
	`sù_£c_¡lm_des¸ibe_smb_hódî
(&(
cmsg
->
ho°
), "host")));

1495 
	`g_‰ì
(
tmp
);

1497 
	`g_°rög_≠≥nd
(
°r
, (
tmp
 = 
	`sù_£c_¡lm_des¸ibe_smb_hódî
(&(
cmsg
->
£ssi⁄_key
), "session_key")));

1498 
	`g_‰ì
(
tmp
);

1500 
tmp
 = 
	`sù_£c_¡lm_des¸ibe_vîsi⁄
(&(
cmsg
->
vî
));

1501 
	`g_°rög_≠≥nd
(
°r
, 
tmp
);

1502 
	`g_‰ì
(
tmp
);

1508 i‡(
cmsg
->
lm_ª•
.
Àn
 && cmsg->lm_ª•.
off£t
) {

1509 
vÆue_Àn
 = 
	`GUINT16_FROM_LE
(
cmsg
->
lm_ª•
.
Àn
);

1510 
vÆue
 = (
guöt8
 *)
cmsg
 + 
	`GUINT32_FROM_LE
(cmsg->
lm_ª•
.
off£t
);

1511 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %s\n", "lm_ª•", (
tmp
 = 
	`buff_to_hex_°r
(
vÆue
, 
vÆue_Àn
)));

1512 
	`g_‰ì
(
tmp
);

1515 i‡(
cmsg
->
¡_ª•
.
Àn
 && cmsg->¡_ª•.
off£t
) {

1516 
guöt16
 
¡_ª•_Àn_fuŒ
 = 
	`GUINT16_FROM_LE
(
cmsg
->
¡_ª•
.
Àn
);

1517 
¡_ª•_Àn
 = 
¡_ª•_Àn_fuŒ
;

1519 
vÆue_Àn
 = 
¡_ª•_Àn_fuŒ
;

1520 
vÆue
 = (
guöt8
 *)
cmsg
 + 
	`GUINT32_FROM_LE
(cmsg->
¡_ª•
.
off£t
);

1521 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %s\n", "¡_ª•Ñaw", (
tmp
 = 
	`buff_to_hex_°r
(
vÆue
, 
vÆue_Àn
)));

1522 
	`g_‰ì
(
tmp
);

1524 i‡(
¡_ª•_Àn
 > 24) {

1525 
¡_ª•_Àn
 = 16;

1528 
vÆue_Àn
 = 
¡_ª•_Àn
;

1529 
vÆue
 = (
guöt8
 *)
cmsg
 + 
	`GUINT32_FROM_LE
(cmsg->
¡_ª•
.
off£t
);

1530 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %s\n", "¡_ª•", (
tmp
 = 
	`buff_to_hex_°r
(
vÆue
, 
vÆue_Àn
)));

1531 
	`g_‰ì
(
tmp
);

1533 i‡(
¡_ª•_Àn_fuŒ
 > 24) {

1536 c⁄° 
guöt
 
off£t
 = 
	`GUINT32_FROM_LE
(
cmsg
->
¡_ª•
.offset) + 16;

1537 c⁄° 
guöt8
 *
ãmp
 = (guöt8 *)
cmsg
 + 
off£t
;

1538 c⁄° 
guöt
 
ª•⁄£_vîsi⁄
 = 
ãmp
[0];

1539 c⁄° 
guöt
 
hi_ª•⁄£_vîsi⁄
 = 
ãmp
[1];

1540 c⁄° 
guöt8
 *
˛õ¡_chÆÀnge
 = 
ãmp
 + 16;

1541 c⁄° 
guöt8
 *
èrgë_öfo
 = 
ãmp
 + 28;

1542 
guöt16
 
èrgë_öfo_Àn
 = 
¡_ª•_Àn_fuŒ
 - 16 - 32;

1543 
guöt64
 
time_vÆ
;

1544 
time_t
 
time_t_vÆ
;

1545 *
tmp
;

1547 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %s\n", "target_infoÑaw",

1548 (
tmp
 = 
	`buff_to_hex_°r
((
guöt8
 *)
èrgë_öfo
, 
èrgë_öfo_Àn
)));

1549 
	`g_‰ì
(
tmp
);

1552 
	`mem˝y
((
gch¨
 *)&
time_vÆ
, 
ãmp
+8, (time_val));

1553 
time_t_vÆ
 = 
	`TIME_VAL_TO_T
(
time_vÆ
);

1555 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %d\n", "ª•⁄£_vîsi⁄", 
ª•⁄£_vîsi⁄
);

1556 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %d\n", "hi_ª•⁄£_vîsi⁄", 
hi_ª•⁄£_vîsi⁄
);

1558 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %†- %s", "time", (
tmp
 = 
	`buff_to_hex_°r
((
guöt8
 *)&
time_vÆ
, 8)),

1559 
	`as˘ime
(
	`gmtime
(&
time_t_vÆ
)));

1560 
	`g_‰ì
(
tmp
);

1562 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %s\n", "˛õ¡_chÆÀnge", (
tmp
 = 
	`buff_to_hex_°r
((
guöt8
 *)
˛õ¡_chÆÀnge
, 8)));

1563 
	`g_‰ì
(
tmp
);

1565 
	`des¸ibe_av_∑ús
(
°r
, 
èrgë_öfo
);

1567 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s\n", "-----------Énd ofÇt_resp v2 -----------");

1571 i‡(
cmsg
->
domaö
.
Àn
 && cmsg->domaö.
off£t
) {

1572 
gch¨
 *
domaö
 = 
	`unicode_°rc⁄vc›y_back
(((gch¨ *)
cmsg
 + 
	`GUINT32_FROM_LE
(cmsg->domaö.
off£t
)), 
	`GUINT16_FROM_LE
(cmsg->domaö.
Àn
));

1573 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %s\n", "domaö", 
domaö
);

1574 
	`g_‰ì
(
domaö
);

1577 i‡(
cmsg
->
u£r
.
Àn
 && cmsg->u£r.
off£t
) {

1578 
gch¨
 *
u£r
 = 
	`unicode_°rc⁄vc›y_back
(((gch¨ *)
cmsg
 + 
	`GUINT32_FROM_LE
(cmsg->u£r.
off£t
)), 
	`GUINT16_FROM_LE
(cmsg->u£r.
Àn
));

1579 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %s\n", "u£r", 
u£r
);

1580 
	`g_‰ì
(
u£r
);

1583 i‡(
cmsg
->
ho°
.
Àn
 && cmsg->ho°.
off£t
) {

1584 
gch¨
 *
ho°
 = 
	`unicode_°rc⁄vc›y_back
(((gch¨ *)
cmsg
 + 
	`GUINT32_FROM_LE
(cmsg->ho°.
off£t
)), 
	`GUINT16_FROM_LE
(cmsg->ho°.
Àn
));

1585 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %s\n", "ho°", 
ho°
);

1586 
	`g_‰ì
(
ho°
);

1589 i‡(
cmsg
->
£ssi⁄_key
.
Àn
 && cmsg->£ssi⁄_key.
off£t
) {

1590 
vÆue_Àn
 = 
	`GUINT16_FROM_LE
(
cmsg
->
£ssi⁄_key
.
Àn
);

1591 
vÆue
 = (
guöt8
 *)
cmsg
 + 
	`GUINT32_FROM_LE
(cmsg->
£ssi⁄_key
.
off£t
);

1592 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %s\n", "£ssi⁄_key", (
tmp
 = 
	`buff_to_hex_°r
(
vÆue
, 
vÆue_Àn
)));

1593 
	`g_‰ì
(
tmp
);

1596  
	`g_°rög_‰ì
(
°r
, 
FALSE
);

1599 
gch¨
 *

1600 
	`sù_£c_¡lm_chÆÀnge_mesßge_des¸ibe
(
chÆÀnge_mesßge
 *
cmsg
)

1602 
GSåög
* 
°r
 = 
	`g_°rög_√w
(
NULL
);

1603 *
tmp
;

1605 
	`g_°rög_≠≥nd
(
°r
, (
tmp
 = 
	`sù_£c_¡lm_√gŸüã_Êags_des¸ibe
(
cmsg
->
Êags
)));

1606 
	`g_‰ì
(
tmp
);

1609 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %s\n", "£rvî_chÆÀnge", (
tmp
 = 
	`buff_to_hex_°r
(
cmsg
->
n⁄˚
, 8)));

1610 
	`g_‰ì
(
tmp
);

1612 
	`g_°rög_≠≥nd
(
°r
, (
tmp
 = 
	`sù_£c_¡lm_des¸ibe_smb_hódî
(&(
cmsg
->
èrgë_«me
), "target_name")));

1613 
	`g_‰ì
(
tmp
);

1615 
	`g_°rög_≠≥nd
(
°r
, (
tmp
 = 
	`sù_£c_¡lm_des¸ibe_smb_hódî
(&(
cmsg
->
èrgë_öfo
), "target_info")));

1616 
	`g_‰ì
(
tmp
);

1618 
	`g_°rög_≠≥nd
(
°r
, (
tmp
 = 
	`sù_£c_¡lm_des¸ibe_vîsi⁄
(&(
cmsg
->
vî
))));

1619 
	`g_‰ì
(
tmp
);

1621 i‡(
cmsg
->
èrgë_«me
.
Àn
 && cmsg->èrgë_«me.
off£t
) {

1622 
gch¨
 *
èrgë_«me
 = 
	`unicode_°rc⁄vc›y_back
(((gch¨ *)
cmsg
 + 
	`GUINT32_FROM_LE
(cmsg->èrgë_«me.
off£t
)), 
	`GUINT16_FROM_LE
(cmsg->èrgë_«me.
Àn
));

1623 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\â¨gë_«me: %s\n", 
èrgë_«me
);

1624 
	`g_‰ì
(
èrgë_«me
);

1627 i‡(
cmsg
->
èrgë_öfo
.
Àn
 && cmsg->èrgë_öfo.
off£t
) {

1628 
guöt8
 *
èrgë_öfo
 = (guöt8 *)
cmsg
 + 
	`GUINT32_FROM_LE
(cmsg->èrgë_öfo.
off£t
);

1629 
guöt16
 
èrgë_öfo_Àn
 = 
	`GUINT16_FROM_LE
(
cmsg
->
èrgë_öfo
.
Àn
);

1631 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %s\n", "èrgë_öfÿøw", (
tmp
 = 
	`buff_to_hex_°r
(
èrgë_öfo
, 
èrgë_öfo_Àn
)));

1632 
	`g_‰ì
(
tmp
);

1634 
	`des¸ibe_av_∑ús
(
°r
, 
èrgë_öfo
);

1637  
	`g_°rög_‰ì
(
°r
, 
FALSE
);

1640 
gch¨
 *

1641 
	`sù_£c_¡lm_mesßge_des¸ibe
(
SùSecBuf„r
 
buff
)

1643 
¡lm_mesßge
 *
msg
;

1644 
gch¨
 *
ªs
 = 
NULL
;

1646 i‡(
buff
.
Àngth
 =0 || buff.
vÆue
 =
NULL
 || buff.length < 12)  NULL;

1648 
msg
 = (
¡lm_mesßge
 *)
buff
.
vÆue
;

1649 if(!
	`sùe_°ªquÆ
("NTLMSSP", (*)
msg
)Ë 
NULL
;

1651 
	`GUINT32_FROM_LE
(
msg
->
ty≥
)) {

1652 1: 
ªs
 = 
	`sù_£c_¡lm_√gŸüã_mesßge_des¸ibe
((
√gŸüã_mesßge
 *)
msg
);

1654 2: 
ªs
 = 
	`sù_£c_¡lm_chÆÀnge_mesßge_des¸ibe
((
chÆÀnge_mesßge
 *)
msg
);

1656 3: 
ªs
 = 
	`sù_£c_¡lm_authítiˇã_mesßge_des¸ibe
((
authítiˇã_mesßge
 *)
msg
);

1660  
ªs
;

1666 
	s_c⁄ãxt_¡lm
 {

1667 
sù_£c_c⁄ãxt
 
comm⁄
;

1668 * 
domaö
;

1669 *
u£∫ame
;

1670 *
∑ssw‹d
;

1671 
°ï
;

1672 
guch¨
 *
˛õ¡_sign_key
;

1673 
guch¨
 *
£rvî_sign_key
;

1674 
guch¨
 *
˛õ¡_£Æ_key
;

1675 
guch¨
 *
£rvî_£Æ_key
;

1676 
guöt32
 
Êags
;

1677 } *
	tc⁄ãxt_¡lm
;

1680 
sù_uöt32


1681 
	`sù_£c_acquúe_¸ed__¡lm
(
SùSecC⁄ãxt
 
c⁄ãxt
,

1682 c⁄° *
domaö
,

1683 c⁄° *
u£∫ame
,

1684 c⁄° *
∑ssw‹d
)

1686 
c⁄ãxt_¡lm
 
˘x
 = (c⁄ãxt_¡lm)
c⁄ãxt
;

1689 i‡(!
domaö
 || !
u£∫ame
 || !
∑ssw‹d
)

1690  
SIP_SEC_E_INTERNAL_ERROR
;

1692 
˘x
->
domaö
 = 
	`g_°rdup
(domain);

1693 
˘x
->
u£∫ame
 = 
	`g_°rdup
(username);

1694 
˘x
->
∑ssw‹d
 = 
	`g_°rdup
(password);

1696  
SIP_SEC_E_OK
;

1699 
sù_uöt32


1700 
	`sù_£c_öô_£c_c⁄ãxt__¡lm
(
SùSecC⁄ãxt
 
c⁄ãxt
,

1701 
SùSecBuf„r
 
ö_buff
,

1702 
SùSecBuf„r
 *
out_buff
,

1703 
SIPE_UNUSED_PARAMETER
 c⁄° *
£rvi˚_«me
)

1705 
c⁄ãxt_¡lm
 
˘x
 = (c⁄ãxt_¡lmË
c⁄ãxt
;

1707 
	`SIPE_DEBUG_INFO_NOFORMAT
("sip_sec_init_sec_context__ntlm: in use");

1709 
˘x
->
°ï
++;

1710 i‡(
˘x
->
°ï
 == 1) {

1711 i‡(!
c⁄ãxt
->
is_c⁄√˘i⁄_ba£d
) {

1712 
out_buff
->
Àngth
 = 0;

1713 
out_buff
->
vÆue
 = 
NULL
;

1715 
	`sù_£c_¡lm_gí_√gŸüã
(
out_buff
);

1717  
SIP_SEC_I_CONTINUE_NEEDED
;

1720 
sù_uöt32
 
ªs
;

1721 
guch¨
 *
˛õ¡_sign_key
 = 
NULL
;

1722 
guch¨
 *
£rvî_sign_key
 = 
NULL
;

1723 
guch¨
 *
˛õ¡_£Æ_key
 = 
NULL
;

1724 
guch¨
 *
£rvî_£Æ_key
 = 
NULL
;

1725 
guch¨
 *
£rvî_chÆÀnge
 = 
NULL
;

1726 
guöt64
 
time_vÆ
 = 0;

1727 
guch¨
 *
èrgë_öfo
 = 
NULL
;

1728 
èrgë_öfo_Àn
 = 0;

1729 
guöt32
 
Êags
;

1730 
gch¨
 *
tmp
;

1732 i‡(!
ö_buff
.
vÆue
 || !ö_buff.
Àngth
) {

1733  
SIP_SEC_E_INTERNAL_ERROR
;

1736 
	`sù_£c_¡lm_∑r£_chÆÀnge
(
ö_buff
,

1737 &
Êags
,

1738 &
£rvî_chÆÀnge
,

1739 &
time_vÆ
,

1740 &
èrgë_öfo
,

1741 &
èrgë_öfo_Àn
);

1743 
ªs
 = 
	`sù_£c_¡lm_gí_authítiˇã
(

1744 &
˛õ¡_sign_key
,

1745 &
£rvî_sign_key
,

1746 &
˛õ¡_£Æ_key
,

1747 &
£rvî_£Æ_key
,

1748 
˘x
->
u£∫ame
,

1749 
˘x
->
∑ssw‹d
,

1750 (
tmp
 = 
	`g_ascii_°rup
(
	`g_gë_ho°_«me
(), -1)),

1751 
˘x
->
domaö
,

1752 
£rvî_chÆÀnge
,

1753 
time_vÆ
,

1754 
èrgë_öfo
,

1755 
èrgë_öfo_Àn
,

1756 
c⁄ãxt
->
is_c⁄√˘i⁄_ba£d
,

1757 
out_buff
,

1758 &
Êags
);

1759 
	`g_‰ì
(
£rvî_chÆÀnge
);

1760 
	`g_‰ì
(
èrgë_öfo
);

1761 
	`g_‰ì
(
tmp
);

1763 i‡(
ªs
 !
SIP_SEC_E_OK
) {

1764 
	`g_‰ì
(
˛õ¡_sign_key
);

1765 
	`g_‰ì
(
£rvî_sign_key
);

1766 
	`g_‰ì
(
˛õ¡_£Æ_key
);

1767 
	`g_‰ì
(
£rvî_£Æ_key
);

1768  
ªs
;

1771 
	`g_‰ì
(
˘x
->
˛õ¡_sign_key
);

1772 
˘x
->
˛õ¡_sign_key
 = client_sign_key;

1774 
	`g_‰ì
(
˘x
->
£rvî_sign_key
);

1775 
˘x
->
£rvî_sign_key
 = server_sign_key;

1777 
	`g_‰ì
(
˘x
->
˛õ¡_£Æ_key
);

1778 
˘x
->
˛õ¡_£Æ_key
 = client_seal_key;

1780 
	`g_‰ì
(
˘x
->
£rvî_£Æ_key
);

1781 
˘x
->
£rvî_£Æ_key
 = server_seal_key;

1783 
˘x
->
Êags
 = flags;

1784  
SIP_SEC_E_OK
;

1792 
sù_uöt32


1793 
	`sù_£c_make_sig«tuª__¡lm
(
SùSecC⁄ãxt
 
c⁄ãxt
,

1794 c⁄° *
mesßge
,

1795 
SùSecBuf„r
 *
sig«tuª
)

1797 
sig«tuª
->
Àngth
 = 16;

1798 
sig«tuª
->
vÆue
 = 
	`g_mÆloc0
(16);

1801 
	`sù_£c_¡lm_sùe_sig«tuª_make
(((
c⁄ãxt_¡lm
Ë
c⁄ãxt
)->
Êags
,

1802 
mesßge
,

1804 ((
c⁄ãxt_¡lm
Ë
c⁄ãxt
)->
˛õ¡_sign_key
,

1805 ((
c⁄ãxt_¡lm
Ë
c⁄ãxt
)->
˛õ¡_£Æ_key
,

1806 
sig«tuª
->
vÆue
);

1807  
SIP_SEC_E_OK
;

1814 
sù_uöt32


1815 
	`sù_£c_vîify_sig«tuª__¡lm
(
SùSecC⁄ãxt
 
c⁄ãxt
,

1816 c⁄° *
mesßge
,

1817 
SùSecBuf„r
 
sig«tuª
)

1819 
guöt8
 
mac
[16];

1820 
guöt32
 
øndom_∑d
 = 
	`GUINT32_FROM_LE
(((guöt32 *Ë
sig«tuª
.
vÆue
)[1]);

1822 
	`sù_£c_¡lm_sùe_sig«tuª_make
(((
c⁄ãxt_¡lm
Ë
c⁄ãxt
)->
Êags
,

1823 
mesßge
,

1824 
øndom_∑d
,

1825 ((
c⁄ãxt_¡lm
Ë
c⁄ãxt
)->
£rvî_sign_key
,

1826 ((
c⁄ãxt_¡lm
Ë
c⁄ãxt
)->
£rvî_£Æ_key
,

1827 
mac
);

1828 (
	`memcmp
(
sig«tuª
.
vÆue
, 
mac
, 16) ?

1829 
SIP_SEC_E_INTERNAL_ERROR
 :

1830 
SIP_SEC_E_OK
);

1834 
	`sù_£c_de°roy_£c_c⁄ãxt__¡lm
(
SùSecC⁄ãxt
 
c⁄ãxt
)

1836 
c⁄ãxt_¡lm
 
˘x
 = (c⁄ãxt_¡lmË
c⁄ãxt
;

1838 
	`g_‰ì
(
˘x
->
domaö
);

1839 
	`g_‰ì
(
˘x
->
u£∫ame
);

1840 
	`g_‰ì
(
˘x
->
∑ssw‹d
);

1841 
	`g_‰ì
(
˘x
->
˛õ¡_sign_key
);

1842 
	`g_‰ì
(
˘x
->
£rvî_sign_key
);

1843 
	`g_‰ì
(
˘x
->
˛õ¡_£Æ_key
);

1844 
	`g_‰ì
(
˘x
->
£rvî_£Æ_key
);

1845 
	`g_‰ì
(
˘x
);

1848 
SùSecC⁄ãxt


1849 
	`sù_£c_¸óã_c⁄ãxt__¡lm
(
SIPE_UNUSED_PARAMETER
 
guöt
 
ty≥
)

1851 
c⁄ãxt_¡lm
 
c⁄ãxt
 = 
	`g_mÆloc0
((
_c⁄ãxt_¡lm
));

1852 i‡(!
c⁄ãxt
Ë(
NULL
);

1854 
c⁄ãxt
->
comm⁄
.
acquúe_¸ed_func
 = 
sù_£c_acquúe_¸ed__¡lm
;

1855 
c⁄ãxt
->
comm⁄
.
öô_c⁄ãxt_func
 = 
sù_£c_öô_£c_c⁄ãxt__¡lm
;

1856 
c⁄ãxt
->
comm⁄
.
de°roy_c⁄ãxt_func
 = 
sù_£c_de°roy_£c_c⁄ãxt__¡lm
;

1857 
c⁄ãxt
->
comm⁄
.
make_sig«tuª_func
 = 
sù_£c_make_sig«tuª__¡lm
;

1858 
c⁄ãxt
->
comm⁄
.
vîify_sig«tuª_func
 = 
sù_£c_vîify_sig«tuª__¡lm
;

1860 ((
SùSecC⁄ãxt
Ë
c⁄ãxt
);

1863 
	`sù_£c_öô__¡lm
()

1865 #ifde‡
HAVE_LANGINFO_CODESET


1866 c⁄° *
sys_˝
 = 
	`∆_œngöfo
(
CODESET
);

1868 c⁄° *
sys_˝
 = 
SIPE_DEFAULT_CODESET
;

1872 i‡(!
sys_˝
) sys_cp = "UTF-8";

1874 
c⁄vît_‰om_utf16À
 = 
	`g_ic⁄v_›í
(
sys_˝
, "UTF-16LE");

1875 i‡(
c⁄vît_‰om_utf16À
 =(
GIC⁄v
)-1) {

1876 
	`SIPE_DEBUG_ERROR
("g_iconv_open from UTF-16LEÅo %s failed",

1877 
sys_˝
);

1880 
c⁄vît_to_utf16À
 = 
	`g_ic⁄v_›í
("UTF-16LE", 
sys_˝
);

1881 i‡(
c⁄vît_‰om_utf16À
 =(
GIC⁄v
)-1) {

1882 
	`SIPE_DEBUG_ERROR
("g_iconv_open from %sÅo UTF-16LE failed",

1883 
sys_˝
);

1887 
	`sù_£c_de°roy__¡lm
()

1889 
	`g_ic⁄v_˛o£
(
c⁄vît_to_utf16À
);

1890 
	`g_ic⁄v_˛o£
(
c⁄vît_‰om_utf16À
);

	@src/core/sip-sec-ntlm.h

25 
SùSecC⁄ãxt


26 
sù_£c_¸óã_c⁄ãxt__¡lm
(
guöt
 
ty≥
);

28 
sù_£c_öô__¡lm
();

29 
sù_£c_de°roy__¡lm
();

34 
gch¨
 *

35 
sù_£c_¡lm_mesßge_des¸ibe
(
SùSecBuf„r
 
buff
);

39 
NTOWFv2
 (c⁄° * 
∑ssw‹d
, c⁄° *
u£r
, c⁄° *
domaö
, *
ªsu…
);

	@src/core/sip-sec-sspi.c

24 
	~<°dio.h
>

25 
	~<wödows.h
>

26 
	~<Ωc.h
>

27 
	~<£curôy.h
>

29 
	~<glib.h
>

31 
	~"sù-£c.h
"

32 
	~"sù-£c-mech.h
"

33 
	~"sù-£c-s•i.h
"

34 
	~"sùe-backíd.h
"

37 
	#SSPI_MECH_NTLM
 "NTLM"

	)

38 
	#SSPI_MECH_KERBEROS
 "Kîbîos"

	)

39 
	#SSPI_MECH_NEGOTIATE
 "NegŸüã"

	)

41 
	#ISC_REQ_IDENTIFY
 0x00002000

	)

43 
	s_c⁄ãxt_s•i
 {

44 
sù_£c_c⁄ãxt
 
	mcomm⁄
;

45 
CªdH™dÀ
* 
	m¸ed_s•i
;

46 
CtxtH™dÀ
* 
	m˘x_s•i
;

48 c⁄° *
	mmech
;

49 } *
	tc⁄ãxt_s•i
;

52 
sù_£c_gë_öãrvÆ_‰om_now_£c
(
TimeSèmp
 
time°amp
);

55 
sù_£c_s•i_¥öt_îr‹
(c⁄° *
func
,

56 
SECURITY_STATUS
 
ªt
);

60 
	$sù_£c_de°roy_s•i_c⁄ãxt
(
c⁄ãxt_s•i
 
c⁄ãxt
)

62 i‡(
c⁄ãxt
->
˘x_s•i
)

63 
	`DñëeSecurôyC⁄ãxt
(
c⁄ãxt
->
˘x_s•i
);

64 i‡(
c⁄ãxt
->
¸ed_s•i
)

65 
	`FªeCªdítülsH™dÀ
(
c⁄ãxt
->
¸ed_s•i
);

66 
	}
}

70 
sù_uöt32


71 
	$sù_£c_acquúe_¸ed__s•i
(
SùSecC⁄ãxt
 
c⁄ãxt
,

72 c⁄° *
domaö
,

73 c⁄° *
u£∫ame
,

74 c⁄° *
∑ssw‹d
)

76 
SECURITY_STATUS
 
ªt
;

77 
TimeSèmp
 
expúy
;

78 
SEC_WINNT_AUTH_IDENTITY
 
auth_idítôy
;

79 
c⁄ãxt_s•i
 
˘x
 = (c⁄ãxt_s•i)
c⁄ãxt
;

80 
CªdH™dÀ
 *
¸ed_h™dÀ
;

82 i‡(
u£∫ame
) {

83 i‡(!
∑ssw‹d
) {

84  
SIP_SEC_E_INTERNAL_ERROR
;

87 
	`mem£t
(&
auth_idítôy
, 0, (auth_identity));

88 
auth_idítôy
.
Fœgs
 = 
SEC_WINNT_AUTH_IDENTITY_ANSI
;

90 i‡–
domaö
 && (
	`°æí
(domain) > 0) ) {

91 
auth_idítôy
.
Domaö
 = (*)
domaö
;

92 
auth_idítôy
.
DomaöLígth
 = 
	`°æí
(
domaö
);

95 
auth_idítôy
.
U£r
 = (*)
u£∫ame
;

96 
auth_idítôy
.
U£rLígth
 = 
	`°æí
(
u£∫ame
);

98 
auth_idítôy
.
Passw‹d
 = (*)
∑ssw‹d
;

99 
auth_idítôy
.
Passw‹dLígth
 = 
	`°æí
(
∑ssw‹d
);

102 
¸ed_h™dÀ
 = 
	`g_mÆloc0
((
CªdH™dÀ
));

104 
ªt
 = 
	`AcquúeCªdítülsH™dÀ
–
NULL
,

105 (
SEC_CHAR
 *)
˘x
->
mech
,

106 
SECPKG_CRED_OUTBOUND
,

107 
NULL
,

108 (
c⁄ãxt
->
sso
 || !
u£∫ame
Ë? 
NULL
 : &
auth_idítôy
,

109 
NULL
,

110 
NULL
,

111 
¸ed_h™dÀ
,

112 &
expúy


115 i‡(
ªt
 !
SEC_E_OK
) {

116 
	`sù_£c_s•i_¥öt_îr‹
("sù_£c_acquúe_¸ed__s•i: AcquúeCªdítülsH™dÀ", 
ªt
);

117 
˘x
->
¸ed_s•i
 = 
NULL
;

118  
SIP_SEC_E_INTERNAL_ERROR
;

120 
˘x
->
¸ed_s•i
 = 
¸ed_h™dÀ
;

121  
SIP_SEC_E_OK
;

123 
	}
}

125 
sù_uöt32


126 
	$sù_£c_öô_£c_c⁄ãxt__s•i
(
SùSecC⁄ãxt
 
c⁄ãxt
,

127 
SùSecBuf„r
 
ö_buff
,

128 
SùSecBuf„r
 *
out_buff
,

129 c⁄° *
£rvi˚_«me
)

131 
TimeSèmp
 
expúy
;

132 
SecBuf„rDesc
 
öput_desc
, 
ouçut_desc
;

133 
SecBuf„r
 
ö_tokí
, 
out_tokí
;

134 
SECURITY_STATUS
 
ªt
;

135 
ULONG
 
ªq_Êags
;

136 
ULONG
 
ªt_Êags
;

137 
c⁄ãxt_s•i
 
˘x
 = (c⁄ãxt_s•i)
c⁄ãxt
;

138 
CtxtH™dÀ
* 
out_c⁄ãxt
 = 
	`g_mÆloc0
((CtxtHandle));

140 
	`SIPE_DEBUG_INFO_NOFORMAT
("sip_sec_init_sec_context__sspi: in use");

142 
öput_desc
.
cBuf„rs
 = 1;

143 
öput_desc
.
pBuf„rs
 = &
ö_tokí
;

144 
öput_desc
.
ulVîsi⁄
 = 
SECBUFFER_VERSION
;

147 
ö_tokí
.
Buf„rTy≥
 = 
SECBUFFER_TOKEN
;

148 
ö_tokí
.
cbBuf„r
 = 
ö_buff
.
Àngth
;

149 
ö_tokí
.
pvBuf„r
 = 
ö_buff
.
vÆue
;

151 
ouçut_desc
.
cBuf„rs
 = 1;

152 
ouçut_desc
.
pBuf„rs
 = &
out_tokí
;

153 
ouçut_desc
.
ulVîsi⁄
 = 
SECBUFFER_VERSION
;

156 
out_tokí
.
Buf„rTy≥
 = 
SECBUFFER_TOKEN
;

157 
out_tokí
.
cbBuf„r
 = 0;

158 
out_tokí
.
pvBuf„r
 = 
NULL
;

160 
ªq_Êags
 = (
ISC_REQ_ALLOCATE_MEMORY
 |

161 
ISC_REQ_INTEGRITY
 |

162 
ISC_REQ_IDENTIFY
);

164 i‡(
˘x
->
mech
 && !
	`°rcmp
(˘x->mech, 
SSPI_MECH_NTLM
) &&

165 !
c⁄ãxt
->
is_c⁄√˘i⁄_ba£d
)

167 
ªq_Êags
 |(
ISC_REQ_DATAGRAM
);

170 
ªt
 = 
	`InôülizeSecurôyC⁄ãxt
(
˘x
->
¸ed_s•i
,

171 
˘x
->
˘x_s•i
,

172 (
SEC_CHAR
 *)
£rvi˚_«me
,

173 
ªq_Êags
,

175 
SECURITY_NATIVE_DREP
,

176 &
öput_desc
,

178 
out_c⁄ãxt
,

179 &
ouçut_desc
,

180 &
ªt_Êags
,

181 &
expúy


184 i‡(
ªt
 !
SEC_E_OK
 &&Ñë !
SEC_I_CONTINUE_NEEDED
) {

185 
	`sù_£c_de°roy_s•i_c⁄ãxt
(
˘x
);

186 
	`sù_£c_s•i_¥öt_îr‹
("sù_£c_öô_£c_c⁄ãxt__s•i: InôülizeSecurôyC⁄ãxt", 
ªt
);

187  
SIP_SEC_E_INTERNAL_ERROR
;

190 
out_buff
->
Àngth
 = 
out_tokí
.
cbBuf„r
;

191 
out_buff
->
vÆue
 = 
NULL
;

192 i‡(
out_tokí
.
cbBuf„r
) {

193 
out_buff
->
vÆue
 = 
	`g_mÆloc0
(
out_tokí
.
cbBuf„r
);

194 
	`memmove
(
out_buff
->
vÆue
, 
out_tokí
.
pvBuf„r
, out_tokí.
cbBuf„r
);

195 
	`FªeC⁄ãxtBuf„r
(
out_tokí
.
pvBuf„r
);

198 
˘x
->
˘x_s•i
 = 
out_c⁄ãxt
;

199 i‡(
˘x
->
mech
 && !
	`°rcmp
(˘x->mech, 
SSPI_MECH_KERBEROS
)) {

200 
c⁄ãxt
->
expúes
 = 
	`sù_£c_gë_öãrvÆ_‰om_now_£c
(
expúy
);

203 i‡(
ªt
 =
SEC_I_CONTINUE_NEEDED
) {

204  
SIP_SEC_I_CONTINUE_NEEDED
;

206  
SIP_SEC_E_OK
;

208 
	}
}

211 
	$sù_£c_de°roy_£c_c⁄ãxt__s•i
(
SùSecC⁄ãxt
 
c⁄ãxt
)

213 
	`sù_£c_de°roy_s•i_c⁄ãxt
((
c⁄ãxt_s•i
)
c⁄ãxt
);

214 
	`g_‰ì
(
c⁄ãxt
);

215 
	}
}

221 
sù_uöt32


222 
	$sù_£c_make_sig«tuª__s•i
(
SùSecC⁄ãxt
 
c⁄ãxt
,

223 c⁄° *
mesßge
,

224 
SùSecBuf„r
 *
sig«tuª
)

226 
SecBuf„rDesc
 
buffs_desc
;

227 
SecBuf„r
 
buffs
[2];

228 
SECURITY_STATUS
 
ªt
;

229 
SecPkgC⁄ãxt_Sizes
 
c⁄ãxt_sizes
;

230 *
sig«tuª_buff
;

231 
size_t
 
sig«tuª_buff_Àngth
;

232 
c⁄ãxt_s•i
 
˘x
 = (c⁄ãxt_s•iË
c⁄ãxt
;

234 
ªt
 = 
	`QuîyC⁄ãxtAâribuãs
(
˘x
->
˘x_s•i
,

235 
SECPKG_ATTR_SIZES
,

236 &
c⁄ãxt_sizes
);

238 i‡(
ªt
 !
SEC_E_OK
) {

239 
	`sù_£c_s•i_¥öt_îr‹
("sù_£c_make_sig«tuª__s•i: QuîyC⁄ãxtAâribuãs", 
ªt
);

240  
SIP_SEC_E_INTERNAL_ERROR
;

243 
sig«tuª_buff_Àngth
 = 
c⁄ãxt_sizes
.
cbMaxSig«tuª
;

244 
sig«tuª_buff
 = 
	`g_mÆloc0
(
sig«tuª_buff_Àngth
);

246 
buffs_desc
.
cBuf„rs
 = 2;

247 
buffs_desc
.
pBuf„rs
 = 
buffs
;

248 
buffs_desc
.
ulVîsi⁄
 = 
SECBUFFER_VERSION
;

251 
buffs
[0].
Buf„rTy≥
 = 
SECBUFFER_DATA
;

252 
buffs
[0].
cbBuf„r
 = 
	`°æí
(
mesßge
);

253 
buffs
[0].
pvBuf„r
 = (
PVOID
)
mesßge
;

256 
buffs
[1].
Buf„rTy≥
 = 
SECBUFFER_TOKEN
;

257 
buffs
[1].
cbBuf„r
 = 
sig«tuª_buff_Àngth
;

258 
buffs
[1].
pvBuf„r
 = 
sig«tuª_buff
;

260 
ªt
 = 
	`MakeSig«tuª
(
˘x
->
˘x_s•i
,

261 (
ULONG
)0,

262 &
buffs_desc
,

264 i‡(
ªt
 !
SEC_E_OK
) {

265 
	`sù_£c_s•i_¥öt_îr‹
("sù_£c_make_sig«tuª__s•i: MakeSig«tuª", 
ªt
);

266 
	`g_‰ì
(
sig«tuª_buff
);

267  
SIP_SEC_E_INTERNAL_ERROR
;

270 
sig«tuª
->
vÆue
 = 
sig«tuª_buff
;

271 
sig«tuª
->
Àngth
 = 
buffs
[1].
cbBuf„r
;

273  
SIP_SEC_E_OK
;

274 
	}
}

280 
sù_uöt32


281 
	$sù_£c_vîify_sig«tuª__s•i
(
SùSecC⁄ãxt
 
c⁄ãxt
,

282 c⁄° *
mesßge
,

283 
SùSecBuf„r
 
sig«tuª
)

285 
SecBuf„rDesc
 
buffs_desc
;

286 
SecBuf„r
 
buffs
[2];

287 
SECURITY_STATUS
 
ªt
;

289 
buffs_desc
.
cBuf„rs
 = 2;

290 
buffs_desc
.
pBuf„rs
 = 
buffs
;

291 
buffs_desc
.
ulVîsi⁄
 = 
SECBUFFER_VERSION
;

294 
buffs
[0].
Buf„rTy≥
 = 
SECBUFFER_DATA
;

295 
buffs
[0].
cbBuf„r
 = 
	`°æí
(
mesßge
);

296 
buffs
[0].
pvBuf„r
 = (
PVOID
)
mesßge
;

299 
buffs
[1].
Buf„rTy≥
 = 
SECBUFFER_TOKEN
;

300 
buffs
[1].
cbBuf„r
 = 
sig«tuª
.
Àngth
;

301 
buffs
[1].
pvBuf„r
 = 
sig«tuª
.
vÆue
;

303 
ªt
 = 
	`VîifySig«tuª
(((
c⁄ãxt_s•i
)
c⁄ãxt
)->
˘x_s•i
,

304 &
buffs_desc
,

308 i‡(
ªt
 !
SEC_E_OK
) {

309 
	`sù_£c_s•i_¥öt_îr‹
("sù_£c_vîify_sig«tuª__s•i: VîifySig«tuª", 
ªt
);

310  
SIP_SEC_E_INTERNAL_ERROR
;

313  
SIP_SEC_E_OK
;

314 
	}
}

316 
SùSecC⁄ãxt


317 
	$sù_£c_¸óã_c⁄ãxt__s•i
(
guöt
 
ty≥
)

319 
c⁄ãxt_s•i
 
c⁄ãxt
 = 
	`g_mÆloc0
((
_c⁄ãxt_s•i
));

320 i‡(!
c⁄ãxt
Ë(
NULL
);

322 
c⁄ãxt
->
comm⁄
.
acquúe_¸ed_func
 = 
sù_£c_acquúe_¸ed__s•i
;

323 
c⁄ãxt
->
comm⁄
.
öô_c⁄ãxt_func
 = 
sù_£c_öô_£c_c⁄ãxt__s•i
;

324 
c⁄ãxt
->
comm⁄
.
de°roy_c⁄ãxt_func
 = 
sù_£c_de°roy_£c_c⁄ãxt__s•i
;

325 
c⁄ãxt
->
comm⁄
.
make_sig«tuª_func
 = 
sù_£c_make_sig«tuª__s•i
;

326 
c⁄ãxt
->
comm⁄
.
vîify_sig«tuª_func
 = 
sù_£c_vîify_sig«tuª__s•i
;

327 
c⁄ãxt
->
mech
 = (
ty≥
 =
AUTH_TYPE_NTLM
Ë? 
SSPI_MECH_NTLM
 :

328 ((
ty≥
 =
AUTH_TYPE_KERBEROS
Ë? 
SSPI_MECH_KERBEROS
 : 
SSPI_MECH_NEGOTIATE
);

330 ((
SùSecC⁄ãxt
Ë
c⁄ãxt
);

331 
	}
}

339 
	$sù_£c_gë_öãrvÆ_‰om_now_£c
(
TimeSèmp
 
time°amp
)

341 
SYSTEMTIME
 
°Now
;

342 
FILETIME
 
·Now
;

343 
ULARGE_INTEGER
 
uliNow
, 
uliTo
;

345 
	`GëLoˇlTime
(&
°Now
);

346 
	`Sy°emTimeToFûeTime
(&
°Now
, &
·Now
);

348 
uliNow
.
LowP¨t
 = 
·Now
.
dwLowD©eTime
;

349 
uliNow
.
HighP¨t
 = 
·Now
.
dwHighD©eTime
;

351 
uliTo
.
LowP¨t
 = 
time°amp
.LowPart;

352 
uliTo
.
HighP¨t
 = 
time°amp
.HighPart;

354  ()((
uliTo
.
QuadP¨t
 - 
uliNow
.QuadPart)/10/1000/1000);

355 
	}
}

358 
	$sù_£c_s•i_¥öt_îr‹
(c⁄° *
func
,

359 
SECURITY_STATUS
 
ªt
)

361 *
îr‹_mesßge
;

362 *
buff
;

363 
buff_Àngth
;

365 
buff_Àngth
 = 
	`F‹m©Mesßge
(
FORMAT_MESSAGE_FROM_SYSTEM
 |

366 
FORMAT_MESSAGE_ALLOCATE_BUFFER
 |

367 
FORMAT_MESSAGE_IGNORE_INSERTS
,

369 
ªt
,

371 (
LPTSTR
)&
buff
,

374 
îr‹_mesßge
 = 
	`g_°∫dup
(
buff
, 
buff_Àngth
);

375 
	`LoˇlFªe
(
buff
);

377 
	`¥ötf
("SSPI ERROR [%d] i¿%s: %s", ()
ªt
, 
func
, 
îr‹_mesßge
);

378 
	`g_‰ì
(
îr‹_mesßge
);

379 
	}
}

	@src/core/sip-sec-sspi.h

24 
SùSecC⁄ãxt


25 
sù_£c_¸óã_c⁄ãxt__s•i
(
guöt
 
ty≥
);

	@src/core/sip-sec.c

25 #ifde‡
HAVE_CONFIG_H


26 
	~"c⁄fig.h
"

29 
	~<°dlib.h
>

30 
	~<°rög.h
>

31 
	~<°dio.h
>

32 
	~<time.h
>

34 
	~<glib.h
>

36 
	~"sùe-comm⁄.h
"

37 
	~"sù-£c.h
"

38 
	~"sùe-backíd.h
"

39 
	~"sùe-utûs.h
"

41 
	~"sù-£c-mech.h
"

42 
	~"sù-£c-¡lm.h
"

43 #i‚de‡
_WIN32


44 
	#sù_£c_¸óã_c⁄ãxt__NTLM
 
sù_£c_¸óã_c⁄ãxt__¡lm


	)

45 
	#sù_£c_¸óã_c⁄ãxt__NegŸüã
 
sù_£c_¸óã_c⁄ãxt__NONE


	)

47 #ifde‡
HAVE_LIBKRB5


48 
	~"sù-£c-krb5.h
"

49 
	#sù_£c_¸óã_c⁄ãxt__Kîbîos
 
sù_£c_¸óã_c⁄ãxt__krb5


	)

51 
	#sù_£c_¸óã_c⁄ãxt__Kîbîos
 
sù_£c_¸óã_c⁄ãxt__NONE


	)

55 #ifde‡
HAVE_LIBKRB5


56 
	~"sù-£c-s•i.h
"

57 
	#sù_£c_¸óã_c⁄ãxt__NTLM
 
sù_£c_¸óã_c⁄ãxt__s•i


	)

58 
	#sù_£c_¸óã_c⁄ãxt__NegŸüã
 
sù_£c_¸óã_c⁄ãxt__s•i


	)

59 
	#sù_£c_¸óã_c⁄ãxt__Kîbîos
 
sù_£c_¸óã_c⁄ãxt__s•i


	)

61 
	#sù_£c_¸óã_c⁄ãxt__NTLM
 
sù_£c_¸óã_c⁄ãxt__¡lm


	)

62 
	#sù_£c_¸óã_c⁄ãxt__NegŸüã
 
sù_£c_¸óã_c⁄ãxt__NONE


	)

63 
	#sù_£c_¸óã_c⁄ãxt__Kîbîos
 
sù_£c_¸óã_c⁄ãxt__NONE


	)

69 
SùSecC⁄ãxt


70 
	$sù_£c_¸óã_c⁄ãxt__NONE
(
SIPE_UNUSED_PARAMETER
 
guöt
 
ty≥
)

72 (
NULL
);

73 
	}
}

76 
SùSecC⁄ãxt


77 
	$sù_£c_¸óã_c⁄ãxt
(
guöt
 
ty≥
,

78 c⁄° 
sso
,

79 
is_c⁄√˘i⁄_ba£d
,

80 c⁄° *
domaö
,

81 c⁄° *
u£∫ame
,

82 c⁄° *
∑ssw‹d
)

84 
SùSecC⁄ãxt
 
c⁄ãxt
 = 
NULL
;

87 
sù_£c_¸óã_c⁄ãxt_func
 c⁄° 
auth_to_hook
[] = {

88 
sù_£c_¸óã_c⁄ãxt__NONE
,

89 
sù_£c_¸óã_c⁄ãxt__NONE
,

90 
sù_£c_¸óã_c⁄ãxt__NTLM
,

91 
sù_£c_¸óã_c⁄ãxt__Kîbîos
,

92 
sù_£c_¸óã_c⁄ãxt__NegŸüã
,

95 
c⁄ãxt
 = (*(
auth_to_hook
[
ty≥
]))(type);

96 i‡(
c⁄ãxt
) {

97 
sù_uöt32
 
ªt
;

99 
c⁄ãxt
->
sso
 = sso;

100 
c⁄ãxt
->
is_c⁄√˘i⁄_ba£d
 = is_connection_based;

102 
ªt
 = (*
c⁄ãxt
->
acquúe_¸ed_func
)(c⁄ãxt, 
domaö
, 
u£∫ame
, 
∑ssw‹d
);

103 i‡(
ªt
 !
SIP_SEC_E_OK
) {

104 
	`SIPE_DEBUG_INFO_NOFORMAT
("ERROR: sip_sec_init_context failedÅoácquire credentials.");

105 (*
c⁄ãxt
->
de°roy_c⁄ãxt_func
)(context);

106 
c⁄ãxt
 = 
NULL
;

110 (
c⁄ãxt
);

111 
	}
}

114 
	$sù_£c_öô_c⁄ãxt_°ï
(
SùSecC⁄ãxt
 
c⁄ãxt
,

115 c⁄° *
èrgë
,

116 c⁄° *
öput_toked_ba£64
,

117 **
ouçut_toked_ba£64
,

118 *
expúes
)

120 
sù_uöt32
 
ªt
 = 
SIP_SEC_E_INTERNAL_ERROR
;

122 i‡(
c⁄ãxt
) {

123 
SùSecBuf„r
 
ö_buff
 = {0, 
NULL
};

124 
SùSecBuf„r
 
out_buff
 = {0, 
NULL
};

125 *
tmp
;

128 i‡(
öput_toked_ba£64
) {

129 
ö_buff
.
vÆue
 = 
	`g_ba£64_decode
(
öput_toked_ba£64
, &ö_buff.
Àngth
);

131 
tmp
 = 
	`sù_£c_¡lm_mesßge_des¸ibe
(
ö_buff
);

132 i‡(
tmp
) {

133 
	`SIPE_DEBUG_INFO
("sù_£c_öô_c⁄ãxt_°ï: ChÆÀngêmesßgêis:\n%s", 
tmp
);

135 
	`g_‰ì
(
tmp
);

138 
ªt
 = (*
c⁄ãxt
->
öô_c⁄ãxt_func
)(c⁄ãxt, 
ö_buff
, &
out_buff
, 
èrgë
);

140 i‡(
öput_toked_ba£64
)

141 
	`g_‰ì
(
ö_buff
.
vÆue
);

143 i‡(
ªt
 =
SIP_SEC_E_OK
 ||Ñë =
SIP_SEC_I_CONTINUE_NEEDED
) {

144 *
ouçut_toked_ba£64
 = 
	`g_ba£64_ícode
(
out_buff
.
vÆue
, out_buff.
Àngth
);

146 i‡(
out_buff
.
Àngth
 > 0 && out_buff.
vÆue
) {

147 
tmp
 = 
	`sù_£c_¡lm_mesßge_des¸ibe
(
out_buff
);

148 i‡(
tmp
) {

149 
	`SIPE_DEBUG_INFO
("sù_£c_öô_c⁄ãxt_°ï: NegŸüã o∏Authítiˇã mesßgêis:\n%s", 
tmp
);

151 
	`g_‰ì
(
tmp
);

154 
	`g_‰ì
(
out_buff
.
vÆue
);

157 i‡(
expúes
) {

158 *
expúes
 = 
c⁄ãxt
->expires;

162  
ªt
;

163 
	}
}

166 
	$sù_£c_öô_c⁄ãxt
(
SùSecC⁄ãxt
 *
c⁄ãxt
,

167 *
expúes
,

168 
guöt
 
ty≥
,

169 c⁄° 
sso
,

170 c⁄° *
domaö
,

171 c⁄° *
u£∫ame
,

172 c⁄° *
∑ssw‹d
,

173 c⁄° *
èrgë
,

174 c⁄° *
öput_toked_ba£64
)

176 
sù_uöt32
 
ªt
;

177 *
ouçut_toked_ba£64
 = 
NULL
;

178 
exp
;

180 *
c⁄ãxt
 = 
	`sù_£c_¸óã_c⁄ãxt
(
ty≥
,

181 
sso
,

183 
domaö
,

184 
u£∫ame
,

185 
∑ssw‹d
);

186 i‡(!*
c⁄ãxt
) {

187 
	`SIPE_DEBUG_INFO_NOFORMAT
("ERROR: sip_sec_init_context: failed sip_sec_create_context()");

188  
NULL
;

191 
ªt
 = 
	`sù_£c_öô_c⁄ãxt_°ï
(*
c⁄ãxt
,

192 
èrgë
,

193 
NULL
,

194 &
ouçut_toked_ba£64
,

195 &
exp
);

198 i‡(
ªt
 =
SIP_SEC_I_CONTINUE_NEEDED
) {

199 
	`g_‰ì
(
ouçut_toked_ba£64
);

200 
ªt
 = 
	`sù_£c_öô_c⁄ãxt_°ï
(*
c⁄ãxt
,

201 
èrgë
,

202 
öput_toked_ba£64
,

203 &
ouçut_toked_ba£64
,

204 &
exp
);

207 i‡(
expúes
) {

208 *
expúes
 = 
exp
;

211  
ouçut_toked_ba£64
;

212 
	}
}

215 
	$sù_£c_de°roy_c⁄ãxt
(
SùSecC⁄ãxt
 
c⁄ãxt
)

217 i‡(
c⁄ãxt
Ë(*c⁄ãxt->
de°roy_c⁄ãxt_func
)(context);

218 
	}
}

220 * 
	$sù_£c_make_sig«tuª
(
SùSecC⁄ãxt
 
c⁄ãxt
, c⁄° *
mesßge
)

222 
SùSecBuf„r
 
sig«tuª
;

223 *
sig«tuª_hex
;

225 if(((*
c⁄ãxt
->
make_sig«tuª_func
)(c⁄ãxt, 
mesßge
, &
sig«tuª
)Ë!
SIP_SEC_E_OK
) {

226 
	`SIPE_DEBUG_INFO_NOFORMAT
("ERROR: sip_sec_make_signature failed. UnableÅo sign message!");

227  
NULL
;

229 
sig«tuª_hex
 = 
	`buff_to_hex_°r
(
sig«tuª
.
vÆue
, sig«tuª.
Àngth
);

230 
	`g_‰ì
(
sig«tuª
.
vÆue
);

231  
sig«tuª_hex
;

232 
	}
}

234 
	$sù_£c_vîify_sig«tuª
(
SùSecC⁄ãxt
 
c⁄ãxt
, c⁄° *
mesßge
, c⁄° *
sig«tuª_hex
)

236 
SùSecBuf„r
 
sig«tuª
;

237 
sù_uöt32
 
ªs
;

239 
	`SIPE_DEBUG_INFO
("sip_sec_verify_signature: message is:%s signatureÅo verify is:%s",

240 
mesßge
 ? mesßgê: "", 
sig«tuª_hex
 ? signature_hex : "");

242 i‡(!
mesßge
 || !
sig«tuª_hex
Ë 
SIP_SEC_E_INTERNAL_ERROR
;

244 
sig«tuª
.
Àngth
 = 
	`hex_°r_to_buff
(
sig«tuª_hex
, &sig«tuª.
vÆue
);

245 
ªs
 = (*
c⁄ãxt
->
vîify_sig«tuª_func
)(c⁄ãxt, 
mesßge
, 
sig«tuª
);

246 
	`g_‰ì
(
sig«tuª
.
vÆue
);

247  
ªs
;

248 
	}
}

251 
	$sù_£c_öô
()

253 
	`sù_£c_öô__¡lm
();

254 
	}
}

256 
	$sù_£c_de°roy
()

258 
	`sù_£c_de°roy__¡lm
();

259 
	}
}

	@src/core/sip-sec.h

26 
sù_£c_c⁄ãxt
 *
	tSùSecC⁄ãxt
;

28 
	#AUTH_TYPE_UNSET
 0

	)

29 
	#AUTH_TYPE_DIGEST
 1

	)

30 
	#AUTH_TYPE_NTLM
 2

	)

31 
	#AUTH_TYPE_KERBEROS
 3

	)

32 
	#AUTH_TYPE_NEGOTIATE
 4

	)

50 
SùSecC⁄ãxt


51 
sù_£c_¸óã_c⁄ãxt
(
guöt
 
ty≥
,

52 c⁄° 
sso
,

53 
is_c⁄√˘i⁄_ba£d
,

54 c⁄° *
domaö
,

55 c⁄° *
u£∫ame
,

56 c⁄° *
∑ssw‹d
);

71 
sù_£c_öô_c⁄ãxt_°ï
(
SùSecC⁄ãxt
 
c⁄ãxt
,

72 c⁄° *
èrgë
,

73 c⁄° *
öput_toked_ba£64
,

74 **
ouçut_toked_ba£64
,

75 *
expúes
);

95 *
sù_£c_öô_c⁄ãxt
(
SùSecC⁄ãxt
 *
c⁄ãxt
,

96 *
expúes
,

97 
guöt
 
ty≥
,

98 c⁄° 
sso
,

99 c⁄° *
domaö
,

100 c⁄° *
u£∫ame
,

101 c⁄° *
∑ssw‹d
,

102 c⁄° *
èrgë
,

103 c⁄° *
öput_toked_ba£64
);

111 
sù_£c_de°roy_c⁄ãxt
(
SùSecC⁄ãxt
 
c⁄ãxt
);

121 *
sù_£c_make_sig«tuª
(
SùSecC⁄ãxt
 
c⁄ãxt
,

122 c⁄° *
mesßge
);

133 
sù_£c_vîify_sig«tuª
(
SùSecC⁄ãxt
 
c⁄ãxt
,

134 c⁄° *
mesßge
,

135 c⁄° *
sig«tuª_hex
);

141 
sù_£c_öô
();

142 
sù_£c_de°roy
();

	@src/core/sip-transport.c

51 #ifde‡
HAVE_CONFIG_H


52 
	~"c⁄fig.h
"

55 
	~<°dlib.h
>

56 
	~<°rög.h
>

58 
	~<glib.h
>

60 
	~"sùe-comm⁄.h
"

61 
	~"sùmsg.h
"

62 
	~"sù-£c.h
"

63 
	~"sù-å™•‹t.h
"

64 
	~"sùe-backíd.h
"

65 
	~"sùe-c‹e.h
"

66 
	~"sùe-c‹e-¥iv©e.h
"

67 
	~"sùe-dülog.h
"

68 
	~"sùe-∆s.h
"

69 
	~"sùe-sign.h
"

70 
	~"sùe-utûs.h
"

71 
	~"uuid.h
"

72 
	~"sùe.h
"

75 c⁄° *
	gå™•‹t_des¸ùt‹
[] = { "", "tls", "tcp"};

76 
	#TRANSPORT_DESCRIPTOR
 (
å™•‹t_des¸ùt‹
[
SIP_TO_CORE_PRIVATE
->
å™•‹t
->
ty≥
])

	)

78 *
	$gíbønch
()

80  
	`g_°rdup_¥ötf
("z9hG4bK%04X%04X%04X%04X%04X",

81 
	`ønd
() & 0xFFFF,Ñand() & 0xFFFF,Ñand() & 0xFFFF,

82 
	`ønd
() & 0xFFFF,Ñand() & 0xFFFF);

83 
	}
}

85 
	$sign_outgoög_mesßge
 (
sùmsg
 * 
msg
, 
sùe_accou¡_d©a
 *
sù
, c⁄° 
gch¨
 *
mëhod
)

87 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
SIP_TO_CORE_PRIVATE
;

88 
gch¨
 * 
buf
;

90 i‡(
sù
->
ªgi°ør
.
ty≥
 =
AUTH_TYPE_UNSET
) {

94 
	`sùe_make_sig«tuª
(
sù
, 
msg
);

96 i‡(
sù
->
ªgi°ør
.
ty≥
 && 
	`sùe_°ªquÆ
(
mëhod
, "REGISTER")) {

97 
buf
 = 
	`auth_hódî
(
sù
, &sù->
ªgi°ør
, 
msg
);

98 i‡(
buf
) {

99 
	`sùmsg_add_hódî_now_pos
(
msg
, "Auth‹iz©i⁄", 
buf
, 5);

101 
	`g_‰ì
(
buf
);

102 } i‡(
	`sùe_°ªquÆ
(
mëhod
,"SUBSCRIBE") || sipe_strequal(method,"SERVICE") || sipe_strequal(method,"MESSAGE") || sipe_strequal(method,"INVITE") || sipe_strequal(method, "ACK") || sipe_strequal(method, "NOTIFY") || sipe_strequal(method, "BYE") || sipe_strequal(method, "INFO") || sipe_strequal(method, "OPTIONS") || sipe_strequal(method, "REFER") || sipe_strequal(method, "PRACK")) {

103 
sù
->
ªgi°ør
.
nc
 = 3;

104 
sù
->
ªgi°ør
.
ty≥
 = 
AUTH_TYPE_NTLM
;

105 #ifde‡
HAVE_LIBKRB5


106 i‡(
	`SIPE_CORE_PUBLIC_FLAG_IS
(
KRB5
)) {

107 
sù
->
ªgi°ør
.
ty≥
 = 
AUTH_TYPE_KERBEROS
;

111 ()
sùe_¥iv©e
;

115 
buf
 = 
	`auth_hódî
(
sù
, &sù->
ªgi°ør
, 
msg
);

116 
	`sùmsg_add_hódî_now_pos
(
msg
, "Auth‹iz©i⁄", 
buf
, 5);

117 
	`g_‰ì
(
buf
);

119 
	`SIPE_DEBUG_INFO
("nŸáddögáuth hódîÅÿmsg w/ mëhod %s", 
mëhod
);

121 
	}
}

123 
	$£nd_sù_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

124 
sùmsg
 *
msg
, 
code
,

125 c⁄° *
ãxt
, c⁄° *
body
)

127 
gch¨
 *
«me
;

128 
gch¨
 *
vÆue
;

129 
GSåög
 *
out°r
 = 
	`g_°rög_√w
("");

130 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

131 
gch¨
 *
c⁄è˘
;

132 
GSLi°
 *
tmp
;

133 c⁄° 
gch¨
 *
kì≥rs
[] = { "To", "From", "CÆl-ID", "CSeq", "Vü", "Rec‹d-Rouã", 
NULL
 };

136 
c⁄è˘
 = 
	`gë_c⁄è˘
(
sù
);

137 i‡(
c⁄è˘
) {

138 
	`sùmsg_add_hódî
(
msg
, "C⁄è˘", 
c⁄è˘
);

139 
	`g_‰ì
(
c⁄è˘
);

142 i‡(
body
) {

143 
gch¨
 *
Àn
 = 
	`g_°rdup_¥ötf
("%" 
G_GSIZE_FORMAT
 , (
gsize
Ë
	`°æí
(
body
));

144 
	`sùmsg_add_hódî
(
msg
, "C⁄ã¡-Lígth", 
Àn
);

145 
	`g_‰ì
(
Àn
);

147 
	`sùmsg_add_hódî
(
msg
, "Content-Length", "0");

150 
msg
->
ª•⁄£
 = 
code
;

152 
	`sùmsg_°rù_hódîs
(
msg
, 
kì≥rs
);

153 
	`sùmsg_mîge_√w_hódîs
(
msg
);

154 
	`sign_outgoög_mesßge
(
msg
, 
sù
, msg->
mëhod
);

156 
	`g_°rög_≠≥nd_¥ötf
(
out°r
, "SIP/2.0 %d %s\r\n", 
code
, 
ãxt
);

157 
tmp
 = 
msg
->
hódîs
;

158 
tmp
) {

159 
«me
 = ((
sù«mevÆ
*Ë(
tmp
->
d©a
))->name;

160 
vÆue
 = ((
sù«mevÆ
*Ë(
tmp
->
d©a
))->value;

162 
	`g_°rög_≠≥nd_¥ötf
(
out°r
, "%s: %s\r\n", 
«me
, 
vÆue
);

163 
tmp
 = 
	`g_¶i°_√xt
(tmp);

165 
	`g_°rög_≠≥nd_¥ötf
(
out°r
, "\r\n%s", 
body
 ? body : "");

166 
	`sùe_backíd_å™•‹t_mesßge
(
sù
->
¥iv©e
->
å™•‹t
, 
out°r
->
°r
);

167 
	`g_°rög_‰ì
(
out°r
, 
TRUE
);

168 
	}
}

170 
	$å™ß˘i⁄s_ªmove
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

171 
å™ß˘i⁄
 *
å™s
)

173 i‡(
sùe_¥iv©e
->
å™ß˘i⁄s
) {

174 
sùe_¥iv©e
->
å™ß˘i⁄s
 = 
	`g_¶i°_ªmove
(sipe_private->transactions,

175 
å™s
);

176 
	`SIPE_DEBUG_INFO
("SIPÅønß˘i⁄†cou¡:%dá·îÑemovÆ", 
	`g_¶i°_Àngth
(
sùe_¥iv©e
->
å™ß˘i⁄s
));

178 i‡(
å™s
->
msg
Ë
	`sùmsg_‰ì
(trans->msg);

179 i‡(
å™s
->
∑ylﬂd
) {

180 (*
å™s
->
∑ylﬂd
->
de°roy
)—øns->∑ylﬂd->
d©a
);

181 
	`g_‰ì
(
å™s
->
∑ylﬂd
);

183 
	`g_‰ì
(
å™s
->
key
);

184 
	`g_‰ì
(
å™s
);

186 
	}
}

188 
å™ß˘i⁄
 *

189 
	$å™ß˘i⁄s_add_buf
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

190 c⁄° 
sùmsg
 *
msg
, *
ˇŒback
)

192 c⁄° 
gch¨
 *
ˇŒ_id
;

193 c⁄° 
gch¨
 *
c£q
;

194 
å™ß˘i⁄
 *
å™s
 = 
	`g_√w0
(transaction, 1);

196 
å™s
->
time
 = 
	`time
(
NULL
);

197 
å™s
->
msg
 = (
sùmsg
 *)msg;

198 
ˇŒ_id
 = 
	`sùmsg_föd_hódî
(
å™s
->
msg
, "Call-ID");

199 
c£q
 = 
	`sùmsg_föd_hódî
(
å™s
->
msg
, "CSeq");

200 
å™s
->
key
 = 
	`g_°rdup_¥ötf
("<%s><%s>", 
ˇŒ_id
, 
c£q
);

201 
å™s
->
ˇŒback
 = callback;

202 
sùe_¥iv©e
->
å™ß˘i⁄s
 = 
	`g_¶i°_≠≥nd
(sipe_private->transactions,

203 
å™s
);

204 
	`SIPE_DEBUG_INFO
("SIPÅønß˘i⁄†cou¡:%dá·îáddôi⁄", 
	`g_¶i°_Àngth
(
sùe_¥iv©e
->
å™ß˘i⁄s
));

205  
å™s
;

206 
	}
}

208 
å™ß˘i⁄
 *
	$å™ß˘i⁄s_föd
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

209 
sùmsg
 *
msg
)

211 
å™ß˘i⁄
 *
å™s
;

212 
GSLi°
 *
å™ß˘i⁄s
 = 
sùe_¥iv©e
->transactions;

213 c⁄° 
gch¨
 *
ˇŒ_id
 = 
	`sùmsg_föd_hódî
(
msg
, "Call-ID");

214 c⁄° 
gch¨
 *
c£q
 = 
	`sùmsg_föd_hódî
(
msg
, "CSeq");

215 
gch¨
 *
key
;

217 i‡(!
ˇŒ_id
 || !
c£q
) {

218 
	`SIPE_DEBUG_ERROR_NOFORMAT
("transaction_find:Ço Call-ID or CSeq!");

219  
NULL
;

222 
key
 = 
	`g_°rdup_¥ötf
("<%s><%s>", 
ˇŒ_id
, 
c£q
);

223 
å™ß˘i⁄s
) {

224 
å™s
 = 
å™ß˘i⁄s
->
d©a
;

225 i‡(!
	`g_°rˇ£cmp
(
å™s
->
key
, key)) {

226 
	`g_‰ì
(
key
);

227  
å™s
;

229 
å™ß˘i⁄s
 =Åønß˘i⁄s->
√xt
;

232 
	`g_‰ì
(
key
);

233  
NULL
;

234 
	}
}

236 c⁄° 
gch¨
 *

237 
	$sùe_gë_u£øgít
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

239 i‡(!
sùe_¥iv©e
->
u£øgít
) {

240 c⁄° 
gch¨
 *
u£øgít
 = 
	`sùe_backíd_£âög
(
SIPE_CORE_PUBLIC
,

241 
SIPE_SETTING_USER_AGENT
);

242 i‡(
	`is_em±y
(
u£øgít
)) {

245 #i‡
	`deföed
(
__löux__
Ë|| deföed(
__löux
Ë|| deföed(
__LINUX__
)

246 
	#SIPE_TARGET_PLATFORM
 "löux"

	)

247 #ñi‡
	`deföed
(
__NëBSD__
Ë||deföed–
__O≥nBSD__
Ë|| deföed(
__FªeBSD__
)

248 
	#SIPE_TARGET_PLATFORM
 "bsd"

	)

249 #ñi‡
	`deföed
(
__APPLE__
Ë|| deföed(
__MACOS__
)

250 
	#SIPE_TARGET_PLATFORM
 "macosx"

	)

251 #ñi‡
	`deföed
(
_AIX
Ë|| deföed(
__AIX__
Ë|| deföed(
__aix__
)

252 
	#SIPE_TARGET_PLATFORM
 "aix"

	)

253 #ñi‡
	`deföed
(
__sﬁ¨is__
Ë|| deföed(
__sun
)

254 
	#SIPE_TARGET_PLATFORM
 "sun"

	)

255 #ñi‡
	`deföed
(
_WIN32
)

256 
	#SIPE_TARGET_PLATFORM
 "wö"

	)

257 #ñi‡
	`deföed
(
__CYGWIN__
)

258 
	#SIPE_TARGET_PLATFORM
 "cygwö"

	)

259 #ñi‡
	`deföed
(
__hpux__
)

260 
	#SIPE_TARGET_PLATFORM
 "hpux"

	)

261 #ñi‡
	`deföed
(
__sgi__
)

262 
	#SIPE_TARGET_PLATFORM
 "úix"

	)

264 
	#SIPE_TARGET_PLATFORM
 "unknown"

	)

267 #i‡
	`deföed
(
__amd64__
Ë|| deföed(
__x86_64__
Ë|| deföed(
_M_AMD64
)

268 
	#SIPE_TARGET_ARCH
 "x86_64"

	)

269 #ñi‡
	`deföed
(
__386__
Ë|| deföed(
__i386__
Ë|| deföed(
__i386
Ë|| deföed(
_M_IX86
Ë|| deföed(
_M_I386
)

270 
	#SIPE_TARGET_ARCH
 "i386"

	)

271 #ñi‡
	`deföed
(
__µc64__
)

272 
	#SIPE_TARGET_ARCH
 "µc64"

	)

273 #ñi‡
	`deföed
(
__powîpc__
Ë|| deföed(
__powîpc
Ë|| deföed(
__µc__
Ë|| deföed(
__PPC__
Ë|| deföed(
_M_PPC
Ë|| deföed(
_ARCH_PPC
Ë|| deföed(
_ARCH_PWR
)

274 
	#SIPE_TARGET_ARCH
 "µc"

	)

275 #ñi‡
	`deföed
(
__hµa__
Ë|| deföed(
__hµa
)

276 
	#SIPE_TARGET_ARCH
 "hµa"

	)

277 #ñi‡
	`deföed
(
__mùs__
Ë|| deföed(
__mùs
Ë|| deföed(
_MIPS_ARCH
Ë|| deföed(
_M_MRX000
)

278 
	#SIPE_TARGET_ARCH
 "mùs"

	)

279 #ñi‡
	`deföed
(
__s390__
Ë|| deföed(
__s390
Ë|| deföed(
__s390x__
Ë|| deföed(
__s390x
)

280 
	#SIPE_TARGET_ARCH
 "s390"

	)

281 #ñi‡
	`deföed
(
__•¨c__
Ë|| deföed(
__•¨c
Ë|| deföed(
__•¨cv8
)

282 
	#SIPE_TARGET_ARCH
 "•¨c"

	)

283 #ñi‡
	`deföed
(
__¨m__
)

284 
	#SIPE_TARGET_ARCH
 "¨m"

	)

286 
	#SIPE_TARGET_ARCH
 "Ÿhî"

	)

288 
gch¨
 *
backíd
 = 
	`sùe_backíd_vîsi⁄
();

289 
sùe_¥iv©e
->
u£øgít
 = 
	`g_°rdup_¥ötf
("%†Sùe/" 
PACKAGE_VERSION
 " (" 
SIPE_TARGET_PLATFORM
 "-" 
SIPE_TARGET_ARCH
 "; %s)",

290 
backíd
,

291 
sùe_¥iv©e
->
£rvî_vîsi⁄
 ? sipe_private->server_version : "");

292 
	`g_‰ì
(
backíd
);

294 
sùe_¥iv©e
->
u£øgít
 = 
	`g_°rdup
(useragent);

297 (
sùe_¥iv©e
->
u£øgít
);

298 
	}
}

300 
å™ß˘i⁄
 *

301 
	$£nd_sù_ªque°
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
, c⁄° 
gch¨
 *
mëhod
,

302 c⁄° 
gch¨
 *
uæ
, c⁄° gch¨ *
to
, c⁄° gch¨ *
addhódîs
,

303 c⁄° 
gch¨
 *
body
, 
sù_dülog
 *
dülog
,

304 
TønsCÆlback
 
tc
)

306 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

307 *
buf
;

308 
sùmsg
 *
msg
;

309 
gch¨
 *
ouπag
 = 
dülog
 && dülog->ouπag ? 
	`g_°rdup
(dülog->ouπagË: 
NULL
;

310 
gch¨
 *
theúèg
 = 
dülog
 && dülog->theúèg ? 
	`g_°rdup
(dülog->theúègË: 
NULL
;

311 
gch¨
 *
theúïid
 = 
dülog
 && dülog->theúïid ? 
	`g_°rdup
(dülog->theúïidË: 
NULL
;

312 
gch¨
 *
ˇŒid
 = 
dülog
 && dülog->ˇŒid ? 
	`g_°rdup
(dülog->ˇŒidË: 
	`gíˇŒid
();

313 
gch¨
 *
bønch
 = 
dülog
 && dülog->
ˇŒid
 ? 
NULL
 : 
	`gíbønch
();

314 
gch¨
 *
rouã
 = 
	`g_°rdup
("");

315 
gch¨
 *
ïid
 = 
	`gë_ïid
(
sù
);

316 
c£q
 = 
dülog
 ? ++dialog->cseq : 1 ;

317 
å™ß˘i⁄
 *
å™s
 = 
NULL
;

319 i‡(
dülog
 && dülog->
rouãs
)

321 
GSLi°
 *
ôî
 = 
dülog
->
rouãs
;

323 
ôî
)

325 *
tmp
 = 
rouã
;

326 
rouã
 = 
	`g_°rdup_¥ötf
("%sRouã: <%s>\r\n",Ñouã, (*)
ôî
->
d©a
);

327 
	`g_‰ì
(
tmp
);

328 
ôî
 = 
	`g_¶i°_√xt
(iter);

332 i‡(!
ouπag
 && !
dülog
) {

333 
ouπag
 = 
	`gíèg
();

336 i‡(
	`sùe_°ªquÆ
(
mëhod
, "REGISTER")) {

337 i‡(
sù
->
ªgˇŒid
) {

338 
	`g_‰ì
(
ˇŒid
);

339 
ˇŒid
 = 
	`g_°rdup
(
sù
->
ªgˇŒid
);

341 
sù
->
ªgˇŒid
 = 
	`g_°rdup
(
ˇŒid
);

343 
c£q
 = ++
sù
->cseq;

346 
buf
 = 
	`g_°rdup_¥ötf
("%s %s SIP/2.0\r\n"

355 "C⁄ã¡-Lígth: %" 
G_GSIZE_FORMAT
 "\r\n\r\n%s",

356 
mëhod
,

357 
dülog
 && dülog->
ªque°
 ? dülog->ªque° : 
uæ
,

358 
TRANSPORT_DESCRIPTOR
,

359 
	`sùe_backíd_√tw‹k_ù_addªss
(),

360 
sùe_¥iv©e
->
å™•‹t
->
˛õ¡_p‹t
,

361 
bønch
 ? ";branch=" : "",

362 
bønch
 ? branch : "",

363 
sù
->
u£∫ame
,

364 
ouπag
 ? ";tag=" : "",

365 
ouπag
 ? ourtag : "",

366 
ïid
,

367 
to
,

368 
theúèg
 ? ";tag=" : "",

369 
theúèg
 ?Åheirtag : "",

370 
theúïid
 ? ";epid=" : "",

371 
theúïid
 ?Åheirepid : "",

372 
c£q
,

373 
mëhod
,

374 
	`sùe_gë_u£øgít
(
sùe_¥iv©e
),

375 
ˇŒid
,

376 
rouã
,

377 
addhódîs
 ?áddheaders : "",

378 
body
 ? (
gsize
Ë
	`°æí
(body) : 0,

379 
body
 ? body : "");

383 
msg
 = 
	`sùmsg_∑r£_msg
(
buf
);

385 
	`g_‰ì
(
buf
);

386 
	`g_‰ì
(
ouπag
);

387 
	`g_‰ì
(
theúèg
);

388 
	`g_‰ì
(
theúïid
);

389 
	`g_‰ì
(
bønch
);

390 
	`g_‰ì
(
ˇŒid
);

391 
	`g_‰ì
(
rouã
);

392 
	`g_‰ì
(
ïid
);

394 
	`sign_outgoög_mesßge
 (
msg
, 
sù
, 
mëhod
);

396 
buf
 = 
	`sùmsg_to_°rög
 (
msg
);

400 i‡(!
	`sùe_°ªquÆ
(
mëhod
, "ACK")) {

401 
å™s
 = 
	`å™ß˘i⁄s_add_buf
(
sùe_¥iv©e
, 
msg
, 
tc
);

403 
	`sùmsg_‰ì
(
msg
);

405 
	`sùe_backíd_å™•‹t_mesßge
(
sùe_¥iv©e
->
å™•‹t
, 
buf
);

406 
	`g_‰ì
(
buf
);

408  
å™s
;

409 
	}
}

411 
	$do_ªgi°î_exp
(
sùe_accou¡_d©a
 *
sù
, 
expúe
)

413 *
uri
;

414 *
expúes
;

415 *
to
;

416 *
hdr
;

417 *
ïid
;

418 *
uuid
;

420 i‡(!
SIP_TO_CORE_PUBLIC
->
sù_domaö
) ;

422 
expúes
 = 
expúe
 >0 ? 
	`g_°rdup_¥ötf
("Expúes: %d\r\n",ÉxpúeË: 
	`g_°rdup
("");

423 
ïid
 = 
	`gë_ïid
(
sù
);

424 
uuid
 = 
	`gíî©eUUID‰omEPID
(
ïid
);

425 
hdr
 = 
	`g_°rdup_¥ötf
("Contact: <sip:%s:%d;transport=%s;ms-opaque=d3470f2e1d>;methods=\"INVITE, MESSAGE, INFO, SUBSCRIBE, OPTIONS, BYE, CANCEL, NOTIFY, ACK, REFER, BENOTIFY\";proxy=replace;+sip.instance=\"<urn:uuid:%s>\"\r\n"

431 
	`sùe_backíd_√tw‹k_ù_addªss
(),

432 
SIP_TO_CORE_PRIVATE
->
å™•‹t
->
˛õ¡_p‹t
,

433 
TRANSPORT_DESCRIPTOR
,

434 
uuid
,

435 
expúes
);

436 
	`g_‰ì
(
uuid
);

437 
	`g_‰ì
(
ïid
);

438 
	`g_‰ì
(
expúes
);

440 
sù
->
ªgi°î°©us
 = 1;

442 
uri
 = 
	`sù_uri_‰om_«me
(
SIP_TO_CORE_PUBLIC
->
sù_domaö
);

443 
to
 = 
	`sù_uri_£lf
(
sù
);

444 
	`£nd_sù_ªque°
(
SIP_TO_CORE_PRIVATE
, "REGISTER", 
uri
, 
to
, 
hdr
, "", 
NULL
,

445 
¥o˚ss_ªgi°î_ª•⁄£
);

446 
	`g_‰ì
(
to
);

447 
	`g_‰ì
(
uri
);

448 
	`g_‰ì
(
hdr
);

449 
	}
}

451 
	$do_ªgi°î_cb
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

452 
SIPE_UNUSED_PARAMETER
 *
unu£d
)

454 
sùe_accou¡_d©a
 *
sù
 = 
sùe_¥iv©e
->
ãmp‹¨y
;

455 
	`do_ªgi°î_exp
(
sù
, -1);

456 
sù
->
ªªgi°î_£t
 = 
FALSE
;

457 
	}
}

459 
	$do_ªgi°î
(
sùe_accou¡_d©a
 *
sù
)

461 
	`do_ªgi°î_exp
(
sù
, -1);

462 
	}
}

464 
	$sù_å™•‹t_öput
(
sùe_å™•‹t_c⁄√˘i⁄
 *
c⁄n
)

466 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
c⁄n
->
u£r_d©a
;

467 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

468 
gch¨
 *
cur
 = 
c⁄n
->
buf„r
;

471 *
cur
 == '\r' || *cur == '\n') {

472 
cur
++;

474 i‡(
cur
 !
c⁄n
->
buf„r
)

475 
	`sùe_utûs_shrök_buf„r
(
c⁄n
, 
cur
);

478 
sù
->
¥o˚ssög_öput
 = 
TRUE
;

479 
sù
->
¥o˚ssög_öput
 &&

480 ((
cur
 = 
	`°r°r
(
c⁄n
->
buf„r
, "\r\n\r\n")Ë!
NULL
)) {

481 
sùmsg
 *
msg
;

482 
gch¨
 *
tmp
;

483 
guöt
 
ªmaödî
;

484 
time_t
 
cuºtime
 = 
	`time
(
NULL
);

485 
cur
 += 2;

486 
cur
[0] = '\0';

487 
	`SIPE_DEBUG_INFO
("ª˚ived - %s######\n%s\n#######", 
	`˘ime
(&
cuºtime
), 
tmp
 = 
	`fix_√wlöes
(
c⁄n
->
buf„r
));

488 
	`g_‰ì
(
tmp
);

489 
msg
 = 
	`sùmsg_∑r£_hódî
(
c⁄n
->
buf„r
);

490 
cur
[0] = '\r';

491 
cur
 += 2;

492 
ªmaödî
 = 
c⁄n
->
buf„r_u£d
 - (
cur
 - c⁄n->
buf„r
);

493 i‡(
msg
 && 
ªmaödî
 >(
guöt
Ëmsg->
bodyÀn
) {

494 *
dummy
 = 
	`g_mÆloc
(
msg
->
bodyÀn
 + 1);

495 
	`mem˝y
(
dummy
, 
cur
, 
msg
->
bodyÀn
);

496 
dummy
[
msg
->
bodyÀn
] = '\0';

497 
msg
->
body
 = 
dummy
;

498 
cur
 +
msg
->
bodyÀn
;

499 
	`sùe_utûs_shrök_buf„r
(
c⁄n
, 
cur
);

501 i‡(
msg
){

502 
	`SIPE_DEBUG_INFO
("¥o˚ss_öput: bodyÅoÿsh‹à(%d < %d, såÀ¿%dË- ign‹ög mesßge", 
ªmaödî
, 
msg
->
bodyÀn
, ()
	`°æí
(
c⁄n
->
buf„r
));

503 
	`sùmsg_‰ì
(
msg
);

513 i‡(
sù
->
ªgi°ør
.
gsßpi_c⁄ãxt
) {

514 
sùmsg_bªakdown
 
msgbd
;

515 
gch¨
 *
sig«tuª_öput_°r
;

516 
gch¨
 *
r•auth
;

517 
msgbd
.
msg
 = msg;

518 
	`sùmsg_bªakdown_∑r£
(&
msgbd
, 
sù
->
ªgi°ør
.
ªÆm
, sù->ªgi°ør.
èrgë
);

519 
sig«tuª_öput_°r
 = 
	`sùmsg_bªakdown_gë_°rög
(
sù
->
ªgi°ør
.
vîsi⁄
, &
msgbd
);

521 
r•auth
 = 
	`sùmsg_föd_∑π_of_hódî
(
	`sùmsg_föd_hódî
(
msg
, "Authítiˇti⁄-Info"), "r•auth=\"", "\"", 
NULL
);

523 i‡(
r•auth
 !
NULL
) {

524 i‡(!
	`sù_£c_vîify_sig«tuª
(
sù
->
ªgi°ør
.
gsßpi_c⁄ãxt
, 
sig«tuª_öput_°r
, 
r•auth
)) {

525 
	`SIPE_DEBUG_INFO_NOFORMAT
("incoming message's signature validated");

526 
	`¥o˚ss_öput_mesßge
(
sù
, 
msg
);

528 
	`SIPE_DEBUG_INFO_NOFORMAT
("incoming message's signature is invalid.");

529 
	`sùe_backíd_c⁄√˘i⁄_îr‹
(
SIP_TO_CORE_PUBLIC
,

530 
SIPE_CONNECTION_ERROR_NETWORK
,

531 
	`_
("Invalid message signatureÑeceived"));

533 } i‡(
msg
->
ª•⁄£
 == 401) {

534 
	`sùe_backíd_c⁄√˘i⁄_îr‹
(
SIP_TO_CORE_PUBLIC
,

535 
SIPE_CONNECTION_ERROR_AUTHENTICATION_FAILED
,

536 
	`_
("Authentication failed"));

538 
	`g_‰ì
(
sig«tuª_öput_°r
);

540 
	`g_‰ì
(
r•auth
);

541 
	`sùmsg_bªakdown_‰ì
(&
msgbd
);

543 
	`¥o˚ss_öput_mesßge
(
sù
, 
msg
);

546 
	`sùmsg_‰ì
(
msg
);

548 
	}
}

550 
	$sù_å™•‹t_deÁu…_c⁄è˘
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

552 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

554 
sù
->
c⁄è˘
 = 
	`g_°rdup_¥ötf
("<sip:%s:%d;maddr=%s;transport=%s>;proxy=replace",

555 
sù
->
u£∫ame
,

556 
sùe_¥iv©e
->
å™•‹t
->
˛õ¡_p‹t
,

557 
	`sùe_backíd_√tw‹k_ù_addªss
(),

558 
TRANSPORT_DESCRIPTOR
);

559 
	}
}

561 
	$sù_å™•‹t_c⁄√˘ed
(
sùe_å™•‹t_c⁄√˘i⁄
 *
c⁄n
)

563 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
c⁄n
->
u£r_d©a
;

564 
sùe_¥iv©e
->
£rvi˚_d©a
 = 
NULL
;

565 
	`do_ªgi°î
(
SIPE_ACCOUNT_DATA_PRIVATE
);

566 
	}
}

568 
ªsﬁve_√xt_£rvi˚
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

569 c⁄° 
sùe_£rvi˚_d©a
 *
°¨t
);

570 
	$sù_å™•‹t_îr‹
(
sùe_å™•‹t_c⁄√˘i⁄
 *
c⁄n
,

571 c⁄° 
gch¨
 *
msg
)

573 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
c⁄n
->
u£r_d©a
;

576 i‡(
sùe_¥iv©e
->
£rvi˚_d©a
) {

577 
	`ªsﬁve_√xt_£rvi˚
(
sùe_¥iv©e
, 
NULL
);

579 
	`sùe_backíd_c⁄√˘i⁄_îr‹
(
SIPE_CORE_PUBLIC
,

580 
SIPE_CONNECTION_ERROR_NETWORK
,

581 
msg
);

583 
	`sùe_backíd_å™•‹t_disc⁄√˘
(
c⁄n
);

584 
sùe_¥iv©e
->
å™•‹t
 = 
NULL
;

585 
	}
}

588 
	$sùe_£rvî_ªgi°î
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

589 
guöt
 
ty≥
,

590 
gch¨
 *
£rvî_«me
,

591 
guöt
 
£rvî_p‹t
)

593 
sùe_c⁄√˘_£tup
 
£tup
 = {

594 
ty≥
,

595 
£rvî_«me
,

596 (
£rvî_p‹t
 != 0) ? server_port :

597 (
ty≥
 =
SIPE_TRANSPORT_TLS
) ? 5061 : 5060,

598 
sùe_¥iv©e
,

599 
sù_å™•‹t_c⁄√˘ed
,

600 
sù_å™•‹t_öput
,

601 
sù_å™•‹t_îr‹


604 
sùe_¥iv©e
->
£rvî_«me
 = server_name;

605 
sùe_¥iv©e
->
£rvî_p‹t
 = 
£tup
.server_port;

606 
sùe_¥iv©e
->
å™•‹t
 = 
	`sùe_backíd_å™•‹t_c⁄√˘
(
SIPE_CORE_PUBLIC
,

607 &
£tup
);

608 
	}
}

610 
	ssùe_£rvi˚_d©a
 {

611 c⁄° *
	m¥Ÿocﬁ
;

612 c⁄° *
	må™•‹t
;

613 
guöt
 
	mty≥
;

617 c⁄° 
sùe_£rvi˚_d©a
 
	g£rvi˚_autodëe˘
[] = {

618 { "sùöã∫Æés", "t˝", 
SIPE_TRANSPORT_TLS
 },

619 { "sùöã∫Æ", "t˝", 
SIPE_TRANSPORT_TCP
 },

620 { "sù", "és", 
SIPE_TRANSPORT_TLS
 },

621 { "sù", "t˝", 
SIPE_TRANSPORT_TCP
 },

622 { 
NULL
, NULL, 0 }

626 c⁄° 
sùe_£rvi˚_d©a
 
	g£rvi˚_és
[] = {

627 { "sùöã∫Æés", "t˝", 
SIPE_TRANSPORT_TLS
 },

628 { "sù", "és", 
SIPE_TRANSPORT_TLS
 },

629 { 
NULL
, NULL, 0 }

633 c⁄° 
sùe_£rvi˚_d©a
 
	g£rvi˚_t˝
[] = {

634 { "sùöã∫Æ", "t˝", 
SIPE_TRANSPORT_TCP
 },

635 { "sù", "t˝", 
SIPE_TRANSPORT_TCP
 },

636 { 
NULL
, NULL, 0 }

639 c⁄° 
sùe_£rvi˚_d©a
 *
	g£rvi˚s
[] = {

640 
£rvi˚_autodëe˘
,

641 
£rvi˚_és
,

642 
£rvi˚_t˝


645 
	$ªsﬁve_√xt_£rvi˚
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

646 c⁄° 
sùe_£rvi˚_d©a
 *
°¨t
)

648 i‡(
°¨t
) {

649 
sùe_¥iv©e
->
£rvi˚_d©a
 = 
°¨t
;

651 
sùe_¥iv©e
->
£rvi˚_d©a
++;

652 i‡(
sùe_¥iv©e
->
£rvi˚_d©a
->
¥Ÿocﬁ
 =
NULL
) {

653 
guöt
 
ty≥
 = 
sùe_¥iv©e
->
å™•‹t_ty≥
;

656 
sùe_¥iv©e
->
£rvi˚_d©a
 = 
NULL
;

659 
	`SIPE_DEBUG_INFO_NOFORMAT
("no SRVÑecords found; using SIP domainás fallback");

660 i‡(
ty≥
 =
SIPE_TRANSPORT_AUTO
)

661 
ty≥
 = 
SIPE_TRANSPORT_TLS
;

663 
	`sùe_£rvî_ªgi°î
(
sùe_¥iv©e
, 
ty≥
,

664 
	`g_°rdup
(
sùe_¥iv©e
->
public
.
sù_domaö
),

671 
	`sùe_backíd_dns_quîy
(
SIPE_CORE_PUBLIC
,

672 
sùe_¥iv©e
->
£rvi˚_d©a
->
¥Ÿocﬁ
,

673 
sùe_¥iv©e
->
£rvi˚_d©a
->
å™•‹t
,

674 
sùe_¥iv©e
->
public
.
sù_domaö
);

675 
	}
}

677 
	$sùe_c‹e_dns_ªsﬁved
(
sùe_c‹e_public
 *
sùe_public
,

678 c⁄° 
gch¨
 *
ho°«me
, 
guöt
 
p‹t
)

680 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
SIPE_CORE_PRIVATE
;

681 
	`SIPE_DEBUG_INFO
("sipe_core_dns_resolved - SRV hostname: %sÖort: %d",

682 
ho°«me
, 
p‹t
);

683 
	`sùe_£rvî_ªgi°î
(
sùe_¥iv©e
,

684 
sùe_¥iv©e
->
£rvi˚_d©a
->
ty≥
,

685 
	`g_°rdup
(
ho°«me
), 
p‹t
);

686 
	}
}

688 
	$sùe_c‹e_dns_ªsﬁve_Áûuª
(
sùe_c‹e_public
 *
sùe_public
)

690 
	`ªsﬁve_√xt_£rvi˚
(
SIPE_CORE_PRIVATE
, 
NULL
);

691 
	}
}

693 
	$sùe_c‹e_å™•‹t_sù_c⁄√˘
(
sùe_c‹e_public
 *
sùe_public
,

694 
guöt
 
å™•‹t
,

695 c⁄° 
gch¨
 *
£rvî
,

696 c⁄° 
gch¨
 *
p‹t
)

698 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
SIPE_CORE_PRIVATE
;

700 i‡(
£rvî
) {

702 
p‹t_numbî
 = 0;

704 i‡(
p‹t
)

705 
p‹t_numbî
 = 
	`©oi
(
p‹t
);

707 
	`SIPE_DEBUG_INFO
("sipe_core_connect: user specified SIP server %s:%d",

708 
£rvî
, 
p‹t_numbî
);

710 
	`sùe_£rvî_ªgi°î
(
sùe_¥iv©e
, 
å™•‹t
,

711 
	`g_°rdup
(
£rvî
), 
p‹t_numbî
);

716 
sùe_¥iv©e
->
å™•‹t_ty≥
 = 
å™•‹t
;

717 
	`ªsﬁve_√xt_£rvi˚
(
sùe_¥iv©e
, 
£rvi˚s
[
å™•‹t
]);

719 
	}
}

721 
	$sùe_c‹e_å™•‹t_sù_kì∑live
(
sùe_c‹e_public
 *
sùe_public
)

723 
	`SIPE_DEBUG_INFO
("sending keepálive %d",

724 
sùe_public
->
kì∑live_timeout
);

725 
	`sùe_backíd_å™•‹t_mesßge
(
SIPE_CORE_PRIVATE
->
å™•‹t
,

727 
	}
}

	@src/core/sip-transport.h

24 
	gsùmsg
;

25 
	gsù_dülog
;

26 
	gsùe_accou¡_d©a
;

27 
	gsùe_c‹e_¥iv©e
;

28 
	gå™ß˘i⁄
;

30 
	$gboﬁón
 (*
	tTønsCÆlback
Ë(
	tsùe_c‹e_¥iv©e
 *,

31 
	tsùmsg
 *,

32 
	tå™ß˘i⁄
 *);

34 
	så™ß˘i⁄_∑ylﬂd
 {

35 
GDe°royNŸify
 
de°roy
;

36 *
d©a
;

39 
	så™ß˘i⁄
 {

40 
time_t
 
time
;

41 
ªåõs
;

42 
å™•‹t
;

43 
fd
;

48 
gch¨
 *
key
;

49 
sùmsg
 *
msg
;

50 
TønsCÆlback
 
ˇŒback
;

51 
å™ß˘i⁄_∑ylﬂd
 *
∑ylﬂd
;

54 
å™ß˘i⁄
 *
	`å™ß˘i⁄s_föd
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
, 
sùmsg
 *
msg
);

55 
	`å™ß˘i⁄s_ªmove
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
, 
å™ß˘i⁄
 *
å™s
);

56 
	`do_ªgi°î_exp
(
sùe_accou¡_d©a
 *
sù
, 
expúe
);

57 
	`do_ªgi°î_cb
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

58 *
unu£d
);

59 
	`do_ªgi°î
(
sùe_accou¡_d©a
 *
sù
);

60 
	`sù_å™•‹t_deÁu…_c⁄è˘
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
);

62 
	`sùe_£rvî_ªgi°î
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

63 
guöt
 
ty≥
,

64 
gch¨
 *
£rvî_«me
,

65 
guöt
 
£rvî_p‹t
);

66 
	`£nd_sù_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

67 
sùmsg
 *
msg
, 
code
,

68 c⁄° *
ãxt
, c⁄° *
body
);

69 
å™ß˘i⁄
 *

70 
	`£nd_sù_ªque°
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
, c⁄° 
gch¨
 *
mëhod
,

71 c⁄° 
gch¨
 *
uæ
, c⁄° gch¨ *
to
, c⁄° gch¨ *
addhódîs
,

72 c⁄° 
gch¨
 *
body
, 
sù_dülog
 *
dülog
,

73 
TønsCÆlback
 
tc
);

	@src/core/sipe-buddy.c

23 
	~<glib.h
>

25 
	~"sùe-buddy.h
"

26 
	~"sùe-c‹e.h
"

27 
	~"sùe-c‹e-¥iv©e.h
"

29 
gch¨
 *
	$sùe_c‹e_buddy_°©us
(
sùe_c‹e_public
 *
sùe_public
,

30 c⁄° 
gch¨
 *
«me
,

31 c⁄° 
sùe_a˘ivôy
 
a˘ivôy
,

32 c⁄° 
gch¨
 *
°©us_ãxt
)

34 
sùe_buddy
 *
sbuddy
;

35 c⁄° *
a˘ivôy_°r
;

37 i‡(!
sùe_public
Ë 
NULL
;

39 
sbuddy
 = 
	`g_hash_èbÀ_lookup
(
SIPE_CORE_PRIVATE
->
buddõs
, 
«me
);

40 i‡(!
sbuddy
Ë 
NULL
;

42 
a˘ivôy_°r
 = 
sbuddy
->
a˘ivôy
 ? sbuddy->activity :

43 (
a˘ivôy
 =
SIPE_ACTIVITY_BUSY
Ë|| (a˘ivôy =
SIPE_ACTIVITY_BRB
) ?

44 
°©us_ãxt
 : 
NULL
;

46 i‡(
a˘ivôy_°r
 && 
sbuddy
->
nŸe
) {

47  
	`g_°rdup_¥ötf
("%†- <i>%s</i>", 
a˘ivôy_°r
, 
sbuddy
->
nŸe
);

48 } i‡(
a˘ivôy_°r
) {

49  
	`g_°rdup
(
a˘ivôy_°r
);

50 } i‡(
sbuddy
->
nŸe
) {

51  
	`g_°rdup_¥ötf
("<i>%s</i>", 
sbuddy
->
nŸe
);

53  
NULL
;

55 
	}
}

	@src/core/sipe-buddy.h

24 
	gsùe_ˇl_w‹kög_hours
;

26 
	ssùe_buddy
 {

27 
gch¨
 *
	m«me
;

28 
gch¨
 *
	ma˘ivôy
;

29 
gch¨
 *
	mmìtög_subje˘
;

30 
gch¨
 *
	mmìtög_loˇti⁄
;

35 
gch¨
 *
	mnŸe
;

36 
gboﬁón
 
	mis_oof_nŸe
;

37 
time_t
 
	mnŸe_sö˚
;

40 
gch¨
 *
	mˇl_°¨t_time
;

41 
	mˇl_gønuœrôy
;

42 
gch¨
 *
	mˇl_‰ì_busy_ba£64
;

43 
gch¨
 *
	mˇl_‰ì_busy
;

44 
time_t
 
	mˇl_‰ì_busy_published
;

46 
	mu£r_avaû
;

47 
time_t
 
	mu£r_avaû_sö˚
;

48 
time_t
 
	ma˘ivôy_sö˚
;

49 c⁄° *
	mœ°_n⁄_ˇl_°©us_id
;

50 
gch¨
 *
	mœ°_n⁄_ˇl_a˘ivôy
;

52 
sùe_ˇl_w‹kög_hours
 *
	mˇl_w‹kög_hours
;

54 
gch¨
 *
	mdevi˚_«me
;

55 
GSLi°
 *
	mgroups
;

57 
gboﬁón
 
	mju°_added
;

	@src/core/sipe-cal.c

25 #ifde‡
HAVE_CONFIG_H


26 
	~"c⁄fig.h
"

29 
	~<°dlib.h
>

30 
	~<°rög.h
>

31 
	~<time.h
>

33 
	~<glib.h
>

35 
	~"hâp-c⁄n.h
"

36 
	~"sùe-backíd.h
"

37 
	~"sùe-buddy.h
"

38 
	~"sùe-c‹e.h
"

39 
	~"sùe-c‹e-¥iv©e.h
"

40 
	~"sùe-ˇl.h
"

41 
	~"sùe-∆s.h
"

42 
	~"sùe-utûs.h
"

43 
	~"sùe-xml.h
"

44 
	~"sùe.h
"

46 
	#TIME_NULL
 (
time_t
)-1

	)

47 
	#IS
(
time
Ë—imê!
TIME_NULL
)

	)

91 
	ssùe_ˇl_°d_d°
 {

92 
	mbüs
;

93 
gch¨
 *
	mtime
;

94 
	mday_‹dî
;

95 
	mm⁄th
;

96 
gch¨
 *
	mday_of_wìk
;

97 
gch¨
 *
	myór
;

99 
time_t
 
	mswôch_time
;

102 
	ssùe_ˇl_w‹kög_hours
 {

103 
	mbüs
;

104 
sùe_ˇl_°d_d°
 
	m°d
;

105 
sùe_ˇl_°d_d°
 
	md°
;

106 
gch¨
 *
	mdays_of_wìk
;

107 
	m°¨t_time
;

108 
	míd_time
;

110 
gch¨
 *
	mtz
;

115 
gch¨
 *
	mtz_°d
;

116 
gch¨
 *
	mtz_d°
;

120 c⁄° *
	gwday_«mes
[] = {"Sunday",

128 
	$sùe_ˇl_gë_wday
(*
wday_«me
)

130 
i
;

132 i‡(!
wday_«me
)  -1;

134 
i
 = 0; i < 7; i++) {

135 i‡(
	`sùe_°ªquÆ
(
wday_«mes
[
i
], 
wday_«me
)) {

136  
i
;

141 
	}
}

144 
	$sùe_ˇl_evít_‰ì
(
sùe_ˇl_evít
* 
ˇl_evít
)

146 i‡(!
ˇl_evít
) ;

148 
	`g_‰ì
(
ˇl_evít
->
subje˘
);

149 
	`g_‰ì
(
ˇl_evít
->
loˇti⁄
);

150 
	`g_‰ì
(
ˇl_evít
);

151 
	}
}

154 
	$sùe_ˇl_evíts_‰ì
(
GSLi°
 *
ˇl_evíts
)

156 
GSLi°
 *
íåy
 = 
ˇl_evíts
;

158 i‡(!
ˇl_evíts
) ;

160 
íåy
) {

161 
sùe_ˇl_evít
 *
ˇl_evít
 = 
íåy
->
d©a
;

162 
	`sùe_ˇl_evít_‰ì
(
ˇl_evít
);

163 
íåy
 =É¡ry->
√xt
;

166 
	`g_¶i°_‰ì
(
ˇl_evíts
);

167 
	}
}

170 
	$sùe_ˇl_ˇÀnd¨_‰ì
(
sùe_ˇÀnd¨
 *
ˇl
)

172 
	`g_‰ì
(
ˇl
->
emaû
);

173 
	`g_‰ì
(
ˇl
->
Àgacy_dn
);

174 i‡(
ˇl
->
auth
) {

175 
	`g_‰ì
(
ˇl
->
auth
->
domaö
);

176 
	`g_‰ì
(
ˇl
->
auth
->
u£r
);

177 
	`g_‰ì
(
ˇl
->
auth
->
∑ssw‹d
);

179 
	`g_‰ì
(
ˇl
->
auth
);

180 
	`g_‰ì
(
ˇl
->
as_uæ
);

181 
	`g_‰ì
(
ˇl
->
oof_uæ
);

182 
	`g_‰ì
(
ˇl
->
ﬂb_uæ
);

183 
	`g_‰ì
(
ˇl
->
domöo_uæ
);

184 
	`g_‰ì
(
ˇl
->
oof_°©e
);

185 
	`g_‰ì
(
ˇl
->
oof_nŸe
);

186 
	`g_‰ì
(
ˇl
->
‰ì_busy
);

187 
	`g_‰ì
(
ˇl
->
w‹kög_hours_xml_°r
);

189 
	`sùe_ˇl_evíts_‰ì
(
ˇl
->
ˇl_evíts
);

191 i‡(
ˇl
->
hâp_c⁄n
) {

192 
	`hâp_c⁄n_‰ì
(
ˇl
->
hâp_c⁄n
);

195 i‡(
ˇl
->
hâp_£ssi⁄
) {

196 
	`hâp_c⁄n_£ssi⁄_‰ì
(
ˇl
->
hâp_£ssi⁄
);

199 
	`g_‰ì
(
ˇl
);

200 
	}
}

202 
gboﬁón


203 
	$sùe_ˇl_ˇÀnd¨_öô
(
sùe_accou¡_d©a
 *
sù
, 
gboﬁón
 *
has_uæ
)

205 i‡(!
sù
->
ˇl
) {

206 
sùe_c‹e_public
 *
sùe_public
 = 
SIP_TO_CORE_PUBLIC
;

207 c⁄° *
vÆue
;

209 
sù
->
ˇl
 = 
	`g_√w0
(
sùe_ˇÀnd¨
, 1);

210 
sù
->
ˇl
->sip = sip;

212 
sù
->
ˇl
->
emaû
 = 
	`g_°rdup
(sip->email);

215 
vÆue
 = 
	`sùe_backíd_£âög
(
sùe_public
, 
SIPE_SETTING_EMAIL_URL
);

216 i‡(
has_uæ
Ë*has_uæ = !
	`is_em±y
(
vÆue
);

217 i‡(!
	`is_em±y
(
vÆue
)) {

218 
sù
->
ˇl
->
as_uæ
 = 
	`g_°rdup
(
vÆue
);

219 
sù
->
ˇl
->
oof_uæ
 = 
	`g_°rdup
(
vÆue
);

220 
sù
->
ˇl
->
domöo_uæ
 = 
	`g_°rdup
(
vÆue
);

223 
sù
->
ˇl
->
auth
 = 
	`g_√w0
(
HâpC⁄nAuth
, 1);

224 
sù
->
ˇl
->
auth
->
u£_√gŸüã
 = 
	`SIPE_CORE_FLAG_IS
(
KRB5
);

227 
vÆue
 = 
	`sùe_backíd_£âög
(
sùe_public
, 
SIPE_SETTING_EMAIL_LOGIN
);

228 i‡(!
	`is_em±y
(
vÆue
)) {

231 c⁄° *
tmp
 = 
	`°r°r
(
vÆue
, "\\");

232 i‡(
tmp
) {

233 
sù
->
ˇl
->
auth
->
domaö
 = 
	`g_°∫dup
(
vÆue
, 
tmp
 - value);

234 
sù
->
ˇl
->
auth
->
u£r
 = 
	`g_°rdup
(
tmp
 + 1);

236 
sù
->
ˇl
->
auth
->
u£r
 = 
	`g_°rdup
(
vÆue
);

238 
sù
->
ˇl
->
auth
->
∑ssw‹d
 = 
	`g_°rdup
(
	`sùe_backíd_£âög
(
sùe_public
,

239 
SIPE_SETTING_EMAIL_PASSWORD
));

243 
sù
->
ˇl
->
auth
->
domaö
 = 
	`g_°rdup
(sù->
authdomaö
);

244 
sù
->
ˇl
->
auth
->
u£r
 = 
	`g_°rdup
(sù->
authu£r
);

245 
sù
->
ˇl
->
auth
->
∑ssw‹d
 = 
	`g_°rdup
(sip->password);

247  
TRUE
;

249  
FALSE
;

250 
	}
}

254 
	$sùe_ˇl_evít_des¸ibe
(
sùe_ˇl_evít
* 
ˇl_evít
)

256 
GSåög
* 
°r
 = 
	`g_°rög_√w
(
NULL
);

257 c⁄° *
°©us
 = "";

259 
ˇl_evít
->
ˇl_°©us
) {

260 
SIPE_CAL_FREE
: 
°©us
 = "SIPE_CAL_FREE"; ;

261 
SIPE_CAL_TENTATIVE
: 
°©us
 = "SIPE_CAL_TENTATIVE"; ;

262 
SIPE_CAL_BUSY
: 
°©us
 = "SIPE_CAL_BUSY"; ;

263 
SIPE_CAL_OOF
: 
°©us
 = "SIPE_CAL_OOF"; ;

264 
SIPE_CAL_NO_DATA
: 
°©us
 = "SIPE_CAL_NO_DATA"; ;

267 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %s", "start_time",

268 
	`IS
(
ˇl_evít
->
°¨t_time
Ë? 
	`as˘ime
(
	`loˇ…ime
(&cal_event->start_time)) : "\n");

269 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %s", "end_time ",

270 
	`IS
(
ˇl_evít
->
íd_time
Ë? 
	`as˘ime
(
	`loˇ…ime
(&cal_event->end_time)) : "\n");

271 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %s\n", "ˇl_°©us", 
°©us
);

272 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %s\n", "subje˘ ", 
ˇl_evít
->
subje˘
 ? cal_event->subject : "");

273 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %s\n", "loˇti⁄ ", 
ˇl_evít
->
loˇti⁄
 ? cal_event->location : "");

274 
	`g_°rög_≠≥nd_¥ötf
(
°r
, "\t%s: %s\n", "is_mìtög", 
ˇl_evít
->
is_mìtög
 ? "TRUE" : "FALSE");

276  
	`g_°rög_‰ì
(
°r
, 
FALSE
);

277 
	}
}

280 
	$sùe_ˇl_evít_hash
(
sùe_ˇl_evít
* 
evít
)

284  
	`g_°rdup_¥ötf
("<%d><%s><%s><%d>",

285 ()
evít
->
°¨t_time
,

286 
evít
->
subje˘
 ?Évent->subject : "",

287 
evít
->
loˇti⁄
 ?Évent->location : "",

288 
evít
->
is_mìtög
);

289 
	}
}

291 
	#ENVIRONMENT_TIMEZONE
 "TZ"

	)

293 
gch¨
 *

294 
	$sùe_swôch_tz
(c⁄° *
tz
)

296 
gch¨
 *
tz_‹ig
;

298 
tz_‹ig
 = 
	`g_°rdup
(
	`g_gëív
(
ENVIRONMENT_TIMEZONE
));

299 
	`g_£ãnv
(
ENVIRONMENT_TIMEZONE
, 
tz
, 
TRUE
);

300 
	`tz£t
();

301 (
tz_‹ig
);

302 
	}
}

305 
	$sùe_ª£t_tz
(
gch¨
 *
tz_‹ig
)

307 i‡(
tz_‹ig
) {

308 
	`g_£ãnv
(
ENVIRONMENT_TIMEZONE
, 
tz_‹ig
, 
TRUE
);

309 
	`g_‰ì
(
tz_‹ig
);

311 
	`g_un£ãnv
(
ENVIRONMENT_TIMEZONE
);

313 
	`tz£t
();

314 
	}
}

323 
time_t


324 
	$sùe_mktime_tz
(
tm
 *tm,

325 c⁄° * 
tz
)

327 
time_t
 
ªt
;

328 
gch¨
 *
tz_‹ig
;

330 
tz_‹ig
 = 
	`sùe_swôch_tz
(
tz
);

331 
ªt
 = 
	`mktime
(
tm
);

332 
	`sùe_ª£t_tz
(
tz_‹ig
);

334  
ªt
;

335 
	}
}

344 
tm
 *

345 
	$sùe_loˇ…ime_tz
(c⁄° 
time_t
 *
time
,

346 c⁄° * 
tz
)

348 
tm
 *
ªt
;

349 
gch¨
 *
tz_‹ig
;

351 
tz_‹ig
 = 
	`sùe_swôch_tz
(
tz
);

352 
ªt
 = 
	`loˇ…ime
(
time
);

353 
	`sùe_ª£t_tz
(
tz_‹ig
);

355  
ªt
;

356 
	}
}

359 
	$sùe_ˇl_‰ì_w‹kög_hours
(
sùe_ˇl_w‹kög_hours
 *
wh
)

361 i‡(!
wh
) ;

363 
	`g_‰ì
(
wh
->
°d
.
time
);

364 
	`g_‰ì
(
wh
->
°d
.
day_of_wìk
);

365 
	`g_‰ì
(
wh
->
°d
.
yór
);

367 
	`g_‰ì
(
wh
->
d°
.
time
);

368 
	`g_‰ì
(
wh
->
d°
.
day_of_wìk
);

369 
	`g_‰ì
(
wh
->
d°
.
yór
);

371 
	`g_‰ì
(
wh
->
days_of_wìk
);

372 
	`g_‰ì
(
wh
->
tz
);

373 
	`g_‰ì
(
wh
->
tz_°d
);

374 
	`g_‰ì
(
wh
->
tz_d°
);

375 
	`g_‰ì
(
wh
);

376 
	}
}

383 
time_t


384 
	$sùe_ˇl_gë_°d_d°_time
(
time_t
 
now
,

385 
büs
,

386 
sùe_ˇl_°d_d°
* 
°d_d°
,

387 
sùe_ˇl_°d_d°
* 
d°_°d
)

389 
tm
 
swôch_tm
;

390 
time_t
 
ªs
 = 
TIME_NULL
;

391 
tm
 *
gm_now_tm
;

392 
gch¨
 **
time_¨r
;

394 i‡(
°d_d°
->
m⁄th
 =0Ë 
TIME_NULL
;

396 
gm_now_tm
 = 
	`gmtime
(&
now
);

397 
time_¨r
 = 
	`g_°r•lô
(
°d_d°
->
time
, ":", 0);

399 
swôch_tm
.
tm_£c
 = 
	`©oi
(
time_¨r
[2]);

400 
swôch_tm
.
tm_mö
 = 
	`©oi
(
time_¨r
[1]);

401 
swôch_tm
.
tm_hour
 = 
	`©oi
(
time_¨r
[0]);

402 
	`g_°r‰ìv
(
time_¨r
);

403 
swôch_tm
.
tm_mday
 = 
°d_d°
->
yór
 ? std_d°->
day_‹dî
 : 1 ;

404 
swôch_tm
.
tm_m⁄
 = 
°d_d°
->
m⁄th
 - 1;

405 
swôch_tm
.
tm_yór
 = 
°d_d°
->
yór
 ? 
	`©oi
(°d_d°->yórË- 1900 : 
gm_now_tm
->tm_year;

406 
swôch_tm
.
tm_isd°
 = 0;

408 
ªs
 = 
	`sùe_mktime_tz
(&
swôch_tm
, "UTC");

411 i‡(!
°d_d°
->
yór
) {

412 
swôch_wday
 = 
	`sùe_ˇl_gë_wday
(
°d_d°
->
day_of_wìk
);

413 
√eded_m⁄th
;

415 
dñè
 = 
swôch_wday
 >
swôch_tm
.
tm_wday
 ? (switch_wday - switch_tm.tm_wday) : (switch_wday + 7 - switch_tm.tm_wday);

416 
swôch_tm
.
tm_mday
 = 1 + 
dñè
;

418 
swôch_tm
.
tm_mday
 +(
°d_d°
->
day_‹dî
 - 1) * 7;

419 
√eded_m⁄th
 = 
swôch_tm
.
tm_m⁄
;

421 
ªs
 = 
	`sùe_mktime_tz
(&
swôch_tm
, "UTC");

422 i‡(
√eded_m⁄th
 !
swôch_tm
.
tm_m⁄
) {

424 
swôch_tm
.
tm_mday
 -= 7;

426 
ªs
 = 
	`sùe_mktime_tz
(&
swôch_tm
, "UTC");

430  
ªs
 + (
büs
 + 
d°_°d
->bias)*60;

431 
	}
}

434 
	$sùe_ˇl_∑r£_°d_d°
(c⁄° 
sùe_xml
 *
xn_°d_d°_time
,

435 
sùe_ˇl_°d_d°
 *
°d_d°
)

437 c⁄° 
sùe_xml
 *
node
;

438 
gch¨
 *
tmp
;

440 i‡(!
xn_°d_d°_time
) ;

441 i‡(!
°d_d°
) ;

452 i‡((
node
 = 
	`sùe_xml_chûd
(
xn_°d_d°_time
, "Bias"))) {

453 
°d_d°
->
büs
 = 
	`©oi
(
tmp
 = 
	`sùe_xml_d©a
(
node
));

454 
	`g_‰ì
(
tmp
);

457 i‡((
node
 = 
	`sùe_xml_chûd
(
xn_°d_d°_time
, "Time"))) {

458 
°d_d°
->
time
 = 
	`sùe_xml_d©a
(
node
);

461 i‡((
node
 = 
	`sùe_xml_chûd
(
xn_°d_d°_time
, "DayOrder"))) {

462 
°d_d°
->
day_‹dî
 = 
	`©oi
(
tmp
 = 
	`sùe_xml_d©a
(
node
));

463 
	`g_‰ì
(
tmp
);

466 i‡((
node
 = 
	`sùe_xml_chûd
(
xn_°d_d°_time
, "Month"))) {

467 
°d_d°
->
m⁄th
 = 
	`©oi
(
tmp
 = 
	`sùe_xml_d©a
(
node
));

468 
	`g_‰ì
(
tmp
);

471 i‡((
node
 = 
	`sùe_xml_chûd
(
xn_°d_d°_time
, "DayOfWeek"))) {

472 
°d_d°
->
day_of_wìk
 = 
	`sùe_xml_d©a
(
node
);

475 i‡((
node
 = 
	`sùe_xml_chûd
(
xn_°d_d°_time
, "Year"))) {

476 
°d_d°
->
yór
 = 
	`sùe_xml_d©a
(
node
);

478 
	}
}

481 
	$sùe_ˇl_∑r£_w‹kög_hours
(c⁄° 
sùe_xml
 *
xn_w‹kög_hours
,

482 
sùe_buddy
 *
buddy
)

484 c⁄° 
sùe_xml
 *
xn_büs
;

485 c⁄° 
sùe_xml
 *
xn_timez⁄e
;

486 c⁄° 
sùe_xml
 *
xn_w‹kög_≥riod
;

487 c⁄° 
sùe_xml
 *
xn_°™d¨d_time
;

488 c⁄° 
sùe_xml
 *
xn_daylight_time
;

489 
gch¨
 *
tmp
;

490 
time_t
 
now
 = 
	`time
(
NULL
);

491 
sùe_ˇl_°d_d°
* 
°d
;

492 
sùe_ˇl_°d_d°
* 
d°
;

494 i‡(!
xn_w‹kög_hours
) ;

510 
	`sùe_ˇl_‰ì_w‹kög_hours
(
buddy
->
ˇl_w‹kög_hours
);

511 
buddy
->
ˇl_w‹kög_hours
 = 
	`g_√w0
(
sùe_ˇl_w‹kög_hours
, 1);

513 
xn_timez⁄e
 = 
	`sùe_xml_chûd
(
xn_w‹kög_hours
, "TimeZone");

514 
xn_büs
 = 
	`sùe_xml_chûd
(
xn_timez⁄e
, "Bias");

515 i‡(
xn_büs
) {

516 
buddy
->
ˇl_w‹kög_hours
->
büs
 = 
	`©oi
(
tmp
 = 
	`sùe_xml_d©a
(
xn_büs
));

517 
	`g_‰ì
(
tmp
);

520 
xn_°™d¨d_time
 = 
	`sùe_xml_chûd
(
xn_timez⁄e
, "StandardTime");

521 
xn_daylight_time
 = 
	`sùe_xml_chûd
(
xn_timez⁄e
, "DaylightTime");

523 
°d
 = &((*
buddy
->
ˇl_w‹kög_hours
).std);

524 
d°
 = &((*
buddy
->
ˇl_w‹kög_hours
).dst);

525 
	`sùe_ˇl_∑r£_°d_d°
(
xn_°™d¨d_time
, 
°d
);

526 
	`sùe_ˇl_∑r£_°d_d°
(
xn_daylight_time
, 
d°
);

528 
xn_w‹kög_≥riod
 = 
	`sùe_xml_chûd
(
xn_w‹kög_hours
, "WorkingPeriodArray/WorkingPeriod");

529 i‡(
xn_w‹kög_≥riod
) {

530 
buddy
->
ˇl_w‹kög_hours
->
days_of_wìk
 =

531 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
xn_w‹kög_≥riod
, "DayOfWeek"));

533 
buddy
->
ˇl_w‹kög_hours
->
°¨t_time
 =

534 
	`©oi
(
tmp
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
xn_w‹kög_≥riod
, "StartTimeInMinutes")));

535 
	`g_‰ì
(
tmp
);

537 
buddy
->
ˇl_w‹kög_hours
->
íd_time
 =

538 
	`©oi
(
tmp
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
xn_w‹kög_≥riod
, "EndTimeInMinutes")));

539 
	`g_‰ì
(
tmp
);

542 
°d
->
swôch_time
 = 
	`sùe_ˇl_gë_°d_d°_time
(
now
, 
buddy
->
ˇl_w‹kög_hours
->
büs
, std, 
d°
);

543 
d°
->
swôch_time
 = 
	`sùe_ˇl_gë_°d_d°_time
(
now
, 
buddy
->
ˇl_w‹kög_hours
->
büs
, d°, 
°d
);

546 
buddy
->
ˇl_w‹kög_hours
->
tz
 =

547 
	`g_°rdup_¥ötf
("TST%dTDT%d,M%d.%d.%d/%s,M%d.%d.%d/%s",

548 (
buddy
->
ˇl_w‹kög_hours
->
büs
 + buddy->ˇl_w‹kög_hours->
°d
.bias) / 60,

549 (
buddy
->
ˇl_w‹kög_hours
->
büs
 + buddy->ˇl_w‹kög_hours->
d°
.bias) / 60,

551 
buddy
->
ˇl_w‹kög_hours
->
d°
.
m⁄th
,

552 
buddy
->
ˇl_w‹kög_hours
->
d°
.
day_‹dî
,

553 
	`sùe_ˇl_gë_wday
(
buddy
->
ˇl_w‹kög_hours
->
d°
.
day_of_wìk
),

554 
buddy
->
ˇl_w‹kög_hours
->
d°
.
time
,

556 
buddy
->
ˇl_w‹kög_hours
->
°d
.
m⁄th
,

557 
buddy
->
ˇl_w‹kög_hours
->
°d
.
day_‹dî
,

558 
	`sùe_ˇl_gë_wday
(
buddy
->
ˇl_w‹kög_hours
->
°d
.
day_of_wìk
),

559 
buddy
->
ˇl_w‹kög_hours
->
°d
.
time


562 
buddy
->
ˇl_w‹kög_hours
->
tz_°d
 =

563 
	`g_°rdup_¥ötf
("TST%d",

564 (
buddy
->
ˇl_w‹kög_hours
->
büs
 + buddy->ˇl_w‹kög_hours->
°d
.bias) / 60);

566 
buddy
->
ˇl_w‹kög_hours
->
tz_d°
 =

567 
	`g_°rdup_¥ötf
("TDT%d",

568 (
buddy
->
ˇl_w‹kög_hours
->
büs
 + buddy->ˇl_w‹kög_hours->
d°
.bias) / 60);

569 
	}
}

571 
sùe_ˇl_evít
*

572 
	$sùe_ˇl_gë_evít
(
GSLi°
 *
ˇl_evíts
,

573 
time_t
 
time_ö_que°i⁄
)

575 
GSLi°
 *
íåy
 = 
ˇl_evíts
;

576 
sùe_ˇl_evít
* 
ˇl_evít
;

577 
sùe_ˇl_evít
* 
ªs
 = 
NULL
;

579 i‡(!
ˇl_evíts
 || !
	`IS
(
time_ö_que°i⁄
)Ë 
NULL
;

581 
íåy
) {

582 
ˇl_evít
 = 
íåy
->
d©a
;

584 i‡(
ˇl_evít
->
°¨t_time
 > 
time_ö_que°i⁄
 ||

585 
ˇl_evít
->
íd_time
 <
time_ö_que°i⁄
)

587 
íåy
 =É¡ry->
√xt
;

591 i‡(!
ªs
) {

592 
ªs
 = 
ˇl_evít
;

594 
ªs_°©us
 = (
ªs
->
ˇl_°©us
 =
SIPE_CAL_NO_DATA
) ? -1 :Ñes->cal_status;

595 
ˇl_°©us
 = (
ˇl_evít
->ˇl_°©u†=
SIPE_CAL_NO_DATA
) ? -1 : cal_event->cal_status;

596 i‡(
ªs_°©us
 < 
ˇl_°©us
) {

597 
ªs
 = 
ˇl_evít
;

600 
íåy
 =É¡ry->
√xt
;

602  
ªs
;

603 
	}
}

606 
	$sùe_ˇl_gë_°©us0
(c⁄° 
gch¨
 *
‰ì_busy
,

607 
time_t
 
ˇl_°¨t
,

608 
gønuœrôy
,

609 
time_t
 
time_ö_que°i⁄
,

610 *
ödex
)

612 
ªs
 = 
SIPE_CAL_NO_DATA
;

613 
shi·
;

614 
time_t
 
ˇl_íd
 = 
ˇl_°¨t
 + 
	`°æí
(
‰ì_busy
)*
gønuœrôy
*60 - 1;

616 i‡(!(
time_ö_que°i⁄
 >
ˇl_°¨t
 &&Åime_ö_que°i⁄ <
ˇl_íd
)Ë 
ªs
;

618 
shi·
 = (
time_ö_que°i⁄
 - 
ˇl_°¨t
Ë/ (
gønuœrôy
*60);

619 i‡(
ödex
) {

620 *
ödex
 = 
shi·
;

623 
ªs
 = 
‰ì_busy
[
shi·
] - '0';

625  
ªs
;

626 
	}
}

631 
time_t


632 
	$sùe_ˇl_gë_sö˚_time
(c⁄° 
gch¨
 *
‰ì_busy
,

633 
time_t
 
ˇlSèπ
,

634 
gønuœrôy
,

635 
ödex
,

636 
cuºít_°©e
)

638 
i
;

640 i‡((
ödex
 < 0Ë|| ((
size_t
)(ödex + 1Ë> 
	`°æí
(
‰ì_busy
)))  0;

642 
i
 = 
ödex
; i >= 0; i--) {

643 
ãmp_°©us
 = 
‰ì_busy
[
i
] - '0';

645 i‡(
cuºít_°©e
 !
ãmp_°©us
) {

646  
ˇlSèπ
 + (
i
 + 1)*
gønuœrôy
*60;

649 i‡(
i
 =0Ë 
ˇlSèπ
;

653 
	}
}

655 
sùe_ˇl_gë_‰ì_busy
(
sùe_buddy
 *
buddy
);

658 
	$sùe_ˇl_gë_°©us
(
sùe_buddy
 *
buddy
,

659 
time_t
 
time_ö_que°i⁄
,

660 
time_t
 *
sö˚
)

662 
time_t
 
ˇl_°¨t
;

663 c⁄° * 
‰ì_busy
;

664 
ªt
 = 
SIPE_CAL_NO_DATA
;

665 
time_t
 
°©e_sö˚
;

666 
ödex
;

668 i‡(!
buddy
 || !buddy->
ˇl_°¨t_time
 || !buddy->
ˇl_gønuœrôy
) {

669 
	`SIPE_DEBUG_INFO
("sipe_cal_get_status:Ço calendar data1 for %s,Éxiting",

670 
buddy
 ? (buddy->
«me
 ? buddy->name : "") : "");

671  
SIPE_CAL_NO_DATA
;

674 i‡(!(
‰ì_busy
 = 
	`sùe_ˇl_gë_‰ì_busy
(
buddy
))) {

675 
	`SIPE_DEBUG_INFO
("sùe_ˇl_gë_°©us:ÇÿˇÀnd¨ d©a2 f‹ %s,Éxôög", 
buddy
->
«me
);

676  
SIPE_CAL_NO_DATA
;

678 
	`SIPE_DEBUG_INFO
("sùe_ˇl_gë_des¸ùti⁄: buddy->ˇl_‰ì_busy=\n%s", 
‰ì_busy
);

680 
ˇl_°¨t
 = 
	`sùe_utûs_°r_to_time
(
buddy
->
ˇl_°¨t_time
);

682 
ªt
 = 
	`sùe_ˇl_gë_°©us0
(
‰ì_busy
,

683 
ˇl_°¨t
,

684 
buddy
->
ˇl_gønuœrôy
,

685 
time_ö_que°i⁄
,

686 &
ödex
);

687 
°©e_sö˚
 = 
	`sùe_ˇl_gë_sö˚_time
(
‰ì_busy
,

688 
ˇl_°¨t
,

689 
buddy
->
ˇl_gønuœrôy
,

690 
ödex
,

691 
ªt
);

693 i‡(
sö˚
Ë*sö˚ = 
°©e_sö˚
;

694  
ªt
;

695 
	}
}

697 
time_t


698 
	$sùe_ˇl_gë_swôch_time
(c⁄° 
gch¨
 *
‰ì_busy
,

699 
time_t
 
ˇlSèπ
,

700 
gønuœrôy
,

701 
ödex
,

702 
cuºít_°©e
,

703 *
to_°©e
)

705 
size_t
 
i
;

706 
time_t
 
ªt
 = 
TIME_NULL
;

708 i‡((
ödex
 < 0Ë|| ((
size_t
Ë(ödex + 1Ë> 
	`°æí
(
‰ì_busy
))) {

709 *
to_°©e
 = 
SIPE_CAL_NO_DATA
;

710  
ªt
;

713 
i
 = 
ödex
 + 1; i < 
	`°æí
(
‰ì_busy
); i++) {

714 
ãmp_°©us
 = 
‰ì_busy
[
i
] - '0';

716 i‡(
cuºít_°©e
 !
ãmp_°©us
) {

717 *
to_°©e
 = 
ãmp_°©us
;

718  
ˇlSèπ
 + 
i
*
gønuœrôy
*60;

722  
ªt
;

723 
	}
}

726 
	$sùe_ˇl_gë_tz
(
sùe_ˇl_w‹kög_hours
 *
wh
,

727 
time_t
 
time_ö_que°i⁄
)

729 
time_t
 
d°_swôch_time
 = (*
wh
).
d°
.
swôch_time
;

730 
time_t
 
°d_swôch_time
 = (*
wh
).
°d
.
swôch_time
;

731 
gboﬁón
 
is_d°
 = 
FALSE
;

734 i‡(
d°_swôch_time
 =
TIME_NULL
) {

735  
wh
->
tz_°d
;

738 i‡(
d°_swôch_time
 < 
°d_swôch_time
) {

739 i‡(
time_ö_que°i⁄
 >
d°_swôch_time
 &&Åime_ö_que°i⁄ < 
°d_swôch_time
) {

740 
is_d°
 = 
TRUE
;

743 i‡(
time_ö_que°i⁄
 >
d°_swôch_time
 ||Åime_ö_que°i⁄ < 
°d_swôch_time
) {

744 
is_d°
 = 
TRUE
;

748 i‡(
is_d°
) {

749  
wh
->
tz_d°
;

751  
wh
->
tz_°d
;

753 
	}
}

755 
time_t


756 
	$sùe_ˇl_mktime_of_day
(
tm
 *
ßm∂e_today_tm
,

757 c⁄° 
shi·_möuãs
,

758 c⁄° *
tz
)

760 
ßm∂e_today_tm
->
tm_£c
 = 0;

761 
ßm∂e_today_tm
->
tm_mö
 = 
shi·_möuãs
 % 60;

762 
ßm∂e_today_tm
->
tm_hour
 = 
shi·_möuãs
 / 60;

764  
	`sùe_mktime_tz
(
ßm∂e_today_tm
, 
tz
);

765 
	}
}

773 
	$sùe_ˇl_gë_today_w‹k_hours
(
sùe_ˇl_w‹kög_hours
 *
wh
,

774 
time_t
 *
°¨t
,

775 
time_t
 *
íd
,

776 
time_t
 *
√xt_°¨t
)

778 
time_t
 
now
 = 
	`time
(
NULL
);

779 c⁄° *
tz
 = 
	`sùe_ˇl_gë_tz
(
wh
, 
now
);

780 
tm
 *
ªmŸe_now_tm
 = 
	`sùe_loˇ…ime_tz
(&
now
, 
tz
);

782 i‡(!
	`°r°r
(
wh
->
days_of_wìk
, 
wday_«mes
[
ªmŸe_now_tm
->
tm_wday
])) {

783 *
°¨t
 = 
TIME_NULL
;

784 *
íd
 = 
TIME_NULL
;

785 *
√xt_°¨t
 = 
TIME_NULL
;

789 *
íd
 = 
	`sùe_ˇl_mktime_of_day
(
ªmŸe_now_tm
, 
wh
->
íd_time
, 
tz
);

791 i‡(
now
 < *
íd
) {

792 *
°¨t
 = 
	`sùe_ˇl_mktime_of_day
(
ªmŸe_now_tm
, 
wh
->
°¨t_time
, 
tz
);

793 *
√xt_°¨t
 = 
TIME_NULL
;

795 
time_t
 
tom
 = 
now
 + 24*60*60;

796 
tm
 *
ªmŸe_tom_tm
 = 
	`sùe_loˇ…ime_tz
(&
tom
, 
	`sùe_ˇl_gë_tz
(
wh
,Åom));

798 i‡(!
	`°r°r
(
wh
->
days_of_wìk
, 
wday_«mes
[
ªmŸe_tom_tm
->
tm_wday
])) {

799 *
√xt_°¨t
 = 
TIME_NULL
;

802 *
√xt_°¨t
 = 
	`sùe_ˇl_mktime_of_day
(
ªmŸe_tom_tm
, 
wh
->
°¨t_time
, 
	`sùe_ˇl_gë_tz
(wh, 
tom
));

803 *
°¨t
 = 
TIME_NULL
;

805 
	}
}

808 
	$sùe_ˇl_is_ö_w‹k_hours
(c⁄° 
time_t
 
time_ö_que°i⁄
,

809 c⁄° 
time_t
 
°¨t
,

810 c⁄° 
time_t
 
íd
)

812  !((
time_ö_que°i⁄
 >
íd
Ë|| (
	`IS
(
°¨t
) &&Åime_in_question < start));

813 
	}
}

819 
time_t


820 
	$sùe_ˇl_gë_u¡û
(c⁄° 
time_t
 
now
,

821 c⁄° 
time_t
 
swôch_time
,

822 c⁄° 
time_t
 
°¨t
,

823 c⁄° 
time_t
 
íd
,

824 c⁄° 
time_t
 
√xt_°¨t
)

826 
time_t
 
ªt
 = 
TIME_NULL
;

827 
mö_diff
 = 
now
 - 
ªt
;

829 i‡(
	`IS
(
swôch_time
Ë&& swôch_timê> 
now
 && (swôch_timê-ÇowË< 
mö_diff
) {

830 
mö_diff
 = 
swôch_time
 - 
now
;

831 
ªt
 = 
swôch_time
;

833 i‡(
	`IS
(
°¨t
Ë&& sèπ > 
now
 && (°¨à-ÇowË< 
mö_diff
) {

834 
mö_diff
 = 
°¨t
 - 
now
;

835 
ªt
 = 
°¨t
;

837 i‡(
	`IS
(
íd
Ë&&Énd > 
now
 && (íd -ÇowË< 
mö_diff
) {

838 
mö_diff
 = 
íd
 - 
now
;

839 
ªt
 = 
íd
;

841 i‡(
	`IS
(
√xt_°¨t
Ë&&Çext_°¨à> 
now
 && (√xt_°¨à-ÇowË< 
mö_diff
) {

842 
mö_diff
 = 
√xt_°¨t
 - 
now
;

843 
ªt
 = 
√xt_°¨t
;

845  
ªt
;

846 
	}
}

849 
	$sùe_ˇl_gë_‰ì_busy
(
sùe_buddy
 *
buddy
)

852 i‡(!
buddy
->
ˇl_‰ì_busy
 && buddy->
ˇl_‰ì_busy_ba£64
) {

853 
gsize
 
ˇl_dec64_Àn
;

854 
guch¨
 *
ˇl_dec64
;

855 
gsize
 
i
;

856 
j
 = 0;

858 
ˇl_dec64
 = 
	`g_ba£64_decode
(
buddy
->
ˇl_‰ì_busy_ba£64
, &
ˇl_dec64_Àn
);

860 
buddy
->
ˇl_‰ì_busy
 = 
	`g_mÆloc0
(
ˇl_dec64_Àn
 * 4 + 1);

875 
i
 = 0; i < 
ˇl_dec64_Àn
; i++) {

876 
	#TWO_BIT_MASK
 0x03

	)

877 
tmp
 = 
ˇl_dec64
[
i
];

878 
buddy
->
ˇl_‰ì_busy
[
j
++] = (
tmp
 & 
TWO_BIT_MASK
) + '0';

879 
buddy
->
ˇl_‰ì_busy
[
j
++] = ((
tmp
 >> 2Ë& 
TWO_BIT_MASK
) + '0';

880 
buddy
->
ˇl_‰ì_busy
[
j
++] = ((
tmp
 >> 4Ë& 
TWO_BIT_MASK
) + '0';

881 
buddy
->
ˇl_‰ì_busy
[
j
++] = ((
tmp
 >> 6Ë& 
TWO_BIT_MASK
) + '0';

883 
buddy
->
ˇl_‰ì_busy
[
j
++] = '\0';

884 
	`g_‰ì
(
ˇl_dec64
);

887  
buddy
->
ˇl_‰ì_busy
;

888 
	}
}

891 
	$sùe_ˇl_gë_‰ìbusy_ba£64
(c⁄° * 
‰ìbusy_hex
)

893 
guöt
 
i
 = 0;

894 
guöt
 
j
 = 0;

895 
guöt
 
shi·_Á˘‹
 = 0;

896 
guöt
 
Àn
, 
ªs_Àn
;

897 
guch¨
 *
ªs
;

898 
gch¨
 *
ªs_ba£64
;

900 i‡(!
‰ìbusy_hex
Ë 
NULL
;

902 
Àn
 = 
	`°æí
(
‰ìbusy_hex
);

903 
ªs_Àn
 = 
Àn
 / 4 + 1;

904 
ªs
 = 
	`g_mÆloc0
(
ªs_Àn
);

905 
i
 < 
Àn
) {

906 
ªs
[
j
] |(
‰ìbusy_hex
[
i
++] - '0'Ë<< 
shi·_Á˘‹
;

907 
shi·_Á˘‹
 += 2;

908 i‡(
shi·_Á˘‹
 == 8) {

909 
shi·_Á˘‹
 = 0;

910 
j
++;

914 
ªs_ba£64
 = 
	`g_ba£64_ícode
(
ªs
, 
shi·_Á˘‹
 ? 
ªs_Àn
 :Ñes_len - 1);

915 
	`g_‰ì
(
ªs
);

916  
ªs_ba£64
;

917 
	}
}

920 
	$sùe_ˇl_gë_des¸ùti⁄
(
sùe_buddy
 *
buddy
)

922 
time_t
 
ˇl_°¨t
;

923 
time_t
 
ˇl_íd
;

924 
cuºít_ˇl_°©e
;

925 
time_t
 
now
 = 
	`time
(
NULL
);

926 
time_t
 
°¨t
 = 
TIME_NULL
;

927 
time_t
 
íd
 = 
TIME_NULL
;

928 
time_t
 
√xt_°¨t
 = 
TIME_NULL
;

929 
time_t
 
swôch_time
;

930 
to_°©e
 = 
SIPE_CAL_NO_DATA
;

931 
time_t
 
u¡û
 = 
TIME_NULL
;

932 
ödex
 = 0;

933 
gboﬁón
 
has_w‹kög_hours
 = (
buddy
->
ˇl_w‹kög_hours
 !
NULL
);

934 c⁄° *
‰ì_busy
;

935 c⁄° *
ˇl_°©es
[] = {
	`_
("Free"),

936 
	`_
("Tentative"),

937 
	`_
("Busy"),

938 
	`_
("Out of office"),

939 
	`_
("No data")};

941 i‡(
buddy
->
ˇl_gønuœrôy
 != 15) {

942 
	`SIPE_DEBUG_INFO
("sùe_ˇl_gë_des¸ùti⁄: gønuœrôy %d i†unsuµ‹ãd,Éxôög.", 
buddy
->
ˇl_gønuœrôy
);

943  
NULL
;

947 
‰ì_busy
 = 
	`sùe_ˇl_gë_‰ì_busy
(
buddy
);

948 
	`SIPE_DEBUG_INFO
("sùe_ˇl_gë_des¸ùti⁄: buddy->ˇl_‰ì_busy=\n%s", 
‰ì_busy
 ? free_busy : "");

950 i‡(!
buddy
->
ˇl_‰ì_busy
 || !buddy->
ˇl_gønuœrôy
 || !buddy->
ˇl_°¨t_time
) {

951 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_cal_get_description:Ço calendar data,Éxiting");

952  
NULL
;

955 
ˇl_°¨t
 = 
	`sùe_utûs_°r_to_time
(
buddy
->
ˇl_°¨t_time
);

956 
ˇl_íd
 = 
ˇl_°¨t
 + 60 * (
buddy
->
ˇl_gønuœrôy
Ë* 
	`°æí
(buddy->
ˇl_‰ì_busy
);

958 
cuºít_ˇl_°©e
 = 
	`sùe_ˇl_gë_°©us0
(
‰ì_busy
, 
ˇl_°¨t
, 
buddy
->
ˇl_gønuœrôy
, 
	`time
(
NULL
), &
ödex
);

959 i‡(
cuºít_ˇl_°©e
 =
SIPE_CAL_NO_DATA
) {

960 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_cal_get_description: calendar is undefined forÖresent moment,Éxiting.");

961  
NULL
;

964 
swôch_time
 = 
	`sùe_ˇl_gë_swôch_time
(
‰ì_busy
, 
ˇl_°¨t
, 
buddy
->
ˇl_gønuœrôy
, 
ödex
, 
cuºít_ˇl_°©e
, &
to_°©e
);

966 
	`SIPE_DEBUG_INFO_NOFORMAT
("\n* Calendar *");

967 i‡(
buddy
->
ˇl_w‹kög_hours
) {

968 
	`sùe_ˇl_gë_today_w‹k_hours
(
buddy
->
ˇl_w‹kög_hours
, &
°¨t
, &
íd
, &
√xt_°¨t
);

970 
	`SIPE_DEBUG_INFO
("RemŸênowÅimez⁄ê: %s", 
	`sùe_ˇl_gë_tz
(
buddy
->
ˇl_w‹kög_hours
, 
now
));

971 
	`SIPE_DEBUG_INFO
("std.switch_time(GMT): %s",

972 
	`IS
((*
buddy
->
ˇl_w‹kög_hours
).
°d
.
swôch_time
Ë? 
	`as˘ime
(
	`gmtime
(&((*buddy->cal_working_hours).std.switch_time))) : "");

973 
	`SIPE_DEBUG_INFO
("dst.switch_time(GMT): %s",

974 
	`IS
((*
buddy
->
ˇl_w‹kög_hours
).
d°
.
swôch_time
Ë? 
	`as˘ime
(
	`gmtime
(&((*buddy->cal_working_hours).dst.switch_time))) : "");

975 
	`SIPE_DEBUG_INFO
("RemoteÇowÅime : %s",

976 
	`as˘ime
(
	`sùe_loˇ…ime_tz
(&
now
, 
	`sùe_ˇl_gë_tz
(
buddy
->
ˇl_w‹kög_hours
,Çow))));

977 
	`SIPE_DEBUG_INFO
("Remote startÅime : %s",

978 
	`IS
(
°¨t
Ë? 
	`as˘ime
(
	`sùe_loˇ…ime_tz
(&°¨t, 
	`sùe_ˇl_gë_tz
(
buddy
->
ˇl_w‹kög_hours
, start))) : "");

979 
	`SIPE_DEBUG_INFO
("RemoteÉndÅime : %s",

980 
	`IS
(
íd
Ë? 
	`as˘ime
(
	`sùe_loˇ…ime_tz
(&íd, 
	`sùe_ˇl_gë_tz
(
buddy
->
ˇl_w‹kög_hours
,Énd))) : "");

981 
	`SIPE_DEBUG_INFO
("Rem.Çext_startÅime: %s",

982 
	`IS
(
√xt_°¨t
Ë? 
	`as˘ime
(
	`sùe_loˇ…ime_tz
(&√xt_°¨t, 
	`sùe_ˇl_gë_tz
(
buddy
->
ˇl_w‹kög_hours
,Çext_start))) : "");

983 
	`SIPE_DEBUG_INFO
("Remote switchÅime : %s",

984 
	`IS
(
swôch_time
Ë? 
	`as˘ime
(
	`sùe_loˇ…ime_tz
(&swôch_time, 
	`sùe_ˇl_gë_tz
(
buddy
->
ˇl_w‹kög_hours
, switch_time))) : "");

986 
	`SIPE_DEBUG_INFO
("LocalÇowÅime : %s",

987 
	`as˘ime
(
	`loˇ…ime
(&
now
)));

988 
	`SIPE_DEBUG_INFO
("Local switchÅime : %s",

989 
	`IS
(
swôch_time
Ë? 
	`as˘ime
(
	`loˇ…ime
(&switch_time)) : "");

991 
	`SIPE_DEBUG_INFO
("CÆíd¨ End (GMTË : %s", 
	`as˘ime
(
	`gmtime
(&
ˇl_íd
)));

992 
	`SIPE_DEBUG_INFO
("cuºíàˇ»°©ê : %s", 
ˇl_°©es
[
cuºít_ˇl_°©e
]);

993 
	`SIPE_DEBUG_INFO
("swôch cÆ sèã : %s", 
ˇl_°©es
[
to_°©e
] );

1037 i‡(
cuºít_ˇl_°©e
 < 1) {

1038 
u¡û
 = 
	`sùe_ˇl_gë_u¡û
(
now
, 
swôch_time
, 
°¨t
, 
íd
, 
√xt_°¨t
);

1040 
u¡û
 = 
swôch_time
;

1043 i‡(!
	`IS
(
u¡û
Ë&& (
ˇl_íd
 - 
now
 > 8*60*60))

1044 
u¡û
 = 
ˇl_íd
;

1046 i‡(!
	`IS
(
u¡û
)) {

1047  
	`g_°rdup_¥ötf
(
	`_
("Cuºíéy %s"), 
ˇl_°©es
[
cuºít_ˇl_°©e
]);

1050 i‡(
u¡û
 - 
now
 > 8*60*60) {

1052 i‡(
cuºít_ˇl_°©e
 < 1 && 
has_w‹kög_hours
 && !
	`sùe_ˇl_is_ö_w‹k_hours
(
now
, 
°¨t
, 
íd
)) {

1053  
	`g_°rdup
(
	`_
("Outside of working hours forÇext 8 hours"));

1055  
	`g_°rdup_¥ötf
(
	`_
("%†f‹Çexà8 hours"), 
ˇl_°©es
[
cuºít_ˇl_°©e
]);

1059 i‡(
cuºít_ˇl_°©e
 < 1) {

1060 c⁄° *
tmp
;

1061 
tm
 *
u¡û_tm
 = 
	`loˇ…ime
(&
u¡û
);

1063 i‡(
has_w‹kög_hours
 && !
	`sùe_ˇl_is_ö_w‹k_hours
(
now
, 
°¨t
, 
íd
)) {

1064 
tmp
 = 
	`_
("Not working");

1066 
tmp
 = 
ˇl_°©es
[
cuºít_ˇl_°©e
];

1068  
	`g_°rdup_¥ötf
(
	`_
("%†u¡û %.2d:%.2d"), 
tmp
, 
u¡û_tm
->
tm_hour
, u¡û_tm->
tm_mö
);

1070 *
tmp
;

1071 *
ªs
;

1072 
tm
 *
u¡û_tm
 = 
	`loˇ…ime
(&
u¡û
);

1074 
tmp
 = 
	`g_°rdup_¥ötf
(
	`_
("Cuºíéy %s"), 
ˇl_°©es
[
cuºít_ˇl_°©e
]);

1075 i‡(
has_w‹kög_hours
 && !
	`sùe_ˇl_is_ö_w‹k_hours
(
u¡û
, 
°¨t
, 
íd
)) {

1076 
ªs
 = 
	`g_°rdup_¥ötf
(
	`_
("%s. Outside of working hoursát %.2d:%.2d"),

1077 
tmp
, 
u¡û_tm
->
tm_hour
, u¡û_tm->
tm_mö
);

1078 
	`g_‰ì
(
tmp
);

1079  
ªs
;

1081 
ªs
 = 
	`g_°rdup_¥ötf
(
	`_
("%s. %†© %.2d:%.2d"), 
tmp
, 
ˇl_°©es
[
to_°©e
], 
u¡û_tm
->
tm_hour
, u¡û_tm->
tm_mö
);

1082 
	`g_‰ì
(
tmp
);

1083  
ªs
;

1087 
	}
}

	@src/core/sipe-cal.h

32 
	gsùe_buddy
;

33 
	g_sùe_xml
;

36 
	#SIPE_CAL_FREE
 0

	)

37 
	#SIPE_CAL_TENTATIVE
 1

	)

38 
	#SIPE_CAL_BUSY
 2

	)

39 
	#SIPE_CAL_OOF
 3

	)

40 
	#SIPE_CAL_NO_DATA
 4

	)

43 
	#SIPE_FREE_BUSY_GRANULARITY_SEC
 (15*60)

	)

45 
	#SIPE_FREE_BUSY_PERIOD_SEC
 (4*(24*60*60))

	)

47 
	ssùe_ˇl_evít
 {

48 
time_t
 
	m°¨t_time
;

49 
time_t
 
	míd_time
;

51 
	mˇl_°©us
;

52 *
	msubje˘
;

53 *
	mloˇti⁄
;

54 
	mis_mìtög
;

60 
	ssùe_ˇÀnd¨
 {

61 
sùe_accou¡_d©a
 *
	msù
;

63 
	m°©e
;

64 *
	memaû
;

65 *
	mÀgacy_dn
;

66 
HâpC⁄nAuth
 *
	mauth
;

67 
	mauto_disco_mëhod
;

68 
	mis_ews_dißbÀd
;

69 
	mis_domöo_dißbÀd
;

70 
	mis_upd©ed
;

72 *
	mas_uæ
;

73 *
	moof_uæ
;

74 *
	mﬂb_uæ
;

75 *
	mdomöo_uæ
;

77 *
	moof_°©e
;

78 *
	moof_nŸe
;

79 
time_t
 
	moof_°¨t
;

80 
time_t
 
	moof_íd
;

81 
time_t
 
	mupd©ed
;

82 
gboﬁón
 
	mpublished
;

84 
HâpSessi⁄
 *
	mhâp_£ssi⁄
;

85 
HâpC⁄n
 *
	mhâp_c⁄n
;

87 
time_t
 
	mfb_°¨t
;

89 *
	m‰ì_busy
;

90 *
	mw‹kög_hours_xml_°r
;

91 
GSLi°
 *
	mˇl_evíts
;

95 
sùe_ˇl_evít_‰ì
(
sùe_ˇl_evít
* 
ˇl_evít
);

98 
sùe_ˇl_evíts_‰ì
(
GSLi°
 *
ˇl_evíts
);

101 
sùe_ˇl_ˇÀnd¨_‰ì
(
sùe_ˇÀnd¨
 *
ˇl
);

103 
gboﬁón


104 
sùe_ˇl_ˇÀnd¨_öô
(
sùe_accou¡_d©a
 *
sù
, 
gboﬁón
 *
has_uæ
);

112 
sùe_ˇl_evít_hash
(
sùe_ˇl_evít
* 
evít
);

120 
sùe_ˇl_evít_des¸ibe
(
sùe_ˇl_evít
* 
ˇl_evít
);

129 
time_t


130 
sùe_mktime_tz
(
tm
 *tm,

131 c⁄° * 
tz
);

141 
sùe_ˇl_gë_‰ìbusy_ba£64
(c⁄° * 
‰ìbusy_hex
);

144 
	gsùe_ˇl_w‹kög_hours
;

151 
sùe_ˇl_∑r£_w‹kög_hours
(c⁄° 
_sùe_xml
 *
xn_w‹kög_hours
,

152 
sùe_buddy
 *
buddy
);

158 
sùe_ˇl_‰ì_w‹kög_hours
(
sùe_ˇl_w‹kög_hours
 *
wh
);

165 
sùe_ˇl_gë_des¸ùti⁄
(
sùe_buddy
 *
buddy
);

174 
sùe_ˇl_gë_°©us
(
sùe_buddy
 *
buddy
,

175 
time_t
 
time_ö_que°i⁄
,

176 
time_t
 *
sö˚
);

183 
sùe_ˇl_evít
*

184 
sùe_ˇl_gë_evít
(
GSLi°
 *
ˇl_evíts
,

185 
time_t
 
time_ö_que°i⁄
);

	@src/core/sipe-chat.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~"c⁄fig.h
"

28 
	~<time.h
>

30 
	~<glib.h
>

32 
	~"sùe-backíd.h
"

33 
	~"sùe-ch©.h
"

34 
	~"sùe-c‹e.h
"

35 
	~"sùe-c‹e-¥iv©e.h
"

36 
	~"sùe-∆s.h
"

37 
	~"sùe-£ssi⁄.h
"

38 
	~"sùe-utûs.h
"

39 
	~"sùe.h
"

41 
	$sùe_c‹e_ch©_¸óã
(
sùe_c‹e_public
 *
sùe_public
, 
id
,

42 c⁄° *
«me
)

44 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA
;

45 
sù_£ssi⁄
 *
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_ch©_by_id
(
sù
, 
id
);

47 i‡(
£ssi⁄
) {

48 
gch¨
 *
uri
 = 
	`sù_uri
(
«me
);

49 
	`sùe_övôe_to_ch©
(
sù
, 
£ssi⁄
, 
uri
);

50 
	`g_‰ì
(
uri
);

52 
	}
}

55 
GHashTabÀ
 *
	gch©_«mes_övî£
 = 
NULL
;

57 
gch¨
 *

58 
	$sùe_ch©_gë_«me
(c⁄° 
gch¨
 *
¥Ÿo_ch©_id
)

69 
GHashTabÀ
 *
ch©_«mes
 = 
NULL
;

75 
ch©_£q
 = 0;

77 *
ch©_«me
 = 
NULL
;

79 i‡(!
ch©_«mes
) {

80 
ch©_«mes
 = 
	`g_hash_èbÀ_√w_fuŒ
(
g_°r_hash
, 
g_°r_equÆ
, 
g_‰ì
, g_free);

82 i‡(!
ch©_«mes_övî£
) {

83 
ch©_«mes_övî£
 = 
	`g_hash_èbÀ_√w_fuŒ
(
g_°r_hash
, 
g_°r_equÆ
, 
g_‰ì
, g_free);

86 i‡(
¥Ÿo_ch©_id
) {

87 
ch©_«me
 = 
	`g_hash_èbÀ_lookup
(
ch©_«mes
, 
¥Ÿo_ch©_id
);

88 
	`SIPE_DEBUG_INFO
("sùe_ch©_gë_«me:Üooku∞ªsu…s: %s", 
ch©_«me
 ? chat_name : "NULL");

90 i‡(!
ch©_«me
) {

91 
ch©_«me
 = 
	`g_°rdup_¥ötf
(
	`_
("Ch© #%d"), ++
ch©_£q
);

92 
	`g_hash_èbÀ_ö£π
(
ch©_«mes
, 
	`g_°rdup
(
¥Ÿo_ch©_id
), 
ch©_«me
);

93 
	`g_hash_èbÀ_ö£π
(
ch©_«mes_övî£
, 
ch©_«me
, 
	`g_°rdup
(
¥Ÿo_ch©_id
));

94 
	`SIPE_DEBUG_INFO
("sùe_ch©_gë_«me:áddedÇew: %s", 
ch©_«me
);

97  
	`g_°rdup
(
ch©_«me
);

98 
	}
}

100 c⁄° 
gch¨
 *

101 
	$sùe_ch©_föd_«me
(c⁄° 
gch¨
 *
ch©_«me
)

103 i‡(!
ch©_«mes_övî£
Ë 
NULL
;

104 (
	`g_hash_èbÀ_lookup
(
ch©_«mes_övî£
, 
ch©_«me
));

105 
	}
}

	@src/core/sipe-chat.h

30 
	gsùe_accou¡_d©a
;

41 
gch¨
 *

42 
sùe_ch©_gë_«me
(c⁄° 
gch¨
 *
¥Ÿo_ch©_id
);

51 c⁄° 
gch¨
 *

52 
sùe_ch©_föd_«me
(c⁄° 
gch¨
 *
ch©_«me
);

	@src/core/sipe-conf.c

25 #ifde‡
HAVE_CONFIG_H


26 
	~"c⁄fig.h
"

29 
	~<°dlib.h
>

30 
	~<°rög.h
>

31 
	~<time.h
>

33 
	~<glib.h
>

35 
	~"c⁄vîßti⁄.h
"

37 
	~"sùe-comm⁄.h
"

38 
	~"sùmsg.h
"

39 
	~"sù-å™•‹t.h
"

40 
	~"sùe-backíd.h
"

41 
	~"sùe-ch©.h
"

42 
	~"sùe-c⁄f.h
"

43 
	~"sùe-c‹e.h
"

44 
	~"sùe-c‹e-¥iv©e.h
"

45 
	~"sùe-dülog.h
"

46 
	~"sùe-∆s.h
"

47 
	~"sùe-£ssi⁄.h
"

48 
	~"sùe-utûs.h
"

49 
	~"sùe-xml.h
"

50 
	~"sùe.h
"

60 
	#SIPE_SEND_CONF_ADD
 \

81 "</ªque°>"

	)

88 
	#SIPE_SEND_CONF_ADD_USER
 \

104 "</ªque°>"

	)

114 
	#SIPE_SEND_CONF_MODIFY_USER_ROLES
 \

127 "</ªque°>"

	)

137 
	#SIPE_SEND_CONF_MODIFY_CONF_LOCK
 \

148 "</ªque°>"

	)

158 
	#SIPE_SEND_CONF_DELETE_USER
 \

168 "</ªque°>"

	)

175 
	#SIPE_SEND_CONF_INVITE
 \

182 "</C⁄„ªncög>"

	)

189 
	$ønd_guid
()

191  
	`g_°rdup_¥ötf
("%4X%4X-%4X-%4X-%4X-%4X%4X%4X",

192 
	`ønd
() % 0xAAFF + 0x1111,

193 
	`ønd
() % 0xAAFF + 0x1111,

194 
	`ønd
() % 0xAAFF + 0x1111,

195 
	`ønd
() % 0xAAFF + 0x1111,

196 
	`ønd
() % 0xAAFF + 0x1111,

197 
	`ønd
() % 0xAAFF + 0x1111,

198 
	`ønd
() % 0xAAFF + 0x1111,

199 
	`ønd
() % 0xAAFF + 0x1111);

200 
	}
}

206 
	$sùe_subs¸ibe_c⁄„ªn˚
(
sùe_accou¡_d©a
 *
sù
,

207 
sù_£ssi⁄
 *
£ssi⁄
,

208 c⁄° 
expúes
)

210 
gch¨
 *
expúes_hdr
 = (
expúes
 >0Ë? 
	`g_°rdup_¥ötf
("Expúes: %d\r\n",ÉxpúesË: 
	`g_°rdup
("");

211 
gch¨
 *
c⁄è˘
 = 
	`gë_c⁄è˘
(
sù
);

212 
gch¨
 *
hdr
 = 
	`g_°rdup_¥ötf
(

221 
expúes_hdr
,

222 
c⁄è˘
);

223 
	`g_‰ì
(
expúes_hdr
);

224 
	`g_‰ì
(
c⁄è˘
);

226 
	`£nd_sù_ªque°
(
SIP_TO_CORE_PRIVATE
,

228 
£ssi⁄
->
focus_uri
,

229 
£ssi⁄
->
focus_uri
,

230 
hdr
,

232 
NULL
,

233 
¥o˚ss_subs¸ibe_ª•⁄£
);

234 
	`g_‰ì
(
hdr
);

235 
	}
}

238 
gboﬁón


239 
	$¥o˚ss_övôe_c⁄f_focus_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

240 
sùmsg
 *
msg
,

241 
SIPE_UNUSED_PARAMETER
 
å™ß˘i⁄
 *
å™s
)

243 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

244 
sù_£ssi⁄
 *
£ssi⁄
 = 
NULL
;

245 *
focus_uri
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, "To"));

247 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_c⁄„ªn˚
(
sù
, 
focus_uri
);

249 i‡(!
£ssi⁄
) {

250 
	`SIPE_DEBUG_INFO
("¥o˚ss_övôe_c⁄f_focus_ª•⁄£: u«bÀÅÿföd c⁄‡£ssi⁄ wôh focus=%s", 
focus_uri
);

251 
	`g_‰ì
(
focus_uri
);

252  
FALSE
;

255 i‡(!
£ssi⁄
->
focus_dülog
) {

256 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_invite_conf_focus_response: session's focus_dialog is NULL");

257 
	`g_‰ì
(
focus_uri
);

258  
FALSE
;

261 
	`sùe_dülog_∑r£
(
£ssi⁄
->
focus_dülog
, 
msg
, 
TRUE
);

263 i‡(
msg
->
ª•⁄£
 >= 200) {

265 
£ssi⁄
->
focus_dülog
->
c£q
 = 0;

266 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "ACK", 
£ssi⁄
->
focus_dülog
->
wôh
, sessi⁄->focus_dülog->wôh, 
NULL
, NULL, session->focus_dialog, NULL);

267 
£ssi⁄
->
focus_dülog
->
outgoög_övôe
 = 
NULL
;

268 
£ssi⁄
->
focus_dülog
->
is_e°ablished
 = 
TRUE
;

271 i‡(
msg
->
ª•⁄£
 >= 400) {

272 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_invite_conf_focus_response: INVITEÑesponse isÇot 200. FailedÅo join focus.");

274 
	`sùe_£ssi⁄_ªmove
(
sù
, 
£ssi⁄
);

275 
	`g_‰ì
(
focus_uri
);

276  
FALSE
;

277 } i‡(
msg
->
ª•⁄£
 == 200) {

278 
sùe_xml
 *
xn_ª•⁄£
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

279 c⁄° 
gch¨
 *
code
 = 
	`sùe_xml_©åibuã
(
xn_ª•⁄£
, "code");

280 i‡(
	`sùe_°ªquÆ
(
code
, "success")) {

282 
	`sùe_subs¸ibe_c⁄„ªn˚
(
sù
, 
£ssi⁄
, -1);

284 
	`sùe_xml_‰ì
(
xn_ª•⁄£
);

287 
	`g_‰ì
(
focus_uri
);

288  
TRUE
;

289 
	}
}

293 
	$sùe_övôe_c⁄f_focus
(
sùe_accou¡_d©a
 *
sù
,

294 
sù_£ssi⁄
 *
£ssi⁄
)

296 
gch¨
 *
hdr
;

297 
gch¨
 *
c⁄è˘
;

298 
gch¨
 *
body
;

299 
gch¨
 *
£lf
;

301 i‡(
£ssi⁄
->
focus_dülog
 && sessi⁄->focus_dülog->
is_e°ablished
) {

302 
	`SIPE_DEBUG_INFO
("£ssi⁄ wôh %†Æªady ha†®dülog o≥n", 
£ssi⁄
->
focus_uri
);

306 if(!
£ssi⁄
->
focus_dülog
) {

307 
£ssi⁄
->
focus_dülog
 = 
	`g_√w0
(
sù_dülog
, 1);

308 
£ssi⁄
->
focus_dülog
->
ˇŒid
 = 
	`gíˇŒid
();

309 
£ssi⁄
->
focus_dülog
->
wôh
 = 
	`g_°rdup
(£ssi⁄->
focus_uri
);

310 
£ssi⁄
->
focus_dülog
->
ídpoöt_GUID
 = 
	`ønd_guid
();

312 i‡(!(
£ssi⁄
->
focus_dülog
->
ouπag
)) {

313 
£ssi⁄
->
focus_dülog
->
ouπag
 = 
	`gíèg
();

316 
c⁄è˘
 = 
	`gë_c⁄è˘
(
sù
);

317 
hdr
 = 
	`g_°rdup_¥ötf
(

321 
c⁄è˘
);

322 
	`g_‰ì
(
c⁄è˘
);

326 
£lf
 = 
	`sù_uri_£lf
(
sù
);

327 
body
 = 
	`g_°rdup_¥ötf
(

328 
SIPE_SEND_CONF_ADD_USER
,

329 
£ssi⁄
->
focus_dülog
->
wôh
,

330 
£lf
,

331 
£ssi⁄
->
ªque°_id
++,

332 
£ssi⁄
->
focus_dülog
->
wôh
,

333 
£lf
,

334 
£ssi⁄
->
focus_dülog
->
ídpoöt_GUID
);

335 
	`g_‰ì
(
£lf
);

337 
£ssi⁄
->
focus_dülog
->
outgoög_övôe
 = 
	`£nd_sù_ªque°
(
SIP_TO_CORE_PRIVATE
,

339 
£ssi⁄
->
focus_dülog
->
wôh
,

340 
£ssi⁄
->
focus_dülog
->
wôh
,

341 
hdr
,

342 
body
,

343 
£ssi⁄
->
focus_dülog
,

344 
¥o˚ss_övôe_c⁄f_focus_ª•⁄£
);

345 
	`g_‰ì
(
body
);

346 
	`g_‰ì
(
hdr
);

347 
	}
}

351 
	$sùe_c⁄f_modify_u£r_rﬁe
(
sùe_accou¡_d©a
 *
sù
,

352 
sù_£ssi⁄
 *
£ssi⁄
,

353 c⁄° 
gch¨
* 
who
)

355 
gch¨
 *
hdr
;

356 
gch¨
 *
body
;

357 
gch¨
 *
£lf
;

359 i‡(!
£ssi⁄
->
focus_dülog
 || !£ssi⁄->focus_dülog->
is_e°ablished
) {

360 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_conf_modify_user_role:Ço dialog with focus,Éxiting.");

364 
hdr
 = 
	`g_°rdup
(

368 
£lf
 = 
	`sù_uri_£lf
(
sù
);

369 
body
 = 
	`g_°rdup_¥ötf
(

370 
SIPE_SEND_CONF_MODIFY_USER_ROLES
,

371 
£ssi⁄
->
focus_dülog
->
wôh
,

372 
£lf
,

373 
£ssi⁄
->
ªque°_id
++,

374 
£ssi⁄
->
focus_dülog
->
wôh
,

375 
who
);

376 
	`g_‰ì
(
£lf
);

378 
	`£nd_sù_ªque°
(
SIP_TO_CORE_PRIVATE
,

380 
£ssi⁄
->
focus_dülog
->
wôh
,

381 
£ssi⁄
->
focus_dülog
->
wôh
,

382 
hdr
,

383 
body
,

384 
£ssi⁄
->
focus_dülog
,

385 
NULL
);

386 
	`g_‰ì
(
body
);

387 
	`g_‰ì
(
hdr
);

388 
	}
}

392 
	$sùe_c⁄f_modify_c⁄„ªn˚_lock
(
sùe_accou¡_d©a
 *
sù
,

393 
sù_£ssi⁄
 *
£ssi⁄
,

394 c⁄° 
gboﬁón
 
locked
)

396 
gch¨
 *
hdr
;

397 
gch¨
 *
body
;

398 
gch¨
 *
£lf
;

400 i‡(!
£ssi⁄
->
focus_dülog
 || !£ssi⁄->focus_dülog->
is_e°ablished
) {

401 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_conf_modify_conference_lock:Ço dialog with focus,Éxiting.");

405 
hdr
 = 
	`g_°rdup
(

409 
£lf
 = 
	`sù_uri_£lf
(
sù
);

410 
body
 = 
	`g_°rdup_¥ötf
(

411 
SIPE_SEND_CONF_MODIFY_CONF_LOCK
,

412 
£ssi⁄
->
focus_dülog
->
wôh
,

413 
£lf
,

414 
£ssi⁄
->
ªque°_id
++,

415 
£ssi⁄
->
focus_dülog
->
wôh
,

416 
locked
 ? "true" : "false");

417 
	`g_‰ì
(
£lf
);

419 
	`£nd_sù_ªque°
(
SIP_TO_CORE_PRIVATE
,

421 
£ssi⁄
->
focus_dülog
->
wôh
,

422 
£ssi⁄
->
focus_dülog
->
wôh
,

423 
hdr
,

424 
body
,

425 
£ssi⁄
->
focus_dülog
,

426 
NULL
);

427 
	`g_‰ì
(
body
);

428 
	`g_‰ì
(
hdr
);

429 
	}
}

433 
	$sùe_c⁄f_dñëe_u£r
(
sùe_accou¡_d©a
 *
sù
,

434 
sù_£ssi⁄
 *
£ssi⁄
,

435 c⁄° 
gch¨
* 
who
)

437 
gch¨
 *
hdr
;

438 
gch¨
 *
body
;

439 
gch¨
 *
£lf
;

441 i‡(!
£ssi⁄
->
focus_dülog
 || !£ssi⁄->focus_dülog->
is_e°ablished
) {

442 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_conf_delete_user:Ço dialog with focus,Éxiting.");

446 
hdr
 = 
	`g_°rdup
(

450 
£lf
 = 
	`sù_uri_£lf
(
sù
);

451 
body
 = 
	`g_°rdup_¥ötf
(

452 
SIPE_SEND_CONF_DELETE_USER
,

453 
£ssi⁄
->
focus_dülog
->
wôh
,

454 
£lf
,

455 
£ssi⁄
->
ªque°_id
++,

456 
£ssi⁄
->
focus_dülog
->
wôh
,

457 
who
);

458 
	`g_‰ì
(
£lf
);

460 
	`£nd_sù_ªque°
(
SIP_TO_CORE_PRIVATE
,

462 
£ssi⁄
->
focus_dülog
->
wôh
,

463 
£ssi⁄
->
focus_dülog
->
wôh
,

464 
hdr
,

465 
body
,

466 
£ssi⁄
->
focus_dülog
,

467 
NULL
);

468 
	`g_‰ì
(
body
);

469 
	`g_‰ì
(
hdr
);

470 
	}
}

473 
gboﬁón


474 
	$¥o˚ss_övôe_c⁄f_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

475 
sùmsg
 *
msg
,

476 
SIPE_UNUSED_PARAMETER
 
å™ß˘i⁄
 *
å™s
)

478 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

479 
sù_dülog
 *
dülog
 = 
	`g_√w0
(sip_dialog, 1);

481 
dülog
->
ˇŒid
 = 
	`g_°rdup
(
	`sùmsg_föd_hódî
(
msg
, "Call-ID"));

482 
dülog
->
c£q
 = 
	`∑r£_c£q
(
	`sùmsg_föd_hódî
(
msg
, "CSeq"));

483 
dülog
->
wôh
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, "To"));

484 
	`sùe_dülog_∑r£
(
dülog
, 
msg
, 
TRUE
);

486 i‡(
msg
->
ª•⁄£
 >= 200) {

488 
dülog
->
c£q
--;

489 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "ACK", 
dülog
->
wôh
, dülog->wôh, 
NULL
, NULL, dialog, NULL);

490 
dülog
->
outgoög_övôe
 = 
NULL
;

491 
dülog
->
is_e°ablished
 = 
TRUE
;

494 i‡(
msg
->
ª•⁄£
 >= 400) {

495 
	`SIPE_DEBUG_INFO
("¥o˚ss_övôe_c⁄f_ª•⁄£: INVITEÑe•⁄£ i†nŸ 200. FaûedÅÿövôê%s.", 
dülog
->
wôh
);

497 
	`sùe_dülog_‰ì
(
dülog
);

498  
FALSE
;

501 i‡(
msg
->
ª•⁄£
 >= 200) {

502 
sù_£ssi⁄
 *
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_im
(
sù
, 
dülog
->
wôh
);

503 
sù_dülog
 *
im_dülog
 = 
	`sùe_dülog_föd
(
£ssi⁄
, 
dülog
->
wôh
);

506 i‡(
im_dülog
) {

507 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "BYE", 
im_dülog
->
wôh
, im_dülog->wôh, 
NULL
, NULL, im_dialog, NULL);

508 
	`sùe_dülog_ªmove
(
£ssi⁄
, 
dülog
->
wôh
);

512 
	`sùe_dülog_‰ì
(
dülog
);

513  
TRUE
;

514 
	}
}

520 
	$sùe_övôe_c⁄f
(
sùe_accou¡_d©a
 *
sù
,

521 
sù_£ssi⁄
 *
£ssi⁄
,

522 c⁄° 
gch¨
* 
who
)

524 
gch¨
 *
hdr
;

525 
gch¨
 *
c⁄è˘
;

526 
gch¨
 *
body
;

527 
sù_dülog
 *
dülog
 = 
NULL
;

532 
dülog
 = 
	`g_√w0
(
sù_dülog
, 1);

533 
dülog
->
ˇŒid
 = 
	`gíˇŒid
();

534 
dülog
->
wôh
 = 
	`g_°rdup
(
who
);

535 
dülog
->
ouπag
 = 
	`gíèg
();

537 
c⁄è˘
 = 
	`gë_c⁄è˘
(
sù
);

538 
hdr
 = 
	`g_°rdup_¥ötf
(

542 
c⁄è˘
);

543 
	`g_‰ì
(
c⁄è˘
);

545 
body
 = 
	`g_°rdup_¥ötf
(

546 
SIPE_SEND_CONF_INVITE
,

547 
£ssi⁄
->
focus_uri
,

548 
£ssi⁄
->
subje˘
 ? session->subject : ""

551 
	`£nd_sù_ªque°
–
SIP_TO_CORE_PRIVATE
,

553 
dülog
->
wôh
,

554 
dülog
->
wôh
,

555 
hdr
,

556 
body
,

557 
dülog
,

558 
¥o˚ss_övôe_c⁄f_ª•⁄£
);

560 
	`sùe_dülog_‰ì
(
dülog
);

561 
	`g_‰ì
(
body
);

562 
	`g_‰ì
(
hdr
);

563 
	}
}

566 
gboﬁón


567 
	$¥o˚ss_c⁄f_add_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

568 
sùmsg
 *
msg
,

569 
å™ß˘i⁄
 *
å™s
)

571 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

573 i‡(
msg
->
ª•⁄£
 >= 400) {

574 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_conf_add_response: SERVICEÑesponse isÇot 200. FailedÅo create conference.");

576  
FALSE
;

578 i‡(
msg
->
ª•⁄£
 == 200) {

579 
sùe_xml
 *
xn_ª•⁄£
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

580 i‡(
	`sùe_°ªquÆ
("suc˚ss", 
	`sùe_xml_©åibuã
(
xn_ª•⁄£
, "code")))

582 
gch¨
 *
who
 = 
å™s
->
∑ylﬂd
->
d©a
;

583 
sù_£ssi⁄
 *
£ssi⁄
;

584 c⁄° 
sùe_xml
 *
xn_c⁄„ªn˚_öfo
 = 
	`sùe_xml_chûd
(
xn_ª•⁄£
, "addConference/conference-info");

586 
£ssi⁄
 = 
	`sùe_£ssi⁄_add_ch©
(
sù
);

587 
£ssi⁄
->
is_mu…ù¨ty
 = 
FALSE
;

588 
£ssi⁄
->
focus_uri
 = 
	`g_°rdup
(
	`sùe_xml_©åibuã
(
xn_c⁄„ªn˚_öfo
, "entity"));

589 
	`SIPE_DEBUG_INFO
("process_conf_add_response: session->focus_uri=%s",

590 
£ssi⁄
->
focus_uri
 ? session->focus_uri : "");

592 
£ssi⁄
->
≥ndög_övôe_queue
 = 
	`¶i°_ö£π_unique_s‹ãd
(

593 
£ssi⁄
->
≥ndög_övôe_queue
, 
	`g_°rdup
(
who
), (
GCom∑ªFunc
)
°rcmp
);

596 
	`sùe_övôe_c⁄f_focus
(
sù
, 
£ssi⁄
);

598 
	`sùe_xml_‰ì
(
xn_ª•⁄£
);

601  
TRUE
;

602 
	}
}

608 
	$sùe_c⁄f_add
(
sùe_accou¡_d©a
 *
sù
,

609 c⁄° 
gch¨
* 
who
)

611 
gch¨
 *
hdr
;

612 
gch¨
 *
c⁄„ªn˚_id
;

613 
gch¨
 *
c⁄è˘
;

614 
gch¨
 *
body
;

615 
gch¨
 *
£lf
;

616 
å™ß˘i⁄
 *
å™s
;

617 
sù_dülog
 *
dülog
 = 
NULL
;

618 
time_t
 
expúy
 = 
	`time
(
NULL
) + 7*60*60;

619 *
expúy_time
;

620 
å™ß˘i⁄_∑ylﬂd
 *
∑ylﬂd
;

622 
c⁄è˘
 = 
	`gë_c⁄è˘
(
sù
);

623 
hdr
 = 
	`g_°rdup_¥ötf
(

627 
c⁄è˘
);

628 
	`g_‰ì
(
c⁄è˘
);

630 
expúy_time
 = 
	`sùe_utûs_time_to_°r
(
expúy
);

631 
£lf
 = 
	`sù_uri_£lf
(
sù
);

632 
c⁄„ªn˚_id
 = 
	`gíc⁄fid
();

633 
body
 = 
	`g_°rdup_¥ötf
(

634 
SIPE_SEND_CONF_ADD
,

635 
sù
->
focus_Á˘‹y_uri
,

636 
£lf
,

637 
	`ønd
(),

638 
c⁄„ªn˚_id
,

639 
expúy_time
);

640 
	`g_‰ì
(
£lf
);

641 
	`g_‰ì
(
c⁄„ªn˚_id
);

642 
	`g_‰ì
(
expúy_time
);

644 
å™s
 = 
	`£nd_sù_ªque°
–
SIP_TO_CORE_PRIVATE
,

646 
sù
->
focus_Á˘‹y_uri
,

647 
sù
->
focus_Á˘‹y_uri
,

648 
hdr
,

649 
body
,

650 
NULL
,

651 
¥o˚ss_c⁄f_add_ª•⁄£
);

653 
∑ylﬂd
 = 
	`g_√w0
(
å™ß˘i⁄_∑ylﬂd
, 1);

654 
∑ylﬂd
->
de°roy
 = 
g_‰ì
;

655 
∑ylﬂd
->
d©a
 = 
	`g_°rdup
(
who
);

656 
å™s
->
∑ylﬂd
 =Öayload;

658 
	`sùe_dülog_‰ì
(
dülog
);

659 
	`g_‰ì
(
body
);

660 
	`g_‰ì
(
hdr
);

661 
	}
}

664 
	$¥o˚ss_öcomög_övôe_c⁄f
(
sùe_accou¡_d©a
 *
sù
,

665 
sùmsg
 *
msg
)

667 
sù_£ssi⁄
 *
£ssi⁄
 = 
NULL
;

668 
sù_dülog
 *
dülog
 = 
NULL
;

669 
sùe_xml
 *
xn_c⁄„ªncög
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

670 c⁄° 
sùe_xml
 *
xn_focus_uri
 = 
	`sùe_xml_chûd
(
xn_c⁄„ªncög
, "focus-uri");

671 *
focus_uri
 = 
	`sùe_xml_d©a
(
xn_focus_uri
);

672 
gch¨
 *
√wTag
 = 
	`gíèg
();

673 c⁄° 
gch¨
 *
ﬁdHódî
 = 
	`sùmsg_föd_hódî
(
msg
, "To");

674 
gch¨
 *
√wHódî
;

676 
	`sùe_xml_‰ì
(
xn_c⁄„ªncög
);

679 
	`SIPE_DEBUG_INFO
("Wêhavêª˚ived invô©i⁄ÅÿC⁄„ªn˚. Focu†URI=%s", 
focus_uri
);

681 
√wHódî
 = 
	`g_°rdup_¥ötf
("%s;èg=%s", 
ﬁdHódî
, 
√wTag
);

682 
	`sùmsg_ªmove_hódî_now
(
msg
, "To");

683 
	`sùmsg_add_hódî_now
(
msg
, "To", 
√wHódî
);

684 
	`g_‰ì
(
√wHódî
);

688 
dülog
 = 
	`g_√w0
(
sù_dülog
, 1);

689 
dülog
->
ˇŒid
 = 
	`g_°rdup
(
	`sùmsg_föd_hódî
(
msg
, "Call-ID"));

690 
dülog
->
c£q
 = 
	`∑r£_c£q
(
	`sùmsg_föd_hódî
(
msg
, "CSeq"));

691 
dülog
->
wôh
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, "From"));

692 
	`sùe_dülog_∑r£
(
dülog
, 
msg
, 
FALSE
);

694 
	`£nd_sù_ª•⁄£
(
SIP_TO_CORE_PRIVATE
, 
msg
, 200, "OK", 
NULL
);

696 
£ssi⁄
 = 
	`sùe_£ssi⁄_add_ch©
(
sù
);

697 
£ssi⁄
->
focus_uri
 = focus_uri;

698 
£ssi⁄
->
is_mu…ù¨ty
 = 
FALSE
;

701 
	`£nd_sù_ªque°
(
SIP_TO_CORE_PRIVATE
, "BYE", 
dülog
->
wôh
, dülog->wôh, 
NULL
, NULL, dialog, NULL);

702 
	`sùe_dülog_‰ì
(
dülog
);

705 
	`sùe_övôe_c⁄f_focus
(
sù
, 
£ssi⁄
);

706 
	}
}

709 
	$sùe_¥o˚ss_c⁄„ªn˚
(
sùe_accou¡_d©a
 *
sù
,

710 
sùmsg
 *
msg
)

712 
sùe_xml
 *
xn_c⁄„ªn˚_öfo
;

713 c⁄° 
sùe_xml
 *
node
;

714 c⁄° 
sùe_xml
 *
xn_subje˘
;

715 c⁄° 
gch¨
 *
focus_uri
;

716 
sù_£ssi⁄
 *
£ssi⁄
;

717 
gboﬁón
 
ju°_joöed
 = 
FALSE
;

719 i‡(
msg
->
ª•⁄£
 != 0 && msg->response != 200) ;

721 i‡(
msg
->
bodyÀn
 =0 || msg->
body
 =
NULL
 || !
	`sùe_°ªquÆ
(
	`sùmsg_föd_hódî
(msg, "Event"), "conference")) ;

723 
xn_c⁄„ªn˚_öfo
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

724 i‡(!
xn_c⁄„ªn˚_öfo
) ;

726 
focus_uri
 = 
	`sùe_xml_©åibuã
(
xn_c⁄„ªn˚_öfo
, "entity");

727 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_c⁄„ªn˚
(
sù
, 
focus_uri
);

729 i‡(!
£ssi⁄
) {

730 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_c⁄„ªn˚: u«bÀÅÿföd c⁄‡£ssi⁄ wôh focus=%s", 
focus_uri
);

734 i‡(
£ssi⁄
->
focus_uri
 && !£ssi⁄->
c⁄v
) {

735 
gch¨
 *
ch©_tôÀ
 = 
	`sùe_ch©_gë_«me
(
£ssi⁄
->
focus_uri
);

736 
gch¨
 *
£lf
 = 
	`sù_uri_£lf
(
sù
);

738 
PuΩÀC⁄vîßti⁄
 *
c⁄v
 = 
NULL
;

740 i‡(
ch©_tôÀ
) {

741 
c⁄v
 = 
	`puΩÀ_föd_c⁄vîßti⁄_wôh_accou¡
(
PURPLE_CONV_TYPE_CHAT
,

742 
ch©_tôÀ
,

743 
sù
->
accou¡
);

746 i‡(
c⁄v
 && !
	`puΩÀ_c⁄v_ch©_has_À·
(
	`PURPLE_CONV_CHAT
(conv))) {

747 
	`PURPLE_CONV_CHAT
(
c⁄v
)->
À·
 = 
TRUE
;

750 
£ssi⁄
->
c⁄v
 = 
	`£rv_gŸ_joöed_ch©
(
sù
->
gc
, sessi⁄->
ch©_id
, 
ch©_tôÀ
);

751 
£ssi⁄
->
ch©_tôÀ
 = chat_title;

752 
	`puΩÀ_c⁄v_ch©_£t_nick
(
	`PURPLE_CONV_CHAT
(
£ssi⁄
->
c⁄v
), 
£lf
);

753 
ju°_joöed
 = 
TRUE
;

757 
	`g_‰ì
(
£lf
);

761 i‡((
xn_subje˘
 = 
	`sùe_xml_chûd
(
xn_c⁄„ªn˚_öfo
, "conference-description/subject"))) {

762 
	`g_‰ì
(
£ssi⁄
->
subje˘
);

763 
£ssi⁄
->
subje˘
 = 
	`sùe_xml_d©a
(
xn_subje˘
);

764 
	`puΩÀ_c⁄v_ch©_£t_t›ic
(
	`PURPLE_CONV_CHAT
(
£ssi⁄
->
c⁄v
), 
NULL
, sessi⁄->
subje˘
);

765 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_c⁄„ªn˚: subje˘=%s", 
£ssi⁄
->
subje˘
 ? session->subject : "");

769 i‡(!
£ssi⁄
->
im_mcu_uri
) {

770 
node
 = 
	`sùe_xml_chûd
(
xn_c⁄„ªn˚_öfo
, "conference-description/conf-uris/entry");

771 
node
;

772 
node
 = 
	`sùe_xml_twö
(node))

774 
gch¨
 *
puΩo£
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "purpose"));

776 i‡(
	`sùe_°ªquÆ
("ch©", 
puΩo£
)) {

777 
	`g_‰ì
(
puΩo£
);

778 
£ssi⁄
->
im_mcu_uri
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "uri"));

779 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_c⁄„ªn˚: im_mcu_uri=%s", 
£ssi⁄
->
im_mcu_uri
);

782 
	`g_‰ì
(
puΩo£
);

787 
node
 = 
	`sùe_xml_chûd
(
xn_c⁄„ªn˚_öfo
, "u£rs/u£r");Çode;Çodê
	`sùe_xml_twö
(node)) {

788 c⁄° 
gch¨
 *
u£r_uri
 = 
	`sùe_xml_©åibuã
(
node
, "entity");

789 c⁄° 
gch¨
 *
°©e
 = 
	`sùe_xml_©åibuã
(
node
, "state");

790 
gch¨
 *
rﬁe
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "roles/entry"));

791 
PuΩÀC⁄vCh©BuddyFœgs
 
Êags
 = 
PURPLE_CBFLAGS_NONE
;

792 
PuΩÀC⁄vCh©
 *
ch©
 = 
	`PURPLE_CONV_CHAT
(
£ssi⁄
->
c⁄v
);

793 
gboﬁón
 
is_ö_im_mcu
 = 
FALSE
;

794 
gch¨
 *
£lf
 = 
	`sù_uri_£lf
(
sù
);

796 i‡(
	`sùe_°ªquÆ
(
rﬁe
, "presenter")) {

797 
Êags
 |
PURPLE_CBFLAGS_OP
;

800 i‡(
	`sùe_°ªquÆ
("dñëed", 
°©e
)) {

801 i‡(
	`puΩÀ_c⁄v_ch©_föd_u£r
(
ch©
, 
u£r_uri
)) {

802 
	`puΩÀ_c⁄v_ch©_ªmove_u£r
(
ch©
, 
u£r_uri
, 
NULL
 );

806 c⁄° 
sùe_xml
 *
ídpoöt
;

807 
ídpoöt
 = 
	`sùe_xml_chûd
(
node
, "ídpoöt");Éndpoöt;Éndpoöà
	`sùe_xml_twö
(endpoint)) {

808 i‡(
	`sùe_°ªquÆ
("ch©", 
	`sùe_xml_©åibuã
(
ídpoöt
, "session-type"))) {

809 
gch¨
 *
°©us
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
ídpoöt
, "status"));

810 i‡(
	`sùe_°ªquÆ
("c⁄√˘ed", 
°©us
)) {

811 
is_ö_im_mcu
 = 
TRUE
;

812 i‡(!
	`puΩÀ_c⁄v_ch©_föd_u£r
(
ch©
, 
u£r_uri
)) {

813 
	`puΩÀ_c⁄v_ch©_add_u£r
(
ch©
, 
u£r_uri
, 
NULL
, 
Êags
,

814 !
ju°_joöed
 && 
	`g_°rˇ£cmp
(
u£r_uri
, 
£lf
));

816 
	`puΩÀ_c⁄v_ch©_u£r_£t_Êags
(
ch©
, 
u£r_uri
, 
Êags
);

819 
	`g_‰ì
(
°©us
);

823 i‡(!
is_ö_im_mcu
) {

824 i‡(
	`puΩÀ_c⁄v_ch©_föd_u£r
(
ch©
, 
u£r_uri
)) {

825 
	`puΩÀ_c⁄v_ch©_ªmove_u£r
(
ch©
, 
u£r_uri
, 
NULL
 );

829 
	`g_‰ì
(
rﬁe
);

830 
	`g_‰ì
(
£lf
);

834 
node
 = 
	`sùe_xml_chûd
(
xn_c⁄„ªn˚_öfo
, "conference-view/entity-view");

835 
node
;

836 
node
 = 
	`sùe_xml_twö
(node)) {

838 c⁄° 
sùe_xml
 *
xn_ty≥
 = 
	`sùe_xml_chûd
(
node
, "entity-state/media/entry/type");

839 
gch¨
 *
tmp
 = 
NULL
;

840 i‡(
xn_ty≥
 && 
	`sùe_°ªquÆ
("ch©", (
tmp
 = 
	`sùe_xml_d©a
(xn_type)))) {

841 c⁄° 
sùe_xml
 *
xn_locked
 = 
	`sùe_xml_chûd
(
node
, "entity-state/locked");

842 i‡(
xn_locked
) {

843 
gch¨
 *
locked
 = 
	`sùe_xml_d©a
(
xn_locked
);

844 
gboﬁón
 
¥ev_locked
 = 
£ssi⁄
->
locked
;

845 
£ssi⁄
->
locked
 = 
	`sùe_°ªquÆ
(locked, "true");

846 i‡(
¥ev_locked
 && !
£ssi⁄
->
locked
) {

847 
	`sùe_¥e£¡_öfo
(
sù
, 
£ssi⁄
,

848 
	`_
("This conference isÇoÜongerÜocked. AdditionalÖarticipants canÇow join."));

850 i‡(!
¥ev_locked
 && 
£ssi⁄
->
locked
) {

851 
	`sùe_¥e£¡_öfo
(
sù
, 
£ssi⁄
,

852 
	`_
("This conference isÜocked. NobodyÉlse can joinÅhe conference while it isÜocked."));

855 
	`SIPE_DEBUG_INFO
("sipe_process_conference: session->locked=%s",

856 
£ssi⁄
->
locked
 ? "TRUE" : "FALSE");

857 
	`g_‰ì
(
locked
);

860 
	`g_‰ì
(
tmp
);

862 
	`sùe_xml_‰ì
(
xn_c⁄„ªn˚_öfo
);

864 i‡(
£ssi⁄
->
im_mcu_uri
) {

865 
sù_dülog
 *
dülog
 = 
	`sùe_dülog_föd
(
£ssi⁄
, sessi⁄->
im_mcu_uri
);

866 i‡(!
dülog
) {

867 
dülog
 = 
	`sùe_dülog_add
(
£ssi⁄
);

869 
dülog
->
ˇŒid
 = 
	`g_°rdup
(
£ssi⁄
->callid);

870 
dülog
->
wôh
 = 
	`g_°rdup
(
£ssi⁄
->
im_mcu_uri
);

873 
	`sùe_övôe
(
sù
, 
£ssi⁄
, 
dülog
->
wôh
, 
NULL
, NULL, NULL, 
FALSE
);

877 
	`sùe_¥o˚ss_≥ndög_övôe_queue
(
sù
, 
£ssi⁄
);

878 
	}
}

881 
	$sùe_c⁄f_immcu_˛o£d
(
sùe_accou¡_d©a
 *
sù
,

882 
sù_£ssi⁄
 *
£ssi⁄
)

884 
	`sùe_¥e£¡_öfo
(
sù
, 
£ssi⁄
,

885 
	`_
("You have been disconnected fromÅhis conference."));

886 
	`puΩÀ_c⁄v_ch©_˛ór_u£rs
(
	`PURPLE_CONV_CHAT
(
£ssi⁄
->
c⁄v
));

887 
	}
}

890 
	$c⁄f_£ssi⁄_˛o£
(
sùe_accou¡_d©a
 *
sù
,

891 
sù_£ssi⁄
 *
£ssi⁄
)

893 i‡(
£ssi⁄
) {

895 
	`sùe_subs¸ibe_c⁄„ªn˚
(
sù
, 
£ssi⁄
, 0);

897 i‡(
£ssi⁄
->
focus_dülog
) {

899 
	`£nd_sù_ªque°
(
SIP_TO_CORE_PRIVATE
,

901 
£ssi⁄
->
focus_dülog
->
wôh
,

902 
£ssi⁄
->
focus_dülog
->
wôh
,

903 
NULL
,

904 
NULL
,

905 
£ssi⁄
->
focus_dülog
,

906 
NULL
);

909 
	}
}

912 
	$sùe_¥o˚ss_imdn
(
sùe_accou¡_d©a
 *
sù
,

913 
sùmsg
 *
msg
)

915 
gch¨
 *
wôh
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, "From"));

916 c⁄° 
gch¨
 *
ˇŒ_id
 = 
	`sùmsg_föd_hódî
(
msg
, "Call-ID");

917 
sù_£ssi⁄
 *
£ssi⁄
;

918 
sùe_xml
 *
xn_imdn
;

919 c⁄° 
sùe_xml
 *
node
;

920 
gch¨
 *
mesßge_id
;

921 
gch¨
 *
mesßge
;

923 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_ch©_by_ˇŒid
(
sù
, 
ˇŒ_id
);

924 i‡(!
£ssi⁄
) {

925 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_im
(
sù
, 
wôh
);

927 i‡(!
£ssi⁄
) {

928 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_imdn: u«bÀÅÿföd c⁄‡£ssi⁄ wôh cÆl_id=%s", 
ˇŒ_id
);

929 
	`g_‰ì
(
wôh
);

933 
xn_imdn
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

934 
mesßge_id
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
xn_imdn
, "message-id"));

936 
mesßge
 = 
	`g_hash_èbÀ_lookup
(
£ssi⁄
->
c⁄f_unc⁄fúmed_mesßges
, 
mesßge_id
);

939 
node
 = 
	`sùe_xml_chûd
(
xn_imdn
, "ªcùõ¡");Çode;Çodê
	`sùe_xml_twö
(node)) {

940 
gch¨
 *
tmp
 = 
	`∑r£_‰om
(
	`sùe_xml_©åibuã
(
node
, "uri"));

941 
gch¨
 *
uri
 = 
	`∑r£_‰om
(
tmp
);

942 
	`sùe_¥e£¡_mesßge_undñivîed_îr
(
sù
, 
£ssi⁄
, -1, -1, 
uri
, 
mesßge
);

943 
	`g_‰ì
(
tmp
);

944 
	`g_‰ì
(
uri
);

947 
	`sùe_xml_‰ì
(
xn_imdn
);

949 
	`g_hash_èbÀ_ªmove
(
£ssi⁄
->
c⁄f_unc⁄fúmed_mesßges
, 
mesßge_id
);

950 
	`SIPE_DEBUG_INFO
("sipe_process_imdn:Ñemoved message %s from conf_unconfirmed_messages(count=%d)",

951 
mesßge_id
, 
	`g_hash_èbÀ_size
(
£ssi⁄
->
c⁄f_unc⁄fúmed_mesßges
));

952 
	`g_‰ì
(
mesßge_id
);

953 
	`g_‰ì
(
wôh
);

954 
	}
}

	@src/core/sipe-conf.h

30 
	gsùmsg
;

31 
	gsù_£ssi⁄
;

32 
	gsùe_accou¡_d©a
;

38 
sùe_c⁄f_add
(
sùe_accou¡_d©a
 *
sù
,

39 c⁄° 
gch¨
* 
who
);

49 
¥o˚ss_öcomög_övôe_c⁄f
(
sùe_accou¡_d©a
 *
sù
,

50 
sùmsg
 *
msg
);

54 
sùe_övôe_c⁄f_focus
(
sùe_accou¡_d©a
 *
sù
,

55 
sù_£ssi⁄
 *
£ssi⁄
);

62 
sùe_¥o˚ss_c⁄„ªn˚
(
sùe_accou¡_d©a
 *
sù
,

63 
sùmsg
 * 
msg
);

69 
sùe_övôe_c⁄f
(
sùe_accou¡_d©a
 *
sù
,

70 
sù_£ssi⁄
 *
£ssi⁄
,

71 c⁄° 
gch¨
* 
who
);

79 
sùe_c⁄f_modify_u£r_rﬁe
(
sùe_accou¡_d©a
 *
sù
,

80 
sù_£ssi⁄
 *
£ssi⁄
,

81 c⁄° 
gch¨
* 
who
);

89 
sùe_c⁄f_modify_c⁄„ªn˚_lock
(
sùe_accou¡_d©a
 *
sù
,

90 
sù_£ssi⁄
 *
£ssi⁄
,

91 c⁄° 
gboﬁón
 
locked
);

99 
sùe_c⁄f_dñëe_u£r
(
sùe_accou¡_d©a
 *
sù
,

100 
sù_£ssi⁄
 *
£ssi⁄
,

101 c⁄° 
gch¨
* 
who
);

108 
sùe_c⁄f_immcu_˛o£d
(
sùe_accou¡_d©a
 *
sù
,

109 
sù_£ssi⁄
 *
£ssi⁄
);

116 
c⁄f_£ssi⁄_˛o£
(
sùe_accou¡_d©a
 *
sù
,

117 
sù_£ssi⁄
 *
£ssi⁄
);

124 
sùe_¥o˚ss_imdn
(
sùe_accou¡_d©a
 *
sù
,

125 
sùmsg
 *
msg
);

	@src/core/sipe-core-private.h

24 
	gsùe_£rvi˚_d©a
;

31 
	gsùe_accou¡_d©a
;

32 
	ssùe_c‹e_¥iv©e
 {

37 
sùe_c‹e_public
 
	mpublic
;

40 
sùe_å™•‹t_c⁄√˘i⁄
 *
	må™•‹t
;

41 c⁄° 
sùe_£rvi˚_d©a
 *
	m£rvi˚_d©a
;

42 
guöt
 
	må™•‹t_ty≥
;

43 
gch¨
 *
	m£rvî_«me
;

44 
guöt
 
	m£rvî_p‹t
;

45 
gch¨
 *
	m£rvî_vîsi⁄
;

46 
GSLi°
 *
	må™ß˘i⁄s
;

47 
_sùe_medü_ˇŒ
 *
	mmedü_ˇŒ
;

50 
GHashTabÀ
 *
	mbuddõs
;

53 
GSLi°
 *
	mtimeouts
;

56 
gch¨
 *
	mu£øgít
;

59 
sùe_accou¡_d©a
 *
	mãmp‹¨y
;

65 
	#SIPE_CORE_PRIVATE_FLAG_xxx
 0x80000000

	)

67 
	#SIPE_CORE_PUBLIC_FLAG_IS
(
Êag
) \

68 ((
sùe_¥iv©e
->
public
.
Êags
 & 
SIPE_CORE_FLAG_
 ## 
Êag
Ë=SIPE_CORE_FLAG_ ## fœg)

	)

69 
	#SIPE_CORE_PUBLIC_FLAG_SET
(
Êag
) \

70 (
sùe_¥iv©e
->
public
.
Êags
 |
SIPE_CORE_FLAG_
 ## 
Êag
)

	)

71 
	#SIPE_CORE_PUBLIC_FLAG_UNSET
(
Êag
) \

72 (
sùe_¥iv©e
->
public
.
Êags
 &~
SIPE_CORE_FLAG_
 ## 
Êag
)

	)

73 
	#SIPE_CORE_PRIVATE_FLAG_IS
(
Êag
) \

74 ((
sùe_¥iv©e
->
public
.
Êags
 & 
SIPE_CORE_PRIVATE_FLAG_
 ## 
Êag
Ë=SIPE_CORE_PRIVATE_FLAG_ ## fœg)

	)

75 
	#SIPE_CORE_PRIVATE_FLAG_SET
(
Êag
) \

76 (
sùe_¥iv©e
->
public
.
Êags
 |
SIPE_CORE_PRIVATE_FLAG_
 ## 
Êag
)

	)

77 
	#SIPE_CORE_PRIVATE_FLAG_UNSET
(
Êag
) \

78 (
sùe_¥iv©e
->
public
.
Êags
 &~
SIPE_CORE_PRIVATE_FLAG_
 ## 
Êag
)

	)

81 
	#SIPE_CORE_PRIVATE
 ((
sùe_c‹e_¥iv©e
 *)
sùe_public
)

	)

82 
	#SIPE_CORE_PUBLIC
 ((
sùe_c‹e_public
 *)
sùe_¥iv©e
)

	)

85 
	#SIPE_ACCOUNT_DATA
 
SIPE_CORE_PRIVATE
->
ãmp‹¨y


	)

86 
	#SIPE_ACCOUNT_DATA_PRIVATE
 
sùe_¥iv©e
->
ãmp‹¨y


	)

87 
	#SIP_TO_CORE_PRIVATE
 (
sù
->
¥iv©e
)

	)

88 
	#SIP_TO_CORE_PUBLIC
 (
sù
->
public
)

	)

	@src/core/sipe-core.c

23 #ifde‡
HAVE_CONFIG_H


24 
	~"c⁄fig.h
"

27 
	~<°dlib.h
>

29 
	~<glib.h
>

30 #ifde‡
HAVE_NSS


31 
	~"nss.h
"

33 #ifde‡
HAVE_GMIME


34 
	~<gmime/gmime.h
>

37 
	~"sù-£c.h
"

38 
	~"sùe-backíd.h
"

39 
	~"sùe-c‹e.h
"

40 
	~"sùe-∆s.h
"

42 
	$sùe_c‹e_öô
()

44 
	`§™d
(
	`time
(
NULL
));

45 
	`sù_£c_öô
();

47 #ifde‡
ENABLE_NLS


48 
	`SIPE_DEBUG_INFO
("bindtextdomain = %s",

49 
	`bödãxtdomaö
(
PACKAGE_NAME
, 
LOCALEDIR
));

50 
	`SIPE_DEBUG_INFO
("bind_textdomain_codeset = %s",

51 
	`böd_ãxtdomaö_code£t
(
PACKAGE_NAME
, "UTF-8"));

52 
	`ãxtdomaö
(
PACKAGE_NAME
);

54 #ifde‡
HAVE_NSS


55 i‡(!
	`NSS_IsInôülized
()) {

56 
	`NSS_NoDB_Inô
(".");

57 
	`SIPE_DEBUG_INFO_NOFORMAT
("NSS initialised");

60 #ifde‡
HAVE_GMIME


61 
	`g_mime_öô
(0);

63 
	}
}

65 
	$sùe_c‹e_de°roy
()

67 #ifde‡
HAVE_NSS


73 #ifde‡
HAVE_GMIME


74 
	`g_mime_shutdown
();

76 
	`sù_£c_de°roy
();

77 
	}
}

79 
gch¨
 *
	$sùe_c‹e_about
()

81  
	`g_°rdup_¥ötf
(

87 "<b><f⁄àsize=\"+1\">SIPE " 
PACKAGE_VERSION
 " </font></b><br/>"

96  "%s: <®hªf=\"" 
PACKAGE_URL
 "\">" PACKAGE_URL "</a><br/>"

98  "%s: <®hªf=\"" 
PACKAGE_BUGREPORT
 "\">%s</a><br/>"

132 
	`_
("AÅhird-partyÖlugin implementingÉxtended version of SIP/SIMPLE used by variousÖroducts"),

134 
	`_
("Home"),

136 
	`_
("Support"),

138 
	`_
("Help Forum"),

140 
	`_
("Report Problems"),

142 
	`_
("Bug Tracker"),

144 
	`_
("Translations"),

146 
	`_
("License"),

148 
	`_
("We support users in such organizationsás"),

151 
	`_
("Please help usÅoÅranslate SIPEÅo yourÇativeÜanguage hereát "),

154 
	`_
(" using convenient web interface"),

156 
	`_
("Authors"),

161 
	`_
("OriginalÅexts in English (en): SIPE developers")

163 
	}
}

	@src/core/sipe-crypt.c

28 
	~"glib.h
"

30 
	~"nss.h
"

31 
	~"pk11pub.h
"

33 
	~"sùe-¸y±.h
"

38 
PK11C⁄ãxt
*

39 
	$sùe_¸y±_˘x_¸óã
(
CK_MECHANISM_TYPE
 
cùhîMech
, c⁄° 
guch¨
 *
key
, 
gsize
 
key_Àngth
)

41 
PK11SlŸInfo
* 
¶Ÿ
;

42 
SECIãm
 
keyIãm
;

43 
SECIãm
 
ivIãm
;

44 
PK11SymKey
* 
SymKey
;

45 
SECIãm
 *
SecP¨am
;

46 
PK11C⁄ãxt
* 
EncC⁄ãxt
;

49 
¶Ÿ
 = 
	`PK11_GëBe°SlŸ
(
cùhîMech
, 
NULL
);

51 
keyIãm
.
ty≥
 = 
siBuf„r
;

52 
keyIãm
.
d©a
 = (*)
key
;

53 
keyIãm
.
Àn
 = 
key_Àngth
;

55 
SymKey
 = 
	`PK11_Imp‹tSymKey
(
¶Ÿ
, 
cùhîMech
, 
PK11_OrigöUnwøp
, 
CKA_ENCRYPT
, &
keyIãm
, 
NULL
);

58 
ivIãm
.
ty≥
 = 
siBuf„r
;

59 
ivIãm
.
d©a
 = 
NULL
;

60 
ivIãm
.
Àn
 = 0;

61 
SecP¨am
 = 
	`PK11_P¨amFromIV
(
cùhîMech
, &
ivIãm
);

63 
EncC⁄ãxt
 = 
	`PK11_Cª©eC⁄ãxtBySymKey
(
cùhîMech
, 
CKA_ENCRYPT
, 
SymKey
, 
SecP¨am
);

65 
	`PK11_FªeSymKey
(
SymKey
);

66 
	`SECITEM_FªeIãm
(
SecP¨am
, 
PR_TRUE
);

67 
	`PK11_FªeSlŸ
(
¶Ÿ
);

69  
EncC⁄ãxt
;

70 
	}
}

73 
	$sùe_¸y±_˘x_í¸y±
(
PK11C⁄ãxt
* 
EncC⁄ãxt
, c⁄° 
guch¨
 *
ö
, 
gsize
 
Àngth
, guch¨ *
out
)

75 
tmp1_ouéí
;

77 
	`PK11_CùhîOp
(
EncC⁄ãxt
, 
out
, &
tmp1_ouéí
, 
Àngth
, (*)
ö
,Üength);

78 
	}
}

81 
	$sùe_¸y±_˘x_de°roy
(
PK11C⁄ãxt
* 
EncC⁄ãxt
)

83 
	`PK11_De°royC⁄ãxt
(
EncC⁄ãxt
, 
PR_TRUE
);

84 
	}
}

87 
	$sùe_¸y±
(
CK_MECHANISM_TYPE
 
cùhîMech
,

88 c⁄° 
guch¨
 *
key
, 
gsize
 
key_Àngth
,

89 c⁄° 
guch¨
 *
∂aöãxt
, 
gsize
 
∂aöãxt_Àngth
,

90 
guch¨
 *
í¸y±ed_ãxt
)

92 *
EncC⁄ãxt
;

94 
EncC⁄ãxt
 = 
	`sùe_¸y±_˘x_¸óã
(
cùhîMech
, 
key
, 
key_Àngth
);

95 
	`sùe_¸y±_˘x_í¸y±
(
EncC⁄ãxt
, 
∂aöãxt
, 
∂aöãxt_Àngth
, 
í¸y±ed_ãxt
);

96 
	`sùe_¸y±_˘x_de°roy
(
EncC⁄ãxt
);

97 
	}
}

103 
	$sùe_¸y±_des
(c⁄° 
guch¨
 *
key
,

104 c⁄° 
guch¨
 *
∂aöãxt
, 
gsize
 
∂aöãxt_Àngth
,

105 
guch¨
 *
í¸y±ed_ãxt
)

107 
	`sùe_¸y±
(
CKM_DES_ECB
, 
key
, 8, 
∂aöãxt
, 
∂aöãxt_Àngth
, 
í¸y±ed_ãxt
);

108 
	}
}

111 
	$sùe_¸y±_rc4
(c⁄° 
guch¨
 *
key
, 
gsize
 
key_Àngth
,

112 c⁄° 
guch¨
 *
∂aöãxt
, 
gsize
 
∂aöãxt_Àngth
,

113 
guch¨
 *
í¸y±ed_ãxt
)

115 
	`sùe_¸y±
(
CKM_RC4
, 
key
, 
key_Àngth
, 
∂aöãxt
, 
∂aöãxt_Àngth
, 
í¸y±ed_ãxt
);

116 
	}
}

119 
gpoöãr


120 
	$sùe_¸y±_·_°¨t
(c⁄° 
guch¨
 *
key
)

122  
	`sùe_¸y±_˘x_¸óã
(
CKM_RC4
, 
key
, 16);

123 
	}
}

126 
	$sùe_¸y±_·_°ªam
(
gpoöãr
 
c⁄ãxt
,

127 c⁄° 
guch¨
 *
ö
, 
gsize
 
Àngth
,

128 
guch¨
 *
out
)

130 
	`sùe_¸y±_˘x_í¸y±
(
c⁄ãxt
, 
ö
, 
Àngth
, 
out
);

131 
	}
}

134 
	$sùe_¸y±_·_de°roy
(
gpoöãr
 
c⁄ãxt
)

136 
	`sùe_¸y±_˘x_de°roy
(
c⁄ãxt
);

137 
	}
}

	@src/core/sipe-dialog.c

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

25 
	~<time.h
>

27 
	~<glib.h
>

29 
	~"sùe-comm⁄.h
"

30 
	~"sùmsg.h
"

31 
	~"sùe-backíd.h
"

32 
	~"sùe-dülog.h
"

33 
	~"sùe-£ssi⁄.h
"

34 
	~"sùe-utûs.h
"

36 
	$sùe_dülog_‰ì
(
sù_dülog
 *
dülog
)

38 
GSLi°
 *
íåy
;

39 *
d©a
;

41 i‡(!
dülog
) ;

43 
	`g_‰ì
(
dülog
->
wôh
);

44 
	`g_‰ì
(
dülog
->
ídpoöt_GUID
);

45 
íåy
 = 
dülog
->
rouãs
;

46 
íåy
) {

47 
d©a
 = 
íåy
->data;

48 
íåy
 = 
	`g_¶i°_ªmove
”¡ry, 
d©a
);

49 
	`g_‰ì
(
d©a
);

51 
íåy
 = 
dülog
->
suµ‹ãd
;

52 
íåy
) {

53 
d©a
 = 
íåy
->data;

54 
íåy
 = 
	`g_¶i°_ªmove
”¡ry, 
d©a
);

55 
	`g_‰ì
(
d©a
);

58 
	`g_‰ì
(
dülog
->
ˇŒid
);

59 
	`g_‰ì
(
dülog
->
ouπag
);

60 
	`g_‰ì
(
dülog
->
theúèg
);

61 
	`g_‰ì
(
dülog
->
theúïid
);

62 
	`g_‰ì
(
dülog
->
ªque°
);

64 
	`g_‰ì
(
dülog
);

65 
	}
}

67 
	$sùe_subs¸ùti⁄_‰ì
(
sù_subs¸ùti⁄
 *
subs¸ùti⁄
)

69 i‡(!
subs¸ùti⁄
) ;

71 
	`g_‰ì
(
subs¸ùti⁄
->
evít
);

73 
	`sùe_dülog_‰ì
((
sù_dülog
 *Ë
subs¸ùti⁄
);

74 
	}
}

76 
sù_dülog
 *
	$sùe_dülog_add
(
sù_£ssi⁄
 *
£ssi⁄
)

78 
sù_dülog
 *
dülog
 = 
	`g_√w0
(sip_dialog, 1);

79 
£ssi⁄
->
dülogs
 = 
	`g_¶i°_≠≥nd
(£ssi⁄->dülogs, 
dülog
);

80 (
dülog
);

81 
	}
}

83 
sù_dülog
 *

84 
	$sùe_dülog_föd_3
(
sù_£ssi⁄
 *
£ssi⁄
,

85 
sù_dülog
 *
dülog_ö
)

87 i‡(
£ssi⁄
 && 
dülog_ö
) {

88 
SIPE_DIALOG_FOREACH
 {

89 i‡–
dülog_ö
->
ˇŒid
 &&

90 
dülog_ö
->
ouπag
 &&

91 
dülog_ö
->
theúèg
 &&

93 
dülog
->
ˇŒid
 &&

94 
dülog
->
ouπag
 &&

95 
dülog
->
theúèg
 &&

97 
	`sùe_°rˇ£_equÆ
(
dülog_ö
->
ˇŒid
, 
dülog
->callid) &&

98 
	`sùe_°rˇ£_equÆ
(
dülog_ö
->
ouπag
, 
dülog
->ourtag) &&

99 
	`sùe_°rˇ£_equÆ
(
dülog_ö
->
theúèg
, 
dülog
->theirtag))

101 
	`SIPE_DEBUG_INFO
("sipe_dialog_find_3 who='%s'",

102 
dülog
->
wôh
 ? dialog->with : "");

103  
dülog
;

105 } 
SIPE_DIALOG_FOREACH_END
;

107  
NULL
;

108 
	}
}

110 
sù_dülog
 *
	$sùe_dülog_föd
(
sù_£ssi⁄
 *
£ssi⁄
,

111 c⁄° 
gch¨
 *
who
)

113 i‡(
£ssi⁄
 && 
who
) {

114 
SIPE_DIALOG_FOREACH
 {

115 i‡(
dülog
->
wôh
 && 
	`sùe_°rˇ£_equÆ
(
who
, dialog->with)) {

116 
	`SIPE_DEBUG_INFO
("sùe_dülog_föd who='%s'", 
who
);

117  
dülog
;

119 } 
SIPE_DIALOG_FOREACH_END
;

121  
NULL
;

122 
	}
}

124 
	$sùe_dülog_ªmove
(
sù_£ssi⁄
 *
£ssi⁄
, c⁄° 
gch¨
 *
who
)

126 
sù_dülog
 *
dülog
 = 
	`sùe_dülog_föd
(
£ssi⁄
, 
who
);

127 i‡(
dülog
) {

128 
	`SIPE_DEBUG_INFO
("sùe_dülog_ªmovêwho='%s' wôh='%s'", 
who
, 
dülog
->
wôh
 ? dialog->with : "");

129 
£ssi⁄
->
dülogs
 = 
	`g_¶i°_ªmove
(£ssi⁄->dülogs, 
dülog
);

130 
	`sùe_dülog_‰ì
(
dülog
);

132 
	}
}

135 
	$sùe_dülog_ªmove_3
(
sù_£ssi⁄
 *
£ssi⁄
,

136 
sù_dülog
 *
dülog_ö
)

138 
sù_dülog
 *
dülog
 = 
	`sùe_dülog_föd_3
(
£ssi⁄
, 
dülog_ö
);

139 i‡(
dülog
) {

140 
	`SIPE_DEBUG_INFO
("sipe_dialog_remove_3 with='%s'",

141 
dülog
->
wôh
 ? dialog->with : "");

142 
£ssi⁄
->
dülogs
 = 
	`g_¶i°_ªmove
(£ssi⁄->dülogs, 
dülog
);

143 
	`sùe_dülog_‰ì
(
dülog
);

145 
	}
}

147 
	$sùe_dülog_ªmove_Æl
(
sù_£ssi⁄
 *
£ssi⁄
)

149 
GSLi°
 *
íåy
 = 
£ssi⁄
->
dülogs
;

150 
íåy
) {

151 
sù_dülog
 *
dülog
 = 
íåy
->
d©a
;

152 
íåy
 = 
	`g_¶i°_ªmove
”¡ry, 
dülog
);

153 
	`sùe_dülog_‰ì
(
dülog
);

155 
	}
}

157 
	$sùe_dülog_∑r£_rouãs
(
sù_dülog
 *
dülog
,

158 c⁄° 
sùmsg
 *
msg
,

159 
gboﬁón
 
outgoög
)

161 
GSLi°
 *
hdr
 = 
msg
->
hódîs
;

162 
gch¨
 *
c⁄è˘
 = 
	`sùmsg_föd_∑π_of_hódî
(
	`sùmsg_föd_hódî
(
msg
, "C⁄è˘"), "<", ">", 
NULL
);

165 
dülog
->
rouãs
) {

166 *
d©a
 = 
dülog
->
rouãs
->data;

167 
dülog
->
rouãs
 = 
	`g_¶i°_ªmove
(dülog->rouãs, 
d©a
);

168 
	`g_‰ì
(
d©a
);

170 
	`g_‰ì
(
dülog
->
ªque°
);

171 
dülog
->
ªque°
 = 
NULL
;

173 
hdr
) {

174 
sù«mevÆ
 *
ñem
 = 
hdr
->
d©a
;

175 i‡(
	`sùe_°rˇ£_equÆ
(
ñem
->
«me
, "Record-Route")) {

176 
gch¨
 **
∑πs
 = 
	`g_°r•lô
(
ñem
->
vÆue
, ",", 0);

177 
gch¨
 **
∑π
 = 
∑πs
;

179 *
∑π
) {

180 
gch¨
 *
rouã
 = 
	`sùmsg_föd_∑π_of_hódî
(*
∑π
, "<", ">", 
NULL
);

181 
	`SIPE_DEBUG_INFO
("sùe_dülog_∑r£_rouãs:Ñouã %s", 
rouã
);

182 
dülog
->
rouãs
 = 
	`g_¶i°_≠≥nd
(dülog->rouãs, 
rouã
);

183 
∑π
++;

186 
	`g_°r‰ìv
(
∑πs
);

188 
hdr
 = 
	`g_¶i°_√xt
(hdr);

190 i‡(
outgoög
) {

191 
dülog
->
rouãs
 = 
	`g_¶i°_ªvî£
(dialog->routes);

194 i‡(
c⁄è˘
) {

195 
dülog
->
ªque°
 = 
c⁄è˘
;

200 i‡(
dülog
->
rouãs
 && !
	`°r°r
(dülog->rouãs->
d©a
, ";lr")) {

201 
dülog
->
ªque°
 = dülog->
rouãs
->
d©a
;

202 
dülog
->
rouãs
 = 
	`g_¶i°_ªmove
(dülog->rouãs, dülog->rouãs->
d©a
);

203 i‡(
c⁄è˘
) {

204 
dülog
->
rouãs
 = 
	`g_¶i°_≠≥nd
(dülog->rouãs, 
c⁄è˘
);

207 
	}
}

210 
	$sùe_gë_suµ‹ãd_hódî
(c⁄° 
sùmsg
 *
msg
,

211 
sù_dülog
 *
dülog
,

212 
SIPE_UNUSED_PARAMETER
 
gboﬁón
 
outgoög
)

214 
GSLi°
 *
hdr
 = 
msg
->
hódîs
;

215 
sù«mevÆ
 *
ñem
;

216 
hdr
)

218 
ñem
 = 
hdr
->
d©a
;

219 i‡(
	`sùe_°rˇ£_equÆ
(
ñem
->
«me
, "Supported")

220 && !
	`g_¶i°_föd_cu°om
(
dülog
->
suµ‹ãd
, 
ñem
->
vÆue
, (
GCom∑ªFunc
)
g_ascii_°rˇ£cmp
))

222 
dülog
->
suµ‹ãd
 = 
	`g_¶i°_≠≥nd
(dülog->suµ‹ãd, 
	`g_°rdup
(
ñem
->
vÆue
));

225 
hdr
 = 
	`g_¶i°_√xt
(hdr);

227 
	}
}

229 
gch¨
 *
	$föd_èg
(c⁄° 
gch¨
 *
hdr
)

231 
gch¨
 * 
èg
 = 
	`sùmsg_föd_∑π_of_hódî
 (
hdr
, "èg=", ";", 
NULL
);

232 i‡(!
èg
) {

234 
èg
 = 
	`sùmsg_föd_∑π_of_hódî
 (
hdr
, "èg=", 
NULL
, NULL);

236  
èg
;

237 
	}
}

239 
	$sùe_dülog_∑r£
(
sù_dülog
 *
dülog
,

240 c⁄° 
sùmsg
 *
msg
,

241 
gboﬁón
 
outgoög
)

243 
gch¨
 *
us
 = 
outgoög
 ? "From" : "To";

244 
gch¨
 *
them
 = 
outgoög
 ? "To" : "From";

245 c⁄° 
gch¨
 *
£ssi⁄_expúes_hódî
;

247 
	`g_‰ì
(
dülog
->
ouπag
);

248 
	`g_‰ì
(
dülog
->
theúèg
);

250 
dülog
->
ouπag
 = 
	`föd_èg
(
	`sùmsg_föd_hódî
(
msg
, 
us
));

251 
dülog
->
theúèg
 = 
	`föd_èg
(
	`sùmsg_föd_hódî
(
msg
, 
them
));

252 i‡(!
dülog
->
theúïid
) {

253 
dülog
->
theúïid
 = 
	`sùmsg_föd_∑π_of_hódî
(
	`sùmsg_föd_hódî
(
msg
, 
them
), "ïid=", ";", 
NULL
);

254 i‡(!
dülog
->
theúïid
) {

255 
dülog
->
theúïid
 = 
	`sùmsg_föd_∑π_of_hódî
(
	`sùmsg_föd_hódî
(
msg
, 
them
), "ïid=", 
NULL
, NULL);

260 i‡(
dülog
->
theúïid
 && 
	`°r°r
(dialog->theirepid, "tag=")) {

261 
dülog
->
theúïid
 = 
	`°πok
(dialog->theirepid, ";");

264 i‡((
£ssi⁄_expúes_hódî
 = 
	`sùmsg_föd_hódî
(
msg
, "Session-Expires"))) {

265 
dülog
->
expúes
 = 
	`©oi
(
£ssi⁄_expúes_hódî
);

268 
	`sùe_dülog_∑r£_rouãs
(
dülog
, 
msg
, 
outgoög
);

269 
	`sùe_gë_suµ‹ãd_hódî
(
msg
, 
dülog
, 
outgoög
);

270 
	}
}

	@src/core/sipe-dialog.h

30 
	gsùmsg
;

33 
	#SIPE_DIALOG_FOREACH
 { \

34 
GSLi°
 *
íåy
 = 
£ssi⁄
->
dülogs
; \

35 
íåy
) { \

36 
sù_dülog
 *
dülog
 = 
íåy
->
d©a
; \

37 
íåy
 =É¡ry->
√xt
;

	)

38 
	#SIPE_DIALOG_FOREACH_END
 }}

	)

41 
	ssù_dülog
 {

42 
gch¨
 *
	mwôh
;

43 
gch¨
 *
	mídpoöt_GUID
;

49 
	mñe˘i⁄_vŸe
;

50 
gch¨
 *
	mouπag
;

51 
gch¨
 *
	mtheúèg
;

52 
gch¨
 *
	mtheúïid
;

53 
gch¨
 *
	mˇŒid
;

54 
GSLi°
 *
	mrouãs
;

55 
gch¨
 *
	mªque°
;

56 
GSLi°
 *
	msuµ‹ãd
;

57 
	mc£q
;

59 
	mexpúes
;

60 
gboﬁón
 
	mis_e°ablished
;

61 
å™ß˘i⁄
 *
	moutgoög_övôe
;

65 
	ssù_subs¸ùti⁄
 {

66 
sù_dülog
 
	mdülog
;

67 
gch¨
 *
	mevít
;

71 
	gsù_£ssi⁄
;

78 
sùe_dülog_‰ì
(
sù_dülog
 *
dülog
);

85 
sùe_subs¸ùti⁄_‰ì
(
sù_subs¸ùti⁄
 *
subs¸ùti⁄
);

94 
sù_dülog
 *
sùe_dülog_add
(
sù_£ssi⁄
 *
£ssi⁄
);

104 
sù_dülog
 *
sùe_dülog_föd
(
sù_£ssi⁄
 *
£ssi⁄
,

105 c⁄° 
gch¨
 *
who
);

113 
sùe_dülog_ªmove
(
sù_£ssi⁄
 *
£ssi⁄
, c⁄° 
gch¨
 *
who
);

123 
sùe_dülog_ªmove_3
(
sù_£ssi⁄
 *
£ssi⁄
,

124 
sù_dülog
 *
dülog_ö
);

131 
sùe_dülog_ªmove_Æl
(
sù_£ssi⁄
 *
£ssi⁄
);

138 
	#sùe_dülog_™y
(
£ssi⁄
Ë(£ssi⁄->
dülogs
 !
NULL
)

	)

145 
	#sùe_dülog_fú°
(
£ssi⁄
Ë((
sù_dülog
 *)£ssi⁄->
dülogs
->
d©a
)

	)

154 
sùe_dülog_∑r£_rouãs
(
sù_dülog
 *
dülog
,

155 c⁄° 
sùmsg
 *
msg
,

156 
gboﬁón
 
outgoög
);

165 
sùe_dülog_∑r£
(
sù_dülog
 *
dülog
,

166 c⁄° 
sùmsg
 *
msg
,

167 
gboﬁón
 
outgoög
);

	@src/core/sipe-digest.c

28 
	~"glib.h
"

30 
	~"nss.h
"

31 
	~"pk11pub.h
"

32 
	~"md4.h
"

34 
	~"sùe-dige°.h
"

39 
	$sùe_dige°
(c⁄° 
SECOidTag
 
Æg‹ôhm
,

40 c⁄° 
guch¨
 *
d©a
, 
gsize
 
d©a_Àngth
,

41 
guch¨
 *
dige°
, 
gsize
 
dige°_Àngth
)

43 
PK11C⁄ãxt
 *
c⁄ãxt
 = 0;

44 
SECSètus
 
s
;

45 
Àn
;

47 
c⁄ãxt
 = 
	`PK11_Cª©eDige°C⁄ãxt
(
Æg‹ôhm
);

48 
s
 = 
	`PK11_Dige°Begö
(
c⁄ãxt
);

49 
s
 = 
	`PK11_Dige°Op
(
c⁄ãxt
, 
d©a
, 
d©a_Àngth
);

50 
s
 = 
	`PK11_Dige°FöÆ
(
c⁄ãxt
, 
dige°
, &
Àn
, 
dige°_Àngth
);

51 
	`PK11_De°royC⁄ãxt
(
c⁄ãxt
, 
PR_TRUE
);

52 
	}
}

54 
PK11C⁄ãxt
*

55 
	$sùe_dige°_hmac_˘x_¸óã
(
CK_MECHANISM_TYPE
 
hmacMech
, c⁄° 
guch¨
 *
key
, 
gsize
 
key_Àngth
)

57 
PK11SlŸInfo
* 
¶Ÿ
;

58 
SECIãm
 
keyIãm
;

59 
SECIãm
 
noP¨ams
;

60 
PK11SymKey
* 
SymKey
;

61 
PK11C⁄ãxt
* 
Dige°C⁄ãxt
;

62 
SECSètus
 
s
;

65 
¶Ÿ
 = 
	`PK11_GëBe°SlŸ
(
hmacMech
, 
NULL
);

67 
keyIãm
.
ty≥
 = 
siBuf„r
;

68 
keyIãm
.
d©a
 = (*)
key
;

69 
keyIãm
.
Àn
 = 
key_Àngth
;

71 
SymKey
 = 
	`PK11_Imp‹tSymKey
(
¶Ÿ
, 
hmacMech
, 
PK11_OrigöUnwøp
, 
CKA_SIGN
, &
keyIãm
, 
NULL
);

74 
noP¨ams
.
ty≥
 = 
siBuf„r
;

75 
noP¨ams
.
d©a
 = 
NULL
;

76 
noP¨ams
.
Àn
 = 0;

78 
Dige°C⁄ãxt
 = 
	`PK11_Cª©eC⁄ãxtBySymKey
(
hmacMech
, 
CKA_SIGN
, 
SymKey
, &
noP¨ams
);

80 
s
 = 
	`PK11_Dige°Begö
(
Dige°C⁄ãxt
);

82 
	`PK11_FªeSymKey
(
SymKey
);

83 
	`PK11_FªeSlŸ
(
¶Ÿ
);

85  
Dige°C⁄ãxt
;

86 
	}
}

88 
	$sùe_dige°_hmac_˘x_≠≥nd
(
PK11C⁄ãxt
* 
Dige°C⁄ãxt
, c⁄° 
guch¨
 *
d©a
, 
gsize
 
d©a_Àngth
)

90 
	`PK11_Dige°Op
(
Dige°C⁄ãxt
, 
d©a
, 
d©a_Àngth
);

91 
	}
}

93 
	$sùe_dige°_hmac_˘x_dige°
(
PK11C⁄ãxt
* 
Dige°C⁄ãxt
, 
guch¨
 *
dige°
, 
gsize
 
dige°_Àngth
)

95 
Àn
;

97 
	`PK11_Dige°FöÆ
(
Dige°C⁄ãxt
, 
dige°
, &
Àn
, 
dige°_Àngth
);

98 
	}
}

100 
	$sùe_dige°_hmac_˘x_de°roy
(
PK11C⁄ãxt
* 
Dige°C⁄ãxt
)

102 
	`PK11_De°royC⁄ãxt
(
Dige°C⁄ãxt
, 
PR_TRUE
);

103 
	}
}

109 
	$sùe_dige°_md4
(c⁄° 
guch¨
 *
d©a
, 
gsize
 
Àngth
, guch¨ *
dige°
)

114 
	`md4sum
(
d©a
, 
Àngth
, 
dige°
);

115 
	}
}

117 
	$sùe_dige°_md5
(c⁄° 
guch¨
 *
d©a
, 
gsize
 
Àngth
, guch¨ *
dige°
)

119 
	`sùe_dige°
(
SEC_OID_MD5
, 
d©a
, 
Àngth
, 
dige°
, 
SIPE_DIGEST_MD5_LENGTH
);

120 
	}
}

122 
	$sùe_dige°_sha1
(c⁄° 
guch¨
 *
d©a
, 
gsize
 
Àngth
, guch¨ *
dige°
)

124 
	`sùe_dige°
(
SEC_OID_SHA1
, 
d©a
, 
Àngth
, 
dige°
, 
SIPE_DIGEST_SHA1_LENGTH
);

125 
	}
}

127 
	$sùe_dige°_hmac_md5
(c⁄° 
guch¨
 *
key
, 
gsize
 
key_Àngth
,

128 c⁄° 
guch¨
 *
d©a
, 
gsize
 
d©a_Àngth
,

129 
guch¨
 *
dige°
)

131 *
Dige°C⁄ãxt
;

133 
Dige°C⁄ãxt
 = 
	`sùe_dige°_hmac_˘x_¸óã
(
CKM_MD5_HMAC
, 
key
, 
key_Àngth
);

134 
	`sùe_dige°_hmac_˘x_≠≥nd
(
Dige°C⁄ãxt
, 
d©a
, 
d©a_Àngth
);

135 
	`sùe_dige°_hmac_˘x_dige°
(
Dige°C⁄ãxt
, 
dige°
, 
SIPE_DIGEST_HMAC_MD5_LENGTH
);

136 
	`sùe_dige°_hmac_˘x_de°roy
(
Dige°C⁄ãxt
);

137 
	}
}

140 
gpoöãr
 
	$sùe_dige°_·_°¨t
(c⁄° 
guch¨
 *
sha1_dige°
)

143  
	`sùe_dige°_hmac_˘x_¸óã
(
CKM_SHA_1_HMAC
, 
sha1_dige°
, 16);

144 
	}
}

146 
	$sùe_dige°_·_upd©e
(
gpoöãr
 
c⁄ãxt
, c⁄° 
guch¨
 *
d©a
, 
gsize
 
Àngth
)

148 
	`sùe_dige°_hmac_˘x_≠≥nd
(
c⁄ãxt
, 
d©a
, 
Àngth
);

149 
	}
}

151 
	$sùe_dige°_·_íd
(
gpoöãr
 
c⁄ãxt
, 
guch¨
 *
dige°
)

153 
	`sùe_dige°_hmac_˘x_dige°
(
c⁄ãxt
, 
dige°
, 
SIPE_DIGEST_FILETRANSFER_LENGTH
);

154 
	}
}

156 
	$sùe_dige°_·_de°roy
(
gpoöãr
 
c⁄ãxt
)

158 
	`sùe_dige°_hmac_˘x_de°roy
(
c⁄ãxt
);

159 
	}
}

	@src/core/sipe-domino.c

56 
	~<°rög.h
>

57 
	~<˘y≥.h
>

58 
	~<°dio.h
>

59 
	~<î∫o.h
>

61 
	~<glib.h
>

64 #ifde‡
_WIN32


65 
	~"sùe-wö32dï.h
"

68 
	~"hâp-c⁄n.h
"

69 
	~"sùe-comm⁄.h
"

70 
	~"sùe-c‹e.h
"

71 
	~"sùe.h
"

72 
	~"sùe-∆s.h
"

73 
	~"sùe-backíd.h
"

74 
	~"sùe-utûs.h
"

75 
	~"sùe-ˇl.h
"

76 
	~"sùe-xml.h
"

77 
	~"sùe-domöo.h
"

85 
	#SIPE_DOMINO_LOGIN_REQUEST
 \

86 "U£∫ame=%s&Passw‹d=%s"

	)

94 
	#SIPE_DOMINO_CALENDAR_REQUEST
 \

95 "/($CÆíd¨)?RódVõwE¡rõs&KeyTy≥Òime&SèπKey=%s&U¡ûKey=%s&Cou¡=-1&TZTy≥=UTC"

	)

129 
	#VIEWENTITY_START0_TIME
 "$134"

	)

130 
	#VIEWENTITY_START_TIME
 "$144"

	)

131 
	#VIEWENTITY_END_TIME
 "$146"

	)

132 
	#VIEWENTITY_TEXT_LIST
 "$147"

	)

136 
	$sùe_domöo_gë_¶Ÿ_no
(
time_t
 
fb_°¨t
,Åime_à
ö
)

138  (
ö
 - 
fb_°¨t
Ë/ 
SIPE_FREE_BUSY_GRANULARITY_SEC
;

139 
	}
}

142 
	$sùe_domöo_gë_‰ì_busy
(
time_t
 
fb_°¨t
,

143 
GSLi°
 *
ˇl_evíts
)

145 
GSLi°
 *
íåy
 = 
ˇl_evíts
;

146 *
ªs
;

148 i‡(!
ˇl_evíts
Ë 
NULL
;

150 
ªs
 = 
	`g_°∫fûl
(
SIPE_FREE_BUSY_PERIOD_SEC
 / 
SIPE_FREE_BUSY_GRANULARITY_SEC
,

151 
SIPE_CAL_FREE
 + '0');

153 
íåy
) {

154 
sùe_ˇl_evít
 *
ˇl_evít
 = 
íåy
->
d©a
;

155 
°¨t
 = 
	`sùe_domöo_gë_¶Ÿ_no
(
fb_°¨t
, 
ˇl_evít
->
°¨t_time
);

156 
íd
 = 
	`sùe_domöo_gë_¶Ÿ_no
(
fb_°¨t
, (
ˇl_evít
->
íd_time
 - 1));

157 
i
;

159 
i
 = 
°¨t
; i <
íd
; i++) {

160 
ªs
[
i
] = 
SIPE_CAL_BUSY
 + '0';

162 
íåy
 =É¡ry->
√xt
;

164 
	`SIPE_DEBUG_INFO
("sùe_domöo_gë_‰ì_busy:Ñes=\n%s", 
ªs
);

165  
ªs
;

166 
	}
}

169 
	$sùe_domöo_¥o˚ss_ˇÀnd¨_ª•⁄£
(
ªtu∫_code
,

170 c⁄° *
body
,

171 c⁄° *
c⁄ã¡_ty≥
,

172 
HâpC⁄n
 *
c⁄n
,

173 *
d©a
)

175 
sùe_ˇÀnd¨
 *
ˇl
 = 
d©a
;

177 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_domino_process_calendar_response: cb started.");

179 
	`hâp_c⁄n_£t_˛o£
(
c⁄n
);

180 
ˇl
->
hâp_c⁄n
 = 
NULL
;

182 i‡(
c⁄ã¡_ty≥
 && !
	`g_°r_has_¥efix
(content_type, "text/xml")) {

183 
ˇl
->
is_domöo_dißbÀd
 = 
TRUE
;

184 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_domino_process_calendar_response:Çot XML, disabling.");

188 i‡(
ªtu∫_code
 =200 && 
body
) {

189 c⁄° 
sùe_xml
 *
node
, *
node2
, *
node3
;

190 
sùe_xml
 *
xml
;

192 
	`SIPE_DEBUG_INFO
("sùe_domöo_¥o˚ss_ˇÀnd¨_ª•⁄£: SUCCESS,Ñë=%d", 
ªtu∫_code
);

193 
xml
 = 
	`sùe_xml_∑r£
(
body
, 
	`°æí
(body));

195 
	`sùe_ˇl_evíts_‰ì
(
ˇl
->
ˇl_evíts
);

196 
ˇl
->
ˇl_evíts
 = 
NULL
;

198 
node
 = 
	`sùe_xml_chûd
(
xml
, "viewentry");

199 
node
;

200 
node
 = 
	`sùe_xml_twö
(node))

202 
sùe_ˇl_evít
 *
ˇl_evít
 = 
	`g_√w0
(sipe_cal_event, 1);

203 
ˇl
->
ˇl_evíts
 = 
	`g_¶i°_≠≥nd
(ˇl->ˇl_evíts, 
ˇl_evít
);

204 
ˇl_evít
->
ˇl_°©us
 = 
SIPE_CAL_BUSY
;

205 
ˇl_evít
->
is_mìtög
 = 
TRUE
;

210 
node2
 = 
	`sùe_xml_chûd
(
node
, "entrydata");

211 
node2
;

212 
node2
 = 
	`sùe_xml_twö
(node2))

214 c⁄° *
«me
 = 
	`sùe_xml_©åibuã
(
node2
, "name");

216 
	`SIPE_DEBUG_INFO
("\ã¡ryd©®«me=%s", 
«me
);

218 i‡(
	`sùe_°ªquÆ
(
«me
, 
VIEWENTITY_START0_TIME
) ||

219 
	`sùe_°ªquÆ
(
«me
, 
VIEWENTITY_START_TIME
) ||

220 
	`sùe_°ªquÆ
(
«me
, 
VIEWENTITY_END_TIME
))

222 *
tmp
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node2
, "datetime"));

223 
time_t
 
time_vÆ
 = 
	`sùe_utûs_°r_to_time
(
tmp
);

225 i‡(
	`sùe_°ªquÆ
(
«me
, 
VIEWENTITY_START_TIME
)) {

226 
ˇl_evít
->
°¨t_time
 = 
time_vÆ
;

227 } i‡(
	`sùe_°ªquÆ
(
«me
, 
VIEWENTITY_END_TIME
)) {

228 
ˇl_evít
->
íd_time
 = 
time_vÆ
;

231 
	`SIPE_DEBUG_INFO
("\t\td©ëime=%s", 
	`as˘ime
(
	`gmtime
(&
time_vÆ
)));

232 
	`g_‰ì
(
tmp
);

233 } i‡(
	`sùe_°ªquÆ
(
«me
, 
VIEWENTITY_TEXT_LIST
)) {

234 
i
 = 0;

237 
node3
 = 
	`sùe_xml_chûd
(
node2
, "textlist/text");

238 
node3
;

239 
node3
 = 
	`sùe_xml_twö
(node3))

241 *
tmp
 = 
	`sùe_xml_d©a
(
node3
);

243 i‡(!
tmp
) ;

245 
	`SIPE_DEBUG_INFO
("\t\âext=%s", 
tmp
);

246 i‡(
i
 == 0) {

247 
ˇl_evít
->
subje˘
 = 
	`g_°rdup
(
tmp
);

248 
	`SIPE_DEBUG_INFO
("\t\t*Subj.=%s", 
tmp
);

251 i‡(!
	`g_ascii_°∫ˇ£cmp
(
tmp
, "Location:", 9)) {

252 i‡(
	`°æí
(
tmp
) > 9) {

253 
ˇl_evít
->
loˇti⁄
 = 
	`g_°rdup
(
	`g_°r°rù
(
tmp
+9));

254 
	`SIPE_DEBUG_INFO
("\t\t*Loc.=%s", 
ˇl_evít
->
loˇti⁄
);

257 } i‡(
	`g_°r_has_¥efix
(
tmp
, 
	`_
("Location:"))) {

258 
guöt
 
Àn
 = 
	`°æí
(
	`_
("Location:"));

259 i‡(
	`°æí
(
tmp
Ë> 
Àn
) {

260 
ˇl_evít
->
loˇti⁄
 = 
	`g_°rdup
(
	`g_°r°rù
(
tmp
+
Àn
));

261 
	`SIPE_DEBUG_INFO
("\t\t*Loc.=%s", 
ˇl_evít
->
loˇti⁄
);

265 
i
++;

266 
	`g_‰ì
(
tmp
);

271 
	`sùe_xml_‰ì
(
xml
);

274 
	`g_‰ì
(
ˇl
->
‰ì_busy
);

275 
ˇl
->
‰ì_busy
 = 
	`sùe_domöo_gë_‰ì_busy
(ˇl->
fb_°¨t
, cÆ->
ˇl_evíts
);

278 
ˇl
->
is_upd©ed
 = 
TRUE
;

279 i‡(
ˇl
->
sù
->
ocs2007
) {

281 
	`publish_ˇÀnd¨_°©us_£lf
(
ˇl
->
sù
->
¥iv©e
,

282 
NULL
);

285 
	`£nd_¥e£n˚_sﬂp
(
ˇl
->
sù
, 
TRUE
);

288 } i‡(
ªtu∫_code
 < 0) {

289 
	`SIPE_DEBUG_INFO
("sùe_domöo_¥o˚ss_ˇÀnd¨_ª•⁄£:Ñ©hî FAILURE,Ñë=%d", 
ªtu∫_code
);

292 i‡(
ˇl
->
hâp_£ssi⁄
) {

293 
	`hâp_c⁄n_£ssi⁄_‰ì
(
ˇl
->
hâp_£ssi⁄
);

294 
ˇl
->
hâp_£ssi⁄
 = 
NULL
;

296 
	}
}

299 
gch¨
 *

300 
	$sùe_domöo_time_to_°r
(
time_t
 
time°amp
)

302 *
ªs
, *
tmp
;

304 
ªs
 = 
	`sùe_utûs_time_to_°r
(
time°amp
);

305 
ªs
 = 
	`sùe_utûs_°r_ª∂a˚
((
tmp
 =Ñes), "-", "");

306 
	`g_‰ì
(
tmp
);

307 
ªs
 = 
	`sùe_utûs_°r_ª∂a˚
((
tmp
 =Ñes), ":", "");

308 
	`g_‰ì
(
tmp
);

310  
ªs
;

311 
	}
}

314 
	$sùe_domöo_do_ˇÀnd¨_ªque°
(
sùe_ˇÀnd¨
 *
ˇl
)

316 i‡(
ˇl
->
domöo_uæ
) {

317 *
uæ_ªq
;

318 *
uæ
;

319 
time_t
 
íd
;

320 
time_t
 
now
 = 
	`time
(
NULL
);

321 *
°¨t_°r
;

322 *
íd_°r
;

323 
tm
 *
now_tm
;

325 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_domino_do_calendar_request: going CalendarÑeq.");

327 
now_tm
 = 
	`gmtime
(&
now
);

329 
now_tm
->
tm_£c
 = 0;

330 
now_tm
->
tm_mö
 = 0;

331 
now_tm
->
tm_hour
 = 0;

332 
ˇl
->
fb_°¨t
 = 
	`sùe_mktime_tz
(
now_tm
, "UTC");

333 
ˇl
->
fb_°¨t
 -= 24*60*60;

335 
íd
 = 
ˇl
->
fb_°¨t
 + 
SIPE_FREE_BUSY_PERIOD_SEC
 - 1;

337 
°¨t_°r
 = 
	`sùe_domöo_time_to_°r
(
ˇl
->
fb_°¨t
);

338 
íd_°r
 = 
	`sùe_domöo_time_to_°r
(
íd
);

340 
uæ_ªq
 = 
	`g_°rdup_¥ötf
(
SIPE_DOMINO_CALENDAR_REQUEST
, 
°¨t_°r
, 
íd_°r
);

341 
	`g_‰ì
(
°¨t_°r
);

342 
	`g_‰ì
(
íd_°r
);

344 
uæ
 = 
	`g_°rc⁄ˇt
(
ˇl
->
domöo_uæ
, 
uæ_ªq
, 
NULL
);

345 
	`g_‰ì
(
uæ_ªq
);

346 i‡(!
ˇl
->
hâp_c⁄n
 || 
	`hâp_c⁄n_is_˛o£d
(cal->http_conn)) {

347 
ˇl
->
hâp_c⁄n
 = 
	`hâp_c⁄n_¸óã
(

348 
ˇl
->
sù
->
public
,

349 
ˇl
->
hâp_£ssi⁄
,

350 
HTTP_CONN_GET
,

351 
HTTP_CONN_SSL
,

352 
HTTP_CONN_NO_REDIRECT
,

353 
uæ
,

354 
NULL
,

355 
NULL
,

356 
ˇl
->
auth
,

357 
sùe_domöo_¥o˚ss_ˇÀnd¨_ª•⁄£
,

358 
ˇl
);

360 
	`hâp_c⁄n_£nd
(
ˇl
->
hâp_c⁄n
,

361 
HTTP_CONN_GET
,

362 
uæ
,

363 
NULL
,

364 
NULL
,

365 
sùe_domöo_¥o˚ss_ˇÀnd¨_ª•⁄£
,

366 
ˇl
);

368 
	`g_‰ì
(
uæ
);

370 
	}
}

373 
	$sùe_domöo_¥o˚ss_logö_ª•⁄£
(
ªtu∫_code
,

375 
SIPE_UNUSED_PARAMETER
 c⁄° *
body
,

376 
SIPE_UNUSED_PARAMETER
 c⁄° *
c⁄ã¡_ty≥
,

377 
HâpC⁄n
 *
c⁄n
,

378 *
d©a
)

380 
sùe_ˇÀnd¨
 *
ˇl
 = 
d©a
;

382 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_domino_process_login_response: cb started.");

384 i‡(
ªtu∫_code
 >= 200 &&Ñeturn_code < 400) {

385 
	`SIPE_DEBUG_INFO
("sùe_domöo_¥o˚ss_logö_ª•⁄£:Ñ©hî SUCCESS,Ñë=%d", 
ªtu∫_code
);

388 
	`sùe_domöo_do_ˇÀnd¨_ªque°
(
ˇl
);

390 } i‡(
ªtu∫_code
 < 0 ||Ñeturn_code >= 400) {

391 
	`SIPE_DEBUG_INFO
("sùe_domöo_¥o˚ss_logö_ª•⁄£:Ñ©hî FAILURE,Ñë=%d", 
ªtu∫_code
);

396 
	`hâp_c⁄n_£t_˛o£
(
c⁄n
);

397 
ˇl
->
hâp_c⁄n
 = 
NULL
;

399 
	}
}

401 
gch¨
 *
	$sùe_domöo_uri_esˇ≥
(c⁄° 
gch¨
 *
°rög
)

403 
gch¨
 *
esˇ≥d
;

405 i‡(!
°rög
Ë(
NULL
);

406 i‡(!
	`g_utf8_vÆid©e
(
°rög
, -1, 
NULL
)) (NULL);

408 #i‡
	`GLIB_CHECK_VERSION
(2,16,0)

409 
esˇ≥d
 = 
	`g_uri_esˇ≥_°rög
(
°rög
, 
NULL
, 
FALSE
);

413 
GSåög
 *
buf
 = 
	`g_°rög_√w
(
NULL
);

415 *
°rög
) {

416 
gunich¨
 
c
 = 
	`g_utf8_gë_ch¨
(
°rög
);

420 i‡(
c
 < 128 &&

421 (
	`iß um
(
c
) || c == '-' || c == '.' || c == '_' || c == '~')) {

422 
	`g_°rög_≠≥nd_c
(
buf
, 
c
);

424 
gch¨
 *
p
, 
utf_ch¨
[6];

425 
guöt
 
byãs
 = 
	`g_unich¨_to_utf8
(
c
, 
utf_ch¨
);

427 
p
 = 
utf_ch¨
;

428 
byãs
-- > 0) {

429 
	`g_°rög_≠≥nd_¥ötf
(
buf
,

431 *
p
++ & 0xff);

435 
°rög
 = 
	`g_utf8_√xt_ch¨
(string);

438 
esˇ≥d
 = 
	`g_°rög_‰ì
(
buf
, 
FALSE
);

442 (
esˇ≥d
);

443 
	}
}

446 
	$sùe_domöo_do_logö_ªque°
(
sùe_ˇÀnd¨
 *
ˇl
)

448 i‡(
ˇl
->
domöo_uæ
) {

449 *
body
;

450 c⁄° *
c⁄ã¡_ty≥
 = "application/x-www-form-urlencoded";

451 *
logö_uæ
 = 
	`g_°rc⁄ˇt
(
ˇl
->
domöo_uæ
, "/?Logö", 
NULL
);

452 *
u£r
;

453 *
∑ssw‹d
;

455 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_domino_do_login_request: going LoginÑeq.");

457 i‡(!
ˇl
->
auth
) ;

460 
u£r
 = 
	`sùe_domöo_uri_esˇ≥
(
ˇl
->
emaû
);

461 
∑ssw‹d
 = 
	`sùe_domöo_uri_esˇ≥
(
ˇl
->
auth
->password);

463 
body
 = 
	`g_°rdup_¥ötf
(
SIPE_DOMINO_LOGIN_REQUEST
, 
u£r
, 
∑ssw‹d
);

464 
	`g_‰ì
(
u£r
);

465 
	`g_‰ì
(
∑ssw‹d
);

467 
ˇl
->
hâp_c⁄n
 = 
	`hâp_c⁄n_¸óã
(ˇl->
sù
->
public
,

468 
ˇl
->
hâp_£ssi⁄
,

469 
HTTP_CONN_POST
,

470 
HTTP_CONN_SSL
,

471 
HTTP_CONN_NO_REDIRECT
,

472 
logö_uæ
,

473 
body
,

474 
c⁄ã¡_ty≥
,

475 
ˇl
->
auth
,

476 
sùe_domöo_¥o˚ss_logö_ª•⁄£
,

477 
ˇl
);

478 
	`g_‰ì
(
logö_uæ
);

479 
	`g_‰ì
(
body
);

481 
	}
}

490 
	$sùe_domöo_ªad_nŸes_öi
(c⁄° *
fûíame_wôh_∑th
, **
maû_£rvî
, **
maû_fûe
)

492 
rbuf
[256];

493 
FILE
 *
Â
 = 
	`f›í
(
fûíame_wôh_∑th
, "r+");

495 i‡(
Â
) {

496 
	`fgës
(
rbuf
,  (rbuf), 
Â
)) {

497 *
¥›
 = "MailFile=";

498 
guöt
 
¥›_Àn
 = 
	`°æí
(
¥›
);

501 i‡(
maû_fûe
 && !
	`g_ascii_°∫ˇ£cmp
(
rbuf
, 
¥›
, 
¥›_Àn
Ë&& (
	`°æí
(rbuf) >Örop_len)) {

502 *
maû_fûe
 = 
	`g_°rdup
(
	`g_°r°rù
((
rbuf
+
¥›_Àn
)));

505 
¥›
 = "MailServer=";

506 
¥›_Àn
 = 
	`°æí
(
¥›
);

508 i‡(
maû_£rvî
 && !
	`g_ascii_°∫ˇ£cmp
(
rbuf
, 
¥›
, 
¥›_Àn
Ë&& (
	`°æí
(rbuf) >Örop_len)) {

509 *
maû_£rvî
 = 
	`g_°rdup
(
	`g_°r°rù
((
rbuf
+
¥›_Àn
)));

512 
	`f˛o£
(
Â
);

514 
	`SIPE_DEBUG_ERROR
("sùe_domöo_ªad_nŸes_öi(): couldÇŸ o≥¿`%s': %s", 
fûíame_wôh_∑th
, 
	`g_°ªº‹
 (
î∫o
));

516 
	}
}

526 
	$sùe_domöo_compo£_uæ
(c⁄° *
¥Ÿocﬁ
, c⁄° *
maû_£rvî
, c⁄° *
maû_fûe
)

528 c⁄° *
±r
;

529 *
tmp
, *
tmp2
, *
tmp3
;

531 
	`g_ªtu∫_vÆ_if_Áû
(
¥Ÿocﬁ
, 
NULL
);

532 
	`g_ªtu∫_vÆ_if_Áû
(
maû_£rvî
, 
NULL
);

533 
	`g_ªtu∫_vÆ_if_Áû
(
maû_fûe
, 
NULL
);

536 i‡((
±r
 = 
	`°r°r
(
maû_£rvî
, "/"))) {

537 
tmp
 = 
	`g_°∫dup
(
maû_£rvî
, (
±r
-mail_server));

539 
tmp
 = 
	`g_°rdup
(
maû_£rvî
);

541 i‡((!
	`g_ascii_°∫ˇ£cmp
(
tmp
, "CN=", 3))) {

542 
tmp2
 = 
	`g_°rdup
(
tmp
+3);

544 
tmp2
 = 
	`g_°rdup
(
tmp
);

546 
	`g_‰ì
(
tmp
);

547 
tmp
 = 
	`g_ascii_°rdown
(
tmp2
, -1);

548 
	`g_‰ì
(
tmp2
);

551 
tmp3
 = 
	`sùe_utûs_°r_ª∂a˚
(
maû_fûe
, "\\", "/");

553 
tmp2
 = 
	`g_°rc⁄ˇt
(
¥Ÿocﬁ
, "://", 
tmp
, "/", 
tmp3
, 
NULL
);

554 
	`g_‰ì
(
tmp
);

555 
	`g_‰ì
(
tmp3
);

557  
tmp2
;

558 
	}
}

561 
	$sùe_domöo_upd©e_ˇÀnd¨
(
sùe_accou¡_d©a
 *
sù
)

563 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_domino_update_calendar: started.");

565 i‡(
sù
) {

566 
	`sùe_ˇl_ˇÀnd¨_öô
(
sù
, 
NULL
);

569 i‡(
sù
->
ˇl
 && !
	`is_em±y
(sù->ˇl->
domöo_uæ
)) {

570 *
tmp
 = 
	`g_ascii_°rdown
(
sù
->
ˇl
->
domöo_uæ
, -1);

571 i‡(!
	`g_°r_has_suffix
(
tmp
, ".nsf")) {

573 
sù
->
ˇl
->
is_domöo_dißbÀd
 = 
TRUE
;

574 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_domino_update_calendar: invalid Domino URI supplied, disabling.");

576 
	`g_‰ì
(
tmp
);

583 i‡(
sù
->
ˇl
 && 
	`is_em±y
(sù->ˇl->
domöo_uæ
)) {

584 *
∑th
 = 
NULL
;

585 #ifde‡
_WIN32


587 
∑th
 = 
	`wpuΩÀ_ªad_ªg_ex∑nd_°rög
(
HKEY_CURRENT_USER
, "Software\\Lotus\\Notes\\8.0", "NotesIniPath");

588 i‡(
	`is_em±y
(
∑th
)) {

589 
	`g_‰ì
(
∑th
);

590 
∑th
 = 
	`wpuΩÀ_ªad_ªg_ex∑nd_°rög
(
HKEY_CURRENT_USER
, "Software\\Lotus\\Notes\\7.0", "NotesIniPath");

591 i‡(
	`is_em±y
(
∑th
)) {

592 
	`g_‰ì
(
∑th
);

593 
∑th
 = 
	`wpuΩÀ_ªad_ªg_ex∑nd_°rög
(
HKEY_CURRENT_USER
, "Software\\Lotus\\Notes\\6.0", "NotesIniPath");

594 i‡(
	`is_em±y
(
∑th
)) {

595 
	`g_‰ì
(
∑th
);

596 
∑th
 = 
	`wpuΩÀ_ªad_ªg_ex∑nd_°rög
(
HKEY_CURRENT_USER
, "Software\\Lotus\\Notes\\5.0", "NotesIniPath");

600 
	`SIPE_DEBUG_INFO
("sùe_domöo_upd©e_ˇÀnd¨:ÇŸes.öò∑th:\n%s", 
∑th
 ?Öath : "");

606 i‡(
∑th
) {

607 *
maû_£rvî
 = 
NULL
;

608 *
maû_fûe
 = 
NULL
;

610 
	`sùe_domöo_ªad_nŸes_öi
(
∑th
, &
maû_£rvî
, &
maû_fûe
);

611 
	`g_‰ì
(
∑th
);

612 
	`SIPE_DEBUG_INFO
("sùe_domöo_upd©e_ˇÀnd¨: maû_£rvî=%s", 
maû_£rvî
 ? mail_server : "");

613 
	`SIPE_DEBUG_INFO
("sùe_domöo_upd©e_ˇÀnd¨: maû_fûe=%s", 
maû_fûe
 ? mail_file : "");

615 
	`g_‰ì
(
sù
->
ˇl
->
domöo_uæ
);

616 
sù
->
ˇl
->
domöo_uæ
 = 
	`sùe_domöo_compo£_uæ
("hâps", 
maû_£rvî
, 
maû_fûe
);

617 
	`g_‰ì
(
maû_£rvî
);

618 
	`g_‰ì
(
maû_fûe
);

619 
	`SIPE_DEBUG_INFO
("sùe_domöo_upd©e_ˇÀnd¨: sù->ˇl->domöo_uæ=%s", 
sù
->
ˇl
->
domöo_uæ
 ? sip->cal->domino_url : "");

622 
sù
->
ˇl
->
is_domöo_dißbÀd
 = 
TRUE
;

623 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_domino_update_calendar: Domino URI hasn't been discovered,ÇeitherÖrovided, disabling.");

627 i‡(
sù
->
ˇl
) {

630 i‡(
sù
->
ˇl
->
hâp_£ssi⁄
) {

631 
	`hâp_c⁄n_£ssi⁄_‰ì
(
sù
->
ˇl
->
hâp_£ssi⁄
);

633 
sù
->
ˇl
->
hâp_£ssi⁄
 = 
	`hâp_c⁄n_£ssi⁄_¸óã
();

635 i‡(
sù
->
ˇl
->
is_domöo_dißbÀd
) {

636 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_domino_update_calendar: disabled,Éxiting.");

640 
	`sùe_domöo_do_logö_ªque°
(
sù
->
ˇl
);

644 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_domino_update_calendar: finished.");

645 
	}
}

	@src/core/sipe-domino.h

24 
	gsùe_accou¡_d©a
;

34 
sùe_domöo_upd©e_ˇÀnd¨
(
sùe_accou¡_d©a
 *
sù
);

	@src/core/sipe-ews.c

47 
	~<°rög.h
>

48 
	~<time.h
>

50 
	~<glib.h
>

52 
	~"hâp-c⁄n.h
"

53 
	~"sùe-backíd.h
"

54 
	~"sùe-comm⁄.h
"

55 
	~"sùe-ˇl.h
"

56 
	~"sùe-c‹e.h
"

57 
	~"sùe-ews.h
"

58 
	~"sùe-utûs.h
"

59 
	~"sùe-xml.h
"

60 
	~"sùe.h
"

66 
	#SIPE_EWS_AUTODISCOVER_REQUEST
 \

75 "</Autodiscovî>"

	)

82 
	#SIPE_EWS_USER_OOF_SETTINGS_REQUEST
 \

92 "</sﬂp:Envñ›e>"

	)

101 
	#SIPE_EWS_USER_AVAILABILITY_REQUEST
 \

146 "</sﬂp:Envñ›e>"

	)

148 
	#SIPE_EWS_STATE_NONE
 0

	)

149 
	#SIPE_EWS_STATE_AUTODISCOVER_SUCCESS
 1

	)

150 
	#SIPE_EWS_STATE_AUTODISCOVER_1_FAILURE
 -1

	)

151 
	#SIPE_EWS_STATE_AUTODISCOVER_2_FAILURE
 -2

	)

152 
	#SIPE_EWS_STATE_AVAILABILITY_SUCCESS
 3

	)

153 
	#SIPE_EWS_STATE_AVAILABILITY_FAILURE
 -3

	)

154 
	#SIPE_EWS_STATE_OOF_SUCCESS
 4

	)

155 
	#SIPE_EWS_STATE_OOF_FAILURE
 -4

	)

158 
	$sùe_ews_gë_oof_nŸe
(
sùe_ˇÀnd¨
 *
ˇl
)

160 
time_t
 
now
 = 
	`time
(
NULL
);

162 i‡(!
ˇl
 || !ˇl->
oof_°©e
Ë 
NULL
;

164 i‡(
	`sùe_°ªquÆ
(
ˇl
->
oof_°©e
, "Enabled") ||

165 (
	`sùe_°ªquÆ
(
ˇl
->
oof_°©e
, "ScheduÀd"Ë&& 
now
 >ˇl->
oof_°¨t
 &&Çow <ˇl->
oof_íd
))

167  
ˇl
->
oof_nŸe
;

171  
NULL
;

173 
	}
}

176 
sùe_ews_run_°©e_machöe
(
sùe_ˇÀnd¨
 *
ˇl
);

179 
	$sùe_ews_¥o˚ss_avaû_ª•⁄£
(
ªtu∫_code
,

180 c⁄° *
body
,

181 
SIPE_UNUSED_PARAMETER
 c⁄° *
c⁄ã¡_ty≥
,

182 
HâpC⁄n
 *
c⁄n
,

183 *
d©a
)

185 
sùe_ˇÀnd¨
 *
ˇl
 = 
d©a
;

187 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_ews_process_avail_response: cb started.");

189 if(!
	`sùe_°ªquÆ
(
ˇl
->
as_uæ
, cÆ->
oof_uæ
)) {

190 
	`hâp_c⁄n_£t_˛o£
(
c⁄n
);

191 
ˇl
->
hâp_c⁄n
 = 
NULL
;

194 i‡(
ªtu∫_code
 =200 && 
body
) {

195 c⁄° 
sùe_xml
 *
node
;

196 c⁄° 
sùe_xml
 *
ª•
;

198 
sùe_xml
 *
xml
 = 
	`sùe_xml_∑r£
(
body
, 
	`°æí
(body));

205 
ª•
 = 
	`sùe_xml_chûd
(
xml
, "Body/GetUserAvailabilityResponse/FreeBusyResponseArray/FreeBusyResponse");

206 i‡(!
ª•
) ;

207 i‡(!
	`sùe_°ªquÆ
(
	`sùe_xml_©åibuã
(
	`sùe_xml_chûd
(
ª•
, "ResponseMessage"), "ResponseClass"), "Success")) {

212 
	`g_‰ì
(
ˇl
->
‰ì_busy
);

213 
ˇl
->
‰ì_busy
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
ª•
, "FreeBusyView/MergedFreeBusy"));

216 
node
 = 
	`sùe_xml_chûd
(
ª•
, "FreeBusyView/WorkingHours");

217 
	`g_‰ì
(
ˇl
->
w‹kög_hours_xml_°r
);

218 
ˇl
->
w‹kög_hours_xml_°r
 = 
	`sùe_xml_°rögify
(
node
);

219 
	`SIPE_DEBUG_INFO
("sipe_ews_process_avail_response: cal->working_hours_xml_str:\n%s",

220 
ˇl
->
w‹kög_hours_xml_°r
 ? cal->working_hours_xml_str : "");

222 
	`sùe_ˇl_evíts_‰ì
(
ˇl
->
ˇl_evíts
);

223 
ˇl
->
ˇl_evíts
 = 
NULL
;

225 
node
 = 
	`sùe_xml_chûd
(
ª•
, "FreeBusyView/CalendarEventArray/CalendarEvent");

226 
node
;

227 
node
 = 
	`sùe_xml_twö
(node))

229 *
tmp
;

247 
sùe_ˇl_evít
 *
ˇl_evít
 = 
	`g_√w0
(sipe_cal_event, 1);

248 
ˇl
->
ˇl_evíts
 = 
	`g_¶i°_≠≥nd
(ˇl->ˇl_evíts, 
ˇl_evít
);

250 
tmp
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "StartTime"));

251 
ˇl_evít
->
°¨t_time
 = 
	`sùe_utûs_°r_to_time
(
tmp
);

252 
	`g_‰ì
(
tmp
);

254 
tmp
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "EndTime"));

255 
ˇl_evít
->
íd_time
 = 
	`sùe_utûs_°r_to_time
(
tmp
);

256 
	`g_‰ì
(
tmp
);

258 
tmp
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "BusyType"));

259 i‡(
	`sùe_°ªquÆ
("Fªe", 
tmp
)) {

260 
ˇl_evít
->
ˇl_°©us
 = 
SIPE_CAL_FREE
;

261 } i‡(
	`sùe_°ªquÆ
("Tíètive", 
tmp
)) {

262 
ˇl_evít
->
ˇl_°©us
 = 
SIPE_CAL_TENTATIVE
;

263 } i‡(
	`sùe_°ªquÆ
("Busy", 
tmp
)) {

264 
ˇl_evít
->
ˇl_°©us
 = 
SIPE_CAL_BUSY
;

265 } i‡(
	`sùe_°ªquÆ
("OOF", 
tmp
)) {

266 
ˇl_evít
->
ˇl_°©us
 = 
SIPE_CAL_OOF
;

268 
ˇl_evít
->
ˇl_°©us
 = 
SIPE_CAL_NO_DATA
;

270 
	`g_‰ì
(
tmp
);

272 
ˇl_evít
->
subje˘
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "CalendarEventDetails/Subject"));

273 
ˇl_evít
->
loˇti⁄
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "CalendarEventDetails/Location"));

275 
tmp
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "CalendarEventDetails/IsMeeting"));

276 
ˇl_evít
->
is_mìtög
 = 
tmp
 ? 
	`sùe_°ªquÆ
—mp, "åue"Ë: 
TRUE
;

277 
	`g_‰ì
(
tmp
);

280 
	`sùe_xml_‰ì
(
xml
);

282 
ˇl
->
°©e
 = 
SIPE_EWS_STATE_AVAILABILITY_SUCCESS
;

283 
	`sùe_ews_run_°©e_machöe
(
ˇl
);

286 i‡(
ªtu∫_code
 < 0) {

287 
ˇl
->
hâp_c⁄n
 = 
NULL
;

289 
ˇl
->
°©e
 = 
SIPE_EWS_STATE_AVAILABILITY_FAILURE
;

290 
	`sùe_ews_run_°©e_machöe
(
ˇl
);

292 
	}
}

295 
	$sùe_ews_¥o˚ss_oof_ª•⁄£
(
ªtu∫_code
,

296 c⁄° *
body
,

297 
SIPE_UNUSED_PARAMETER
 c⁄° *
c⁄ã¡_ty≥
,

298 
HâpC⁄n
 *
c⁄n
,

299 *
d©a
)

301 
sùe_ˇÀnd¨
 *
ˇl
 = 
d©a
;

303 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_ews_process_oof_response: cb started.");

305 
	`hâp_c⁄n_£t_˛o£
(
c⁄n
);

306 
ˇl
->
hâp_c⁄n
 = 
NULL
;

308 i‡(
ªtu∫_code
 =200 && 
body
) {

309 *
ﬁd_nŸe
;

310 c⁄° 
sùe_xml
 *
ª•
;

311 c⁄° 
sùe_xml
 *
xn_duøti⁄
;

313 
sùe_xml
 *
xml
 = 
	`sùe_xml_∑r£
(
body
, 
	`°æí
(body));

320 
ª•
 = 
	`sùe_xml_chûd
(
xml
, "Body/GetUserOofSettingsResponse");

321 i‡(!
ª•
) ;

322 i‡(!
	`sùe_°ªquÆ
(
	`sùe_xml_©åibuã
(
	`sùe_xml_chûd
(
ª•
, "ResponseMessage"), "ResponseClass"), "Success")) {

326 
	`g_‰ì
(
ˇl
->
oof_°©e
);

327 
ˇl
->
oof_°©e
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
ª•
, "OofSettings/OofState"));

329 
ﬁd_nŸe
 = 
ˇl
->
oof_nŸe
;

330 
ˇl
->
oof_nŸe
 = 
NULL
;

331 i‡(!
	`sùe_°ªquÆ
(
ˇl
->
oof_°©e
, "Disabled")) {

332 *
tmp
 = 
	`sùe_xml_d©a
(

333 
	`sùe_xml_chûd
(
ª•
, "OofSettings/InternalReply/Message"));

334 *
html
;

337 i‡(
	`g_°r_has_¥efix
(
tmp
, "\xEF\xBB\xBF")) {

338 
html
 = 
	`g_°rdup
(
tmp
+3);

340 
html
 = 
	`g_°rdup
(
tmp
);

342 
	`g_‰ì
(
tmp
);

343 
tmp
 = 
	`g_°r°rù
(
	`sùe_backíd_m¨kup_°rù_html
(
html
));

344 
	`g_‰ì
(
html
);

345 
ˇl
->
oof_nŸe
 = 
	`g_m¨kup_esˇ≥_ãxt
(
tmp
, -1);

346 
	`g_‰ì
(
tmp
);

349 i‡(
	`sùe_°ªquÆ
(
ˇl
->
oof_°©e
, "Scheduled")

350 && (
xn_duøti⁄
 = 
	`sùe_xml_chûd
(
ª•
, "OofSettings/Duration")))

352 *
tmp
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
xn_duøti⁄
, "StartTime"));

353 
ˇl
->
oof_°¨t
 = 
	`sùe_utûs_°r_to_time
(
tmp
);

354 
	`g_‰ì
(
tmp
);

356 
tmp
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
xn_duøti⁄
, "EndTime"));

357 
ˇl
->
oof_íd
 = 
	`sùe_utûs_°r_to_time
(
tmp
);

358 
	`g_‰ì
(
tmp
);

361 i‡(!
	`sùe_°ªquÆ
(
ﬁd_nŸe
, 
ˇl
->
oof_nŸe
)) {

362 
ˇl
->
upd©ed
 = 
	`time
(
NULL
);

363 
ˇl
->
published
 = 
FALSE
;

365 
	`g_‰ì
(
ﬁd_nŸe
);

367 
	`sùe_xml_‰ì
(
xml
);

369 
ˇl
->
°©e
 = 
SIPE_EWS_STATE_OOF_SUCCESS
;

370 
	`sùe_ews_run_°©e_machöe
(
ˇl
);

373 i‡(
ªtu∫_code
 < 0) {

374 
ˇl
->
hâp_c⁄n
 = 
NULL
;

376 
ˇl
->
°©e
 = 
SIPE_EWS_STATE_OOF_FAILURE
;

377 
	`sùe_ews_run_°©e_machöe
(
ˇl
);

379 
	}
}

382 
	$sùe_ews_¥o˚ss_autodiscovî
(
ªtu∫_code
,

383 c⁄° *
body
,

384 
SIPE_UNUSED_PARAMETER
 c⁄° *
c⁄ã¡_ty≥
,

385 
HâpC⁄n
 *
c⁄n
,

386 *
d©a
)

388 
sùe_ˇÀnd¨
 *
ˇl
 = 
d©a
;

390 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_ews_process_autodiscover: cb started.");

392 
	`hâp_c⁄n_£t_˛o£
(
c⁄n
);

393 
ˇl
->
hâp_c⁄n
 = 
NULL
;

395 i‡(
ªtu∫_code
 =200 && 
body
) {

396 c⁄° 
sùe_xml
 *
node
;

398 
sùe_xml
 *
xml
 = 
	`sùe_xml_∑r£
(
body
, 
	`°æí
(body));

401 
ˇl
->
Àgacy_dn
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
xml
, "Response/User/LegacyDN"));

402 
ˇl
->
Àgacy_dn
 = cÆ->Àgacy_d¿? 
	`g_°r°rù
(ˇl->Àgacy_dnË: 
NULL
;

405 
node
 = 
	`sùe_xml_chûd
(
xml
, "Response/Account/Protocol");

406 
node
;

407 
node
 = 
	`sùe_xml_twö
(node))

409 *
ty≥
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "Type"));

410 i‡(
	`sùe_°ªquÆ
("EXCH", 
ty≥
)) {

411 
ˇl
->
as_uæ
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "ASUrl"));

412 
ˇl
->
oof_uæ
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "OOFUrl"));

413 
ˇl
->
ﬂb_uæ
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "OABUrl"));

415 
	`SIPE_DEBUG_INFO
("sipe_ews_process_autodiscover:as_url %s",

416 
ˇl
->
as_uæ
 ? cal->as_url : "");

417 
	`SIPE_DEBUG_INFO
("sipe_ews_process_autodiscover:oof_url %s",

418 
ˇl
->
oof_uæ
 ? cal->oof_url : "");

419 
	`SIPE_DEBUG_INFO
("sipe_ews_process_autodiscover:oab_url %s",

420 
ˇl
->
ﬂb_uæ
 ? cal->oab_url : "");

422 
	`g_‰ì
(
ty≥
);

425 
	`g_‰ì
(
ty≥
);

430 
	`sùe_xml_‰ì
(
xml
);

432 
ˇl
->
°©e
 = 
SIPE_EWS_STATE_AUTODISCOVER_SUCCESS
;

433 
	`sùe_ews_run_°©e_machöe
(
ˇl
);

436 i‡(
ªtu∫_code
 < 0) {

437 
ˇl
->
hâp_c⁄n
 = 
NULL
;

439 
ˇl
->
auto_disco_mëhod
) {

441 
ˇl
->
°©e
 = 
SIPE_EWS_STATE_AUTODISCOVER_1_FAILURE
; ;

443 
ˇl
->
°©e
 = 
SIPE_EWS_STATE_AUTODISCOVER_2_FAILURE
; ;

445 
	`sùe_ews_run_°©e_machöe
(
ˇl
);

447 
	}
}

450 
	$sùe_ews_do_autodiscovî
(
sùe_ˇÀnd¨
 *
ˇl
,

451 c⁄° * 
autodiscovî_uæ
)

453 *
body
;

455 
	`SIPE_DEBUG_INFO
("sùe_ews_do_autodiscovî: goögáutodiscovî uæ=%s", 
autodiscovî_uæ
 ?áutodiscover_url : "");

457 
body
 = 
	`g_°rdup_¥ötf
(
SIPE_EWS_AUTODISCOVER_REQUEST
, 
ˇl
->
emaû
);

458 
ˇl
->
hâp_c⁄n
 = 
	`hâp_c⁄n_¸óã
(

459 
ˇl
->
sù
->
public
,

460 
NULL
,

461 
HTTP_CONN_POST
,

462 
HTTP_CONN_SSL
,

463 
HTTP_CONN_ALLOW_REDIRECT
,

464 
autodiscovî_uæ
,

465 
body
,

467 
ˇl
->
auth
,

468 
sùe_ews_¥o˚ss_autodiscovî
,

469 
ˇl
);

470 
	`g_‰ì
(
body
);

471 
	}
}

474 
	$sùe_ews_do_avaû_ªque°
(
sùe_ˇÀnd¨
 *
ˇl
)

476 i‡(
ˇl
->
as_uæ
) {

477 *
body
;

478 
time_t
 
íd
;

479 
time_t
 
now
 = 
	`time
(
NULL
);

480 *
°¨t_°r
;

481 *
íd_°r
;

482 
tm
 *
now_tm
;

484 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_ews_do_avail_request: going AvailabilityÑeq.");

486 
now_tm
 = 
	`gmtime
(&
now
);

488 
now_tm
->
tm_£c
 = 0;

489 
now_tm
->
tm_mö
 = 0;

490 
now_tm
->
tm_hour
 = 0;

491 
ˇl
->
fb_°¨t
 = 
	`sùe_mktime_tz
(
now_tm
, "UTC");

492 
ˇl
->
fb_°¨t
 -= 24*60*60;

494 
íd
 = 
ˇl
->
fb_°¨t
 + 
SIPE_FREE_BUSY_PERIOD_SEC
 - 1;

496 
°¨t_°r
 = 
	`sùe_utûs_time_to_°r
(
ˇl
->
fb_°¨t
);

497 
íd_°r
 = 
	`sùe_utûs_time_to_°r
(
íd
);

499 
body
 = 
	`g_°rdup_¥ötf
(
SIPE_EWS_USER_AVAILABILITY_REQUEST
, 
ˇl
->
emaû
, 
°¨t_°r
, 
íd_°r
);

500 
ˇl
->
hâp_c⁄n
 = 
	`hâp_c⁄n_¸óã
(

501 
ˇl
->
sù
->
public
,

502 
NULL
,

503 
HTTP_CONN_POST
,

504 
HTTP_CONN_SSL
,

505 
HTTP_CONN_ALLOW_REDIRECT
,

506 
ˇl
->
as_uæ
,

507 
body
,

509 
ˇl
->
auth
,

510 
sùe_ews_¥o˚ss_avaû_ª•⁄£
,

511 
ˇl
);

512 
	`g_‰ì
(
body
);

513 
	`g_‰ì
(
°¨t_°r
);

514 
	`g_‰ì
(
íd_°r
);

516 
	}
}

519 
	$sùe_ews_do_oof_ªque°
(
sùe_ˇÀnd¨
 *
ˇl
)

521 i‡(
ˇl
->
oof_uæ
) {

522 *
body
;

523 c⁄° *
c⁄ã¡_ty≥
 = "text/xml; charset=UTF-8";

525 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_ews_do_oof_request: going OOFÑeq.");

527 
body
 = 
	`g_°rdup_¥ötf
(
SIPE_EWS_USER_OOF_SETTINGS_REQUEST
, 
ˇl
->
emaû
);

528 i‡(!
ˇl
->
hâp_c⁄n
 || 
	`hâp_c⁄n_is_˛o£d
(cal->http_conn)) {

529 
ˇl
->
hâp_c⁄n
 = 
	`hâp_c⁄n_¸óã
(ˇl->
sù
->
public
,

530 
NULL
,

531 
HTTP_CONN_POST
,

532 
HTTP_CONN_SSL
,

533 
HTTP_CONN_ALLOW_REDIRECT
,

534 
ˇl
->
oof_uæ
,

535 
body
,

536 
c⁄ã¡_ty≥
,

537 
ˇl
->
auth
,

538 
sùe_ews_¥o˚ss_oof_ª•⁄£
,

539 
ˇl
);

541 
	`hâp_c⁄n_£nd
(
ˇl
->
hâp_c⁄n
,

542 
HTTP_CONN_POST
,

543 
ˇl
->
oof_uæ
,

544 
body
,

545 
c⁄ã¡_ty≥
,

546 
sùe_ews_¥o˚ss_oof_ª•⁄£
,

547 
ˇl
);

549 
	`g_‰ì
(
body
);

551 
	}
}

554 
	$sùe_ews_run_°©e_machöe
(
sùe_ˇÀnd¨
 *
ˇl
)

556 
ˇl
->
°©e
) {

557 
SIPE_EWS_STATE_NONE
:

559 *
maûdomaö
 = 
	`°r°r
(
ˇl
->
emaû
, "@") + 1;

560 *
autodisc_uæ
 = 
	`g_°rdup_¥ötf
("hâps://Autodiscovî.%s/Autodiscovî/Autodiscovî.xml", 
maûdomaö
);

562 
ˇl
->
auto_disco_mëhod
 = 1;

564 
	`sùe_ews_do_autodiscovî
(
ˇl
, 
autodisc_uæ
);

566 
	`g_‰ì
(
autodisc_uæ
);

569 
SIPE_EWS_STATE_AUTODISCOVER_1_FAILURE
:

571 *
maûdomaö
 = 
	`°r°r
(
ˇl
->
emaû
, "@") + 1;

572 *
autodisc_uæ
 = 
	`g_°rdup_¥ötf
("hâps://%s/Autodiscovî/Autodiscovî.xml", 
maûdomaö
);

574 
ˇl
->
auto_disco_mëhod
 = 2;

576 
	`sùe_ews_do_autodiscovî
(
ˇl
, 
autodisc_uæ
);

578 
	`g_‰ì
(
autodisc_uæ
);

581 
SIPE_EWS_STATE_AUTODISCOVER_2_FAILURE
:

582 
SIPE_EWS_STATE_AVAILABILITY_FAILURE
:

583 
SIPE_EWS_STATE_OOF_FAILURE
:

584 
ˇl
->
is_ews_dißbÀd
 = 
TRUE
;

586 
SIPE_EWS_STATE_AUTODISCOVER_SUCCESS
:

587 
	`sùe_ews_do_avaû_ªque°
(
ˇl
);

589 
SIPE_EWS_STATE_AVAILABILITY_SUCCESS
:

590 
	`sùe_ews_do_oof_ªque°
(
ˇl
);

592 
SIPE_EWS_STATE_OOF_SUCCESS
:

593 
ˇl
->
°©e
 = 
SIPE_EWS_STATE_AUTODISCOVER_SUCCESS
;

594 
ˇl
->
is_upd©ed
 = 
TRUE
;

595 i‡(
ˇl
->
sù
->
ocs2007
) {

597 
	`publish_ˇÀnd¨_°©us_£lf
(
ˇl
->
sù
->
¥iv©e
,

598 
NULL
);

601 
	`£nd_¥e£n˚_sﬂp
(
ˇl
->
sù
, 
TRUE
);

605 
	}
}

608 
	$sùe_ews_upd©e_ˇÀnd¨
(
sùe_accou¡_d©a
 *
sù
)

611 
gboﬁón
 
has_uæ
;

613 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_ews_update_calendar: started.");

615 i‡(
	`sùe_ˇl_ˇÀnd¨_öô
(
sù
, &
has_uæ
)) {

616 i‡(
has_uæ
) {

617 
sù
->
ˇl
->
°©e
 = 
SIPE_EWS_STATE_AUTODISCOVER_SUCCESS
;

621 i‡(
sù
->
ˇl
->
is_ews_dißbÀd
) {

622 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_ews_update_calendar: disabled,Éxiting.");

626 
	`sùe_ews_run_°©e_machöe
(
sù
->
ˇl
);

628 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_ews_update_calendar: finished.");

629 
	}
}

	@src/core/sipe-ews.h

31 
	ghâp_c⁄n_auth
;

32 
	ghâp_c⁄n_°ru˘
;

33 
	gsùe_accou¡_d©a
;

34 
	g_PuΩÀAccou¡
;

35 
	gsùe_ˇÀnd¨
;

45 
sùe_ews_upd©e_ˇÀnd¨
(
sùe_accou¡_d©a
 *
sù
);

52 
sùe_ews_gë_oof_nŸe
(
sùe_ˇÀnd¨
 *
ˇl
);

	@src/core/sipe-ft.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~"c⁄fig.h
"

28 
	~<°rög.h
>

29 
	~<f˙é.h
>

30 
	~<î∫o.h
>

31 
	~<time.h
>

33 
	~<glib.h
>

34 
	~<glib/g¥ötf.h
>

36 
	~"c⁄√˘i⁄.h
"

37 
	~"evíéo›.h
"

38 
	~"·.h
"

39 
	~"√tw‹k.h
"

40 
	~"ªque°.h
"

42 #ifde‡
_WIN32


44 
	~"libc_öãrÁ˚.h
"

45 
	~<n•≠i.h
>

47 
	~<sys/ty≥s.h
>

48 
	~<sys/sockë.h
>

49 
	~<√töë/ö.h
>

50 
	~<√t/if.h
>

51 
	~<¨∑/öë.h
>

52 #ifde‡
HAVE_SYS_SOCKIO_H


53 
	~<sys/sockio.h
>

57 
	~"c‹e-dïuΩÀ.h
"

59 
	~"sùe-comm⁄.h
"

60 
	~"sùmsg.h
"

61 
	~"sù-å™•‹t.h
"

62 
	~"sùe-backíd.h
"

63 
	~"sùe-c‹e.h
"

64 
	~"sùe-c‹e-¥iv©e.h
"

65 
	~"sùe-¸y±.h
"

66 
	~"sùe-dülog.h
"

67 
	~"sùe-dige°.h
"

68 
	~"sùe-∆s.h
"

69 
	~"sùe-·.h
"

70 
	~"sùe-£ssi⁄.h
"

71 
	~"sùe-utûs.h
"

72 
	~"sùe.h
"

74 
	#SIPE_FT_KEY_LENGTH
 24

	)

75 
	#SIPE_FT_CHUNK_HEADER_LENGTH
 3

	)

87 
	#SIPE_FT_TCP_PORT_MIN
 6891

	)

88 
	#SIPE_FT_TCP_PORT_MAX
 6901

	)

90 
	s_sùe_fûe_å™s„r
 {

91 
guch¨
 
	mí¸y±i⁄_key
[
SIPE_FT_KEY_LENGTH
];

92 
guch¨
 
	mhash_key
[
SIPE_FT_KEY_LENGTH
];

93 
gch¨
 *
	mövô©i⁄_cookõ
;

94 
	mauth_cookõ
;

95 
sùe_accou¡_d©a
 *
	msù
;

96 
sù_dülog
 *
	mdülog
;

97 
gpoöãr
 
	mcùhî_c⁄ãxt
;

98 
gpoöãr
 
	mhmac_c⁄ãxt
;

100 
PuΩÀNëw‹kLi°íD©a
 *
	mli°íî
;

101 
	mli°ífd
;

103 
gsize
 
	mbyãs_ªmaöög_chunk
;

104 
guch¨
* 
	mí¸y±ed_outbuf
;

105 
guch¨
* 
	moutbuf_±r
;

106 
gsize
 
	moutbuf_size
;

108 
_sùe_fûe_å™s„r
 
	tsùe_fûe_å™s„r
;

110 
£nd_fûëøns„r_ac˚±
(
PuΩÀX„r
* 
x„r
);

111 
£nd_fûëøns„r_ˇn˚l
(
PuΩÀX„r
* 
x„r
);

112 
ssize_t
 
do_ªad
(
PuΩÀX„r
 *
x„r
, 
guch¨
 *
buf
, 
size_t
 
Àn
);

113 
gboﬁón
 
ªad_fuŒy
(
PuΩÀX„r
 *
x„r
, 
guch¨
 *
buf
, 
size_t
 
Àn
);

114 
gssize
 
ªad_löe
(
PuΩÀX„r
 *
x„r
, 
gch¨
 *
buf„r
, gssizê
size
);

115 
gpoöãr
 
sùe_cùhî_c⁄ãxt_öô
(c⁄° 
guch¨
 *
íc_key
);

116 
gpoöãr
 
sùe_hmac_c⁄ãxt_öô
(c⁄° 
guch¨
 *
hash_key
);

117 
gch¨
 *
sùe_hmac_föÆize
(
gpoöãr
 
hmac_c⁄ãxt
);

118 
gíî©e_key
(
guch¨
 *
buf„r
, 
gsize
 
size
);

119 
£t_sockë_n⁄block
(
fd
, 
gboﬁón
 
°©e
);

120 
sùe_·_li°í_sockë_¸óãd
(
li°ífd
, 
gpoöãr
 
d©a
);

127 
	$sùe_·_öcomög_öô
(
PuΩÀX„r
 *
x„r
)

129 
	`£nd_fûëøns„r_ac˚±
(
x„r
);

130 
	}
}

133 
	$sùe_·_‰ì_x„r_°ru˘
(
PuΩÀX„r
 *
x„r
)

135 
sùe_fûe_å™s„r
 *
·
 = 
x„r
->
d©a
;

136 i‡(
·
) {

137 
sùe_accou¡_d©a
 *
sù
 = 
PURPLE_XFER_TO_SIPE_ACCOUNT_DATA
;

139 
	`g_hash_èbÀ_ªmove
(
sù
->
fûëøns„rs
,
·
->
övô©i⁄_cookõ
);

141 i‡(
x„r
->
w©chî
) {

142 
	`puΩÀ_öput_ªmove
(
x„r
->
w©chî
);

143 
x„r
->
w©chî
 = 0;

145 i‡(
·
->
li°ífd
 >= 0) {

146 
	`SIPE_DEBUG_INFO
("sùe_·_‰ì_x„r_°ru˘: closögÜi°íög sockë %d", 
·
->
li°ífd
);

147 
	`˛o£
(
·
->
li°ífd
);

149 i‡(
·
->
li°íî
)

150 
	`puΩÀ_√tw‹k_li°í_ˇn˚l
(
·
->
li°íî
);

151 i‡(
·
->
cùhî_c⁄ãxt
)

152 
	`sùe_¸y±_·_de°roy
(
·
->
cùhî_c⁄ãxt
);

154 i‡(
·
->
hmac_c⁄ãxt
)

155 
	`sùe_dige°_·_de°roy
(
·
->
hmac_c⁄ãxt
);

157 
	`g_‰ì
(
·
->
í¸y±ed_outbuf
);

158 
	`g_‰ì
(
·
->
övô©i⁄_cookõ
);

159 
	`g_‰ì
(
·
);

160 
x„r
->
d©a
 = 
NULL
;

162 
	}
}

165 
	$sùe_·_ªque°_díõd
(
PuΩÀX„r
 *
x„r
)

167 i‡(
x„r
->
ty≥
 =
PURPLE_XFER_RECEIVE
)

168 
	`£nd_fûëøns„r_ˇn˚l
(
x„r
);

169 
	`sùe_·_‰ì_x„r_°ru˘
(
x„r
);

170 
	}
}

173 
	$øi£_·_îr‹
(
PuΩÀX„r
 *
x„r
, c⁄° *
îrmsg
)

175 
	`puΩÀ_x„r_îr‹
(
	`puΩÀ_x„r_gë_ty≥
(
x„r
),

176 
x„r
->
accou¡
, x„r->
who
,

177 
îrmsg
);

178 
	}
}

181 
	$øi£_·_°ªº‹
(
PuΩÀX„r
 *
x„r
, c⁄° *
îrmsg
)

183 
gch¨
 *
tmp
 = 
	`g_°rdup_¥ötf
("%s: %s", 
îrmsg
, 
	`°ªº‹
(
î∫o
));

184 
	`øi£_·_îr‹
(
x„r
, 
tmp
);

185 
	`g_‰ì
(
tmp
);

186 
	}
}

189 
	$øi£_·_îr‹_™d_ˇn˚l
(
PuΩÀX„r
 *
x„r
, c⁄° *
îrmsg
)

191 
	`øi£_·_îr‹
(
x„r
, 
îrmsg
);

192 
	`puΩÀ_x„r_ˇn˚l_loˇl
(
x„r
);

193 
	}
}

196 
	$øi£_·_sockë_ªad_îr‹_™d_ˇn˚l
(
PuΩÀX„r
 *
x„r
)

198 
	`øi£_·_îr‹_™d_ˇn˚l
(
x„r
, 
	`_
("SocketÑead failed"));

199 
	}
}

202 
	$øi£_·_sockë_wrôe_îr‹_™d_ˇn˚l
(
PuΩÀX„r
 *
x„r
)

204 
	`øi£_·_îr‹_™d_ˇn˚l
(
x„r
, 
	`_
("Socket write failed"));

205 
	}
}

208 
	$sùe_·_öcomög_°¨t
(
PuΩÀX„r
 *
x„r
)

210 
sùe_fûe_å™s„r
 *
·
;

211 c⁄° 
gch¨
 
VER
[] = "VER MSN_SECURE_FTP\r\n";

212 c⁄° 
gch¨
 
TFR
[] = "TFR\r\n";

213 c⁄° 
gsize
 
BUFFER_SIZE
 = 50;

214 
gch¨
 
buf
[
BUFFER_SIZE
];

215 
sùe_accou¡_d©a
 *
sù
;

216 
gch¨
* 
ªque°
;

217 c⁄° 
gsize
 
FILE_SIZE_OFFSET
 = 4;

218 
gsize
 
fûe_size
;

220 
·
 = 
x„r
->
d©a
;

222 i‡(
	`wrôe
(
x„r
->
fd
,
VER
,
	`°æí
(VER)) == -1) {

223 
	`øi£_·_sockë_wrôe_îr‹_™d_ˇn˚l
(
x„r
);

226 i‡(
	`ªad_löe
(
x„r
, 
buf
, 
BUFFER_SIZE
) < 0) {

227 
	`øi£_·_sockë_ªad_îr‹_™d_ˇn˚l
(
x„r
);

231 
sù
 = 
PURPLE_XFER_TO_SIPE_ACCOUNT_DATA
;

233 
ªque°
 = 
	`g_°rdup_¥ötf
("USR %†%u\r\n", 
sù
->
u£∫ame
, 
·
->
auth_cookõ
);

234 i‡(
	`wrôe
(
x„r
->
fd
,
ªque°
,
	`°æí
(request)) == -1) {

235 
	`øi£_·_sockë_wrôe_îr‹_™d_ˇn˚l
(
x„r
);

236 
	`g_‰ì
(
ªque°
);

239 
	`g_‰ì
(
ªque°
);

241 i‡(
	`ªad_löe
(
x„r
, 
buf
, 
BUFFER_SIZE
) < 0) {

242 
	`øi£_·_sockë_ªad_îr‹_™d_ˇn˚l
(
x„r
);

246 
fûe_size
 = 
	`g_ascii_°πouŒ
(
buf
 + 
FILE_SIZE_OFFSET
,
NULL
,10);

247 i‡(
fûe_size
 !
x„r
->
size
) {

248 
	`øi£_·_îr‹_™d_ˇn˚l
(
x„r
,

249 
	`_
("File size is different fromÅheádvertised value."));

253 i‡(
	`wrôe
(
x„r
->
fd
,
TFR
,
	`°æí
(TFR)) == -1) {

254 
	`øi£_·_sockë_wrôe_îr‹_™d_ˇn˚l
(
x„r
);

258 
·
->
byãs_ªmaöög_chunk
 = 0;

260 
·
->
cùhî_c⁄ãxt
 = 
	`sùe_cùhî_c⁄ãxt_öô
(·->
í¸y±i⁄_key
);

261 
·
->
hmac_c⁄ãxt
 = 
	`sùe_hmac_c⁄ãxt_öô
(·->
hash_key
);

262 
	}
}

265 
	$sùe_·_öcomög_°›
(
PuΩÀX„r
 *
x„r
)

267 c⁄° 
gch¨
 
BYE
[] = "BYE 16777989\r\n";

268 
gsize
 
BUFFER_SIZE
 = 50;

269 
buf„r
[
BUFFER_SIZE
];

270 c⁄° 
gssize
 
MAC_OFFSET
 = 4;

271 c⁄° 
gssize
 
CRLF_LEN
 = 2;

272 
gssize
 
macLí
;

273 
sùe_fûe_å™s„r
 *
·
;

274 
gch¨
 *
mac
;

275 
gch¨
 *
mac1
;

277 i‡(
	`wrôe
(
x„r
->
fd
,
BYE
,
	`°æí
(BYE)) == -1) {

278 
	`øi£_·_sockë_wrôe_îr‹_™d_ˇn˚l
(
x„r
);

282 
macLí
 = 
	`ªad_löe
(
x„r
, 
buf„r
, 
BUFFER_SIZE
);

284 i‡(
macLí
 < 0) {

285 
	`øi£_·_sockë_ªad_îr‹_™d_ˇn˚l
(
x„r
);

287 } i‡(
macLí
 < (
MAC_OFFSET
 + 
CRLF_LEN
)) {

288 
	`øi£_·_îr‹_™d_ˇn˚l
(
x„r
, 
	`_
("Received MAC is corrupted"));

293 
·
 = 
x„r
->
d©a
;

294 
mac
 = 
	`g_°∫dup
(
buf„r
 + 
MAC_OFFSET
, 
macLí
 - MAC_OFFSET - 
CRLF_LEN
);

295 
mac1
 = 
	`sùe_hmac_föÆize
(
·
->
hmac_c⁄ãxt
);

296 i‡(!
	`sùe_°ªquÆ
(
mac
, 
mac1
)) {

297 
	`u∆ök
(
x„r
->
loˇl_fûíame
);

298 
	`øi£_·_îr‹_™d_ˇn˚l
(
x„r
,

299 
	`_
("Received file is corrupted"));

301 
	`g_‰ì
(
mac1
);

302 
	`g_‰ì
(
mac
);

304 
	`sùe_·_‰ì_x„r_°ru˘
(
x„r
);

305 
	}
}

307 
gssize


308 
	$sùe_·_ªad
(
guch¨
 **
buf„r
, 
PuΩÀX„r
 *
x„r
)

310 
gsize
 
byãs_to_ªad
;

311 
ssize_t
 
byãs_ªad
;

313 
sùe_fûe_å™s„r
 *
·
 = 
x„r
->
d©a
;

315 i‡(
·
->
byãs_ªmaöög_chunk
 == 0) {

316 
guch¨
 
hdr_buf
[
SIPE_FT_CHUNK_HEADER_LENGTH
];

319 i‡(!
	`ªad_fuŒy
(
x„r
, 
hdr_buf
, (hdr_buf))) {

320 
	`øi£_·_°ªº‹
(
x„r
, 
	`_
("SocketÑead failed"));

332 
·
->
byãs_ªmaöög_chunk
 = 
hdr_buf
[1] + (hdr_buf[2] << 8);

335 
byãs_to_ªad
 = 
	`MIN
(
	`puΩÀ_x„r_gë_byãs_ªmaöög
(
x„r
),

336 
x„r
->
cuºít_buf„r_size
);

337 
byãs_to_ªad
 = 
	`MIN
(byãs_to_ªad, 
·
->
byãs_ªmaöög_chunk
);

339 *
buf„r
 = 
	`g_mÆloc
(
byãs_to_ªad
);

340 i‡(!*
buf„r
) {

341 
	`øi£_·_îr‹
(
x„r
, 
	`_
("Out of memory"));

342 
	`SIPE_DEBUG_ERROR
("sùe_·_ªad: c™'àÆloˇã %" 
G_GSIZE_FORMAT
 " bytes forÑeceive buffer",

343 
byãs_to_ªad
);

347 
byãs_ªad
 = 
	`do_ªad
(
x„r
, *
buf„r
, 
byãs_to_ªad
);

348 i‡(
byãs_ªad
 < 0) {

349 
	`øi£_·_°ªº‹
(
x„r
, 
	`_
("SocketÑead failed"));

353 i‡(
byãs_ªad
 > 0) {

354 
guch¨
 *
de¸y±ed
 = 
	`g_mÆloc
(
byãs_ªad
);

356 i‡(!
de¸y±ed
) {

357 
	`øi£_·_îr‹
(
x„r
, 
	`_
("Out of memory"));

358 
	`SIPE_DEBUG_ERROR
("sùe_·_ªad: c™'àÆloˇã %" 
G_GSIZE_FORMAT
 " bytes for decryption buffer",

359 (
gsize
)
byãs_ªad
);

360 
	`g_‰ì
(*
buf„r
);

361 *
buf„r
 = 
NULL
;

364 
	`sùe_¸y±_·_°ªam
(
·
->
cùhî_c⁄ãxt
, *
buf„r
, 
byãs_ªad
, 
de¸y±ed
);

365 
	`g_‰ì
(*
buf„r
);

366 *
buf„r
 = 
de¸y±ed
;

368 
	`sùe_dige°_·_upd©e
(
·
->
hmac_c⁄ãxt
, 
de¸y±ed
, 
byãs_ªad
);

370 
·
->
byãs_ªmaöög_chunk
 -
byãs_ªad
;

373  
byãs_ªad
;

374 
	}
}

376 
gssize


377 
	$sùe_·_wrôe
(c⁄° 
guch¨
 *
buf„r
, 
size_t
 
size
, 
PuΩÀX„r
 *
x„r
)

379 
ssize_t
 
byãs_wrôãn
;

380 
sùe_fûe_å™s„r
 *
·
 = 
x„r
->
d©a
;

385 c⁄° 
gsize
 
DEFAULT_BLOCK_SIZE
 = 2045;

386 i‡(
size
 > 
DEFAULT_BLOCK_SIZE
)

387 
size
 = 
DEFAULT_BLOCK_SIZE
;

389 i‡(
·
->
byãs_ªmaöög_chunk
 == 0) {

390 
ssize_t
 
byãs_ªad
;

391 
guch¨
 
loˇl_buf
[16];

392 
guch¨
 
hdr_buf
[
SIPE_FT_CHUNK_HEADER_LENGTH
];

394 
	`mem£t
(
loˇl_buf
, 0, Üocal_buf);

397 
byãs_ªad
 = 
	`ªad
(
x„r
->
fd
,
loˇl_buf
, (local_buf));

398 i‡(
byãs_ªad
 =-1 && 
î∫o
 !
EAGAIN
) {

399 
	`øi£_·_°ªº‹
(
x„r
, 
	`_
("SocketÑead failed"));

401 } i‡(
byãs_ªad
 > 0

402 && (
	`g_°r_has_¥efix
((
gch¨
*)
loˇl_buf
,"CCL\r\n")

403 || 
	`g_°r_has_¥efix
((
gch¨
*)
loˇl_buf
,"BYE 2164261682\r\n"))) {

407 i‡(
·
->
outbuf_size
 < 
size
) {

408 
	`g_‰ì
(
·
->
í¸y±ed_outbuf
);

409 
·
->
outbuf_size
 = 
size
;

410 
·
->
í¸y±ed_outbuf
 = 
	`g_mÆloc
(·->
outbuf_size
);

411 i‡(!
·
->
í¸y±ed_outbuf
) {

412 
	`øi£_·_îr‹
(
x„r
, 
	`_
("Out of memory"));

413 
	`SIPE_DEBUG_ERROR
("sùe_·_wrôe: c™'àÆloˇã %" 
G_GSIZE_FORMAT
 " bytes for send buffer",

414 
·
->
outbuf_size
);

419 
·
->
byãs_ªmaöög_chunk
 = 
size
;

420 
·
->
outbuf_±r
 = ft->
í¸y±ed_outbuf
;

421 
	`sùe_¸y±_·_°ªam
(
·
->
cùhî_c⁄ãxt
, 
buf„r
, 
size
,

422 
·
->
í¸y±ed_outbuf
);

423 
	`sùe_dige°_·_upd©e
(
·
->
hmac_c⁄ãxt
, 
buf„r
, 
size
);

433 
hdr_buf
[0] = 0;

434 
hdr_buf
[1] = (
·
->
byãs_ªmaöög_chunk
 & 0x00FF);

435 
hdr_buf
[2] = (
·
->
byãs_ªmaöög_chunk
 & 0xFF00) >> 8;

438 i‡(
	`wrôe
(
x„r
->
fd
, 
hdr_buf
, (hdr_buf)) == -1) {

439 
	`øi£_·_°ªº‹
(
x„r
, 
	`_
("Socket write failed"));

444 
byãs_wrôãn
 = 
	`wrôe
(
x„r
->
fd
, 
·
->
outbuf_±r
, ft->
byãs_ªmaöög_chunk
);

445 i‡(
byãs_wrôãn
 == -1) {

446 i‡(
î∫o
 =
EAGAIN
)

447 
byãs_wrôãn
 = 0;

449 
	`øi£_·_°ªº‹
(
x„r
, 
	`_
("Socket write failed"));

453 i‡(
byãs_wrôãn
 > 0) {

454 
·
->
byãs_ªmaöög_chunk
 -
byãs_wrôãn
;

455 
·
->
outbuf_±r
 +
byãs_wrôãn
;

458 i‡((
x„r
->
byãs_ªmaöög
 - 
byãs_wrôãn
) == 0)

459 
	`puΩÀ_x„r_£t_com∂ëed
(
x„r
, 
TRUE
);

461  
byãs_wrôãn
;

462 
	}
}

465 
	$sùe_·_outgoög_öô
(
PuΩÀX„r
 *
x„r
)

467 
sù_dülog
 *
dülog
;

468 
sùe_fûe_å™s„r
 *
·
 = 
x„r
->
d©a
;

470 
gch¨
 *
body
 = 
	`g_°rdup_¥ötf
("Application-Name: File Transfer\r\n"

478 
·
->
övô©i⁄_cookõ
,

479 
	`puΩÀ_x„r_gë_fûíame
(
x„r
),

480 (Ë
	`puΩÀ_x„r_gë_size
(
x„r
));

482 
sùe_accou¡_d©a
 *
sù
 = 
PURPLE_XFER_TO_SIPE_ACCOUNT_DATA
;

483 
sù_£ssi⁄
 *
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_‹_add_im
(
sù
, 
x„r
->
who
);

485 
	`g_hash_èbÀ_ö£π
(
sù
->
fûëøns„rs
,
	`g_°rdup
(
·
->
övô©i⁄_cookõ
),
x„r
);

488 
	`sùe_£ssi⁄_íqueue_mesßge
(
£ssi⁄
, 
body
, "text/x-msmsgsinvite");

490 
dülog
 = 
	`sùe_dülog_föd
(
£ssi⁄
, 
x„r
->
who
);

491 i‡(
dülog
 && !dülog->
outgoög_övôe
) {

492 
·
->
dülog
 = dialog;

493 
	`sùe_im_¥o˚ss_queue
(
sù
, 
£ssi⁄
);

494 } i‡(!
dülog
 || !dülog->
outgoög_övôe
) {

496 
	`sùe_övôe
(
sù
, 
£ssi⁄
, 
x„r
->
who
, 
body
, "ãxt/x-msmsgsövôe", 
NULL
, 
FALSE
);

499 
	`g_‰ì
(
body
);

500 
	}
}

503 
	$sùe_·_outgoög_°¨t
(
PuΩÀX„r
 *
x„r
)

505 
sùe_fûe_å™s„r
 *
·
;

506 c⁄° 
gch¨
 
VER
[] = "VER MSN_SECURE_FTP\r\n";

507 c⁄° 
gsize
 
BUFFER_SIZE
 = 50;

508 
gch¨
 
buf
[
BUFFER_SIZE
];

509 
gch¨
** 
∑πs
;

510 
auth_cookõ_ª˚ived
;

511 
gboﬁón
 
u£rs_m©ch
;

512 
gch¨
 *
tmp
;

513 
ssize_t
 
byãs_wrôãn
;

515 
	`£t_sockë_n⁄block
(
x„r
->
fd
, 
TRUE
);

517 
·
 = 
x„r
->
d©a
;

519 i‡(
	`ªad_löe
(
x„r
, 
buf
, 
BUFFER_SIZE
) < 0) {

520 
	`øi£_·_sockë_ªad_îr‹_™d_ˇn˚l
(
x„r
);

524 i‡(!
	`sùe_°ªquÆ
(
buf
,
VER
)) {

525 
	`øi£_·_îr‹_™d_ˇn˚l
(
x„r
,
	`_
("FileÅransfer initialization failed."));

526 
	`SIPE_DEBUG_INFO
("FileÅransfer VER string incorrect,Ñeceived: %sÉxpected: %s",

527 
buf
, 
VER
);

531 i‡(
	`wrôe
(
x„r
->
fd
,
VER
,
	`°æí
(VER)) == -1) {

532 
	`øi£_·_sockë_wrôe_îr‹_™d_ˇn˚l
(
x„r
);

536 i‡(
	`ªad_löe
(
x„r
, 
buf
, 
BUFFER_SIZE
) < 0) {

537 
	`øi£_·_sockë_ªad_îr‹_™d_ˇn˚l
(
x„r
);

541 
∑πs
 = 
	`g_°r•lô
(
buf
, " ", 3);

543 
auth_cookõ_ª˚ived
 = 
	`g_ascii_°πouŒ
(
∑πs
[2],
NULL
,10);

546 
u£rs_m©ch
 = 
	`sùe_°rˇ£_equÆ
(
∑πs
[1], (
x„r
->
who
 + 4));

547 
	`g_°r‰ìv
(
∑πs
);

549 
	`SIPE_DEBUG_INFO
("FileÅransferáuthentication: %s Expected: USR %s %u",

550 
buf
, 
x„r
->
who
 + 4, 
·
->
auth_cookõ
);

552 i‡(!
u£rs_m©ch
 || (
·
->
auth_cookõ
 !
auth_cookõ_ª˚ived
)) {

553 
	`øi£_·_îr‹_™d_ˇn˚l
(
x„r
,

554 
	`_
("FileÅransferáuthentication failed."));

558 
tmp
 = 
	`g_°rdup_¥ötf
("FIL %lu\r\n",(Ë
x„r
->
size
);

559 
byãs_wrôãn
 = 
	`wrôe
(
x„r
->
fd
, 
tmp
, 
	`°æí
(tmp));

560 
	`g_‰ì
(
tmp
);

562 i‡(
byãs_wrôãn
 == -1) {

563 
	`øi£_·_sockë_wrôe_îr‹_™d_ˇn˚l
(
x„r
);

568 i‡(
	`ªad_löe
(
x„r
,
buf
,
BUFFER_SIZE
) < 0) {

569 
	`øi£_·_sockë_ªad_îr‹_™d_ˇn˚l
(
x„r
);

573 
·
->
byãs_ªmaöög_chunk
 = 0;

575 
·
->
cùhî_c⁄ãxt
 = 
	`sùe_cùhî_c⁄ãxt_öô
(·->
í¸y±i⁄_key
);

576 
·
->
hmac_c⁄ãxt
 = 
	`sùe_hmac_c⁄ãxt_öô
(·->
hash_key
);

577 
	}
}

580 
	$sùe_·_outgoög_°›
(
PuΩÀX„r
 *
x„r
)

582 
sùe_fûe_å™s„r
 *
·
 = 
x„r
->
d©a
;

583 
gsize
 
BUFFER_SIZE
 = 50;

584 
buf„r
[
BUFFER_SIZE
];

585 
gch¨
 *
mac
;

586 
gsize
 
mac_°æí
;

589 i‡(
	`ªad_löe
(
x„r
, 
buf„r
, 
BUFFER_SIZE
) < 0) {

590 
	`øi£_·_sockë_ªad_îr‹_™d_ˇn˚l
(
x„r
);

594 
mac
 = 
	`sùe_hmac_föÆize
(
·
->
hmac_c⁄ãxt
);

595 
	`g_•rötf
(
buf„r
, "MAC %†\r\n", 
mac
);

596 
	`g_‰ì
(
mac
);

598 
mac_°æí
 = 
	`°æí
(
buf„r
);

600 
buf„r
[
mac_°æí
 - 3] = 0;

602 i‡(
	`wrôe
(
x„r
->
fd
,
buf„r
,
mac_°æí
) == -1) {

603 
	`øi£_·_sockë_wrôe_îr‹_™d_ˇn˚l
(
x„r
);

607 
	`sùe_·_‰ì_x„r_°ru˘
(
x„r
);

608 
	}
}

612 
	$sùe_·_öcomög_å™s„r
(
PuΩÀAccou¡
 *
accou¡
, 
sùmsg
 *
msg
, c⁄° 
GSLi°
 *
body
)

614 
PuΩÀX„r
 *
x„r
;

615 
sùe_accou¡_d©a
 *
sù
 = 
PURPLE_ACCOUNT_TO_SIPE_ACCOUNT_DATA
;

616 c⁄° 
gch¨
 *
ˇŒid
 = 
	`sùmsg_föd_hódî
(
msg
, "Call-ID");

617 
sù_£ssi⁄
 *
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_ch©_by_ˇŒid
(
sù
, 
ˇŒid
);

618 i‡(!
£ssi⁄
) {

619 
gch¨
 *
‰om
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, "From"));

620 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_im
(
sù
, 
‰om
);

621 
	`g_‰ì
(
‰om
);

624 i‡(!
£ssi⁄
) {

625 
	`SIPE_DEBUG_ERROR_NOFORMAT
("sipe_ft_incoming_transfer: can't find session forÑemoteÖarty");

629 
x„r
 = 
	`puΩÀ_x„r_√w
(
accou¡
, 
PURPLE_XFER_RECEIVE
, 
£ssi⁄
->
wôh
);

631 i‡(
x„r
) {

632 
size_t
 
fûe_size
;

633 
sùe_fûe_å™s„r
 *
·
 = 
	`g_√w0
(sipe_file_transfer, 1);

634 
·
->
övô©i⁄_cookõ
 = 
	`g_°rdup
(
	`sùe_utûs_«mevÆ_föd
(
body
, "Invitation-Cookie"));

635 
·
->
sù
 = sip;

636 
·
->
dülog
 = 
	`sùe_dülog_föd
(
£ssi⁄
, sessi⁄->
wôh
);

637 
·
->
li°ífd
 = -1;

638 
	`gíî©e_key
(
·
->
í¸y±i⁄_key
, 
SIPE_FT_KEY_LENGTH
);

639 
	`gíî©e_key
(
·
->
hash_key
, 
SIPE_FT_KEY_LENGTH
);

640 
x„r
->
d©a
 = 
·
;

642 
	`puΩÀ_x„r_£t_fûíame
(
x„r
, 
	`sùe_utûs_«mevÆ_föd
(
body
, "Application-File"));

644 
fûe_size
 = 
	`g_ascii_°πouŒ
(
	`sùe_utûs_«mevÆ_föd
(
body
, "Aµliˇti⁄-FûeSize"),
NULL
,10);

645 
	`puΩÀ_x„r_£t_size
(
x„r
, 
fûe_size
);

647 
	`puΩÀ_x„r_£t_öô_‚c
(
x„r
, 
sùe_·_öcomög_öô
);

648 
	`puΩÀ_x„r_£t_°¨t_‚c
(
x„r
,
sùe_·_öcomög_°¨t
);

649 
	`puΩÀ_x„r_£t_íd_‚c
(
x„r
,
sùe_·_öcomög_°›
);

650 
	`puΩÀ_x„r_£t_ªque°_díõd_‚c
(
x„r
, 
sùe_·_ªque°_díõd
);

651 
	`puΩÀ_x„r_£t_ªad_‚c
(
x„r
,
sùe_·_ªad
);

652 
	`puΩÀ_x„r_£t_ˇn˚l_£nd_‚c
(
x„r
,
sùe_·_‰ì_x„r_°ru˘
);

653 
	`puΩÀ_x„r_£t_ˇn˚l_ªcv_‚c
(
x„r
,
sùe_·_‰ì_x„r_°ru˘
);

655 
	`g_hash_èbÀ_ö£π
(
sù
->
fûëøns„rs
,
	`g_°rdup
(
·
->
övô©i⁄_cookõ
),
x„r
);

657 
	`puΩÀ_x„r_ªque°
(
x„r
);

659 
	}
}

661 
	$sùe_·_öcomög_ac˚±
(
PuΩÀAccou¡
 *
accou¡
, c⁄° 
GSLi°
 *
body
)

663 
sùe_accou¡_d©a
 *
sù
 = 
PURPLE_ACCOUNT_TO_SIPE_ACCOUNT_DATA
;

664 c⁄° 
gch¨
 *
öv_cookõ
 = 
	`sùe_utûs_«mevÆ_föd
(
body
, "Invitation-Cookie");

665 
PuΩÀX„r
 *
x„r
 = 
	`g_hash_èbÀ_lookup
(
sù
->
fûëøns„rs
,
öv_cookõ
);

667 i‡(
x„r
) {

668 c⁄° 
gch¨
 *
ù
 = 
	`sùe_utûs_«mevÆ_föd
(
body
, "IP-Address");

669 c⁄° 
gch¨
 *
p‹t_°r
 = 
	`sùe_utûs_«mevÆ_föd
(
body
, "Port");

670 c⁄° 
gch¨
 *
auth_cookõ
 = 
	`sùe_utûs_«mevÆ_föd
(
body
, "AuthCookie");

671 c⁄° 
gch¨
 *
íc_key_b64
 = 
	`sùe_utûs_«mevÆ_föd
(
body
, "Encryption-Key");

672 c⁄° 
gch¨
 *
hash_key_b64
 = 
	`sùe_utûs_«mevÆ_föd
(
body
, "Hash-Key");

674 
sùe_fûe_å™s„r
 *
·
 = 
x„r
->
d©a
;

676 i‡(
auth_cookõ
)

677 
·
->
auth_cookõ
 = 
	`g_ascii_°πouŒ
◊uth_cookõ,
NULL
,10);

678 i‡(
íc_key_b64
) {

679 
gsize
 
ªt_Àn
;

680 
guch¨
 *
íc_key
 = 
	`g_ba£64_decode
(
íc_key_b64
, &
ªt_Àn
);

681 i‡(
ªt_Àn
 =
SIPE_FT_KEY_LENGTH
) {

682 
	`mem˝y
(
·
->
í¸y±i⁄_key
,
íc_key
,
SIPE_FT_KEY_LENGTH
);

684 
	`øi£_·_îr‹_™d_ˇn˚l
(
x„r
,

685 
	`_
("ReceivedÉncryption key has wrong size."));

686 
	`g_‰ì
(
íc_key
);

689 
	`g_‰ì
(
íc_key
);

691 i‡(
hash_key_b64
) {

692 
gsize
 
ªt_Àn
;

693 
guch¨
 *
hash_key
 = 
	`g_ba£64_decode
(
hash_key_b64
, &
ªt_Àn
);

694 i‡(
ªt_Àn
 =
SIPE_FT_KEY_LENGTH
) {

695 
	`mem˝y
(
·
->
hash_key
,hash_key,
SIPE_FT_KEY_LENGTH
);

697 
	`øi£_·_îr‹_™d_ˇn˚l
(
x„r
,

698 
	`_
("Received hash key has wrong size."));

699 
	`g_‰ì
(
hash_key
);

702 
	`g_‰ì
(
hash_key
);

705 i‡(
ù
 && 
p‹t_°r
) {

706 
	`puΩÀ_x„r_°¨t
(
x„r
, -1, 
ù
, 
	`g_ascii_°πouŒ
(
p‹t_°r
,
NULL
,10));

708 
·
->
li°íî
 = 
	`puΩÀ_√tw‹k_li°í_ønge
(
SIPE_FT_TCP_PORT_MIN
,

709 
SIPE_FT_TCP_PORT_MAX
,

710 
SOCK_STREAM
,

711 
sùe_·_li°í_sockë_¸óãd
,

712 
x„r
);

713 i‡(!
·
->
li°íî
) {

714 
	`øi£_·_îr‹_™d_ˇn˚l
(
x„r
,

715 
	`_
("CouldÇot createÜisten socket"));

720 
	}
}

722 
	$sùe_·_öcomög_ˇn˚l
(
PuΩÀAccou¡
 *
accou¡
, 
GSLi°
 *
body
)

724 
gch¨
 *
öv_cookõ
 = 
	`g_°rdup
(
	`sùe_utûs_«mevÆ_föd
(
body
, "Invitation-Cookie"));

726 
sùe_accou¡_d©a
 *
sù
 = 
PURPLE_ACCOUNT_TO_SIPE_ACCOUNT_DATA
;

727 
PuΩÀX„r
 *
x„r
 = 
	`g_hash_èbÀ_lookup
(
sù
->
fûëøns„rs
,
öv_cookõ
);

729 
	`puΩÀ_x„r_ˇn˚l_ªmŸe
(
x„r
);

730 
	}
}

732 
	$£nd_fûëøns„r_ac˚±
(
PuΩÀX„r
* 
x„r
)

734 
sùe_fûe_å™s„r
* 
·
 = 
x„r
->
d©a
;

735 
sù_dülog
 *
dülog
 = 
·
->dialog;

737 
gch¨
 *
b64_í¸y±i⁄_key
 = 
	`g_ba£64_ícode
(
·
->
í¸y±i⁄_key
, 24);

738 
gch¨
 *
b64_hash_key
 = 
	`g_ba£64_ícode
(
·
->
hash_key
, 24);

740 
gch¨
 *
body
 = 
	`g_°rdup_¥ötf
("Invitation-Command: ACCEPT\r\n"

750 
·
->
övô©i⁄_cookõ
,

751 
b64_í¸y±i⁄_key
,

752 
b64_hash_key


756 
	`£nd_sù_ªque°
(
·
->
sù
->
¥iv©e
, "MESSAGE", 
dülog
->
wôh
, dialog->with,

758 
body
, 
dülog
, 
NULL
);

760 
	`g_‰ì
(
body
);

761 
	`g_‰ì
(
b64_í¸y±i⁄_key
);

762 
	`g_‰ì
(
b64_hash_key
);

763 
	}
}

765 
	$£nd_fûëøns„r_ˇn˚l
(
PuΩÀX„r
* 
x„r
) {

766 
sùe_fûe_å™s„r
* 
·
 = 
x„r
->
d©a
;

767 
sù_dülog
* 
dülog
 = 
·
->dialog;

769 
gch¨
 *
body
 = 
	`g_°rdup_¥ötf
("Invitation-Command: CANCEL\r\n"

772 
·
->
övô©i⁄_cookõ
);

774 
	`£nd_sù_ªque°
(
·
->
sù
->
¥iv©e
, "MESSAGE", 
dülog
->
wôh
, dialog->with,

776 
body
, 
dülog
, 
NULL
);

778 
	`g_‰ì
(
body
);

779 
	}
}

781 
ssize_t


782 
	$do_ªad
(
PuΩÀX„r
 *
x„r
, 
guch¨
 *
buf
, 
size_t
 
Àn
)

784 
ssize_t
 
byãs_ªad
 = 
	`ªad
(
x„r
->
fd
, 
buf
, 
Àn
);

785 i‡(
byãs_ªad
 == 0) {

788 } i‡(
byãs_ªad
 == -1) {

789 i‡(
î∫o
 =
EAGAIN
)

794  
byãs_ªad
;

795 
	}
}

797 
gboﬁón


798 
	$ªad_fuŒy
(
PuΩÀX„r
 *
x„r
, 
guch¨
 *
buf
, 
size_t
 
Àn
)

800 c⁄° 
gul⁄g
 
READ_TIMEOUT
 = 10000000;

801 
gul⁄g
 
time_•ít
 = 0;

803 
Àn
) {

804 
ssize_t
 
byãs_ªad
 = 
	`do_ªad
(
x„r
, 
buf
, 
Àn
);

805 i‡(
byãs_ªad
 == 0) {

806 
	`g_u¶ìp
(100000);

807 
time_•ít
 += 100000;

808 } i‡(
byãs_ªad
 < 0 || 
time_•ít
 > 
READ_TIMEOUT
) {

809  
FALSE
;

811 
Àn
 -
byãs_ªad
;

812 
buf
 +
byãs_ªad
;

813 
time_•ít
 = 0;

816  
TRUE
;

817 
	}
}

819 
gssize
 
	$ªad_löe
(
PuΩÀX„r
 *
x„r
, 
gch¨
 *
buf„r
, 
gssize
 
size
)

821 
gssize
 
pos
 = 0;

823 
	`mem£t
(
buf„r
,0,
size
);

825 i‡(!
	`ªad_fuŒy
(
x„r
, (
guch¨
*Ë
buf„r
 + 
pos
, 1))

827 } 
buf„r
[
pos
] !'\n' && ++po†!(
size
 - 1));

829 i‡(
pos
 =(
size
 - 1Ë&& 
buf„r
[pos - 1] != '\n') {

834  
pos
;

835 
	}
}

837 
gpoöãr
 
	$sùe_cùhî_c⁄ãxt_öô
(c⁄° 
guch¨
 *
íc_key
)

847 
guch¨
 
k2
[
SIPE_DIGEST_SHA1_LENGTH
];

850 
	`sùe_dige°_sha1
(
íc_key
, 
SIPE_FT_KEY_LENGTH
, 
k2
);

853  
	`sùe_¸y±_·_°¨t
(
k2
);

854 
	}
}

856 
gpoöãr
 
	$sùe_hmac_c⁄ãxt_öô
(c⁄° 
guch¨
 *
hash_key
)

866 
guch¨
 
k2
[
SIPE_DIGEST_SHA1_LENGTH
];

869 
	`sùe_dige°_sha1
(
hash_key
, 
SIPE_FT_KEY_LENGTH
, 
k2
);

872  
	`sùe_dige°_·_°¨t
(
k2
);

873 
	}
}

875 
gch¨
* 
	$sùe_hmac_föÆize
(
gpoöãr
 
hmac_c⁄ãxt
)

877 
guch¨
 
hmac_dige°
[
SIPE_DIGEST_FILETRANSFER_LENGTH
];

880 
	`sùe_dige°_·_íd
(
hmac_c⁄ãxt
, 
hmac_dige°
);

882  
	`g_ba£64_ícode
(
hmac_dige°
,  (hmac_digest));

883 
	}
}

885 
	$gíî©e_key
(
guch¨
 *
buf„r
, 
gsize
 
size
)

887 
gsize
 
i
;

888 
i
 = 0; i !
size
; ++i)

889 
buf„r
[
i
] = 
	`ønd
();

890 
	}
}

892 
	$£t_sockë_n⁄block
(
fd
, 
gboﬁón
 
°©e
)

894 
Êags
 = 
	`f˙é
(
fd
, 
F_GETFL
, 0);

895 i‡(
Êags
 == -1)

896 
Êags
 = 0;

898 i‡(
°©e
 =
TRUE
)

899 
	`f˙é
(
fd
, 
F_SETFL
, 
Êags
 | 
O_NONBLOCK
);

901 
	`f˙é
(
fd
, 
F_SETFL
, 
Êags
 & ~
O_NONBLOCK
);

902 
	}
}

904 
	$sùe_·_£nd_fûe
(
PuΩÀC⁄√˘i⁄
 *
gc
, c⁄° *
who
, c⁄° *
fûe
)

906 
PuΩÀX„r
 *
x„r
 = 
	`sùe_·_√w_x„r
(
gc
, 
who
);

908 i‡(
x„r
) {

909 i‡(
fûe
 !
NULL
)

910 
	`puΩÀ_x„r_ªque°_ac˚±ed
(
x„r
, 
fûe
);

912 
	`puΩÀ_x„r_ªque°
(
x„r
);

914 
	}
}

916 
PuΩÀX„r
 * 
	$sùe_·_√w_x„r
(
PuΩÀC⁄√˘i⁄
 *
gc
, c⁄° *
who
)

918 
PuΩÀX„r
 *
x„r
 = 
NULL
;

920 i‡(
	`PURPLE_CONNECTION_IS_VALID
(
gc
)) {

921 
x„r
 = 
	`puΩÀ_x„r_√w
(
	`puΩÀ_c⁄√˘i⁄_gë_accou¡
(
gc
),

922 
PURPLE_XFER_SEND
, 
who
);

924 i‡(
x„r
) {

925 
sùe_accou¡_d©a
 *
sù
 = 
PURPLE_GC_TO_SIPE_ACCOUNT_DATA
;

927 
sùe_fûe_å™s„r
 *
·
 = 
	`g_√w0
(sipe_file_transfer, 1);

928 
·
->
övô©i⁄_cookõ
 = 
	`g_°rdup_¥ötf
("%u", 
	`ønd
() % 1000000000);

929 
·
->
sù
 = sip;

931 
x„r
->
d©a
 = 
·
;

933 
	`puΩÀ_x„r_£t_öô_‚c
(
x„r
, 
sùe_·_outgoög_öô
);

934 
	`puΩÀ_x„r_£t_°¨t_‚c
(
x„r
, 
sùe_·_outgoög_°¨t
);

935 
	`puΩÀ_x„r_£t_íd_‚c
(
x„r
, 
sùe_·_outgoög_°›
);

936 
	`puΩÀ_x„r_£t_ªque°_díõd_‚c
(
x„r
, 
sùe_·_ªque°_díõd
);

937 
	`puΩÀ_x„r_£t_wrôe_‚c
(
x„r
, 
sùe_·_wrôe
);

938 
	`puΩÀ_x„r_£t_ˇn˚l_£nd_‚c
(
x„r
, 
sùe_·_‰ì_x„r_°ru˘
);

939 
	`puΩÀ_x„r_£t_ˇn˚l_ªcv_‚c
(
x„r
, 
sùe_·_‰ì_x„r_°ru˘
);

943  
x„r
;

944 
	}
}

947 
	$sùe_·_˛õ¡_c⁄√˘ed
(
gpoöãr
 
p_x„r
, 
göt
 
li°ífd
,

948 
SIPE_UNUSED_PARAMETER
 
PuΩÀI≈utC⁄dôi⁄
 
c⁄d
)

950 
sockaddr_ö
 
ßddr
;

951 
sockÀn_t
 
¶í
 =  (
ßddr
);

953 
fd
 = 
	`ac˚±
(
li°ífd
, (
sockaddr
*)&
ßddr
, &
¶í
);

955 
PuΩÀX„r
 *
x„r
 = 
p_x„r
;

956 
sùe_fûe_å™s„r
 *
·
 = 
x„r
->
d©a
;

958 
	`puΩÀ_öput_ªmove
(
x„r
->
w©chî
);

959 
x„r
->
w©chî
 = 0;

960 
	`˛o£
(
li°ífd
);

961 
·
->
li°ífd
 = -1;

963 i‡(
fd
 < 0) {

964 
	`øi£_·_sockë_ªad_îr‹_™d_ˇn˚l
(
x„r
);

966 
	`puΩÀ_x„r_°¨t
(
x„r
, 
fd
, 
NULL
, 0);

968 
	}
}

971 
	$sùe_·_li°í_sockë_¸óãd
(
li°ífd
, 
gpoöãr
 
d©a
)

973 
gch¨
 *
body
;

974 
PuΩÀX„r
 *
x„r
 = 
d©a
;

975 
sùe_fûe_å™s„r
 *
·
 = 
x„r
->
d©a
;

977 
sockaddr_ö
 
addr
;

979 
sockÀn_t
 
sockÀn
 =  (
addr
);

981 
·
->
li°íî
 = 
NULL
;

982 
·
->
li°ífd
 =Üistenfd;

984 
	`gësock«me
(
li°ífd
, (
sockaddr
*)&
addr
, &
sockÀn
);

986 
x„r
->
w©chî
 = 
	`puΩÀ_öput_add
(
li°ífd
, 
PURPLE_INPUT_READ
,

987 
sùe_·_˛õ¡_c⁄√˘ed
, 
x„r
);

989 
·
->
auth_cookõ
 = 
	`ønd
() % 1000000000;

991 
body
 = 
	`g_°rdup_¥ötf
("Invitation-Command: ACCEPT\r\n"

998 
·
->
övô©i⁄_cookõ
,

999 
	`sùe_utûs_gë_suôabÀ_loˇl_ù
(
li°ífd
),

1000 
	`¡ohs
(
addr
.
sö_p‹t
),

1001 
·
->
auth_cookõ
);

1003 i‡(!
·
->
dülog
) {

1004 
sùe_accou¡_d©a
 *
sù
 = 
PURPLE_XFER_TO_SIPE_ACCOUNT_DATA
;

1005 
sù_£ssi⁄
 *
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_‹_add_im
(
sù
, 
x„r
->
who
);

1006 
·
->
dülog
 = 
	`sùe_dülog_föd
(
£ssi⁄
, 
x„r
->
who
);

1009 i‡(
·
->
dülog
) {

1010 
	`£nd_sù_ªque°
(
·
->
sù
->
¥iv©e
, "MESSAGE", ft->
dülog
->
wôh
, ft->dialog->with,

1012 
body
, 
·
->
dülog
, 
NULL
);

1014 
	`g_‰ì
(
body
);

1015 
	}
}

1017 
GSLi°
 * 
	$sùe_·_∑r£_msg_body
(c⁄° 
gch¨
 *
body
)

1019 
GSLi°
 *
li°
 = 
NULL
;

1020 
gch¨
 **
löes
 = 
	`g_°r•lô
(
body
, "\r\n", 0);

1021 i‡(
	`sùe_utûs_∑r£_löes
(&
li°
, 
löes
, ":"Ë=
FALSE
) {

1022 
	`sùe_utûs_«mevÆ_‰ì
(
li°
);

1023 
li°
 = 
NULL
;

1025 
	`g_°r‰ìv
(
löes
);

1026  
li°
;

1027 
	}
}

	@src/core/sipe-ft.h

31 
	gsùmsg
;

32 
	g_PuΩÀAccou¡
;

44 
sùe_·_öcomög_å™s„r
(
_PuΩÀAccou¡
 *
accou¡
, 
sùmsg
 *
msg
, c⁄° 
GSLi°
 *
body
);

54 
sùe_·_öcomög_ac˚±
(
_PuΩÀAccou¡
 *
accou¡
, c⁄° 
GSLi°
 *
body
);

63 
sùe_·_öcomög_ˇn˚l
(
_PuΩÀAccou¡
 *
accou¡
, 
GSLi°
 *
body
);

73 
GSLi°
 * 
sùe_·_∑r£_msg_body
(c⁄° 
gch¨
 *
body
);

	@src/core/sipe-media.c

23 #ifde‡
HAVE_CONFIG_H


24 
	~"c⁄fig.h
"

27 
	~<°dio.h
>

28 
	~<°dlib.h
>

30 
	~<glib.h
>

32 
	~"sùe-comm⁄.h
"

33 
	~"sùmsg.h
"

34 
	~"sù-å™•‹t.h
"

35 
	~"sùe-backíd.h
"

36 
	~"sùe-c‹e.h
"

37 
	~"sùe-c‹e-¥iv©e.h
"

38 
	~"sùe-dülog.h
"

39 
	~"sùe-medü.h
"

40 
	~"sùe-£ssi⁄.h
"

41 
	~"sùe-utûs.h
"

42 
	~"sùe.h
"

44 
gch¨
 *

45 
	$sùe_medü_gë_ˇŒid
(
sùe_medü_ˇŒ
 *
ˇŒ
)

47  
ˇŒ
->
dülog
->
ˇŒid
;

48 
	}
}

50 
	$sùe_medü_codec_li°_‰ì
(
GLi°
 *
codecs
)

52 ; 
codecs
; codec†
	`g_li°_dñëe_lök
(codecs, codecs))

53 
	`sùe_backíd_codec_‰ì
(
codecs
->
d©a
);

54 
	}
}

56 
	$sùe_medü_ˇndid©e_li°_‰ì
(
GLi°
 *
ˇndid©es
)

58 ; 
ˇndid©es
; c™did©e†
	`g_li°_dñëe_lök
(candidates, candidates))

59 
	`sùe_backíd_ˇndid©e_‰ì
(
ˇndid©es
->
d©a
);

60 
	}
}

63 
	$sùe_medü_ˇŒ_‰ì
(
sùe_medü_ˇŒ
 *
ˇŒ
)

65 i‡(
ˇŒ
) {

66 
	`sùe_utûs_«mevÆ_‰ì
(
ˇŒ
->
sdp_©ås
);

67 i‡(
ˇŒ
->
övô©i⁄
)

68 
	`sùmsg_‰ì
(
ˇŒ
->
övô©i⁄
);

69 
	`sùe_medü_codec_li°_‰ì
(
ˇŒ
->
ªmŸe_codecs
);

70 
	`sùe_medü_ˇndid©e_li°_‰ì
(
ˇŒ
->
ªmŸe_ˇndid©es
);

71 
	`g_‰ì
(
ˇŒ
);

73 
	}
}

74 
GLi°
 *

75 
	$sùe_medü_∑r£_video_codecs
(
GSLi°
 *
sdp_©ås
)

77 
i
 = 0;

78 c⁄° 
gch¨
 *
©å
;

79 
GLi°
 *
codecs
 = 
NULL
;

81 
	`¥ötf
("\nPARSING VIDEO CODECS\n");

82 (
©å
 = 
	`sùe_utûs_«mevÆ_föd_ö°™˚
(
sdp_©ås
, "πpm≠", 
i
++))) {

83 
gch¨
 **
tokís
 = 
	`g_°r•lô_£t
(
©å
, " /", 3);

85 
id
 = 
	`©oi
(
tokís
[0]);

86 
gch¨
 *
«me
 = 
tokís
[1];

87 
˛ock_øã
 = 
	`©oi
(
tokís
[2]);

88 
SùeMedüTy≥
 
ty≥
 = 
SIPE_MEDIA_VIDEO
;

90 
sùe_codec
 *
codec
 = 
	`sùe_backíd_codec_√w
(
id
, 
«me
, 
˛ock_øã
, 
ty≥
);

93 
j
 = 0;

94 c⁄° 
gch¨
* 
∑øms
;

95 (
∑øms
 = 
	`sùe_utûs_«mevÆ_föd_ö°™˚
(
sdp_©ås
, "fmç", 
j
++))) {

96 
gch¨
 **
tokís
 = 
	`g_°r•lô_£t
(
∑øms
, " ", 0);

97 
gch¨
 **
√xt
 = 
tokís
 + 1;

99 i‡(
	`©oi
(
tokís
[0]Ë=
id
) {

100 *
√xt
) {

101 
gch¨
 
«me
[50];

102 
gch¨
 
vÆue
[50];

104 i‡(
	`ssˇnf
(*
√xt
, "%[a-zA-Z0-9]=%s", 
«me
, 
vÆue
) == 2)

105 
	`sùe_backíd_codec_add_›ti⁄Æ_∑ømëî
(
codec
, 
«me
, 
vÆue
);

107 ++
√xt
;

111 
	`g_°r‰ìv
(
tokís
);

114 
codecs
 = 
	`g_li°_≠≥nd
(codecs, 
codec
);

115 
	`g_°r‰ìv
(
tokís
);

118  
codecs
;

119 
	}
}

121 
GLi°
 *

122 
	$sùe_medü_∑r£_codecs
(
GSLi°
 *
sdp_©ås
)

124 
i
 = 0;

125 c⁄° 
gch¨
 *
©å
;

126 
GLi°
 *
codecs
 = 
NULL
;

128 
	`¥ötf
("\n\nPARSING AUDIO CODECS\n\n");

129 (
©å
 = 
	`sùe_utûs_«mevÆ_föd_ö°™˚
(
sdp_©ås
, "πpm≠", 
i
++))) {

130 
gch¨
 **
tokís
 = 
	`g_°r•lô_£t
(
©å
, " /", 3);

132 
id
 = 
	`©oi
(
tokís
[0]);

133 
gch¨
 *
«me
 = 
tokís
[1];

134 
˛ock_øã
 = 
	`©oi
(
tokís
[2]);

135 
SùeMedüTy≥
 
ty≥
 = 
SIPE_MEDIA_AUDIO
;

137 
sùe_codec
 *
codec
 = 
	`sùe_backíd_codec_√w
(
id
, 
«me
, 
˛ock_øã
, 
ty≥
);

140 
j
 = 0;

141 c⁄° 
gch¨
* 
∑øms
;

142 (
∑øms
 = 
	`sùe_utûs_«mevÆ_föd_ö°™˚
(
sdp_©ås
, "fmç", 
j
++))) {

143 
gch¨
 **
tokís
 = 
	`g_°r•lô_£t
(
∑øms
, " ", 0);

144 
gch¨
 **
√xt
 = 
tokís
 + 1;

146 i‡(
	`©oi
(
tokís
[0]Ë=
id
) {

147 *
√xt
) {

148 
gch¨
 
«me
[50];

149 
gch¨
 
vÆue
[50];

151 i‡(
	`ssˇnf
(*
√xt
, "%[a-zA-Z0-9]=%s", 
«me
, 
vÆue
) == 2)

152 
	`sùe_backíd_codec_add_›ti⁄Æ_∑ømëî
(
codec
, 
«me
, 
vÆue
);

154 ++
√xt
;

158 
	`g_°r‰ìv
(
tokís
);

161 
codecs
 = 
	`g_li°_≠≥nd
(codecs, 
codec
);

162 
	`g_°r‰ìv
(
tokís
);

165  
codecs
;

166 
	}
}

168 
göt


169 
	$codec_«me_com∑ª
(
sùe_codec
* 
codec1
, sùe_codec* 
codec2
)

171 
gch¨
 *
«me1
 = 
	`sùe_backíd_codec_gë_«me
(
codec1
);

172 
gch¨
 *
«me2
 = 
	`sùe_backíd_codec_gë_«me
(
codec2
);

174 
göt
 
ªsu…
 = 
	`g_°rcmp0
(
«me1
, 
«me2
);

176 
	`g_‰ì
(
«me1
);

177 
	`g_‰ì
(
«me2
);

179  
ªsu…
;

180 
	}
}

182 
GLi°
 *

183 
	$sùe_medü_¥u√_ªmŸe_codecs
(
GLi°
 *
loˇl_codecs
, GLi° *
ªmŸe_codecs
)

185 
GLi°
 *
ªmŸe_codecs_hód
 = 
ªmŸe_codecs
;

186 
GLi°
 *
¥u√d_codecs
 = 
NULL
;

188 
ªmŸe_codecs
) {

189 
sùe_codec
 *
c
 = 
ªmŸe_codecs
->
d©a
;

191 i‡(
	`g_li°_föd_cu°om
(
loˇl_codecs
, 
c
, (
GCom∑ªFunc
)
codec_«me_com∑ª
)) {

192 
¥u√d_codecs
 = 
	`g_li°_≠≥nd
’ru√d_codecs, 
c
);

193 
ªmŸe_codecs
->
d©a
 = 
NULL
;

195 
ªmŸe_codecs
 =ÑemŸe_codecs->
√xt
;

198 
	`sùe_medü_codec_li°_‰ì
(
ªmŸe_codecs_hód
);

200  
¥u√d_codecs
;

201 
	}
}

203 
GLi°
 *

204 
	$sùe_medü_∑r£_ªmŸe_ˇndid©es_Àgacy
(
gch¨
 *
ªmŸe_ù
, 
guöt16
 
ªmŸe_p‹t
)

206 
sùe_ˇndid©e
 *
ˇndid©e
;

207 
GLi°
 *
ˇndid©es
 = 
NULL
;

209 
ˇndid©e
 = 
	`sùe_backíd_ˇndid©e_√w
("foundation",

210 
SIPE_COMPONENT_RTP
,

211 
SIPE_CANDIDATE_TYPE_HOST
,

212 
SIPE_NETWORK_PROTOCOL_UDP
,

213 
ªmŸe_ù
, 
ªmŸe_p‹t
);

214 
ˇndid©es
 = 
	`g_li°_≠≥nd
(ˇndid©es, 
ˇndid©e
);

216 
ˇndid©e
 = 
	`sùe_backíd_ˇndid©e_√w
("foundation",

217 
SIPE_COMPONENT_RTCP
,

218 
SIPE_CANDIDATE_TYPE_HOST
,

219 
SIPE_NETWORK_PROTOCOL_UDP
,

220 
ªmŸe_ù
, 
ªmŸe_p‹t
 + 1);

221 
ˇndid©es
 = 
	`g_li°_≠≥nd
(ˇndid©es, 
ˇndid©e
);

223  
ˇndid©es
;

224 
	}
}

226 
GLi°
 *

227 
	$sùe_medü_∑r£_ªmŸe_ˇndid©es
(
GSLi°
 *
sdp_©ås
)

229 
sùe_ˇndid©e
 *
ˇndid©e
;

230 
GLi°
 *
ˇndid©es
 = 
NULL
;

231 c⁄° 
gch¨
 *
©å
;

232 
i
 = 0;

234 c⁄° 
gch¨
* 
u£∫ame
 = 
	`sùe_utûs_«mevÆ_föd
(
sdp_©ås
, "ice-ufrag");

235 c⁄° 
gch¨
* 
∑ssw‹d
 = 
	`sùe_utûs_«mevÆ_föd
(
sdp_©ås
, "ice-pwd");

237 (
©å
 = 
	`sùe_utûs_«mevÆ_föd_ö°™˚
(
sdp_©ås
, "ˇndid©e", 
i
++))) {

238 
gch¨
 **
tokís
;

239 
gch¨
 *
found©i⁄
;

240 
SùeComp⁄ítTy≥
 
comp⁄ít
;

241 
SùeNëw‹kPrŸocﬁ
 
¥Ÿocﬁ
;

242 
guöt32
 
¥i‹ôy
;

243 
gch¨
* 
ù
;

244 
guöt16
 
p‹t
;

245 
SùeC™did©eTy≥
 
ty≥
;

247 
tokís
 = 
	`g_°r•lô_£t
(
©å
, " ", 0);

249 
found©i⁄
 = 
tokís
[0];

251 
	`©oi
(
tokís
[1])) {

253 
comp⁄ít
 = 
SIPE_COMPONENT_RTP
;

256 
comp⁄ít
 = 
SIPE_COMPONENT_RTCP
;

259 
comp⁄ít
 = 
SIPE_COMPONENT_NONE
;

262 i‡(
	`sùe_°ªquÆ
(
tokís
[2], "UDP"))

263 
¥Ÿocﬁ
 = 
SIPE_NETWORK_PROTOCOL_UDP
;

266 
	`g_°r‰ìv
(
tokís
);

270 
¥i‹ôy
 = 
	`©oi
(
tokís
[3]);

271 
ù
 = 
tokís
[4];

272 
p‹t
 = 
	`©oi
(
tokís
[5]);

274 i‡(
	`sùe_°ªquÆ
(
tokís
[7], "host"))

275 
ty≥
 = 
SIPE_CANDIDATE_TYPE_HOST
;

276 i‡(
	`sùe_°ªquÆ
(
tokís
[7], "relay"))

277 
ty≥
 = 
SIPE_CANDIDATE_TYPE_RELAY
;

278 i‡(
	`sùe_°ªquÆ
(
tokís
[7], "srflx"))

279 
ty≥
 = 
SIPE_CANDIDATE_TYPE_SRFLX
;

281 
	`g_°r‰ìv
(
tokís
);

285 
ˇndid©e
 = 
	`sùe_backíd_ˇndid©e_√w
(
found©i⁄
, 
comp⁄ít
,

286 
ty≥
, 
¥Ÿocﬁ
, 
ù
, 
p‹t
);

287 
	`sùe_backíd_ˇndid©e_£t_¥i‹ôy
(
ˇndid©e
, 
¥i‹ôy
);

288 
ˇndid©es
 = 
	`g_li°_≠≥nd
(ˇndid©es, 
ˇndid©e
);

290 
	`g_°r‰ìv
(
tokís
);

293 i‡(
u£∫ame
) {

294 
GLi°
 *
ô
 = 
ˇndid©es
;

295 
ô
) {

296 
	`sùe_backíd_ˇndid©e_£t_u£∫ame_™d_pwd
(
ô
->
d©a
, 
u£∫ame
, 
∑ssw‹d
);

297 
ô
 = it->
√xt
;

301  
ˇndid©es
;

302 
	}
}

304 
gch¨
 *

305 
	$sùe_medü_sdp_codec_ids_f‹m©
(
GLi°
 *
codecs
)

307 
GSåög
 *
ªsu…
 = 
	`g_°rög_√w
(
NULL
);

309 
codecs
) {

310 
sùe_codec
 *
c
 = 
codecs
->
d©a
;

312 
gch¨
 *
«me
 = 
	`sùe_backíd_codec_gë_«me
(
c
);

313 
a
;

315 
a
=
	`°rcmp
(
«me
,"SIREN");

316 if(
a
==0)

318 
codecs
 = codecs->
√xt
;

323 
gch¨
 *
tmp
 = 
	`g_°rdup_¥ötf
(" %d", 
	`sùe_backíd_codec_gë_id
(
c
));

324 
	`g_°rög_≠≥nd
(
ªsu…
,
tmp
);

325 
	`g_‰ì
(
tmp
);

327 
codecs
 = codecs->
√xt
;

330  
	`g_°rög_‰ì
(
ªsu…
, 
FALSE
);

331 
	}
}

333 
gch¨
 *

334 
	$sùe_medü_sdp_video_codecs_f‹m©
(
GLi°
 *
codecs
)

336 
GSåög
 *
ªsu…
 = 
	`g_°rög_√w
(
NULL
);

338 
codecs
) {

339 
sùe_codec
 *
c
 = 
codecs
->
d©a
;

340 
gch¨
 *
«me
 = 
	`sùe_backíd_codec_gë_«me
(
c
);

342 
gch¨
 *
tmp
 = 
	`g_°rdup_¥ötf
("a=rtpmap:%d %s/%d\r\n",

343 
	`sùe_backíd_codec_gë_id
(
c
),

344 
«me
,

345 
	`sùe_backíd_codec_gë_˛ock_øã
(
c
));

347 
	`g_‰ì
(
«me
);

348 
	`g_°rög_≠≥nd
(
ªsu…
,
tmp
);

349 
	`g_‰ì
(
tmp
);

351 
codecs
 = codecs->
√xt
;

353  
	`g_°rög_‰ì
(
ªsu…
, 
FALSE
);

354 
	}
}

356 
gch¨
 *

357 
	$sùe_medü_sdp_codecs_f‹m©
(
GLi°
 *
codecs
)

359 
GSåög
 *
ªsu…
 = 
	`g_°rög_√w
(
NULL
);

361 
codecs
) {

362 
sùe_codec
 *
c
 = 
codecs
->
d©a
;

363 
GLi°
 *
∑øms
 = 
NULL
;

364 
gch¨
 *
«me
 = 
	`sùe_backíd_codec_gë_«me
(
c
);

365 
a
;

367 
a
=
	`°rcmp
(
«me
,"SIREN");

368 if(
a
==0)

370 
codecs
 = codecs->
√xt
;

375 
gch¨
 *
tmp
 = 
	`g_°rdup_¥ötf
("a=rtpmap:%d %s/%d\r\n",

376 
	`sùe_backíd_codec_gë_id
(
c
),

377 
«me
,

378 
	`sùe_backíd_codec_gë_˛ock_øã
(
c
));

380 
	`g_‰ì
(
«me
);

381 
	`g_°rög_≠≥nd
(
ªsu…
, 
tmp
);

382 
	`g_‰ì
(
tmp
);

384 i‡((
∑øms
 = 
	`sùe_backíd_codec_gë_›ti⁄Æ_∑ømëîs
(
c
))) {

385 
tmp
 = 
	`g_°rdup_¥ötf
("a=fmç:%d",
	`sùe_backíd_codec_gë_id
(
c
));

386 
	`g_°rög_≠≥nd
(
ªsu…
, 
tmp
);

387 
	`g_‰ì
(
tmp
);

389 
∑øms
) {

390 
sù«mevÆ
* 
∑r
 = 
∑øms
->
d©a
;

391 
tmp
 = 
	`g_°rdup_¥ötf
(" %s=%s", 
∑r
->
«me
,Ö¨->
vÆue
);

392 
	`g_°rög_≠≥nd
(
ªsu…
, 
tmp
);

393 
	`g_‰ì
(
tmp
);

394 
∑øms
 =Ö¨ams->
√xt
;

396 
	`g_°rög_≠≥nd
(
ªsu…
, "\r\n");

399 
codecs
 = codecs->
√xt
;

402  
	`g_°rög_‰ì
(
ªsu…
, 
FALSE
);

403 
	}
}

405 
gch¨
 *

406 
	$sùe_medü_sdp_ˇndid©es_f‹m©
(
GLi°
 *
ˇndid©es
, 
sùe_medü_ˇŒ
* 
ˇŒ
)

408 
GSåög
 *
ªsu…
 = 
	`g_°rög_√w
("");

409 
gch¨
 *
tmp
;

410 
gch¨
 *
u£∫ame
 = 
	`sùe_backíd_ˇndid©e_gë_u£∫ame
(
ˇndid©es
->
d©a
);

411 
gch¨
 *
∑ssw‹d
 = 
	`sùe_backíd_ˇndid©e_gë_∑ssw‹d
(
ˇndid©es
->
d©a
);

412 
guöt16
 
π˝_p‹t
 = 0;

413 
a
 = 0;

415 i‡(
ˇŒ
->
Àgacy_mode
)

416  
	`g_°rög_‰ì
(
ªsu…
, 
FALSE
);

418 
tmp
 = 
	`g_°rdup_¥ötf
("a=i˚-u‰ag:%s\r\«=i˚-pwd:%s\r\n",
u£∫ame
, 
∑ssw‹d
);

419 
	`g_°rög_≠≥nd
(
ªsu…
, 
tmp
);

420 
	`g_‰ì
(
tmp
);

421 
	`g_‰ì
(
u£∫ame
);

422 
	`g_‰ì
(
∑ssw‹d
);

424 
ˇndid©es
) {

425 
sùe_ˇndid©e
 *
c
 = 
ˇndid©es
->
d©a
;

427 
guöt16
 
p‹t
;

428 
guöt16
 
comp⁄ít
 = 0;

429 
gch¨
 *
¥Ÿocﬁ
 = 
NULL
;

430 
gch¨
 *
ty≥
 = 
NULL
;

432 
p‹t
 = 
	`sùe_backíd_ˇndid©e_gë_p‹t
(
c
);

434 
	`sùe_backíd_ˇndid©e_gë_comp⁄ít_ty≥
(
c
)) {

435 
SIPE_COMPONENT_RTP
:

436 
comp⁄ít
 = 1;

438 
SIPE_COMPONENT_RTCP
:

439 
comp⁄ít
 = 2;

440 i‡(
π˝_p‹t
 == 0)

441 
π˝_p‹t
 = 
p‹t
;

443 
SIPE_COMPONENT_NONE
:

444 
comp⁄ít
 = 0;

447 
	`sùe_backíd_ˇndid©e_gë_¥Ÿocﬁ
(
c
)) {

448 
SIPE_NETWORK_PROTOCOL_TCP
:

449 
¥Ÿocﬁ
 = "TCP";

451 
SIPE_NETWORK_PROTOCOL_UDP
:

452 
¥Ÿocﬁ
 = "UDP";

456 
	`sùe_backíd_ˇndid©e_gë_ty≥
(
c
)) {

457 
SIPE_CANDIDATE_TYPE_HOST
:

458 
ty≥
 = "host";

460 
SIPE_CANDIDATE_TYPE_RELAY
:

461 
ty≥
 = "relay";

463 
SIPE_CANDIDATE_TYPE_SRFLX
:

464 
ty≥
 = "srflx";

471 
tmp
 = 
	`g_°rdup_¥ötf
("a=candidate:%s %u %s %u %s %dÅyp %s \r\n",

472 
	`sùe_backíd_ˇndid©e_gë_found©i⁄
(
c
),

473 
comp⁄ít
,

474 
¥Ÿocﬁ
,

475 
	`sùe_backíd_ˇndid©e_gë_¥i‹ôy
(
c
),

476 
	`sùe_backíd_ˇndid©e_gë_ù
(
c
),

477 
p‹t
,

478 
ty≥
);

480 
	`g_°rög_≠≥nd
(
ªsu…
, 
tmp
);

481 
	`g_‰ì
(
tmp
);

483 
ˇndid©es
 = c™did©es->
√xt
;

487 i‡((
ˇŒ
->
övôe_˙t
 > 1Ë&& cÆl->
ªmŸe_ˇndid©es
) {

488 
sùe_ˇndid©e
 *
fú°
 = 
ˇŒ
->
ªmŸe_ˇndid©es
->
d©a
;

489 
sùe_ˇndid©e
 *
£c⁄d
 = 
ˇŒ
->
ªmŸe_ˇndid©es
->
√xt
->
d©a
;

490 if(
a
==1)

492 
fú°
 = 
ˇŒ
->
ªmŸe_video_ˇndid©es
->
d©a
;

493 
£c⁄d
 = 
ˇŒ
->
ªmŸe_video_ˇndid©es
->
√xt
->
d©a
;

495 
tmp
 = 
	`g_°rdup_¥ötf
("a=remote-candidates:1 %s %u 2 %s %u\r\n",

496 
	`sùe_backíd_ˇndid©e_gë_ù
(
fú°
), 
	`sùe_backíd_ˇndid©e_gë_p‹t
(first),

497 
	`sùe_backíd_ˇndid©e_gë_ù
(
£c⁄d
), 
	`sùe_backíd_ˇndid©e_gë_p‹t
(second));

499 
	`g_°rög_≠≥nd
(
ªsu…
, 
tmp
);

500 
	`g_‰ì
(
tmp
);

501 
a
++;

505 i‡(
π˝_p‹t
 != 0) {

506 
tmp
 = 
	`g_°rdup_¥ötf
("a=max±ime:200\r\«Ùt˝:%u\r\n", 
π˝_p‹t
);

507 
	`g_°rög_≠≥nd
(
ªsu…
, 
tmp
);

508 
	`g_‰ì
(
tmp
);

511  
	`g_°rög_‰ì
(
ªsu…
, 
FALSE
);

512 
	}
}

514 
gch¨
*

515 
	$sùe_medü_¸óã_sdp
(
sùe_medü_ˇŒ
 *
ˇŒ
) {

516 
GLi°
 *
ußbÀ_codecs
 = 
	`sùe_backíd_gë_loˇl_codecs
(
ˇŒ
);

517 
GLi°
 *
loˇl_ˇndid©es
 = 
	`sùe_backíd_gë_loˇl_ˇndid©es
(
ˇŒ
, cÆl->
dülog
->
wôh
);

520 
guöt16
 
loˇl_p‹t
 = 
	`sùe_backíd_ˇndid©e_gë_p‹t
(
loˇl_ˇndid©es
->
d©a
);

521 c⁄° *
ù
 = 
	`sùe_utûs_gë_suôabÀ_loˇl_ù
(-1);

523 
gch¨
 *
sdp_codecs
 = 
	`sùe_medü_sdp_codecs_f‹m©
(
ußbÀ_codecs
);

524 
gch¨
 *
sdp_codec_ids
 = 
	`sùe_medü_sdp_codec_ids_f‹m©
(
ußbÀ_codecs
);

525 
gch¨
 *
sdp_ˇndid©es
 = 
	`sùe_medü_sdp_ˇndid©es_f‹m©
(
loˇl_ˇndid©es
, 
ˇŒ
);

526 
gch¨
 *
öa˘ive
 = (
ˇŒ
->
loˇl_⁄_hﬁd
 || cÆl->
ªmŸe_⁄_hﬁd
) ? "a=inactive\r\n" : "";

529 
GLi°
 *
video_codecs
 = 
	`sùe_backíd_gë_video_codecs
(
ˇŒ
);

530 
GLi°
 *
video_ˇndid©es
 = 
	`sùe_backíd_gë_video_ˇndid©es
(
ˇŒ
, cÆl->
dülog
->
wôh
);

531 
gch¨
 *
sdp_video_codecs
 = 
	`sùe_medü_sdp_video_codecs_f‹m©
(
video_codecs
);

532 
gch¨
 *
sdp_video_codec_ids
 = 
	`sùe_medü_sdp_codec_ids_f‹m©
(
video_codecs
);

533 
gch¨
 *
sdp_video_ˇndid©es
 = 
	`sùe_medü_sdp_ˇndid©es_f‹m©
(
video_ˇndid©es
,
ˇŒ
);

534 
guöt16
 
loˇl_video_p‹t
 = 
	`sùe_backíd_ˇndid©e_gë_p‹t
(
video_ˇndid©es
->
d©a
);

537 
gch¨
 *
body
 = 
	`g_°rdup_¥ötf
(

553 ,
ù
, ip, 
loˇl_p‹t
, 
sdp_codec_ids
, 
sdp_ˇndid©es
, 
öa˘ive
, 
sdp_codecs


554 ,
loˇl_video_p‹t
,
sdp_video_codec_ids
,
sdp_video_ˇndid©es
,
sdp_video_codecs
);

556 
	`g_‰ì
(
sdp_codecs
);

557 
	`g_‰ì
(
sdp_codec_ids
);

558 
	`g_‰ì
(
sdp_ˇndid©es
);

559 
	`sùe_medü_codec_li°_‰ì
(
ußbÀ_codecs
);

561  
body
;

562 
	}
}

565 
	$sùe_övôe_ˇŒ
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
, 
TønsCÆlback
 
tc
)

567 
gch¨
 *
hdr
;

568 
gch¨
 *
c⁄è˘
;

569 
gch¨
 *
body
;

570 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

571 
sùe_medü_ˇŒ
 *
ˇŒ
 = 
sùe_¥iv©e
->
medü_ˇŒ
;

572 
sù_dülog
 *
dülog
 = 
ˇŒ
->dialog;

574 ++(
ˇŒ
->
övôe_˙t
);

576 
c⁄è˘
 = 
	`gë_c⁄è˘
(
sù
);

577 
hdr
 = 
	`g_°rdup_¥ötf
(

583 
c⁄è˘
,

584 (
ˇŒ
->
loˇl_⁄_hﬁd
 || cÆl->
ªmŸe_⁄_hﬁd
) ? ";+sip.rendering=\"no\"" : "");

585 
	`g_‰ì
(
c⁄è˘
);

587 
	`¥ötf
("\nCREATING SDP\n");

588 
body
 = 
	`sùe_medü_¸óã_sdp
(
ˇŒ
);

590 
	`£nd_sù_ªque°
(
SIP_TO_CORE_PRIVATE
, "INVITE", 
dülog
->
wôh
, dülog->wôh, 
hdr
, 
body
,

591 
dülog
, 
tc
);

593 
	`g_‰ì
(
body
);

594 
	`g_‰ì
(
hdr
);

595 
	}
}

597 
gboﬁón


598 
sùe_medü_∑r£_ªmŸe_codecs
(
sùe_medü_ˇŒ
 *
ˇŒ
);

600 
gboﬁón


601 
	$sùe_medü_∑r£_sdp_©åibuãs_™d_ˇndid©es
(
sùe_medü_ˇŒ
* 
ˇŒ
, 
gch¨
 *
‰ame
) {

602 
gch¨
 **
löes
 = 
	`g_°r•lô
(
‰ame
, "\r\n", 0);

603 
GSLi°
 *
sdp_©ås
 = 
NULL
;

604 
gch¨
 *
ªmŸe_ù
 = 
NULL
;

605 
guöt16
 
ªmŸe_p‹t
 = 0;

606 
GLi°
 *
ªmŸe_ˇndid©es
;

607 
gch¨
 **
±r
;

608 
gboﬁón
 
no_îr‹
 = 
TRUE
;

611 
gboﬁón
 
video
 = 0;

613 
GSLi°
 *
sdp_video_©ås
 = 
NULL
;

614 
gch¨
 *
ªmŸe_video_ù
 = 
NULL
;

615 
guöt16
 
ªmŸe_video_p‹t

NULL
;

616 
GLi°
 *
ªmŸe_video_ˇndid©es
;

617 
guöt16
 
vÆ
;

620 
±r
 = 
löes
; *±∏!
NULL
; ++ptr) {

621 i‡(
	`g_°r_has_¥efix
(*
±r
, "a=")) {

622 
gch¨
 **
∑πs
 = 
	`g_°r•lô
(*
±r
 + 2, ":", 2);

623 if(!
∑πs
[0]) {

624 
	`g_°r‰ìv
(
∑πs
);

625 
	`sùe_utûs_«mevÆ_‰ì
(
sdp_©ås
);

626 
sdp_©ås
 = 
NULL
;

627 
no_îr‹
 = 
FALSE
;

630 if(
video
 == 1)

631 
sdp_video_©ås
 = 
	`sùe_utûs_«mevÆ_add
(sdp_video_©ås, 
∑πs
[0],Öarts[1]);

633 
sdp_©ås
 = 
	`sùe_utûs_«mevÆ_add
(sdp_©ås, 
∑πs
[0],Öarts[1]);

634 
	`g_°r‰ìv
(
∑πs
);

636 } i‡(
	`g_°r_has_¥efix
(*
±r
, "o=")) {

637 
gch¨
 **
∑πs
 = 
	`g_°r•lô
(*
±r
 + 2, " ", 6);

638 if(
video
 == 1)

639 
ªmŸe_video_ù
 = 
	`g_°rdup
(
∑πs
[5]);

641 
ªmŸe_ù
 = 
	`g_°rdup
(
∑πs
[5]);

642 
	`g_°r‰ìv
(
∑πs
);

643 } i‡(
	`g_°r_has_¥efix
(*
±r
, "m=")) {

644 
gch¨
 **
∑πs
 = 
	`g_°r•lô
(*
±r
 + 2, " ", 3);

645 
vÆ
 = 
	`°rcmp
("video",
∑πs
[0]);

646 if(
vÆ
 == 0)

648 
video
 = 1;

649 
ªmŸe_video_p‹t
 = 
	`©oi
(
∑πs
[1]);

652 
ªmŸe_p‹t
 = 
	`©oi
(
∑πs
[1]);

653 
	`g_°r‰ìv
(
∑πs
);

657 
	`g_°r‰ìv
(
löes
);

659 
ªmŸe_ˇndid©es
 = 
	`sùe_medü_∑r£_ªmŸe_ˇndid©es
(
sdp_©ås
);

660 
ªmŸe_video_ˇndid©es
 = 
	`sùe_medü_∑r£_ªmŸe_ˇndid©es
(
sdp_video_©ås
);

662 i‡(!
ªmŸe_ˇndid©es
) {

664 
	`sùe_medü_∑r£_ªmŸe_ˇndid©es_Àgacy
(
ªmŸe_ù
, 
ªmŸe_p‹t
);

666 
ˇŒ
->
Àgacy_mode
 = 
TRUE
;

669 i‡(
no_îr‹
) {

670 
	`sùe_utûs_«mevÆ_‰ì
(
ˇŒ
->
sdp_©ås
);

671 
	`sùe_medü_ˇndid©e_li°_‰ì
(
ˇŒ
->
ªmŸe_ˇndid©es
);

673 
ˇŒ
->
sdp_©ås
 = sdp_attrs;

674 
ˇŒ
->
ªmŸe_ù
 =Ñemote_ip;

675 
ˇŒ
->
ªmŸe_p‹t
 =Ñemote_port;

676 
ˇŒ
->
ªmŸe_ˇndid©es
 =Ñemote_candidates;

679 
ˇŒ
->
sdp_video_©ås
 = sdp_video_attrs;

680 
ˇŒ
->
ªmŸe_video_ù
 =Ñemote_video_ip;

681 
ˇŒ
->
ªmŸe_video_p‹t
 =Ñemote_video_port;

682 
ˇŒ
->
ªmŸe_video_ˇndid©es
 =Ñemote_video_candidates;

684 
	`sùe_utûs_«mevÆ_‰ì
(
sdp_©ås
);

685 
	`sùe_medü_ˇndid©e_li°_‰ì
(
ªmŸe_ˇndid©es
);

688  
no_îr‹
;

689 
	}
}

691 
gboﬁón


692 
	$sùe_medü_∑r£_ªmŸe_codecs
(
sùe_medü_ˇŒ
 *
ˇŒ
)

694 
	`¥ötf
("\n+++++++++++++++ENTERED into function forÖarsing++++++++++++++\n");

695 
GLi°
 *
loˇl_codecs
 = 
	`sùe_backíd_gë_loˇl_codecs
(
ˇŒ
);

696 
GLi°
 *
ªmŸe_codecs
;

699 
GLi°
 *
loˇl_video_codecs
 = 
	`sùe_backíd_gë_video_codecs
(
ˇŒ
);

700 
GLi°
 *
ªmŸe_video_codecs
;

702 
	`¥ötf
("\n****AUDIO STARTED****\n");

703 
ªmŸe_codecs
 = 
	`sùe_medü_∑r£_codecs
(
ˇŒ
->
sdp_©ås
);

704 
ªmŸe_codecs
 = 
	`sùe_medü_¥u√_ªmŸe_codecs
(
loˇl_codecs
,Ñemote_codecs);

706 
	`¥ötf
("\n\n****AUDIO COMPLETED*****\n\n");

708 
ªmŸe_video_codecs
 = 
	`sùe_medü_∑r£_video_codecs
(
ˇŒ
->
sdp_video_©ås
);

709 
ªmŸe_video_codecs
 = 
	`sùe_medü_¥u√_ªmŸe_codecs
(
loˇl_video_codecs
,remote_video_codecs);

711 
	`sùe_medü_codec_li°_‰ì
(
loˇl_video_codecs
);

712 
	`sùe_medü_codec_li°_‰ì
(
loˇl_codecs
);

714 i‡(
ªmŸe_codecs
 && 
ªmŸe_video_codecs
) {

715 
	`sùe_medü_codec_li°_‰ì
(
ˇŒ
->
ªmŸe_codecs
);

717 
ˇŒ
->
ªmŸe_codecs
 =Ñemote_codecs;

720 
	`sùe_medü_codec_li°_‰ì
(
ˇŒ
->
ªmŸe_video_codecs
);

721 
ˇŒ
->
ªmŸe_video_codecs
 =Ñemote_video_codecs;

724 i‡(!
	`sùe_backíd_£t_ªmŸe_codecs
(
ˇŒ
, cÆl->
dülog
->
wôh
)) {

725 
	`¥ötf
("ERROR SET AUDIO REMOTE CODECS");

726  
FALSE
;

729 i‡(!
	`sùe_backíd_£t_video_ªmŸe_codecs
(
ˇŒ
, cÆl->
dülog
->
wôh
)) {

730 
	`¥ötf
("ERROR SET VIDEO REMOTE CODECS");

731  
FALSE
;

734 if(
	`sùe_backíd_£t_£nd_codec
(
ˇŒ
))

735 
	`¥ötf
("\nSET CODEC SUCCESSFULL\n");

737 
	`¥ötf
("\nERROR SET CODEC\n");

745  
TRUE
;

747 
	`sùe_medü_codec_li°_‰ì
(
ªmŸe_codecs
);

748 
	`sùe_medü_codec_li°_‰ì
(
ªmŸe_video_codecs
);

749 
	`¥ötf
("ERROR NO CANDIDATES OR CODECS");

751  
FALSE
;

753 
	}
}

755 
sù_dülog
 *

756 
	$sùe_medü_dülog_öô
(
sù_£ssi⁄
* 
£ssi⁄
, 
sùmsg
 *
msg
)

758 
gch¨
 *
√wTag
 = 
	`gíèg
();

759 c⁄° 
gch¨
 *
ﬁdHódî
;

760 
gch¨
 *
√wHódî
;

761 
sù_dülog
 *
dülog
;

763 
ﬁdHódî
 = 
	`sùmsg_föd_hódî
(
msg
, "To");

764 
√wHódî
 = 
	`g_°rdup_¥ötf
("%s;èg=%s", 
ﬁdHódî
, 
√wTag
);

765 
	`sùmsg_ªmove_hódî_now
(
msg
, "To");

766 
	`sùmsg_add_hódî_now
(
msg
, "To", 
√wHódî
);

767 
	`g_‰ì
(
√wHódî
);

769 
dülog
 = 
	`sùe_dülog_add
(
£ssi⁄
);

770 
dülog
->
ˇŒid
 = 
	`g_°rdup
(
£ssi⁄
->callid);

771 
dülog
->
wôh
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, "From"));

772 
	`sùe_dülog_∑r£
(
dülog
, 
msg
, 
FALSE
);

774  
dülog
;

775 
	}
}

778 
	$£nd_ª•⁄£_wôh_£ssi⁄_des¸ùti⁄
(
sùe_medü_ˇŒ
 *
ˇŒ
, 
code
, 
gch¨
 *
ãxt
)

780 
gch¨
 *
body
 = 
	`sùe_medü_¸óã_sdp
(
ˇŒ
);

781 
	`sùmsg_add_hódî
(
ˇŒ
->
övô©i⁄
, "Content-Type", "application/sdp");

782 
	`£nd_sù_ª•⁄£
(
ˇŒ
->
sùe_¥iv©e
, cÆl->
övô©i⁄
, 
code
, 
ãxt
, 
body
);

783 
	`g_‰ì
(
body
);

784 
	}
}

786 
gboﬁón


787 
sùe_medü_¥o˚ss_övôe_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

788 
sùmsg
 *
msg
,

789 
å™ß˘i⁄
 *
å™s
);

791 
	$ˇndid©es_¥ï¨ed_cb
(
sùe_medü_ˇŒ
 *
ˇŒ
)

793 i‡(
	`sùe_backíd_medü_is_öôüt‹
(
ˇŒ
->
medü
, cÆl->
dülog
->
wôh
)) {

794 
	`sùe_övôe_ˇŒ
(
ˇŒ
->
sùe_¥iv©e
, 
sùe_medü_¥o˚ss_övôe_ª•⁄£
);

795 } i‡(!
ˇŒ
->
Àgacy_mode
) {

796 
	`¥ötf
("\n^^^^^^^^^^^^CODEC PARSING STARTS^^^^^^^^^^^^^\n");

797 i‡(!
	`sùe_medü_∑r£_ªmŸe_codecs
(
ˇŒ
)) {

798 
	`g_‰ì
(
ˇŒ
);

802 
	`£nd_ª•⁄£_wôh_£ssi⁄_des¸ùti⁄
(
ˇŒ
, 183, "Session Progress");

804 
	}
}

806 
	$medü_c⁄√˘ed_cb
(
sùe_medü_ˇŒ
 *
ˇŒ
)

808 
ˇŒ
 = call;

809 
	}
}

811 
	$ˇŒ_ac˚±_cb
(
sùe_medü_ˇŒ
 *
ˇŒ
, 
gboﬁón
 
loˇl
)

813 i‡(
loˇl
) {

814 
	`£nd_ª•⁄£_wôh_£ssi⁄_des¸ùti⁄
(
ˇŒ
, 200, "OK");

816 
	}
}

818 
	$ˇŒ_ªje˘_cb
(
sùe_medü_ˇŒ
 *
ˇŒ
, 
gboﬁón
 
loˇl
)

820 i‡(
loˇl
) {

821 
	`£nd_sù_ª•⁄£
(
ˇŒ
->
sùe_¥iv©e
, cÆl->
övô©i⁄
, 603, "De˛öe", 
NULL
);

823 
ˇŒ
->
sùe_¥iv©e
->
medü_ˇŒ
 = 
NULL
;

824 
	`sùe_medü_ˇŒ_‰ì
(
ˇŒ
);

825 
	}
}

827 
gboﬁón


828 
sùe_medü_£nd_ack
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
, 
sùmsg
 *
msg
,

829 
å™ß˘i⁄
 *
å™s
);

831 
	$ˇŒ_hﬁd_cb
(
sùe_medü_ˇŒ
 *
ˇŒ
, 
gboﬁón
 
loˇl
, gboﬁó¿
°©e
)

833 i‡(
loˇl
 && (
ˇŒ
->
loˇl_⁄_hﬁd
 !
°©e
)) {

834 
ˇŒ
->
loˇl_⁄_hﬁd
 = 
°©e
;

835 
	`sùe_övôe_ˇŒ
(
ˇŒ
->
sùe_¥iv©e
, 
sùe_medü_£nd_ack
);

836 } i‡(
ˇŒ
->
ªmŸe_⁄_hﬁd
 !
°©e
) {

837 
ˇŒ
->
ªmŸe_⁄_hﬁd
 = 
°©e
;

838 
	`£nd_ª•⁄£_wôh_£ssi⁄_des¸ùti⁄
(
ˇŒ
, 200, "OK");

840 
	}
}

842 
	$ˇŒ_h™gup_cb
(
sùe_medü_ˇŒ
 *
ˇŒ
, 
gboﬁón
 
loˇl
)

844 i‡(
loˇl
) {

845 
	`£nd_sù_ªque°
(
ˇŒ
->
sùe_¥iv©e
, "BYE", cÆl->
dülog
->
wôh
, call->dialog->with,

846 
NULL
, NULL, 
ˇŒ
->
dülog
, NULL);

848 
ˇŒ
->
sùe_¥iv©e
->
medü_ˇŒ
 = 
NULL
;

849 
	`sùe_medü_ˇŒ_‰ì
(
ˇŒ
);

850 
	}
}

852 
sùe_medü_ˇŒ
 *

853 
	$sùe_medü_ˇŒ_öô
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
, c⁄° 
gch¨
* 
∑πicù™t
, 
gboﬁón
 
öôüt‹
)

855 
sùe_medü_ˇŒ
 *
ˇŒ
 = 
	`g_√w0
(sipe_media_call, 1);

858 
ˇŒ
->
sùe_¥iv©e
 = sipe_private;

859 
ˇŒ
->
medü
 = 
	`sùe_backíd_medü_√w
(
SIPE_CORE_PUBLIC
,

860  (
sùe_medü_ˇŒ
 *)
ˇŒ
,

861 
∑πicù™t
,

862 
öôüt‹
);

864 
ˇŒ
->
video_medü
 = 
	`sùe_backíd_medü_√w
(
SIPE_CORE_PUBLIC
,

865  (
sùe_medü_ˇŒ
 *)
ˇŒ
,

866 
∑πicù™t
,

867 
öôüt‹
);

869 
ˇŒ
->
Àgacy_mode
 = 
FALSE
;

871 
ˇŒ
->
ˇndid©es_¥ï¨ed_cb
 = candidates_prepared_cb;

872 
ˇŒ
->
medü_c⁄√˘ed_cb
 = media_connected_cb;

873 
ˇŒ
->
ˇŒ_ac˚±_cb
 = call_accept_cb;

874 
ˇŒ
->
ˇŒ_ªje˘_cb
 = call_reject_cb;

875 
ˇŒ
->
ˇŒ_hﬁd_cb
 = call_hold_cb;

876 
ˇŒ
->
ˇŒ_h™gup_cb
 = call_hangup_cb;

878 
ˇŒ
->
loˇl_⁄_hﬁd
 = 
FALSE
;

879 
ˇŒ
->
ªmŸe_⁄_hﬁd
 = 
FALSE
;

881  
ˇŒ
;

882 
	}
}

884 
	$sùe_medü_h™gup
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

886 
sùe_medü_ˇŒ
 *
ˇŒ
 = 
sùe_¥iv©e
->
medü_ˇŒ
;

887 i‡(
ˇŒ
)

889 
	`sùe_backíd_medü_h™gup
(
ˇŒ
->
medü
, 
FALSE
);

890 
	`sùe_backíd_medü_h™gup
(
ˇŒ
->
video_medü
, 
FALSE
);

892 
	}
}

895 
	$sùe_c‹e_medü_öôüã_ˇŒ
(
sùe_c‹e_public
 *
sùe_public
,

896 c⁄° *
∑πicù™t
)

898 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
SIPE_CORE_PRIVATE
;

899 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA
;

900 
sùe_medü_ˇŒ
 *
ˇŒ
;

902 i‡(
sùe_¥iv©e
->
medü_ˇŒ
)

905 
ˇŒ
 = 
	`sùe_medü_ˇŒ_öô
(
sùe_¥iv©e
, 
∑πicù™t
, 
TRUE
);

907 
sùe_¥iv©e
->
medü_ˇŒ
 = 
ˇŒ
;

909 
ˇŒ
->
£ssi⁄
 = 
	`sùe_£ssi⁄_add_ch©
(
sù
);

910 
ˇŒ
->
dülog
 = 
	`sùe_dülog_add
(ˇŒ->
£ssi⁄
);

911 
ˇŒ
->
dülog
->
ˇŒid
 = 
	`gíˇŒid
();

912 
ˇŒ
->
dülog
->
wôh
 = 
	`g_°rdup
(
∑πicù™t
);

913 
ˇŒ
->
dülog
->
ouπag
 = 
	`gíèg
();

915 
	`¥ötf
("\nADDING STREAMS FOR MAKING CALL\n");

916 
	`sùe_backíd_medü_add_°ªam
(
ˇŒ
->
medü
, 
∑πicù™t
,"sipe-voice",

917 
SIPE_MEDIA_AUDIO
,

918 !
ˇŒ
->
Àgacy_mode
, 
TRUE
);

919 
	`sùe_backíd_medü_add_°ªam
(
ˇŒ
->
video_medü
, 
∑πicù™t
,"sipe-video",

920 
SIPE_MEDIA_VIDEO
,

921 !
ˇŒ
->
Àgacy_mode
, 
TRUE
);

922 
	`¥ötf
("\nSTREAMS HAVE BEEN ADDED FOR MAKING CALL\n");

923 
	}
}

927 
	$sùe_medü_öcomög_övôe
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
, 
sùmsg
 *
msg
)

929 c⁄° 
gch¨
 *
ˇŒid
 = 
	`sùmsg_föd_hódî
(
msg
, "Call-ID");

931 
sùe_medü_ˇŒ
 *
ˇŒ
 = 
sùe_¥iv©e
->
medü_ˇŒ
;

932 
sù_£ssi⁄
 *
£ssi⁄
;

933 
sù_dülog
 *
dülog
;

934 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

936 i‡(
ˇŒ
) {

937 i‡(
	`sùe_°ªquÆ
(
ˇŒ
->
dülog
->
ˇŒid
, callid)) {

938 ++(
ˇŒ
->
övôe_˙t
);

940 i‡(
ˇŒ
->
övô©i⁄
)

941 
	`sùmsg_‰ì
(
ˇŒ
->
övô©i⁄
);

942 
ˇŒ
->
övô©i⁄
 = 
	`sùmsg_c›y
(
msg
);

944 
	`sùe_utûs_«mevÆ_‰ì
(
ˇŒ
->
sdp_©ås
);

945 
ˇŒ
->
sdp_©ås
 = 
NULL
;

946 i‡(!
	`sùe_medü_∑r£_sdp_©åibuãs_™d_ˇndid©es
(
ˇŒ
, cÆl->
övô©i⁄
->
body
)) {

949 i‡(!
	`sùe_medü_∑r£_ªmŸe_codecs
(
ˇŒ
)) {

950 
	`g_‰ì
(
ˇŒ
);

954 i‡(
ˇŒ
->
Àgacy_mode
 && !ˇŒ->
ªmŸe_⁄_hﬁd
) {

955 
	`sùe_backíd_medü_hﬁd
(
ˇŒ
->
medü
, 
FALSE
);

956 } i‡(
	`sùe_utûs_«mevÆ_föd
(
ˇŒ
->
sdp_©ås
, "inactive")) {

957 
	`sùe_backíd_medü_hﬁd
(
ˇŒ
->
medü
, 
FALSE
);

958 } i‡(
ˇŒ
->
ªmŸe_⁄_hﬁd
) {

959 
	`sùe_backíd_medü_unhﬁd
(
ˇŒ
->
medü
, 
FALSE
);

961 
	`£nd_ª•⁄£_wôh_£ssi⁄_des¸ùti⁄
(
ˇŒ
, 200, "OK");

964 
	`£nd_sù_ª•⁄£
(
sùe_¥iv©e
, 
msg
, 486, "Busy Hîe", 
NULL
);

969 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_‹_add_ch©_by_ˇŒid
(
sù
, 
ˇŒid
);

970 
dülog
 = 
	`sùe_medü_dülog_öô
(
£ssi⁄
, 
msg
);

972 
ˇŒ
 = 
	`sùe_medü_ˇŒ_öô
(
sùe_¥iv©e
, 
dülog
->
wôh
, 
FALSE
);

973 
ˇŒ
->
övô©i⁄
 = 
	`sùmsg_c›y
(
msg
);

974 
ˇŒ
->
£ssi⁄
 = session;

975 
ˇŒ
->
dülog
 = dialog;

976 
ˇŒ
->
övôe_˙t
 = 1;

978 
sùe_¥iv©e
->
medü_ˇŒ
 = 
ˇŒ
;

980 i‡(!
	`sùe_medü_∑r£_sdp_©åibuãs_™d_ˇndid©es
(
ˇŒ
, 
msg
->
body
)) {

984 
	`sùe_backíd_medü_add_°ªam
(
ˇŒ
->
medü
, 
dülog
->
wôh
, "sùe-voi˚",
SIPE_MEDIA_AUDIO
, !ˇŒ->
Àgacy_mode
, 
FALSE
);

985 
	`sùe_backíd_medü_add_°ªam
(
ˇŒ
->
video_medü
, 
dülog
->
wôh
, "sùe-video",
SIPE_MEDIA_VIDEO
, !ˇŒ->
Àgacy_mode
, 
FALSE
);

987 
	`sùe_backíd_medü_add_ªmŸe_ˇndid©es
(
ˇŒ
->
medü
, 
dülog
->
wôh
, cÆl->
ªmŸe_ˇndid©es
);

988 
	`sùe_backíd_medü_add_video_ªmŸe_ˇndid©es
(
ˇŒ
->
video_medü
, 
dülog
->
wôh
, cÆl->
ªmŸe_video_ˇndid©es
);

990 
	`£nd_sù_ª•⁄£
(
sùe_¥iv©e
, 
ˇŒ
->
övô©i⁄
, 180, "Rögög", 
NULL
);

992 
	}
}

994 
gboﬁón


995 
	$sùe_medü_£nd_ack
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

996 
SIPE_UNUSED_PARAMETER
 
sùmsg
 *
msg
,

997 
å™ß˘i⁄
 *
å™s
)

999 
sùe_medü_ˇŒ
 *
ˇŒ
 = 
sùe_¥iv©e
->
medü_ˇŒ
;

1000 
sù_dülog
 *
dülog
;

1001 
å™s_c£q
;

1002 
tmp_c£q
;

1004 i‡(!
ˇŒ
 || !ˇŒ->
dülog
)

1005  
FALSE
;

1007 
dülog
 = 
ˇŒ
->dialog;

1008 
tmp_c£q
 = 
dülog
->
c£q
;

1010 
	`ssˇnf
(
å™s
->
key
, "<%*[a-zA-Z0-9]><%d INVITE>", &
å™s_c£q
);

1011 
dülog
->
c£q
 = 
å™s_c£q
 - 1;

1012 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "ACK", 
dülog
->
wôh
, dülog->wôh, 
NULL
, NULL, dialog, NULL);

1013 
dülog
->
c£q
 = 
tmp_c£q
;

1015  
TRUE
;

1016 
	}
}

1018 
gboﬁón


1019 
	$sùe_medü_¥o˚ss_övôe_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

1020 
sùmsg
 *
msg
,

1021 
å™ß˘i⁄
 *
å™s
)

1023 c⁄° 
gch¨
* 
ˇŒid
 = 
	`sùmsg_föd_hódî
(
msg
, "Call-ID");

1024 
sùe_medü_ˇŒ
 *
ˇŒ
 = 
sùe_¥iv©e
->
medü_ˇŒ
;

1026 i‡(!
ˇŒ
 || !
	`sùe_°ªquÆ
(
	`sùe_medü_gë_ˇŒid
(ˇŒ), 
ˇŒid
))

1027  
FALSE
;

1029 i‡(
msg
->
ª•⁄£
 == 183) {

1031 c⁄° 
gch¨
 *
r£q
 = 
	`sùmsg_föd_hódî
(
msg
, "RSeq");

1032 c⁄° 
gch¨
 *
c£q
 = 
	`sùmsg_föd_hódî
(
msg
, "CSeq");

1033 
gch¨
 *
øck
 = 
	`g_°rdup_¥ötf
("RAck: %†%s\r\n", 
r£q
, 
c£q
);

1035 i‡(!
	`sùe_medü_∑r£_sdp_©åibuãs_™d_ˇndid©es
(
ˇŒ
, 
msg
->
body
)) {

1039 i‡(!
	`sùe_medü_∑r£_ªmŸe_codecs
(
ˇŒ
)) {

1040 
	`g_‰ì
(
ˇŒ
);

1041  
FALSE
;

1044 
	`sùe_backíd_medü_add_ªmŸe_ˇndid©es
(
ˇŒ
->
medü
, cÆl->
dülog
->
wôh
, cÆl->
ªmŸe_ˇndid©es
);

1046 
	`sùe_backíd_medü_add_video_ªmŸe_ˇndid©es
(
ˇŒ
->
video_medü
, cÆl->
dülog
->
wôh
, cÆl->
ªmŸe_video_ˇndid©es
);

1048 
	`sùe_dülog_∑r£
(
ˇŒ
->
dülog
, 
msg
, 
TRUE
);

1050 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "PRACK", 
ˇŒ
->
dülog
->
wôh
, cÆl->dülog->wôh, 
øck
, 
NULL
, call->dialog, NULL);

1051 
	`g_‰ì
(
øck
);

1052 } i‡(
msg
->
ª•⁄£
 == 603) {

1053 
	`sùe_backíd_medü_ªje˘
(
ˇŒ
->
medü
, 
FALSE
);

1054 
	`sùe_medü_£nd_ack
(
sùe_¥iv©e
, 
msg
, 
å™s
);

1058 
	`sùe_medü_£nd_ack
(
sùe_¥iv©e
, 
msg
, 
å™s
);

1059 
	`sùe_övôe_ˇŒ
(
sùe_¥iv©e
, 
sùe_medü_£nd_ack
);

1062  
TRUE
;

1063 
	}
}

	@src/core/sipe-mime.c

23 
	~<°rög.h
>

25 
	~<glib.h
>

26 
	~<gmime/gmime.h
>

28 
	~"sùe-comm⁄.h
"

29 
	~"sùe-mime.h
"

31 
	~"sùe-backíd.h
"

33 
	sgmime_ˇŒback_d©a
 {

34 
sùe_mime_∑πs_cb
 
	mˇŒback
;

35 
gpoöãr
 
	mu£r_d©a
;

38 
	$gmime_ˇŒback
(
SIPE_UNUSED_PARAMETER
 
GMimeObje˘
 *
∑ª¡
,

39 
GMimeObje˘
 *
∑π
,

40 
gpoöãr
 
u£r_d©a
)

42 
GMimeD©aWøµî
 *
d©a
 = 
	`g_mime_∑π_gë_c⁄ã¡_obje˘
((
GMimeP¨t
 *)
∑π
);

44 i‡(
d©a
) {

45 
GMimeSåóm
 *
°ªam
 = 
	`g_mime_d©a_wøµî_gë_°ªam
(
d©a
);

47 i‡(
°ªam
) {

48 
ssize_t
 
Àngth
 = 
	`g_mime_°ªam_Àngth
(
°ªam
);

50 i‡(
Àngth
 != -1) {

51 
gch¨
 *
c⁄ã¡
 = 
	`g_mÆloc
(
Àngth
 + 1);

53 i‡(
	`g_mime_°ªam_ªad
(
°ªam
, 
c⁄ã¡
, 
Àngth
) ==Üength) {

54 
gmime_ˇŒback_d©a
 *
cd
 = 
u£r_d©a
;

55 
gch¨
 *
ty≥_«me
 = 
	`g_mime_c⁄ã¡_ty≥_to_°rög
(

56 
	`g_mime_obje˘_gë_c⁄ã¡_ty≥
(
∑π
));

58 
	`SIPE_DEBUG_INFO
("sùe_mime_∑πs_f‹óch:Åy≥ '%s'Üígth %i", 
ty≥_«me
, ()
Àngth
);

60 (*(
cd
->
ˇŒback
))(cd->
u£r_d©a
, 
ty≥_«me
, 
c⁄ã¡
, 
Àngth
);

62 
	`g_‰ì
(
ty≥_«me
);

64 
	`g_‰ì
(
c⁄ã¡
);

66 
	`g_obje˘_uƒef
(
°ªam
);

69 
	}
}

71 
	$sùe_mime_∑πs_f‹óch
(c⁄° 
gch¨
 *
ty≥
,

72 c⁄° 
gch¨
 *
body
,

73 
sùe_mime_∑πs_cb
 
ˇŒback
,

74 
gpoöãr
 
u£r_d©a
)

76 
gch¨
 *
doc
 = 
	`g_°rdup_¥ötf
("C⁄ã¡-Ty≥: %s\r\n\r\n%s", 
ty≥
, 
body
);

77 
GMimeSåóm
 *
°ªam
 = 
	`g_mime_°ªam_mem_√w_wôh_buf„r
(
doc
, 
	`°æí
(doc));

79 i‡(
°ªam
) {

80 
GMimeP¨£r
 *
∑r£r
 = 
	`g_mime_∑r£r_√w_wôh_°ªam
(
°ªam
);

81 
GMimeMu…ù¨t
 *
mu…ù¨t
 = (GMimeMu…ù¨à*)
	`g_mime_∑r£r_c⁄°ru˘_∑π
(
∑r£r
);

83 i‡(
mu…ù¨t
) {

84 
gmime_ˇŒback_d©a
 
cd
 = {
ˇŒback
, 
u£r_d©a
};

86 
	`SIPE_DEBUG_INFO
("sùe_mime_∑πs_f‹óch: %dÖ¨ts", 
	`g_mime_mu…ù¨t_gë_cou¡
(
mu…ù¨t
));

88 
	`g_mime_mu…ù¨t_f‹óch
(
mu…ù¨t
, 
gmime_ˇŒback
, &
cd
);

91 
	`g_obje˘_uƒef
(
∑r£r
);

92 
	`g_obje˘_uƒef
(
°ªam
);

94 
	`g_‰ì
(
doc
);

95 
	}
}

	@src/core/sipe-schedule.c

23 
	~<glib.h
>

25 
	~"sùe-backíd.h
"

26 
	~"sùe-c‹e.h
"

27 
	~"sùe-c‹e-¥iv©e.h
"

28 
	~"sùe-scheduÀ.h
"

30 
	ssùe_scheduÀ
 {

36 
gch¨
 *
	m«me
;

37 
sùe_c‹e_¥iv©e
 *
	msùe_¥iv©e
;

38 
gpoöãr
 
	mbackíd_¥iv©e
;

39 
gpoöãr
 
	m∑ylﬂd
;

40 
sùe_scheduÀ_a˘i⁄
 
	ma˘i⁄
;

41 
GDe°royNŸify
 
	mde°roy
;

44 
	$sùe_scheduÀ_dóŒoˇã
(
sùe_scheduÀ
 *
scheduÀ
)

46 i‡(
scheduÀ
->
de°roy
Ë(*scheduÀ->de°roy)(scheduÀ->
∑ylﬂd
);

47 
	`g_‰ì
(
scheduÀ
->
«me
);

48 
	`g_‰ì
(
scheduÀ
);

49 
	}
}

51 
	$sùe_c‹e_scheduÀ_execuã
(
gpoöãr
 
d©a
)

53 
sùe_scheduÀ
 *
expúed
 = 
d©a
;

54 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
expúed
->sipe_private;

56 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_core_schedule_execute:Éxecuting");

57 
sùe_¥iv©e
->
timeouts
 = 
	`g_¶i°_ªmove
(sùe_¥iv©e->timeouts, 
expúed
);

58 
	`SIPE_DEBUG_INFO
("sipe_core_schedule_executeÅimeouts count %dáfterÑemoval",

59 
	`g_¶i°_Àngth
(
sùe_¥iv©e
->
timeouts
));

61 (*
expúed
->
a˘i⁄
)(
sùe_¥iv©e
,Éxpúed->
∑ylﬂd
);

62 
	`sùe_scheduÀ_dóŒoˇã
(
expúed
);

63 
	}
}

65 
sùe_scheduÀ
 *
	$sùe_scheduÀ_Æloˇã
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

66 c⁄° 
gch¨
 *
«me
,

67 
gpoöãr
 
∑ylﬂd
,

68 
sùe_scheduÀ_a˘i⁄
 
a˘i⁄
,

69 
GDe°royNŸify
 
de°roy
)

71 
sùe_scheduÀ
 *
√w
;

74 
	`sùe_scheduÀ_ˇn˚l
(
sùe_¥iv©e
, 
«me
);

76 
√w
 = 
	`g_√w0
(
sùe_scheduÀ
, 1);

77 
√w
->
«me
 = 
	`g_°rdup
(name);

78 
√w
->
sùe_¥iv©e
 = sipe_private;

79 
√w
->
∑ylﬂd
 =Öayload;

80 
√w
->
a˘i⁄
 =áction;

81 
√w
->
de°roy
 = destroy;

82 
sùe_¥iv©e
->
timeouts
 = 
	`g_¶i°_≠≥nd
(sùe_¥iv©e->timeouts, 
√w
);

83 
	`SIPE_DEBUG_INFO
("sipe_schedule_allocateÅimeouts count %dáfteráddition",

84 
	`g_¶i°_Àngth
(
sùe_¥iv©e
->
timeouts
));

85 (
√w
);

86 
	}
}

88 
	$sùe_scheduÀ_£c⁄ds
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

89 c⁄° 
gch¨
 *
«me
,

90 
gpoöãr
 
∑ylﬂd
,

91 
guöt
 
£c⁄ds
,

92 
sùe_scheduÀ_a˘i⁄
 
a˘i⁄
,

93 
GDe°royNŸify
 
de°roy
)

95 
sùe_scheduÀ
 *
√w
 = 
	`sùe_scheduÀ_Æloˇã
(
sùe_¥iv©e
,

96 
«me
,

97 
∑ylﬂd
,

98 
a˘i⁄
,

99 
de°roy
);

100 
	`SIPE_DEBUG_INFO
("schedulingáction %sÅimeout %d seconds",

101 
«me
, 
£c⁄ds
);

102 
√w
->
backíd_¥iv©e
 = 
	`sùe_backíd_scheduÀ_£c⁄ds
(
SIPE_CORE_PUBLIC
,

103 
£c⁄ds
,

104 
√w
);

105 
	}
}

107 
	$sùe_scheduÀ_m£c⁄ds
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

108 c⁄° 
gch¨
 *
«me
,

109 
gpoöãr
 
∑ylﬂd
,

110 
guöt
 
mûli£c⁄ds
,

111 
sùe_scheduÀ_a˘i⁄
 
a˘i⁄
,

112 
GDe°royNŸify
 
de°roy
)

114 
sùe_scheduÀ
 *
√w
 = 
	`sùe_scheduÀ_Æloˇã
(
sùe_¥iv©e
,

115 
«me
,

116 
∑ylﬂd
,

117 
a˘i⁄
,

118 
de°roy
);

119 
	`SIPE_DEBUG_INFO
("schedulingáction %sÅimeout %d milliseconds",

120 
«me
, 
mûli£c⁄ds
);

121 
√w
->
backíd_¥iv©e
 = 
	`sùe_backíd_scheduÀ_m£c⁄ds
(
SIPE_CORE_PUBLIC
,

122 
mûli£c⁄ds
,

123 
√w
);

124 
	}
}

126 
	$sùe_scheduÀ_ˇn˚l
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

127 c⁄° 
gch¨
 *
«me
)

129 
GSLi°
 *
íåy
;

131 i‡(!
sùe_¥iv©e
->
timeouts
 || !
«me
) ;

133 
íåy
 = 
sùe_¥iv©e
->
timeouts
;

134 
íåy
) {

135 
sùe_scheduÀ
 *
scheduÀ
 = 
íåy
->
d©a
;

136 i‡(
	`sùe_°ªquÆ
(
scheduÀ
->
«me
,Çame)) {

137 
GSLi°
 *
to_dñëe
 = 
íåy
;

138 
íåy
 =É¡ry->
√xt
;

139 
sùe_¥iv©e
->
timeouts
 = 
	`g_¶i°_dñëe_lök
(sipe_private->timeouts,

140 
to_dñëe
);

141 
	`SIPE_DEBUG_INFO
("sùe_scheduÀ_ˇn˚l:á˘i⁄Çame=%s", 
«me
);

142 
	`sùe_backíd_scheduÀ_ˇn˚l
(
SIPE_CORE_PUBLIC
,

143 
scheduÀ
->
backíd_¥iv©e
);

144 
	`sùe_scheduÀ_dóŒoˇã
(
scheduÀ
);

146 
íåy
 =É¡ry->
√xt
;

149 
	}
}

151 
	$sùe_scheduÀ_ˇn˚l_Æl
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

153 i‡(
sùe_¥iv©e
->
timeouts
) {

154 
GSLi°
 *
íåy
;

155 (
íåy
 = 
sùe_¥iv©e
->
timeouts
Ë!
NULL
)

156 
	`sùe_scheduÀ_ˇn˚l
(
sùe_¥iv©e
,

157 ((
sùe_scheduÀ
 *)
íåy
->
d©a
)->
«me
);

159 
	}
}

	@src/core/sipe-schedule.h

24 
	gsùe_c‹e_¥iv©e
;

26 (*
	tsùe_scheduÀ_a˘i⁄
)(
	tsùe_c‹e_¥iv©e
 *
	tsùe_¥iv©e
,

27 
	tgpoöãr
 
	td©a
);

40 
	`sùe_scheduÀ_£c⁄ds
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

41 c⁄° 
gch¨
 *
«me
,

42 
gpoöãr
 
∑ylﬂd
,

43 
guöt
 
£c⁄ds
,

44 
sùe_scheduÀ_a˘i⁄
 
a˘i⁄
,

45 
GDe°royNŸify
 
de°roy
);

46 
	`sùe_scheduÀ_m£c⁄ds
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

47 c⁄° 
gch¨
 *
«me
,

48 
gpoöãr
 
∑ylﬂd
,

49 
guöt
 
mûli£c⁄ds
,

50 
sùe_scheduÀ_a˘i⁄
 
a˘i⁄
,

51 
GDe°royNŸify
 
de°roy
);

52 
	`sùe_scheduÀ_ˇn˚l
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

53 c⁄° 
gch¨
 *
«me
);

54 
	`sùe_scheduÀ_ˇn˚l_Æl
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
);

	@src/core/sipe-session.c

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<time.h
>

28 
	~<glib.h
>

30 
	~"sùe-backíd.h
"

31 
	~"sùe-c‹e.h
"

32 
	~"sùe-dülog.h
"

33 
	~"sùe-£ssi⁄.h
"

34 
	~"sùe-utûs.h
"

35 
	~"sùe.h
"

38 
	$sùe_‰ì_queued_mesßge
(
queued_mesßge
 *
mesßge
)

40 
	`g_‰ì
(
mesßge
->
body
);

41 
	`g_‰ì
(
mesßge
->
c⁄ã¡_ty≥
);

42 
	`g_‰ì
(
mesßge
);

43 
	}
}

45 
sù_£ssi⁄
 *

46 
	$sùe_£ssi⁄_add_ch©
(
sùe_accou¡_d©a
 *
sù
)

48 
sù_£ssi⁄
 *
£ssi⁄
 = 
	`g_√w0
(sip_session, 1);

49 
£ssi⁄
->
ˇŒid
 = 
	`gíˇŒid
();

50 
£ssi⁄
->
is_mu…ù¨ty
 = 
TRUE
;

51 
£ssi⁄
->
ch©_id
 = 
	`ønd
();

52 
£ssi⁄
->
unc⁄fúmed_mesßges
 = 
	`g_hash_èbÀ_√w_fuŒ
(

53 
g_°r_hash
, 
g_°r_equÆ
, 
g_‰ì
, (
GDe°royNŸify
)
sùe_‰ì_queued_mesßge
);

54 
£ssi⁄
->
c⁄f_unc⁄fúmed_mesßges
 = 
	`g_hash_èbÀ_√w_fuŒ
(
g_°r_hash
, 
g_°r_equÆ
, 
g_‰ì
, g_free);

55 
sù
->
£ssi⁄s
 = 
	`g_¶i°_≠≥nd
(sù->£ssi⁄s, 
£ssi⁄
);

56  
£ssi⁄
;

57 
	}
}

59 
sù_£ssi⁄
 *

60 
	$sùe_£ssi⁄_föd_‹_add_ch©_by_ˇŒid
(
sùe_accou¡_d©a
 *
sù
,

61 c⁄° 
gch¨
 *
ˇŒid
)

63 
sù_£ssi⁄
 *
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_ch©_by_ˇŒid
(
sù
, 
ˇŒid
);

64 i‡(!
£ssi⁄
) {

65 
	`SIPE_DEBUG_INFO
("sùe_£ssi⁄_föd_‹_add_ch©_by_ˇŒid:Çew sessi⁄ f‹ %s", 
ˇŒid
);

66 
£ssi⁄
 = 
	`sùe_£ssi⁄_add_ch©
(
sù
);

67 
£ssi⁄
->
ˇŒid
 = 
	`g_°rdup
(callid);

69  
£ssi⁄
;

70 
	}
}

72 
sù_£ssi⁄
 *

73 
	$sùe_£ssi⁄_föd_ch©_by_ˇŒid
(
sùe_accou¡_d©a
 *
sù
,

74 c⁄° 
gch¨
 *
ˇŒid
)

76 i‡(
sù
 =
NULL
 || 
ˇŒid
 == NULL) {

77  
NULL
;

80 
SIPE_SESSION_FOREACH
 {

81 i‡(
£ssi⁄
->
ˇŒid
 &&

82 
	`sùe_°rˇ£_equÆ
(
ˇŒid
, 
£ssi⁄
->callid)) {

83  
£ssi⁄
;

85 } 
SIPE_SESSION_FOREACH_END
;

86  
NULL
;

87 
	}
}

89 
sù_£ssi⁄
 *

90 
	$sùe_£ssi⁄_föd_ch©_by_id
(
sùe_accou¡_d©a
 *
sù
,

91 
id
)

93 i‡(
sù
 =
NULL
) {

94  
NULL
;

97 
SIPE_SESSION_FOREACH
 {

98 i‡(
id
 =
£ssi⁄
->
ch©_id
) {

99  
£ssi⁄
;

101 } 
SIPE_SESSION_FOREACH_END
;

102  
NULL
;

103 
	}
}

105 
sù_£ssi⁄
 *

106 
	$sùe_£ssi⁄_föd_ch©_by_tôÀ
(
sùe_accou¡_d©a
 *
sù
,

107 c⁄° 
gch¨
 *
«me
)

109 i‡(
sù
 =
NULL
 || 
«me
 == NULL) {

110  
NULL
;

113 
SIPE_SESSION_FOREACH
 {

114 i‡(
£ssi⁄
->
ch©_tôÀ
 &&

115 !
	`g_°rˇ£cmp
(
«me
, 
£ssi⁄
->
ch©_tôÀ
)) {

116  
£ssi⁄
;

118 } 
SIPE_SESSION_FOREACH_END
;

119  
NULL
;

120 
	}
}

122 
sù_£ssi⁄
 *

123 
	$sùe_£ssi⁄_föd_c⁄„ªn˚
(
sùe_accou¡_d©a
 *
sù
,

124 c⁄° 
gch¨
 *
focus_uri
)

126 i‡(
sù
 =
NULL
 || 
focus_uri
 == NULL) {

127  
NULL
;

130 
SIPE_SESSION_FOREACH
 {

131 i‡(
£ssi⁄
->
focus_uri
 &&

132 
	`sùe_°rˇ£_equÆ
(
focus_uri
, 
£ssi⁄
->focus_uri)) {

133  
£ssi⁄
;

135 } 
SIPE_SESSION_FOREACH_END
;

136  
NULL
;

137 
	}
}

139 
sù_£ssi⁄
 *

140 
	$sùe_£ssi⁄_föd_im
(
sùe_accou¡_d©a
 *
sù
, c⁄° 
gch¨
 *
who
)

142 i‡(
sù
 =
NULL
 || 
who
 == NULL) {

143  
NULL
;

146 
SIPE_SESSION_FOREACH
 {

147 i‡(
£ssi⁄
->
wôh
 && 
	`sùe_°rˇ£_equÆ
(
who
, session->with)) {

148  
£ssi⁄
;

150 } 
SIPE_SESSION_FOREACH_END
;

151  
NULL
;

152 
	}
}

154 
sù_£ssi⁄
 *

155 
	$sùe_£ssi⁄_föd_‹_add_im
(
sùe_accou¡_d©a
 *
sù
,

156 c⁄° 
gch¨
 *
who
)

158 
sù_£ssi⁄
 *
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_im
(
sù
, 
who
);

159 i‡(!
£ssi⁄
) {

160 
	`SIPE_DEBUG_INFO
("sùe_£ssi⁄_föd_‹_add_im:Çew sessi⁄ f‹ %s", 
who
);

161 
£ssi⁄
 = 
	`g_√w0
(
sù_£ssi⁄
, 1);

162 
£ssi⁄
->
is_mu…ù¨ty
 = 
FALSE
;

163 
£ssi⁄
->
wôh
 = 
	`g_°rdup
(
who
);

164 
£ssi⁄
->
unc⁄fúmed_mesßges
 = 
	`g_hash_èbÀ_√w_fuŒ
(

165 
g_°r_hash
, 
g_°r_equÆ
, 
g_‰ì
, (
GDe°royNŸify
)
sùe_‰ì_queued_mesßge
);

166 
sù
->
£ssi⁄s
 = 
	`g_¶i°_≠≥nd
(sù->£ssi⁄s, 
£ssi⁄
);

168  
£ssi⁄
;

169 
	}
}

172 
	$sùe_£ssi⁄_ªmove
(
sùe_accou¡_d©a
 *
sù
, 
sù_£ssi⁄
 *
£ssi⁄
)

174 
GSLi°
 *
íåy
;

176 
sù
->
£ssi⁄s
 = 
	`g_¶i°_ªmove
(sù->£ssi⁄s, 
£ssi⁄
);

178 
	`sùe_dülog_ªmove_Æl
(
£ssi⁄
);

179 
	`sùe_dülog_‰ì
(
£ssi⁄
->
focus_dülog
);

181 
íåy
 = 
£ssi⁄
->
outgoög_mesßge_queue
;

182 
íåy
) {

183 
queued_mesßge
 *
msg
 = 
íåy
->
d©a
;

184 
	`g_‰ì
(
msg
->
body
);

185 
	`g_‰ì
(
msg
->
c⁄ã¡_ty≥
);

186 
	`g_‰ì
(
msg
);

187 
íåy
 =É¡ry->
√xt
;

189 
	`g_¶i°_‰ì
(
£ssi⁄
->
outgoög_mesßge_queue
);

191 
íåy
 = 
£ssi⁄
->
≥ndög_övôe_queue
;

192 
íåy
) {

193 
	`g_‰ì
(
íåy
->
d©a
);

194 
íåy
 =É¡ry->
√xt
;

196 
	`g_¶i°_‰ì
(
£ssi⁄
->
≥ndög_övôe_queue
);

198 
	`g_hash_èbÀ_de°roy
(
£ssi⁄
->
unc⁄fúmed_mesßges
);

199 
	`g_hash_èbÀ_de°roy
(
£ssi⁄
->
c⁄f_unc⁄fúmed_mesßges
);

201 
	`g_‰ì
(
£ssi⁄
->
wôh
);

202 
	`g_‰ì
(
£ssi⁄
->
ch©_tôÀ
);

203 
	`g_‰ì
(
£ssi⁄
->
ˇŒid
);

204 
	`g_‰ì
(
£ssi⁄
->
ro°î_m™agî
);

205 
	`g_‰ì
(
£ssi⁄
->
focus_uri
);

206 
	`g_‰ì
(
£ssi⁄
->
im_mcu_uri
);

207 
	`g_‰ì
(
£ssi⁄
->
subje˘
);

208 
	`g_‰ì
(
£ssi⁄
);

209 
	}
}

212 
	$sùe_£ssi⁄_ªmove_Æl
(
sùe_accou¡_d©a
 *
sù
)

214 
GSLi°
 *
íåy
;

215 (
íåy
 = 
sù
->
£ssi⁄s
Ë!
NULL
) {

216 
	`sùe_£ssi⁄_ªmove
(
sù
, 
íåy
->
d©a
);

218 
	}
}

221 
	$sùe_£ssi⁄_íqueue_mesßge
(
sù_£ssi⁄
 *
£ssi⁄
,

222 c⁄° 
gch¨
 *
body
, c⁄° gch¨ *
c⁄ã¡_ty≥
)

224 
queued_mesßge
 *
msg
 = 
	`g_√w0
(queued_message,1);

225 
msg
->
body
 = 
	`g_°rdup
(body);

226 i‡(
c⁄ã¡_ty≥
 !
NULL
)

227 
msg
->
c⁄ã¡_ty≥
 = 
	`g_°rdup
(content_type);

229 
£ssi⁄
->
outgoög_mesßge_queue
 = 
	`g_¶i°_≠≥nd
(£ssi⁄->outgoög_mesßge_queue, 
msg
);

230 
	}
}

232 
GSLi°
 *

233 
	$sùe_£ssi⁄_dequeue_mesßge
(
sù_£ssi⁄
 *
£ssi⁄
)

235 
queued_mesßge
 *
msg
;

237 i‡(
£ssi⁄
->
outgoög_mesßge_queue
 =
NULL
)

238  
NULL
;

240 
msg
 = 
£ssi⁄
->
outgoög_mesßge_queue
->
d©a
;

241 
£ssi⁄
->
outgoög_mesßge_queue
 = 
	`g_¶i°_ªmove
(£ssi⁄->outgoög_mesßge_queue, 
msg
);

242 
	`g_‰ì
(
msg
->
body
);

243 
	`g_‰ì
(
msg
->
c⁄ã¡_ty≥
);

244 
	`g_‰ì
(
msg
);

246  
£ssi⁄
->
outgoög_mesßge_queue
;

247 
	}
}

	@src/core/sipe-session.h

30 
	gsùe_accou¡_d©a
;

31 
	g_PuΩÀC⁄vîßti⁄
;

34 
	#SIPE_SESSION_FOREACH
 { \

35 
GSLi°
 *
íåy
 = 
sù
->
£ssi⁄s
; \

36 
íåy
) { \

37 
sù_£ssi⁄
 *
£ssi⁄
 = 
íåy
->
d©a
; \

38 
íåy
 =É¡ry->
√xt
;

	)

39 
	#SIPE_SESSION_FOREACH_END
 }}

	)

42 
	ssù_£ssi⁄
 {

43 
gch¨
 *
	mwôh
;

45 
GSLi°
 *
	mdülogs
;

47 
_PuΩÀC⁄vîßti⁄
 *
	mc⁄v
;

48 
GSLi°
 *
	moutgoög_mesßge_queue
;

50 
GHashTabÀ
 *
	munc⁄fúmed_mesßges
;

55 
gboﬁón
 
	mis_mu…ù¨ty
;

57 
	mch©_id
;

61 
gch¨
 *
	mch©_tôÀ
;

63 
gch¨
 *
	mˇŒid
;

65 
gch¨
 *
	mro°î_m™agî
;

66 
	mbid
;

67 
gboﬁón
 
	mis_vŸög_ö_¥ogªss
;

68 
GSLi°
 *
	m≥ndög_övôe_queue
;

73 
gch¨
 *
	mfocus_uri
;

74 
gch¨
 *
	mim_mcu_uri
;

75 
gch¨
 *
	msubje˘
;

76 
gboﬁón
 
	mlocked
;

77 
guöt
 
	mªque°_id
;

78 
sù_dülog
 *
	mfocus_dülog
;

80 
GHashTabÀ
 *
	mc⁄f_unc⁄fúmed_mesßges
;

89 
	squeued_mesßge
 {

91 
gch¨
 *
	mbody
;

97 
gch¨
 *
	mc⁄ã¡_ty≥
;

103 
sùe_‰ì_queued_mesßge
(
queued_mesßge
 *
mesßge
);

112 
sù_£ssi⁄
 *

113 
sùe_£ssi⁄_add_ch©
(
sùe_accou¡_d©a
 *
sù
);

123 
sù_£ssi⁄
 *

124 
sùe_£ssi⁄_föd_ch©_by_ˇŒid
(
sùe_accou¡_d©a
 *
sù
,

125 c⁄° 
gch¨
 *
ˇŒid
);

135 
sù_£ssi⁄
 *

136 
sùe_£ssi⁄_föd_‹_add_ch©_by_ˇŒid
(
sùe_accou¡_d©a
 *
sù
,

137 c⁄° 
gch¨
 *
ˇŒid
);

147 
sù_£ssi⁄
 *

148 
sùe_£ssi⁄_föd_ch©_by_id
(
sùe_accou¡_d©a
 *
sù
, 
id
);

158 
sù_£ssi⁄
 *

159 
sùe_£ssi⁄_föd_ch©_by_tôÀ
(
sùe_accou¡_d©a
 *
sù
,

160 c⁄° 
gch¨
 *
«me
);

170 
sù_£ssi⁄
 *

171 
sùe_£ssi⁄_föd_c⁄„ªn˚
(
sùe_accou¡_d©a
 *
sù
,

172 c⁄° 
gch¨
 *
focus_uri
);

182 
sù_£ssi⁄
 *

183 
sùe_£ssi⁄_föd_im
(
sùe_accou¡_d©a
 *
sù
, c⁄° 
gch¨
 *
who
);

193 
sù_£ssi⁄
 *

194 
sùe_£ssi⁄_föd_‹_add_im
(
sùe_accou¡_d©a
 *
sù
,

195 c⁄° 
gch¨
 *
who
);

204 
sùe_£ssi⁄_ªmove
(
sùe_accou¡_d©a
 *
sù
,

205 
sù_£ssi⁄
 *
£ssi⁄
);

213 
sùe_£ssi⁄_ªmove_Æl
(
sùe_accou¡_d©a
 *
sù
);

223 
sùe_£ssi⁄_íqueue_mesßge
(
sù_£ssi⁄
 *
£ssi⁄
,

224 c⁄° 
gch¨
 *
body
, c⁄° gch¨ *
c⁄ã¡_ty≥
);

233 
GSLi°
 *

234 
sùe_£ssi⁄_dequeue_mesßge
(
sù_£ssi⁄
 *
£ssi⁄
);

	@src/core/sipe-sign.c

23 
	~<°rög.h
>

25 
	~<glib.h
>

27 
	~"sùmsg.h
"

28 
	~"sùe-backíd.h
"

29 
	~"sùe-sign.h
"

31 
gch¨
 * c⁄° 
	gem±y_°rög
 = "";

33 
	$sùmsg_bªakdown_∑r£
(
sùmsg_bªakdown
 * 
msg
, 
gch¨
 * 
ªÆm
, gch¨ * 
èrgë
)

35 c⁄° 
gch¨
 * 
hdr
;

36 i‡(
msg
 =
NULL
 || msg->msg == NULL) {

37 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipmsg_breakdown_parse msg or msg->msg is NULL");

41 
msg
->
ønd
 = msg->
num
 = msg->
ªÆm
 = msg->
èrgë_«me
 =

42 
msg
->
c£q
 = msg->
‰om_uæ
 = msg->
‰om_èg
 = msg->
to_uæ
 = msg->
to_èg
 =

43 
msg
->
p_as£πë_idítôy_sù_uri
 = msg->
p_as£πë_idítôy_ãl_uri
 = 
em±y_°rög
;

44 
msg
->
ˇŒ_id
 = msg->
expúes
 = 
em±y_°rög
;

46 i‡((
hdr
 = 
	`sùmsg_föd_hódî
(
msg
->msg, "Proxy-Authorization")) ||

47 (
hdr
 = 
	`sùmsg_föd_hódî
(
msg
->msg, "Proxy-Authenticate")) ||

48 (
hdr
 = 
	`sùmsg_föd_hódî
(
msg
->msg, "Proxy-Authentication-Info")) ||

49 (
hdr
 = 
	`sùmsg_föd_hódî
(
msg
->msg, "Authentication-Info")) ) {

50 
msg
->
¥Ÿocﬁ
 = 
	`sùmsg_föd_∑π_of_hódî
(
hdr
, 
NULL
, " ", 
em±y_°rög
);

51 
msg
->
ønd
 = 
	`sùmsg_föd_∑π_of_hódî
(
hdr
, "ønd=\"", "\"", 
em±y_°rög
);

52 
msg
->
num
 = 
	`sùmsg_föd_∑π_of_hódî
(
hdr
, "num=\"", "\"", 
em±y_°rög
);

53 
msg
->
ªÆm
 = 
	`sùmsg_föd_∑π_of_hódî
(
hdr
, "ªÆm=\"", "\"", 
em±y_°rög
);

54 
msg
->
èrgë_«me
 = 
	`sùmsg_föd_∑π_of_hódî
(
hdr
, "èrgë«me=\"", "\"", 
em±y_°rög
);

56 
msg
->
¥Ÿocﬁ
 = 
	`°r°r
(
èrgë
, "sù/"Ë? 
	`g_°rdup
("Kerberos") : g_strdup("NTLM");

57 
msg
->
ªÆm
 = 
	`g_°rdup
(realm);

58 
msg
->
èrgë_«me
 = 
	`g_°rdup
(
èrgë
);

61 
msg
->
ˇŒ_id
 = 
	`sùmsg_föd_hódî
(msg->msg, "Call-ID");

63 
hdr
 = 
	`sùmsg_föd_hódî
(
msg
->msg, "CSeq");

64 i‡(
NULL
 !
hdr
) {

65 
msg
->
c£q
 = 
	`sùmsg_föd_∑π_of_hódî
(
hdr
, 
NULL
, " ", 
em±y_°rög
);

68 
hdr
 = 
	`sùmsg_föd_hódî
(
msg
->msg, "From");

69 i‡(
NULL
 !
hdr
) {

70 
msg
->
‰om_uæ
 = 
	`sùmsg_föd_∑π_of_hódî
(
hdr
, "<", ">", 
em±y_°rög
);

71 
msg
->
‰om_èg
 = 
	`sùmsg_föd_∑π_of_hódî
(
hdr
, ";èg=", ";", 
em±y_°rög
);

74 
hdr
 = 
	`sùmsg_föd_hódî
(
msg
->msg, "To");

75 i‡(
NULL
 !
hdr
) {

76 
msg
->
to_uæ
 = 
	`sùmsg_föd_∑π_of_hódî
(
hdr
, "<", ">", 
em±y_°rög
);

77 
msg
->
to_èg
 = 
	`sùmsg_föd_∑π_of_hódî
(
hdr
, ";èg=", ";", 
em±y_°rög
);

83 
hdr
 = 
	`sùmsg_föd_hódî
(
msg
->msg, "P-Asserted-Identity");

84 i‡(
NULL
 =
hdr
) {

85 
hdr
 = 
	`sùmsg_föd_hódî
(
msg
->msg, "P-Preferred-Identity");

87 i‡(
NULL
 !
hdr
) {

88 
gch¨
 *
tmp
 = 
	`sùmsg_föd_∑π_of_hódî
(
hdr
, "<", ">", 
em±y_°rög
);

89 i‡(
	`g_ascii_°∫ˇ£cmp
(
tmp
, "sip:", 4) == 0) {

90 
msg
->
p_as£πë_idítôy_sù_uri
 = 
tmp
;

91 } i‡(
	`g_ascii_°∫ˇ£cmp
(
tmp
, "tel:", 4) == 0){

92 
msg
->
p_as£πë_idítôy_ãl_uri
 = 
tmp
;

94 
	`g_‰ì
(
tmp
);

98 
msg
->
expúes
 = 
	`sùmsg_föd_hódî
(msg->msg, "Expires");

99 
	}
}

102 
	$sùmsg_bªakdown_‰ì
(
sùmsg_bªakdown
 * 
msg
)

104 i‡(
msg
->
¥Ÿocﬁ
 !
em±y_°rög
)

105 
	`g_‰ì
(
msg
->
¥Ÿocﬁ
);

106 i‡(
msg
->
ønd
 !
em±y_°rög
)

107 
	`g_‰ì
(
msg
->
ønd
);

108 i‡(
msg
->
num
 !
em±y_°rög
)

109 
	`g_‰ì
(
msg
->
num
);

110 i‡(
msg
->
ªÆm
 !
em±y_°rög
)

111 
	`g_‰ì
(
msg
->
ªÆm
);

112 i‡(
msg
->
èrgë_«me
 !
em±y_°rög
)

113 
	`g_‰ì
(
msg
->
èrgë_«me
);

118 i‡(
msg
->
c£q
 !
em±y_°rög
)

119 
	`g_‰ì
(
msg
->
c£q
);

120 i‡(
msg
->
‰om_uæ
 !
em±y_°rög
)

121 
	`g_‰ì
(
msg
->
‰om_uæ
);

122 i‡(
msg
->
‰om_èg
 !
em±y_°rög
)

123 
	`g_‰ì
(
msg
->
‰om_èg
);

124 i‡(
msg
->
to_uæ
 !
em±y_°rög
)

125 
	`g_‰ì
(
msg
->
to_uæ
);

126 i‡(
msg
->
to_èg
 !
em±y_°rög
)

127 
	`g_‰ì
(
msg
->
to_èg
);

129 i‡(
msg
->
p_as£πë_idítôy_sù_uri
 !
em±y_°rög
)

130 
	`g_‰ì
(
msg
->
p_as£πë_idítôy_sù_uri
);

131 i‡(
msg
->
p_as£πë_idítôy_ãl_uri
 !
em±y_°rög
)

132 
	`g_‰ì
(
msg
->
p_as£πë_idítôy_ãl_uri
);

136 
	}
}

138 
gch¨
 *

139 
	$sùmsg_bªakdown_gë_°rög
(
vîsi⁄
,

140 
sùmsg_bªakdown
 * 
msgbd
)

142 
gch¨
 *
ª•⁄£_°r
;

143 
gch¨
 *
msg
;

144 i‡(
msgbd
->
ªÆm
 =
em±y_°rög
 || msgbd->ªÆm =
NULL
) {

145 
	`SIPE_DEBUG_INFO_NOFORMAT
("realm NULL, soÑeturning NULL signature string");

146  
NULL
;

149 
ª•⁄£_°r
 = 
msgbd
->
msg
->
ª•⁄£
 !0 ? 
	`g_°rdup_¥ötf
("<%d>", msgbd->msg->ª•⁄£Ë: 
em±y_°rög
;

150 i‡(
vîsi⁄
 < 3) {

151 
msg
 = 
	`g_°rdup_¥ötf
(

154 
msgbd
->
¥Ÿocﬁ
, msgbd->
ønd
, msgbd->
num
, msgbd->
ªÆm
, msgbd->
èrgë_«me
, msgbd->
ˇŒ_id
, msgbd->
c£q
,

155 
msgbd
->
msg
->
mëhod
, msgbd->
‰om_uæ
, msgbd->
‰om_èg
, msgbd->
to_èg
,

156 
msgbd
->
expúes
 ? msgbd->expúe†: 
em±y_°rög
, 
ª•⁄£_°r


159 
msg
 = 
	`g_°rdup_¥ötf
(

162 
msgbd
->
¥Ÿocﬁ
, msgbd->
ønd
, msgbd->
num
, msgbd->
ªÆm
, msgbd->
èrgë_«me
, msgbd->
ˇŒ_id
, msgbd->
c£q
,

163 
msgbd
->
msg
->
mëhod
, msgbd->
‰om_uæ
, msgbd->
‰om_èg
, msgbd->
to_uæ
, msgbd->
to_èg
,

164 
msgbd
->
p_as£πë_idítôy_sù_uri
, msgbd->
p_as£πë_idítôy_ãl_uri
,

165 
msgbd
->
expúes
 ? msgbd->expúe†: 
em±y_°rög
, 
ª•⁄£_°r


169 i‡(
ª•⁄£_°r
 !
em±y_°rög
) {

170 
	`g_‰ì
(
ª•⁄£_°r
);

173  
msg
;

174 
	}
}

	@src/core/sipe-sign.h

23 
	ssùmsg_bªakdown
 {

24 
sùmsg
 * 
	mmsg
;

25 
gch¨
 * 
	m¥Ÿocﬁ
;

26 
gch¨
 * 
	mønd
;

27 
gch¨
 * 
	mnum
;

28 
gch¨
 * 
	mªÆm
;

29 
gch¨
 * 
	mèrgë_«me
;

30 c⁄° 
gch¨
 * 
	mˇŒ_id
;

31 
gch¨
 * 
	mc£q
;

33 
gch¨
 * 
	m‰om_uæ
;

34 
gch¨
 * 
	m‰om_èg
;

36 
gch¨
 * 
	mto_uæ
;

37 
gch¨
 * 
	mto_èg
;

39 
gch¨
 * 
	mp_as£πë_idítôy_sù_uri
;

41 
gch¨
 * 
	mp_as£πë_idítôy_ãl_uri
;

42 c⁄° 
gch¨
 * 
	mexpúes
;

46 
sùmsg_bªakdown_∑r£
(
sùmsg_bªakdown
 * 
msg
, 
gch¨
 * 
ªÆm
, gch¨ * 
èrgë
);

47 
gch¨
*

48 
sùmsg_bªakdown_gë_°rög
(
vîsi⁄
,

49 
sùmsg_bªakdown
 * 
msgbd
);

50 
sùmsg_bªakdown_‰ì
(
sùmsg_bªakdown
 * 
msg
);

	@src/core/sipe-utils.c

23 
	~<°dlib.h
>

24 
	~<°dio.h
>

25 
	~<°rög.h
>

26 
	~<˘y≥.h
>

27 
	~<time.h
>

29 
	~<glib.h
>

31 #ifde‡
_WIN32


32 
	~<n•≠i.h
>

34 
	~<uni°d.h
>

35 
	~<√t/if.h
>

36 
	~<sys/ty≥s.h
>

37 
	~<sys/io˘l.h
>

38 
	~<√töë/ö.h
>

39 
	~<¨∑/öë.h
>

42 
	~"sùe-backíd.h
"

43 
	~"sùe-c‹e.h
"

44 
	~"sùe-utûs.h
"

45 
	~"uuid.h
"

46 
	~"sùe.h
"

49 
	#RANDOM32BITS
 (
	`ønd
(Ë& 0xFFFF)

	)

51 
gch¨
 *
	$gíˇŒid
()

53  
	`g_°rdup_¥ötf
("%04Xg%04Xa%04Xi%04Xm%04Xt%04Xb%04Xx%04Xx",

54 
RANDOM32BITS
, RANDOM32BITS, RANDOM32BITS,

55 
RANDOM32BITS
, RANDOM32BITS, RANDOM32BITS,

56 
RANDOM32BITS
, RANDOM32BITS);

57 
	}
}

59 
gch¨
 *
	$gíèg
()

61  
	`g_°rdup_¥ötf
("%04d%04d", 
RANDOM32BITS
, RANDOM32BITS);

62 
	}
}

64 
gch¨
 *
	$gíc⁄fid
()

66  
	`g_°rdup_¥ötf
("%04X%04X%04X%04X%04X%04X%04X%04X",

67 
RANDOM32BITS
, RANDOM32BITS, RANDOM32BITS,

68 
RANDOM32BITS
, RANDOM32BITS, RANDOM32BITS,

69 
RANDOM32BITS
, RANDOM32BITS);

70 
	}
}

72 
gch¨
 *
	$gë_c⁄è˘
(c⁄° 
sùe_accou¡_d©a
 *
sù
)

74  
	`g_°rdup
(
sù
->
c⁄è˘
);

75 
	}
}

77 
gch¨
 *
	$∑r£_‰om
(c⁄° 
gch¨
 *
hdr
)

79 
gch¨
 *
‰om
;

80 c⁄° 
gch¨
 *
tmp
, *
tmp2
 = 
hdr
;

82 i‡(!
hdr
Ë 
NULL
;

83 
	`SIPE_DEBUG_INFO
("∑rsögáddªs†ouào‡%s", 
hdr
);

84 
tmp
 = 
	`°rchr
(
hdr
, '<');

87 i‡(
tmp
) {

88 
tmp2
 = 
tmp
 + 1;

89 
tmp
 = 
	`°rchr
(
tmp2
, '>');

90 i‡(
tmp
) {

91 
‰om
 = 
	`g_°∫dup
(
tmp2
, 
tmp
 -Åmp2);

93 
	`SIPE_DEBUG_INFO_NOFORMAT
("found < without > in From");

94  
NULL
;

97 
tmp
 = 
	`°rchr
(
tmp2
, ';');

98 i‡(
tmp
) {

99 
‰om
 = 
	`g_°∫dup
(
tmp2
, 
tmp
 -Åmp2);

101 
‰om
 = 
	`g_°rdup
(
tmp2
);

104 
	`SIPE_DEBUG_INFO
("gŸ %s", 
‰om
);

105  
‰om
;

106 
	}
}

108 
	$∑r£_c£q
(c⁄° 
gch¨
 *
hdr
)

110 
ªs
 = -1;

111 
gch¨
 **
ôems
;

112 
ôems
 = 
	`g_°r•lô
(
hdr
, " ", 1);

113 i‡(
ôems
[0]) {

114 
ªs
 = 
	`©oi
(
ôems
[0]);

116 
	`g_°r‰ìv
(
ôems
);

117  
ªs
;

118 
	}
}

120 
gch¨
 *
	$sù_uri_‰om_«me
(c⁄° 
gch¨
 *
«me
)

122 (
	`g_°rdup_¥ötf
("sù:%s", 
«me
));

123 
	}
}

125 
gch¨
 *
	$sù_uri
(c⁄° 
gch¨
 *
°rög
)

127 (
	`°r°r
(
°rög
, "sù:"Ë? 
	`g_°rdup
(°rögË: 
	`sù_uri_‰om_«me
(string));

128 
	}
}

130 
gch¨
 *

131 
	$gë_ïid
(
sùe_accou¡_d©a
 *
sù
)

133 i‡(!
sù
->
ïid
) {

134 
gch¨
 *
£lf_sù_uri
 = 
	`sù_uri_£lf
(
sù
);

135 
sù
->
ïid
 = 
	`sùe_gë_ïid
(
£lf_sù_uri
,

136 
	`g_gë_ho°_«me
(),

137 
	`sùe_backíd_√tw‹k_ù_addªss
());

138 
	`g_‰ì
(
£lf_sù_uri
);

140  
	`g_°rdup
(
sù
->
ïid
);

141 
	}
}

143 
guöt


144 
	$sùe_gë_pub_ö°™˚
(
sùe_accou¡_d©a
 *
sù
,

145 
publiˇti⁄_key
)

147 
ªs
 = 0;

148 
gch¨
 *
ïid
 = 
	`gë_ïid
(
sù
);

150 
	`ssˇnf
(
ïid
, "%08x", &
ªs
);

151 
	`g_‰ì
(
ïid
);

153 i‡(
publiˇti⁄_key
 =
SIPE_PUB_DEVICE
) {

155 } i‡(
publiˇti⁄_key
 =
SIPE_PUB_STATE_MACHINE
) {

156 
ªs
 = (res >> 4) | 0x30000000;

157 } i‡(
publiˇti⁄_key
 =
SIPE_PUB_STATE_USER
) {

158 
ªs
 = 0x20000000;

159 } i‡(
publiˇti⁄_key
 =
SIPE_PUB_STATE_CALENDAR
) {

160 
ªs
 = (res >> 4) | 0x40000000;

161 } i‡(
publiˇti⁄_key
 =
SIPE_PUB_STATE_CALENDAR_OOF
) {

162 
ªs
 = (res >> 4) | 0x50000000;

163 } i‡(
publiˇti⁄_key
 =
SIPE_PUB_CALENDAR_DATA
 ||

164 
publiˇti⁄_key
 =
SIPE_PUB_NOTE_OOF
)

166 
ˇÀnd¨_id
 = 0;

167 *
maû_hash
 = 
	`sùe_gë_ïid
(
sù
->
emaû
, "", "");

169 
	`ssˇnf
(
maû_hash
, "%08x", &
ˇÀnd¨_id
);

170 
	`g_‰ì
(
maû_hash
);

171 
ªs
 = (
ˇÀnd¨_id
 >> 4) | 0x40000000;

174  
ªs
;

175 
	}
}

190 
gboﬁón


191 
	$sùe_is_bad_Æüs
(c⁄° *
uri
,

192 c⁄° *
Æüs
)

194 *
uri_Æüs
;

195 
gboﬁón
 
ªsu…
 = 
FALSE
;

197 i‡(!
uri
Ë 
FALSE
;

198 i‡(!
Æüs
Ë 
TRUE
;

200 i‡(
	`g_°r_has_¥efix
(
Æüs
, "sù:"Ë|| g_°r_has_¥efix◊lüs, "sùs:")Ë 
TRUE
;

203 
uri_Æüs
 = 
	`sù_uri_‰om_«me
(
Æüs
);

204 i‡(
	`sùe_°rˇ£_equÆ
(
uri
, 
uri_Æüs
)) {

205 
ªsu…
 = 
TRUE
;

207 
	`g_‰ì
(
uri_Æüs
);

209  
ªsu…
;

210 
	}
}

212 
gboﬁón


213 
	$is_em±y
(c⁄° *
°
)

215 i‡(!
°
 || 
	`°æí
(st) == 0)

217  
TRUE
;

220 i‡(
	`is•a˚
((Ë*
°
) ||

221 
	`is•a˚
((Ë*(
°
 + 
	`°æí
(st) - 1)))

224 *
dup
 = 
	`g_°rdup
(
°
);

225 i‡(
	`°æí
(
	`g_°r°rù
(
dup
)) == 0) {

226 
	`g_‰ì
(
dup
);

227  
TRUE
;

229 
	`g_‰ì
(
dup
);

231  
FALSE
;

232 
	}
}

236 
	$ª∂a˚
(c⁄° *
°
,

237 c⁄° *
£¨ch
,

238 c⁄° *
ª∂a˚
)

240 **
tmp
;

241 *
ªs
;

243 i‡(!
°
Ë 
NULL
;

245 
ªs
 = 
	`g_°rjoöv
(
ª∂a˚
, 
tmp
 = 
	`g_°r•lô
(
°
, 
£¨ch
, -1));

246 
	`g_°r‰ìv
(
tmp
);

247  
ªs
;

248 
	}
}

251 
	$fix_√wlöes
(c⁄° *
°
)

253  
	`ª∂a˚
(
°
, "\r\n", "\n");

254 
	}
}

256 
gboﬁón


257 
	$sùe_°ªquÆ
(c⁄° 
gch¨
 *
À·
, c⁄° gch¨ *
right
)

259 #i‡
	`GLIB_CHECK_VERSION
(2,16,0)

260  (
	`g_°rcmp0
(
À·
, 
right
) == 0);

262  ((
À·
 =
NULL
 && 
right
 == NULL) ||

263 (
À·
 !
NULL
 && 
right
 !NULL && 
	`°rcmp
(left,Ñight) == 0));

265 
	}
}

267 
gboﬁón


268 
	$sùe_°rˇ£_equÆ
(c⁄° 
gch¨
 *
À·
, c⁄° gch¨ *
right
)

270  ((
À·
 =
NULL
 && 
right
 == NULL) ||

271 (
À·
 !
NULL
 && 
right
 !NULL && 
	`g_ascii_°rˇ£cmp
(left,Ñight) == 0));

272 
	}
}

274 
time_t


275 
	$sùe_utûs_°r_to_time
(c⁄° 
gch¨
 *
time°amp
)

277 
GTimeVÆ
 
time
;

278 
	`g_time_vÆ_‰om_iso8601
(
time°amp
, &
time
);

279  
time
.
tv_£c
;

280 
	}
}

282 
gch¨
 *

283 
	$sùe_utûs_time_to_°r
(
time_t
 
time°amp
)

285 
GTimeVÆ
 
time
 = { 
time°amp
, 0 };

286  
	`g_time_vÆ_to_iso8601
(&
time
);

287 
	}
}

289 
size_t


290 
	$hex_°r_to_buff
(c⁄° *
hex_°r
, 
guöt8
 **
buff
)

292 
two_digôs
[3];

293 
size_t
 
Àngth
;

294 
size_t
 
i
;

296 i‡(!
buff
)  0;

297 i‡(!
hex_°r
)  0;

299 
Àngth
 = 
	`°æí
(
hex_°r
)/2;

300 *
buff
 = (*)
	`g_mÆloc
(
Àngth
);

301 
i
 = 0; i < 
Àngth
; i++) {

302 
two_digôs
[0] = 
hex_°r
[
i
 * 2];

303 
two_digôs
[1] = 
hex_°r
[
i
 * 2 + 1];

304 
two_digôs
[2] = '\0';

305 (*
buff
)[
i
] = ()
	`°πoul
(
two_digôs
, 
NULL
, 16);

308  
Àngth
;

309 
	}
}

312 
	$buff_to_hex_°r
(c⁄° 
guöt8
 *
buff
, c⁄° 
size_t
 
buff_Àn
)

314 *
ªs
;

315 
size_t
 
i
, 
j
;

317 i‡(!
buff
Ë 
NULL
;

319 
ªs
 = 
	`g_mÆloc
(
buff_Àn
 * 2 + 1);

320 
i
 = 0, 
j
 = 0; i < 
buff_Àn
; i++, j+=2) {

321 
	`•rötf
(&
ªs
[
j
], "%02X", 
buff
[
i
]);

323 
ªs
[
j
] = '\0';

324  
ªs
;

325 
	}
}

327 
gboﬁón


328 
	$sùe_utûs_∑r£_löes
(
GSLi°
 **
li°
, 
gch¨
 **
löes
, gch¨ *
dñimôî
)

330 
i
;

331 
gch¨
 **
∑πs
;

332 
gch¨
 *
dummy
;

333 
gch¨
 *
dummy2
;

334 
gch¨
 *
tmp
;

336 
i
 = 0; 
löes
[i] && 
	`°æí
(lines[i]) > 2; i++) {

337 
∑πs
 = 
	`g_°r•lô
(
löes
[
i
], 
dñimôî
, 2);

338 if(!
∑πs
[0] || !parts[1]) {

339 
	`g_°r‰ìv
(
∑πs
);

340  
FALSE
;

342 
dummy
 = 
∑πs
[1];

343 
dummy2
 = 0;

344 *
dummy
==' ' || *dummy=='\t') dummy++;

345 
dummy2
 = 
	`g_°rdup
(
dummy
);

346 
löes
[
i
+1] && (lines[i+1][0]==' ' ||Üines[i+1][0]=='\t')) {

347 
i
++;

348 
dummy
 = 
löes
[
i
];

349 *
dummy
==' ' || *dummy=='\t') dummy++;

350 
tmp
 = 
	`g_°rdup_¥ötf
("%†%s",
dummy2
, 
dummy
);

351 
	`g_‰ì
(
dummy2
);

352 
dummy2
 = 
tmp
;

354 *
li°
 = 
	`sùe_utûs_«mevÆ_add
(*li°, 
∑πs
[0], 
dummy2
);

355 
	`g_‰ì
(
dummy2
);

356 
	`g_°r‰ìv
(
∑πs
);

359  
TRUE
;

360 
	}
}

362 
GSLi°
*

363 
	$sùe_utûs_«mevÆ_add
(
GSLi°
* 
li°
, c⁄° 
gch¨
 *
«me
, c⁄° gch¨ *
vÆue
)

365 
sù«mevÆ
 *
ñemít
 = 
	`g_√w0
(sipnameval,1);

368 i‡(!
vÆue
) {

369 
	`SIPE_DEBUG_ERROR
("sipe_utils_nameval_add: NULL value for %s",

370 
«me
);

371 
vÆue
 = "";

374 
ñemít
->
«me
 = 
	`g_°rdup
(name);

375 
ñemít
->
vÆue
 = 
	`g_°rdup
(value);

376  
	`g_¶i°_≠≥nd
(
li°
, 
ñemít
);

377 
	}
}

380 
	$sùe_utûs_«mevÆ_‰ì
(
GSLi°
 *
li°
) {

381 
sù«mevÆ
 *
ñem
;

382 
li°
) {

383 
ñem
 = 
li°
->
d©a
;

384 
li°
 = 
	`g_¶i°_ªmove
÷i°,
ñem
);

385 
	`g_‰ì
(
ñem
->
«me
);

386 
	`g_‰ì
(
ñem
->
vÆue
);

387 
	`g_‰ì
(
ñem
);

389 
	}
}

391 c⁄° 
gch¨
 *

392 
	$sùe_utûs_«mevÆ_föd
(c⁄° 
GSLi°
 *
li°
, c⁄° 
gch¨
 *
«me
)

394  
	`sùe_utûs_«mevÆ_föd_ö°™˚
 (
li°
, 
«me
, 0);

395 
	}
}

397 c⁄° 
gch¨
 *

398 
	$sùe_utûs_«mevÆ_föd_ö°™˚
(c⁄° 
GSLi°
 *
li°
, c⁄° 
gch¨
 *
«me
, 
which
)

400 c⁄° 
GSLi°
 *
tmp
;

401 
sù«mevÆ
 *
ñem
;

402 
i
 = 0;

403 
tmp
 = 
li°
;

404 
tmp
) {

405 
ñem
 = 
tmp
->
d©a
;

407 i‡(
	`sùe_°rˇ£_equÆ
(
ñem
->
«me
,Çame)) {

408 i‡(
i
 =
which
) {

409  
ñem
->
vÆue
;

411 
i
++;

413 
tmp
 = 
	`g_¶i°_√xt
(tmp);

415  
NULL
;

416 
	}
}

418 
gch¨
 *
	$sùe_utûs_°r_ª∂a˚
(c⁄° 
gch¨
 *
°rög
,

419 c⁄° 
gch¨
 *
dñimôî
,

420 c⁄° 
gch¨
 *
ª∂a˚mít
)

422 
gch¨
 **
•lô
;

423 
gch¨
 *
ªsu…
;

425 i‡(!
°rög
 || !
dñimôî
 || !
ª∂a˚mít
Ë 
NULL
;

427 
•lô
 = 
	`g_°r•lô
(
°rög
, 
dñimôî
, 0);

428 
ªsu…
 = 
	`g_°rjoöv
(
ª∂a˚mít
, 
•lô
);

429 
	`g_°r‰ìv
(
•lô
);

431  
ªsu…
;

432 
	}
}

434 
	$sùe_utûs_shrök_buf„r
(
sùe_å™•‹t_c⁄√˘i⁄
 *
c⁄n
,

435 c⁄° 
gch¨
 *
uƒód
)

437 
c⁄n
->
buf„r_u£d
 -
uƒód
 - c⁄n->
buf„r
;

439 
	`memmove
(
c⁄n
->
buf„r
, 
uƒód
, c⁄n->
buf„r_u£d
 + 1);

440 
	}
}

446 #ifde‡
_SIZEOF_ADDR_IFREQ


447 
	#HX_SIZE_OF_IFREQ
(
a
Ë
	`_SIZEOF_ADDR_IFREQ
◊)

	)

449 
	#HX_SIZE_OF_IFREQ
(
a
Ë◊)

	)

452 c⁄° * 
	$sùe_utûs_gë_suôabÀ_loˇl_ù
(
fd
)

454 
sour˚
 = (
fd
 >0Ë? fd : 
	`sockë
(
PF_INET
,
SOCK_STREAM
, 0);

456 i‡(
sour˚
 >= 0) {

457 
buf„r
[1024];

458 
ù
[16];

459 *
tmp
;

460 
ifc⁄f
 
ifc
;

461 
guöt32
 
lho°
 = 
	`ht⁄l
(127 * 256 * 256 * 256 + 1);

462 
guöt32
 
Œoˇl
 = 
	`ht⁄l
((169 << 24) + (254 << 16));

464 
ifc
.
ifc_Àn
 = (
buf„r
);

465 
ifc
.
ifc_ªq
 = (
i‰eq
 *)
buf„r
;

466 
	`io˘l
(
sour˚
, 
SIOCGIFCONF
, &
ifc
);

468 i‡(
fd
 < 0)

469 
	`˛o£
(
sour˚
);

471 
tmp
 = 
buf„r
;

472 
tmp
 < 
buf„r
 + 
ifc
.
ifc_Àn
)

474 
i‰eq
 *
i‰
 = (i‰eq *)
tmp
;

475 
tmp
 +
	`HX_SIZE_OF_IFREQ
(*
i‰
);

477 i‡(
i‰
->
i‰_addr
.
ß_Ámûy
 =
AF_INET
)

479 
sockaddr_ö
 *
sö±r
 = (sockaddr_ö *)&
i‰
->
i‰_addr
;

480 i‡(
sö±r
->
sö_addr
.
s_addr
 !
lho°


481 && (
sö±r
->
sö_addr
.
s_addr
 & 
	`ht⁄l
(0xFFFF0000)Ë!
Œoˇl
)

483 
add
 = 
	`¡ohl
(
sö±r
->
sö_addr
.
s_addr
);

484 
	`g_¢¥ötf
(
ù
, 16, "%lu.%lu.%lu.%lu",

485 ((
add
 >> 24) & 255),

486 ((
add
 >> 16) & 255),

487 ((
add
 >> 8) & 255),

488 
add
 & 255);

490  
ù
;

497 
	}
}

	@src/core/sipe-utils.h

31 
	gsùe_accou¡_d©a
;

32 
	gsùe_å™•‹t_c⁄√˘i⁄
;

44 
	#SIPE_PUB_DEVICE
 0

	)

52 
	#SIPE_PUB_STATE_MACHINE
 3

	)

60 
	#SIPE_PUB_STATE_USER
 2

	)

68 
	#SIPE_PUB_STATE_CALENDAR
 4

	)

77 
	#SIPE_PUB_STATE_CALENDAR_OOF
 5

	)

85 
	#SIPE_PUB_STATE_PHONE
 7

	)

93 
	#SIPE_PUB_CALENDAR_DATA
 400

	)

101 
	#SIPE_PUB_NOTE_OOF
 400

	)

107 
gch¨
 *

108 
gë_ïid
(
sùe_accou¡_d©a
 *
sù
);

115 
gch¨
 *
gíˇŒid
();

122 
gch¨
 *
gíèg
();

132 
gch¨
 *
gíc⁄fid
();

141 
guöt


142 
sùe_gë_pub_ö°™˚
(
sùe_accou¡_d©a
 *
sù
,

143 
publiˇti⁄_key
);

152 
gch¨
 *
gë_c⁄è˘
(c⁄° 
sùe_accou¡_d©a
 *
sù
);

161 
gch¨
 *
∑r£_‰om
(c⁄° gch¨ *
hdr
);

170 
∑r£_c£q
(c⁄° 
gch¨
 *
hdr
);

179 
gch¨
 *
sù_uri_‰om_«me
(c⁄° gch¨ *
«me
);

188 
	#sù_uri_£lf
(
sù
Ë(
	`sù_uri_‰om_«me
(sù->
u£∫ame
))

	)

197 
gch¨
 *
sù_uri
(c⁄° gch¨ *
°rög
);

206 
gboﬁón


207 
sùe_is_bad_Æüs
(c⁄° *
uri
,

208 c⁄° *
Æüs
);

214 
gboﬁón


215 
is_em±y
(c⁄° *
°
);

219 
ª∂a˚
(c⁄° *
°
,

220 c⁄° *
£¨ch
,

221 c⁄° *
ª∂a˚
);

228 
fix_√wlöes
(c⁄° *
°
);

245 
gboﬁón
 
sùe_°ªquÆ
(c⁄° 
gch¨
 *
À·
, c⁄° gch¨ *
right
);

259 
gboﬁón
 
sùe_°rˇ£_equÆ
(c⁄° 
gch¨
 *
À·
, c⁄° gch¨ *
right
);

267 
time_t


268 
sùe_utûs_°r_to_time
(c⁄° 
gch¨
 *
time°amp
);

278 
gch¨
 *

279 
sùe_utûs_time_to_°r
(
time_t
 
time°amp
);

281 
	ssù«mevÆ
 {

282 
gch¨
 *
	m«me
;

283 
gch¨
 *
	mvÆue
;

295 
size_t


296 
hex_°r_to_buff
(c⁄° *
hex_°r
, 
guöt8
 **
buff
);

308 
buff_to_hex_°r
(c⁄° 
guöt8
 *
buff
, c⁄° 
size_t
 
buff_Àn
);

321 
gboﬁón


322 
sùe_utûs_∑r£_löes
(
GSLi°
 **
li°
, 
gch¨
 **
löes
, gch¨ *
dñimôî
);

333 
GSLi°
 *

334 
sùe_utûs_«mevÆ_add
(
GSLi°
 *
li°
, c⁄° 
gch¨
 *
«me
, c⁄° gch¨ *
vÆue
);

344 c⁄° 
gch¨
 *

345 
sùe_utûs_«mevÆ_föd
(c⁄° 
GSLi°
 *
li°
, c⁄° 
gch¨
 *
«me
);

358 c⁄° 
gch¨
 *

359 
sùe_utûs_«mevÆ_föd_ö°™˚
(c⁄° 
GSLi°
 *
li°
, c⁄° 
gch¨
 *
«me
, 
which
);

367 
sùe_utûs_«mevÆ_‰ì
(
GSLi°
 *
li°
);

379 
gch¨
 *
sùe_utûs_°r_ª∂a˚
(c⁄° gch¨ *
°rög
,

380 c⁄° 
gch¨
 *
dñimôî
,

381 c⁄° 
gch¨
 *
ª∂a˚mít
);

389 
sùe_utûs_shrök_buf„r
(
sùe_å™•‹t_c⁄√˘i⁄
 *
c⁄n
,

390 c⁄° 
gch¨
 *
uƒód
);

402 c⁄° * 
sùe_utûs_gë_suôabÀ_loˇl_ù
(
fd
);

	@src/core/sipe-win32dep.c

32 
	~"glib.h
"

34 
	~"sùe-wö32dï.h
"

35 
	~"sùe-backíd.h
"

37 
HKEY
 
	$_ªg_›í_key
(
HKEY
 
roŸkey
, c⁄° *
subkey
, 
REGSAM
 
ac˚ss
) {

38 
HKEY
 
ªg_key
 = 
NULL
;

39 
LONG
 
rv
;

41 if(
	`G_WIN32_HAVE_WIDECHAR_API
()) {

42 
wch¨_t
 *
wc_subkey
 = 
	`g_utf8_to_utf16
(
subkey
, -1, 
NULL
,

43 
NULL
, NULL);

44 
rv
 = 
	`RegO≥nKeyExW
(
roŸkey
, 
wc_subkey
, 0, 
ac˚ss
, &
ªg_key
);

45 
	`g_‰ì
(
wc_subkey
);

47 *
˝_subkey
 = 
	`g_loˇÀ_‰om_utf8
(
subkey
, -1, 
NULL
,

48 
NULL
, NULL);

49 
rv
 = 
	`RegO≥nKeyExA
(
roŸkey
, 
˝_subkey
, 0, 
ac˚ss
, &
ªg_key
);

50 
	`g_‰ì
(
˝_subkey
);

53 i‡(
rv
 !
ERROR_SUCCESS
) {

54 *
îrmsg
 = 
	`g_wö32_îr‹_mesßge
(
rv
);

55 
	`SIPE_DEBUG_ERROR
("CouldÇot openÑeg key '%s' subkey '%s'.\nMessage: (%ld) %s\n",

56 ((
roŸkey
 =
HKEY_LOCAL_MACHINE
) ? "HKLM" :

57 (
roŸkey
 =
HKEY_CURRENT_USER
) ? "HKCU" :

58 (
roŸkey
 =
HKEY_CLASSES_ROOT
) ? "HKCR" : "???"),

59 
subkey
, 
rv
, 
îrmsg
);

60 
	`g_‰ì
(
îrmsg
);

63  
ªg_key
;

64 
	}
}

66 
gboﬁón
 
	$_ªg_ªad
(
HKEY
 
ªg_key
, c⁄° *
vÆ«me
, 
LPDWORD
 
ty≥
, 
LPBYTE
 
d©a
, LPDWORD 
d©a_Àn
) {

67 
LONG
 
rv
;

69 if(
	`G_WIN32_HAVE_WIDECHAR_API
()) {

70 
wch¨_t
 *
wc_vÆ«me
 = 
NULL
;

71 i‡(
vÆ«me
)

72 
wc_vÆ«me
 = 
	`g_utf8_to_utf16
(
vÆ«me
, -1, 
NULL
, NULL, NULL);

73 
rv
 = 
	`RegQuîyVÆueExW
(
ªg_key
, 
wc_vÆ«me
, 0, 
ty≥
, 
d©a
, 
d©a_Àn
);

74 
	`g_‰ì
(
wc_vÆ«me
);

76 *
˝_vÆ«me
 = 
NULL
;

77 if(
vÆ«me
)

78 
˝_vÆ«me
 = 
	`g_loˇÀ_‰om_utf8
(
vÆ«me
, -1, 
NULL
, NULL, NULL);

79 
rv
 = 
	`RegQuîyVÆueExA
(
ªg_key
, 
˝_vÆ«me
, 0, 
ty≥
, 
d©a
, 
d©a_Àn
);

80 
	`g_‰ì
(
˝_vÆ«me
);

83 i‡(
rv
 !
ERROR_SUCCESS
) {

84 *
îrmsg
 = 
	`g_wö32_îr‹_mesßge
(
rv
);

85 
	`SIPE_DEBUG_ERROR
("CouldÇotÑead fromÑeg key value '%s'.\nMessage: (%ld) %s\n",

86 
vÆ«me
, 
rv
, 
îrmsg
);

87 
	`g_‰ì
(
îrmsg
);

90  (
rv
 =
ERROR_SUCCESS
);

91 
	}
}

93 *
	$wpuΩÀ_ªad_ªg_ex∑nd_°rög
(
HKEY
 
roŸkey
, c⁄° *
subkey
, c⁄° *
vÆ«me
) {

95 
DWORD
 
ty≥
;

96 
DWORD
 
nbyãs
;

97 
HKEY
 
ªg_key
 = 
	`_ªg_›í_key
(
roŸkey
, 
subkey
, 
KEY_QUERY_VALUE
);

98 *
ªsu…
 = 
NULL
;

100 if(
ªg_key
) {

101 if(
	`_ªg_ªad
(
ªg_key
, 
vÆ«me
, &
ty≥
, 
NULL
, &
nbyãs
Ë&& (ty≥ =
REG_SZ
 ||Åy≥ =
REG_EXPAND_SZ
)) {

102 
LPBYTE
 
d©a
;

103 if(
	`G_WIN32_HAVE_WIDECHAR_API
())

104 
d©a
 = (
LPBYTE
Ë
	`g_√w
(
wch¨_t
, ((
nbyãs
 + 1) / (wchar_t)) + 1);

106 
d©a
 = (
LPBYTE
Ë
	`g_mÆloc
(
nbyãs
 + 1);

108 if(
	`_ªg_ªad
(
ªg_key
, 
vÆ«me
, &
ty≥
, 
d©a
, &
nbyãs
)) {

109 if(
	`G_WIN32_HAVE_WIDECHAR_API
()) {

110 
wch¨_t
 *
wc_ãmp
 = (wch¨_t*Ë
d©a
;

111 
wc_ãmp
[
nbyãs
 / (
wch¨_t
)] = '\0';

112 
ªsu…
 = 
	`g_utf16_to_utf8
(
wc_ãmp
, -1,

113 
NULL
, NULL, NULL);

115 *
˝_ãmp
 = (*Ë
d©a
;

116 
˝_ãmp
[
nbyãs
] = '\0';

117 
ªsu…
 = 
	`g_loˇÀ_to_utf8
(
˝_ãmp
, -1,

118 
NULL
, NULL, NULL);

121 
	`g_‰ì
(
d©a
);

123 
	`RegClo£Key
(
ªg_key
);

126  
ªsu…
;

127 
	}
}

	@src/core/sipe-win32dep.h

23 
	~<wödows.h
>

25 *
wpuΩÀ_ªad_ªg_ex∑nd_°rög
(
HKEY
 
roŸkey
, c⁄° *
subkey
, c⁄° *
vÆ«me
);

	@src/core/sipe-xml-tests.c

25 
	~<°dlib.h
>

26 
	~<°dio.h
>

27 
	~<°rög.h
>

28 
	~<°d¨g.h
>

29 
	~<time.h
>

31 
	~<glib.h
>

33 
	~"sùe-comm⁄.h
"

34 
	~"sùe-backíd.h
"

35 
	~"sùe-dige°.h
"

36 
	~"sùe-xml.h
"

37 
	~"sùe-utûs.h
"

40 
	$sùe_backíd_debug
(
sùe_debug_Àvñ
 
Àvñ
,

41 c⁄° 
gch¨
 *
f‹m©
,

44 
va_li°
 
¨gs
;

45 
gch¨
 *
msg
;

46 
	`va_°¨t
(
¨gs
, 
f‹m©
);

47 
msg
 = 
	`g_°rdup_v¥ötf
(
f‹m©
, 
¨gs
);

48 
	`va_íd
(
¨gs
);

50 
	`¥ötf
("DEBUG %d: %s", 
Àvñ
, 
msg
);

51 
	`g_‰ì
(
msg
);

52 
	}
}

54 
	$sùe_dige°_sha1
(
SIPE_UNUSED_PARAMETER
 c⁄° 
guch¨
 *
d©a
,

55 
SIPE_UNUSED_PARAMETER
 
gsize
 
Àngth
,

56 
SIPE_UNUSED_PARAMETER
 
guch¨
 *
dige°
Ë{
	}
}

57 c⁄° 
gch¨
 *
	$sùe_backíd_√tw‹k_ù_addªss
(Ë{ (
NULL
); 
	}
}

60 
guöt
 
	gsuc˚eded
 = 0;

61 
guöt
 
	gÁûed
 = 0;

62 c⁄° 
gch¨
 *
	gã°°rög
;

64 
sùe_xml
 *
	$as£π_∑r£
(c⁄° 
gch¨
 *
s
, 
gboﬁón
 
ok
)

66 
sùe_xml
 *
xml
 = 
	`sùe_xml_∑r£
(
s
, s ? 
	`°æí
(s) : 0);

68 
ã°°rög
 = 
s
 ? s : "(nil)";

70 i‡((
ok
 && 
xml
) || (!ok && !xml)) {

71 
suc˚eded
++;

73 
	`¥ötf
("[%s]\nXMLÖarse FAILED: %p\n",

74 
ã°°rög
, 
xml
);

75 
Áûed
++;

77 (
xml
);

78 
	}
}

80 
	$as£π_«me
(c⁄° 
sùe_xml
 *
xml
, c⁄° 
gch¨
 *
s
)

82 c⁄° 
gch¨
 *
«me
 = 
	`sùe_xml_«me
(
xml
);

84 i‡(
	`sùe_°ªquÆ
(
«me
, 
s
)) {

85 
suc˚eded
++;

87 
	`¥ötf
("[%s]\nXMLÇame FAILED: '%s'Éxpected: '%s'\n",

88 
ã°°rög
, 
«me
 ?Çamê: "“û)", 
s
 ? s : "(nil)");

89 
Áûed
++;

92 
	}
}

94 c⁄° 
sùe_xml
 *
	$as£π_chûd
(c⁄° 
sùe_xml
 *
xml
, c⁄° 
gch¨
 *
s
, 
gboﬁón
 
ok
)

96 c⁄° 
sùe_xml
 *
chûd
 = 
	`sùe_xml_chûd
(
xml
, 
s
);

98 i‡((
ok
 && 
chûd
) || (!ok && !child)) {

99 
suc˚eded
++;

101 
	`¥ötf
("[%s]\nXML child FAILED: %p '%s'\n",

102 
ã°°rög
, 
xml
, 
s
 ? s : "(nil)");

103 
Áûed
++;

105 (
chûd
);

106 
	}
}

108 
	$as£π_d©a
(c⁄° 
sùe_xml
 *
xml
, c⁄° 
gch¨
 *
s
)

110 
gch¨
 *
d©a
 = 
	`sùe_xml_d©a
(
xml
);

112 i‡(
	`sùe_°ªquÆ
(
s
, 
d©a
)) {

113 
suc˚eded
++;

115 
	`¥ötf
("[%s]\nXML data FAILED: '%s'Éxpected: '%s'\n",

116 
ã°°rög
, 
d©a
 ? d©®: "“û)", 
s
 ? s : "(nil)");

117 
Áûed
++;

119 
	`g_‰ì
(
d©a
);

120 
	}
}

122 
	$as£π_©åibuã
(c⁄° 
sùe_xml
 *
xml
,

123 c⁄° 
gch¨
 *
key
, c⁄° gch¨ *
vÆue
)

125 c⁄° 
gch¨
 *
©å
 = 
	`sùe_xml_©åibuã
(
xml
, 
key
);

127 i‡(
	`sùe_°ªquÆ
(
vÆue
, 
©å
)) {

128 
suc˚eded
++;

130 
	`¥ötf
("[%s]\nXMLáttr FAILED: '%s': '%s'Éxpected: '%s'\n",

131 
ã°°rög
, 
key
 ? key : "(nil)",

132 
©å
 ?áâ∏: "“û)", 
vÆue
 ? value : "(nil)");

133 
Áûed
++;

135 
	}
}

137 
	$as£π_öt_©åibuã
(c⁄° 
sùe_xml
 *
xml
,

138 c⁄° 
gch¨
 *
key
, 
göt
 
vÆue
, göà
ÁŒback
)

140 
göt
 
©å
 = 
	`sùe_xml_öt_©åibuã
(
xml
, 
key
, 
ÁŒback
);

142 i‡((
©å
 =
vÆue
Ë|| (©å =
ÁŒback
)) {

143 
suc˚eded
++;

145 
	`¥ötf
("[%s]\nXML intáttr FAILED: '%s': %dÉxpected: %d/%d\n",

146 
ã°°rög
, 
key
 ? key : "(nil)",

147 
©å
, 
vÆue
, 
ÁŒback
);

148 
Áûed
++;

150 
	}
}

152 
	$as£π_°rögify
(c⁄° 
sùe_xml
 *
xml
,

153 
ex≥˘ed
, ...)

155 
va_li°
 
¨gs
;

156 
gch¨
 *
°rög
 = 
	`sùe_xml_°rögify
(
xml
);

158 
	`va_°¨t
(
¨gs
, 
ex≥˘ed
);

159 
ex≥˘ed
-- > 0) {

160 c⁄° 
gch¨
 *
Æã∫©ive
 = 
	`va_¨g
(
¨gs
, const gchar *);

161 i‡(
	`sùe_°ªquÆ
(
°rög
, 
Æã∫©ive
)) {

162 
suc˚eded
++;

165 
	`¥ötf
("XML stringifyálternative FAILED: '%s' (tryingÇext...)\n",

166 
Æã∫©ive
 ?álternative : "(nil)");

169 
	`va_íd
(
¨gs
);

171 i‡(
ex≥˘ed
 < 0) {

172 
	`¥ötf
("[%s]\nXML stringifyállálternatives FAILED: '%s'\n",

173 
ã°°rög
, 
°rög
 ? string : "(nil)");

174 
Áûed
++;

177 
	`g_‰ì
(
°rög
);

178 
	}
}

182 
gsize
 
	gÆloˇãd
 = 0;

184 
gpoöãr
 
	$ã°_mÆloc
(
gsize
 
n_byãs
)

186 
gsize
 *
m
 = 
	`mÆloc
((gsizeË+ 
n_byãs
);

187 i‡(!
m
Ë(
NULL
);

188 
Æloˇãd
 +
n_byãs
;

189 
m
[0] = 
n_byãs
;

190 (
m
 + 1);

191 
	}
}

193 
	$ã°_‰ì
(
gpoöãr
 
mem
)

195 
gsize
 *
m
 = 
mem
;

196 i‡(!
m
) ;

197 
m
--;

198 
Æloˇãd
 -
m
[0];

199 
	`‰ì
(
m
);

200 
	}
}

202 
gpoöãr
 
	$ã°_ªÆloc
(
gpoöãr
 
mem
, 
gsize
 
n_byãs
)

204 
guöt8
 *
n
 = 
NULL
;

205 i‡(
n_byãs
) {

206 
n
 = 
	`ã°_mÆloc
(
n_byãs
);

207 i‡(
mem
 && 
n
) {

208 
	`mem˝y
(
n
, 
mem
, 
n_byãs
);

211 
	`ã°_‰ì
(
mem
);

212 (
n
);

213 
	}
}

215 
GMemVTabÀ
 
	gmem‹y_Àak_check
 = {

216 &
ã°_mÆloc
,

217 &
ã°_ªÆloc
,

218 &
ã°_‰ì
,

219 
NULL
,

220 
NULL
,

221 
NULL
,

224 
	$maö
(
SIPE_UNUSED_PARAMETER
 
¨gc
, SIPE_UNUSED_PARAMETER **
¨gv
)

226 
sùe_xml
 *
xml
;

227 c⁄° 
sùe_xml
 *
chûd1
, *
chûd2
;

234 
	`g_mem_£t_vèbÀ
(&
mem‹y_Àak_check
);

236 (Ë
mem‹y_Àak_check
;

240 
xml
 = 
	`as£π_∑r£
(
NULL
, 
FALSE
);

241 
	`as£π_°rögify
(
xml
, 1, 
NULL
);

242 
	`sùe_xml_‰ì
(
xml
);

243 
xml
 = 
	`as£π_∑r£
("", 
FALSE
);

244 
	`sùe_xml_‰ì
(
xml
);

245 
xml
 = 
	`as£π_∑r£
("<?xm»vîsi⁄=\"1.0\" ?>", 
FALSE
);

246 
	`sùe_xml_‰ì
(
xml
);

249 
xml
 = 
	`as£π_∑r£
("<ã°></ã°>", 
TRUE
);

250 
	`as£π_«me
(
xml
, "test");

251 
	`as£π_d©a
(
xml
, 
NULL
);

252 
	`as£π_°rögify
(
xml
, 1, "<test/>");

253 
	`sùe_xml_‰ì
(
xml
);

254 
xml
 = 
	`as£π_∑r£
("<ã°/>", 
TRUE
);

255 
	`as£π_«me
(
xml
, "test");

256 
	`as£π_d©a
(
xml
, 
NULL
);

257 
	`as£π_°rögify
(
xml
, 1, 
ã°°rög
);

258 
	`sùe_xml_‰ì
(
xml
);

259 
xml
 = 
	`as£π_∑r£
("<ã°>a</ã°>", 
TRUE
);

260 
	`as£π_«me
(
xml
, "test");

261 
	`as£π_d©a
(
xml
, "a");

262 
	`as£π_°rögify
(
xml
, 1, 
ã°°rög
);

263 
	`sùe_xml_‰ì
(
xml
);

264 
xml
 = 
	`as£π_∑r£
("<ã°>a\nb</ã°>", 
TRUE
);

265 
	`as£π_«me
(
xml
, "test");

266 
	`as£π_d©a
(
xml
, "a\nb");

267 
	`as£π_°rögify
(
xml
, 1, 
ã°°rög
);

268 
	`sùe_xml_‰ì
(
xml
);

271 
xml
 = 
	`as£π_∑r£
("<ã°>a<chûd>b</chûd></ã°>", 
TRUE
);

272 
	`as£π_«me
(
xml
, "test");

273 
	`as£π_d©a
(
xml
, "a");

274 
chûd1
 = 
	`as£π_chûd
(
xml
, 
NULL
, 
FALSE
);

275 
chûd1
 = 
	`as£π_chûd
(
xml
, "chûd", 
TRUE
);

276 
	`as£π_«me
(
chûd1
, "child");

277 
	`as£π_d©a
(
chûd1
, "b");

278 
chûd1
 = 
	`as£π_chûd
(
xml
, "shouldnŸm©ch", 
FALSE
);

279 
	`as£π_d©a
(
chûd1
, 
NULL
);

280 
	`as£π_°rögify
(
xml
, 1, 
ã°°rög
);

281 
	`sùe_xml_‰ì
(
xml
);

283 
xml
 = 
	`as£π_∑r£
("<ã°>a<chûd/></ã°>", 
TRUE
);

284 
	`as£π_«me
(
xml
, "test");

285 
	`as£π_d©a
(
xml
, "a");

286 
chûd1
 = 
	`as£π_chûd
(
xml
, "chûd", 
TRUE
);

287 
	`as£π_«me
(
chûd1
, "child");

288 
	`as£π_d©a
(
chûd1
, 
NULL
);

289 
chûd1
 = 
	`as£π_chûd
(
xml
, "shouldnŸm©ch", 
FALSE
);

290 
	`as£π_d©a
(
chûd1
, 
NULL
);

291 
	`as£π_°rögify
(
xml
, 1, 
ã°°rög
);

292 
	`sùe_xml_‰ì
(
xml
);

294 
xml
 = 
	`as£π_∑r£
("<ã°>a<chûd>b<ö√r>c</ö√r></chûd></ã°>", 
TRUE
);

295 
	`as£π_«me
(
xml
, "test");

296 
	`as£π_d©a
(
xml
, "a");

297 
chûd1
 = 
	`as£π_chûd
(
xml
, "chûd", 
TRUE
);

298 
	`as£π_«me
(
chûd1
, "child");

299 
	`as£π_d©a
(
chûd1
, "b");

300 
chûd1
 = 
	`as£π_chûd
(chûd1, "ö√r", 
TRUE
);

301 
	`as£π_«me
(
chûd1
, "inner");

302 
	`as£π_d©a
(
chûd1
, "c");

303 
chûd1
 = 
	`as£π_chûd
(
xml
, "chûd/ö√r", 
TRUE
);

304 
	`as£π_«me
(
chûd1
, "inner");

305 
	`as£π_d©a
(
chûd1
, "c");

306 
	`as£π_°rögify
(
xml
, 1, 
ã°°rög
);

307 
	`sùe_xml_‰ì
(
xml
);

309 
xml
 = 
	`as£π_∑r£
("<ã°>a<chûd>b<ö√r>c<ö√rö√r>d</ö√rö√r></ö√r></chûd></ã°>", 
TRUE
);

310 
	`as£π_«me
(
xml
, "test");

311 
	`as£π_d©a
(
xml
, "a");

312 
chûd1
 = 
	`as£π_chûd
(
xml
, "chûd", 
TRUE
);

313 
	`as£π_«me
(
chûd1
, "child");

314 
	`as£π_d©a
(
chûd1
, "b");

315 
chûd2
 = 
	`as£π_chûd
(
chûd1
, "ö√r/ö√rö√r", 
TRUE
);

316 
	`as£π_«me
(
chûd2
, "innerinner");

317 
	`as£π_d©a
(
chûd2
, "d");

318 
chûd1
 = 
	`as£π_chûd
(chûd1, "ö√r", 
TRUE
);

319 
	`as£π_«me
(
chûd1
, "inner");

320 
	`as£π_d©a
(
chûd1
, "c");

321 
chûd1
 = 
	`as£π_chûd
(chûd1, "ö√rö√r", 
TRUE
);

322 
	`as£π_«me
(
chûd1
, "innerinner");

323 
	`as£π_d©a
(
chûd1
, "d");

324 
chûd1
 = 
	`as£π_chûd
(
xml
, "chûd/ö√r", 
TRUE
);

325 
	`as£π_«me
(
chûd1
, "inner");

326 
	`as£π_d©a
(
chûd1
, "c");

327 
chûd1
 = 
	`as£π_chûd
(
xml
, "chûd/ö√r/ö√rö√r", 
TRUE
);

328 
	`as£π_«me
(
chûd1
, "innerinner");

329 
	`as£π_d©a
(
chûd1
, "d");

330 
	`as£π_°rögify
(
xml
, 1, 
ã°°rög
);

331 
	`sùe_xml_‰ì
(
xml
);

334 
xml
 = 
	`as£π_∑r£
("<ã°á=\"\">a</ã°>", 
TRUE
);

335 
	`as£π_«me
(
xml
, "test");

336 
	`as£π_d©a
(
xml
, "a");

337 
	`as£π_©åibuã
(
xml
, 
NULL
, NULL);

338 
	`as£π_©åibuã
(
xml
, "a", "");

339 
	`as£π_©åibuã
(
xml
, "b", 
NULL
);

340 
	`as£π_°rögify
(
xml
, 1, 
ã°°rög
);

341 
	`sùe_xml_‰ì
(
xml
);

343 
xml
 = 
	`as£π_∑r£
("<ã°á=\"1\" b=\"abc\">a</ã°>", 
TRUE
);

344 
	`as£π_«me
(
xml
, "test");

345 
	`as£π_d©a
(
xml
, "a");

346 
	`as£π_©åibuã
(
xml
, "a", "1");

347 
	`as£π_öt_©åibuã
(
xml
, "a", 1, 0);

348 
	`as£π_©åibuã
(
xml
, "b", "abc");

349 
	`as£π_©åibuã
(
xml
, "c", 
NULL
);

350 
	`as£π_öt_©åibuã
(
xml
, "d", 100, 200);

352 
	`as£π_°rögify
(
xml
, 2, 
ã°°rög
, "<test b=\"abc\"á=\"1\">a</test>");

353 
	`sùe_xml_‰ì
(
xml
);

356 
xml
 = 
	`as£π_∑r£
("<m:row m:uri=\"sù:\" m:di•œyName=\"X\" m:tôÀ=\"Y\" m:offi˚=\"Z\" m:ph⁄e=\"0\" m:com∑ny=\"A\" m:côy=\"B\" m:°©e=\"C\" m:cou¡ry=\"D\" m:emaû=\"E\" />", 
TRUE
);

357 
	`as£π_«me
(
xml
, "row");

358 
	`as£π_d©a
(
xml
, 
NULL
);

359 
	`as£π_©åibuã
(
xml
, "uri", "sip:");

360 
	`as£π_©åibuã
(
xml
, "displayName", "X");

361 
	`as£π_©åibuã
(
xml
, "title", "Y");

362 
	`as£π_©åibuã
(
xml
, "office", "Z");

363 
	`as£π_©åibuã
(
xml
, "phone", "0");

364 
	`as£π_©åibuã
(
xml
, "company", "A");

365 
	`as£π_©åibuã
(
xml
, "city", "B");

366 
	`as£π_©åibuã
(
xml
, "state", "C");

367 
	`as£π_©åibuã
(
xml
, "country", "D");

368 
	`as£π_©åibuã
(
xml
, "email", "E");

369 
	`sùe_xml_‰ì
(
xml
);

371 
xml
 = 
	`as£π_∑r£
("<°©êxsi:ty≥=\"aggªg©eSèã\"Üa°A˘ive=\"d©e\" xm s:xsi=\"hâp://⁄e\" xm s=\"hâp://two\"><avaûabûôy>15500</avaûabûôy></°©e>", 
TRUE
);

372 
	`as£π_«me
(
xml
, "state");

373 
	`as£π_d©a
(
xml
, 
NULL
);

374 
	`as£π_©åibuã
(
xml
, "type", "aggregateState");

375 
	`as£π_©åibuã
(
xml
, "lastActive", "date");

376 
	`as£π_©åibuã
(
xml
, "xsi", "http://one");

377 
	`as£π_©åibuã
(
xml
, "xmlns", "http://two");

378 
chûd1
 = 
	`as£π_chûd
(
xml
, "avaûabûôy", 
TRUE
);

379 
	`as£π_«me
(
chûd1
, "availability");

380 
	`as£π_d©a
(
chûd1
, "15500");

381 
	`sùe_xml_‰ì
(
xml
);

384 
xml
 = 
	`as£π_∑r£
("t", 
FALSE
);

385 
	`sùe_xml_‰ì
(
xml
);

386 
xml
 = 
	`as£π_∑r£
("<>", 
FALSE
);

387 
	`sùe_xml_‰ì
(
xml
);

388 
xml
 = 
	`as£π_∑r£
("<></>", 
FALSE
);

389 
	`sùe_xml_‰ì
(
xml
);

390 
xml
 = 
	`as£π_∑r£
("<ã°>", 
FALSE
);

391 
	`sùe_xml_‰ì
(
xml
);

392 
xml
 = 
	`as£π_∑r£
("<®a=\"1\"á=\"2\"></a>", 
FALSE
);

393 
	`sùe_xml_‰ì
(
xml
);

395 i‡(
Æloˇãd
) {

396 
	`¥ötf
("MEMORY LEAK: %" 
G_GSIZE_FORMAT
 " stû»Æloˇãd\n", 
Æloˇãd
);

397 
Áûed
++;

399 
	`¥ötf
("MEMORY LEAK CHECK OK\n");

400 
suc˚eded
++;

403 
	`¥ötf
("Resu…: %d PASSED %d FAILED\n", 
suc˚eded
, 
Áûed
);

404 (
Áûed
);

405 
	}
}

	@src/core/sipe-xml.c

27 
	~<°d¨g.h
>

28 
	~<°rög.h
>

29 
	~<time.h
>

31 
	~"libxml/∑r£r.h
"

32 
	~"glib.h
"

34 
	~"sùe-backíd.h
"

35 
	~"sùe-utûs.h
"

36 
	~"sùe-xml.h
"

38 
	s_sùe_xml
 {

39 
gch¨
 *
	m«me
;

40 
sùe_xml
 *
	m∑ª¡
;

41 
sùe_xml
 *
	msiblög
;

42 
sùe_xml
 *
	mfú°
;

43 
sùe_xml
 *
	mœ°
;

44 
GSåög
 *
	md©a
;

45 
GHashTabÀ
 *
	m©åibuãs
;

48 
	s_∑r£r_d©a
 {

49 
sùe_xml
 *
	mroŸ
;

50 
sùe_xml
 *
	mcuºít
;

51 
gboﬁón
 
	mîr‹
;

54 
	$ˇŒback_°¨t_ñemít
(*
u£r_d©a
, c⁄° 
xmlCh¨
 *
«me
, c⁄° xmlCh¨ **
©ås
)

56 
_∑r£r_d©a
 *
pd
 = 
u£r_d©a
;

57 c⁄° *
tmp
;

58 
sùe_xml
 *
node
;

60 i‡(!
«me
 || 
pd
->
îr‹
) ;

62 
node
 = 
	`g_√w0
(
sùe_xml
, 1);

64 i‡((
tmp
 = 
	`°rchr
((*)
«me
, ':')Ë!
NULL
) {

65 
«me
 = (
xmlCh¨
 *)
tmp
 + 1;

67 
node
->
«me
 = 
	`g_°rdup
((
gch¨
 *)name);

69 i‡(!
pd
->
roŸ
) {

70 
pd
->
roŸ
 = 
node
;

72 
sùe_xml
 *
cuºít
 = 
pd
->current;

74 
node
->
∑ª¡
 = 
cuºít
;

75 i‡(
cuºít
->
œ°
) {

76 
cuºít
->
œ°
->
siblög
 = 
node
;

78 
cuºít
->
fú°
 = 
node
;

80 
cuºít
->
œ°
 = 
node
;

83 i‡(
©ås
) {

84 c⁄° 
xmlCh¨
 *
key
;

86 
node
->
©åibuãs
 = 
	`g_hash_èbÀ_√w_fuŒ
(
g_°r_hash
,

87 (
GEquÆFunc
Ë
sùe_°rˇ£_equÆ
,

88 
g_‰ì
, g_free);

89 (
key
 = *
©ås
++Ë!
NULL
) {

90 i‡((
tmp
 = 
	`°rchr
((*)
key
, ':')Ë!
NULL
) {

91 
key
 = (
xmlCh¨
 *)
tmp
 + 1;

93 
	`g_hash_èbÀ_ö£π
(
node
->
©åibuãs
,

94 
	`g_°rdup
((
gch¨
 *Ë
key
),

95 
	`g_°rdup
((
gch¨
 *Ë*
©ås
++));

99 
pd
->
cuºít
 = 
node
;

100 
	}
}

102 
	$ˇŒback_íd_ñemít
(*
u£r_d©a
, c⁄° 
xmlCh¨
 *
«me
)

104 
_∑r£r_d©a
 *
pd
 = 
u£r_d©a
;

106 i‡(!
«me
 || !
pd
->
cuºít
 ||Öd->
îr‹
) ;

108 i‡(
pd
->
cuºít
->
∑ª¡
)

109 
pd
->
cuºít
 =Öd->cuºít->
∑ª¡
;

110 
	}
}

112 
	$ˇŒback_ch¨a˘îs
(*
u£r_d©a
, c⁄° 
xmlCh¨
 *
ãxt
, 
ãxt_Àn
)

114 
_∑r£r_d©a
 *
pd
 = 
u£r_d©a
;

115 
sùe_xml
 *
node
;

117 i‡(!
pd
->
cuºít
 ||Öd->
îr‹
 || !
ãxt
 || !
ãxt_Àn
) ;

119 
node
 = 
pd
->
cuºít
;

120 i‡(
node
->
d©a
)

121 
node
->
d©a
 = 
	`g_°rög_≠≥nd_Àn
“ode->d©a, (
gch¨
 *)
ãxt
, 
ãxt_Àn
);

123 
node
->
d©a
 = 
	`g_°rög_√w_Àn
((
gch¨
 *)
ãxt
, 
ãxt_Àn
);

124 
	}
}

126 
	$ˇŒback_îr‹
(*
u£r_d©a
, c⁄° *
msg
, ...)

128 
_∑r£r_d©a
 *
pd
 = 
u£r_d©a
;

129 
gch¨
 *
îrmsg
;

130 
va_li°
 
¨gs
;

132 
pd
->
îr‹
 = 
TRUE
;

134 
	`va_°¨t
(
¨gs
, 
msg
);

135 
îrmsg
 = 
	`g_°rdup_v¥ötf
(
msg
, 
¨gs
);

136 
	`va_íd
(
¨gs
);

138 
	`SIPE_DEBUG_ERROR
("îr‹Ö¨sög xm»°rög: %s", 
îrmsg
);

139 
	`g_‰ì
(
îrmsg
);

140 
	}
}

142 
	$ˇŒback_£º‹
(*
u£r_d©a
, 
xmlEº‹På
 
îr‹
)

144 
_∑r£r_d©a
 *
pd
 = 
u£r_d©a
;

146 i‡(
îr‹
 && (îr‹->
Àvñ
 =
XML_ERR_ERROR
 ||

147 
îr‹
->
Àvñ
 =
XML_ERR_FATAL
)) {

148 
pd
->
îr‹
 = 
TRUE
;

149 
	`SIPE_DEBUG_ERROR
("XMLÖarserÉrror: Domain %i, code %i,Üevel %i: %s",

150 
îr‹
->
domaö
,Éº‹->
code
,Éº‹->
Àvñ
,

151 
îr‹
->
mesßge
 ?Érror->message : "(null)");

152 } i‡(
îr‹
) {

153 
	`SIPE_DEBUG_WARNING
("XMLÖarserÉrror: Domain %i, code %i,Üevel %i: %s",

154 
îr‹
->
domaö
,Éº‹->
code
,Éº‹->
Àvñ
,

155 
îr‹
->
mesßge
 ?Érror->message : "(null)");

158 
	`SIPE_DEBUG_WARNING_NOFORMAT
("XMLÖarserÉrror");

160 
	}
}

163 
xmlSAXH™dÀr
 
	g∑r£r
 = {

164 
NULL
,

165 
NULL
,

166 
NULL
,

167 
NULL
,

168 
NULL
,

169 
NULL
,

170 
NULL
,

171 
NULL
,

172 
NULL
,

173 
NULL
,

174 
NULL
,

175 
NULL
,

176 
NULL
,

177 
NULL
,

178 
ˇŒback_°¨t_ñemít
,

179 
ˇŒback_íd_ñemít
,

180 
NULL
,

181 
ˇŒback_ch¨a˘îs
,

182 
NULL
,

183 
NULL
,

184 
NULL
,

185 
NULL
,

186 
ˇŒback_îr‹
,

187 
NULL
,

188 
NULL
,

189 
NULL
,

190 
NULL
,

191 
XML_SAX2_MAGIC
,

192 
NULL
,

193 
NULL
,

194 
NULL
,

195 
ˇŒback_£º‹
,

198 
sùe_xml
 *
	$sùe_xml_∑r£
(c⁄° 
gch¨
 *
°rög
, 
gsize
 
Àngth
)

200 
sùe_xml
 *
ªsu…
 = 
NULL
;

202 i‡(
°rög
 && 
Àngth
) {

203 
_∑r£r_d©a
 *
pd
 = 
	`g_√w0
(_parser_data, 1);

205 i‡(
	`xmlSAXU£rP¨£Mem‹y
(&
∑r£r
, 
pd
, 
°rög
, 
Àngth
))

206 
pd
->
îr‹
 = 
TRUE
;

208 i‡(
pd
->
îr‹
) {

209 
	`sùe_xml_‰ì
(
pd
->
roŸ
);

211 
ªsu…
 = 
pd
->
roŸ
;

214 
	`g_‰ì
(
pd
);

217  
ªsu…
;

218 
	}
}

220 
	$sùe_xml_‰ì
(
sùe_xml
 *
node
)

222 
sùe_xml
 *
chûd
;

224 i‡(!
node
) ;

227 i‡(
node
->
∑ª¡
 !
NULL
) {

228 
	`SIPE_DEBUG_ERROR_NOFORMAT
("sipe_xml_free:Öartial deleteáttempt! Expect crash or memoryÜeaks...");

232 
chûd
 = 
node
->
fú°
;

233 
chûd
) {

234 
sùe_xml
 *
tmp
 = 
chûd
->
siblög
;

235 
chûd
->
∑ª¡
 = 
NULL
;

236 
	`sùe_xml_‰ì
(
chûd
);

237 
chûd
 = 
tmp
;

241 
	`g_‰ì
(
node
->
«me
);

242 i‡(
node
->
d©a
Ë
	`g_°rög_‰ì
“ode->d©a, 
TRUE
);

243 i‡(
node
->
©åibuãs
Ë
	`g_hash_èbÀ_de°roy
(node->attributes);

244 
	`g_‰ì
(
node
);

245 
	}
}

247 
	$sùe_xml_°rögify_©åibuã
(
gpoöãr
 
key
, gpoöã∏
vÆue
,

248 
gpoöãr
 
u£r_d©a
)

250 
	`g_°rög_≠≥nd_¥ötf
(
u£r_d©a
, " %s=\"%s\"",

251 (c⁄° 
gch¨
 *Ë
key
, (c⁄° gch¨ *Ë
vÆue
);

252 
	}
}

254 
	$sùe_xml_°rögify_node
(
GSåög
 *
s
, c⁄° 
sùe_xml
 *
node
)

256 
	`g_°rög_≠≥nd_¥ötf
(
s
, "<%s", 
node
->
«me
);

258 i‡(
node
->
©åibuãs
) {

259 
	`g_hash_èbÀ_f‹óch
(
node
->
©åibuãs
,

260 (
GHFunc
Ë
sùe_xml_°rögify_©åibuã
,

261 
s
);

264 i‡(
node
->
d©a
 ||Çode->
fú°
) {

265 c⁄° 
sùe_xml
 *
chûd
;

267 
	`g_°rög_≠≥nd_¥ötf
(
s
, ">%s",

268 
node
->
d©a
 ?Çode->d©a->
°r
 : "");

270 
chûd
 = 
node
->
fú°
; chûd; chûd = chûd->
siblög
)

271 
	`sùe_xml_°rögify_node
(
s
, 
chûd
);

273 
	`g_°rög_≠≥nd_¥ötf
(
s
, "</%s>", 
node
->
«me
);

275 
	`g_°rög_≠≥nd
(
s
, "/>");

277 
	}
}

279 
gch¨
 *
	$sùe_xml_°rögify
(c⁄° 
sùe_xml
 *
node
)

281 
GSåög
 *
s
;

283 i‡(!
node
Ë 
NULL
;

285 
s
 = 
	`g_°rög_√w
("");

286 
	`sùe_xml_°rögify_node
(
s
, 
node
);

287  
	`g_°rög_‰ì
(
s
, 
FALSE
);

288 
	}
}

290 c⁄° 
sùe_xml
 *
	$sùe_xml_chûd
(c⁄° 
sùe_xml
 *
∑ª¡
, c⁄° 
gch¨
 *
«me
)

292 
gch¨
 **
«mes
;

293 c⁄° 
sùe_xml
 *
chûd
 = 
NULL
;

295 i‡(!
∑ª¡
 || !
«me
Ë 
NULL
;

299 
«mes
 = 
	`g_°r•lô
(
«me
, "/", 2);

301 
chûd
 = 
∑ª¡
->
fú°
; chûd; chûd = chûd->
siblög
) {

302 i‡(
	`sùe_°ªquÆ
(
«mes
[0], 
chûd
->
«me
))

307 i‡(
chûd
 && 
«mes
[1])

308 
chûd
 = 
	`sùe_xml_chûd
(chûd, 
«mes
[1]);

310 
	`g_°r‰ìv
(
«mes
);

311  
chûd
;

312 
	}
}

314 c⁄° 
sùe_xml
 *
	$sùe_xml_twö
(c⁄° 
sùe_xml
 *
node
)

316 
sùe_xml
 *
siblög
;

318 i‡(!
node
Ë 
NULL
;

320 
siblög
 = 
node
->sibling; sibling; sibling = sibling->sibling) {

321 i‡(
	`sùe_°ªquÆ
(
node
->
«me
, 
siblög
->name))

322  
siblög
;

324  
NULL
;

325 
	}
}

327 c⁄° 
gch¨
 *
	$sùe_xml_«me
(c⁄° 
sùe_xml
 *
node
)

329 (
node
 ?Çode->
«me
 : 
NULL
);

330 
	}
}

332 c⁄° 
gch¨
 *
	$sùe_xml_©åibuã
(c⁄° 
sùe_xml
 *
node
, c⁄° 
gch¨
 *
©å
)

334 i‡(!
node
 || !
©å
 || !node->
©åibuãs
Ë 
NULL
;

335 (
	`g_hash_èbÀ_lookup
(
node
->
©åibuãs
, 
©å
));

336 
	}
}

338 
guöt
 
	$sùe_xml_öt_©åibuã
(c⁄° 
sùe_xml
 *
node
, c⁄° 
gch¨
 *
©å
,

339 
guöt
 
ÁŒback
)

341 c⁄° 
gch¨
 *
vÆue
 = 
	`sùe_xml_©åibuã
(
node
, 
©å
);

342 (
vÆue
 ? 
	`g_ascii_°πﬁl
(vÆue, 
NULL
, 10Ë: 
ÁŒback
);

343 
	}
}

345 
gch¨
 *
	$sùe_xml_d©a
(c⁄° 
sùe_xml
 *
node
)

347 i‡(!
node
 || !node->
d©a
 || !node->d©a->
°r
Ë 
NULL
;

348  
	`g_°rdup
(
node
->
d©a
->
°r
);

349 
	}
}

	@src/core/sipe-xml.h

23 
_sùe_xml
 
	tsùe_xml
;

33 
sùe_xml
 *
sùe_xml_∑r£
(c⁄° 
gch¨
 *
°rög
, 
gsize
 
Àngth
);

40 
sùe_xml_‰ì
(
sùe_xml
 *
xml
);

49 
gch¨
 *
sùe_xml_°rögify
(c⁄° 
sùe_xml
 *
xml
);

59 c⁄° 
sùe_xml
 *
sùe_xml_chûd
(c⁄° sùe_xm»*
∑ª¡
, c⁄° 
gch¨
 *
«me
);

68 c⁄° 
sùe_xml
 *
sùe_xml_twö
(c⁄° sùe_xm»*
node
);

77 c⁄° 
gch¨
 *
sùe_xml_«me
(c⁄° 
sùe_xml
 *
node
);

87 c⁄° 
gch¨
 *
sùe_xml_©åibuã
(c⁄° 
sùe_xml
 *
node
, c⁄° gch¨ *
©å
);

99 
guöt
 
sùe_xml_öt_©åibuã
(c⁄° 
sùe_xml
 *
node
, c⁄° 
gch¨
 *
©å
,

100 
guöt
 
ÁŒback
);

109 
gch¨
 *
sùe_xml_d©a
(c⁄° 
sùe_xml
 *
node
);

	@src/core/sipe.c

36 #ifde‡
HAVE_CONFIG_H


37 
	~"c⁄fig.h
"

40 
	~<time.h
>

41 
	~<°dlib.h
>

42 
	~<°dio.h
>

43 
	~<î∫o.h
>

44 
	~<°rög.h
>

45 
	~<uni°d.h
>

47 
	~<glib.h
>

49 
	~"sùe-comm⁄.h
"

51 
	~"accou¡.h
"

52 
	~"bli°.h
"

53 
	~"c⁄√˘i⁄.h
"

54 
	~"c⁄vîßti⁄.h
"

55 
	~"·.h
"

56 
	~"nŸify.h
"

57 
	~"∂ugö.h
"

58 
	~"¥ivacy.h
"

59 
	~"ªque°.h
"

60 
	~"ßved°©u£s.h
"

62 
	~"c‹e-dïuΩÀ.h
"

64 
	~"hâp-c⁄n.h
"

65 
	~"sùmsg.h
"

66 
	~"sù-c°a.h
"

67 
	~"sù-£c.h
"

68 
	~"sù-å™•‹t.h
"

69 
	~"sùe-backíd.h
"

70 
	~"sùe-buddy.h
"

71 
	~"sùe-ˇl.h
"

72 
	~"sùe-ch©.h
"

73 
	~"sùe-c⁄f.h
"

74 
	~"sùe-c‹e.h
"

75 
	~"sùe-c‹e-¥iv©e.h
"

76 
	~"sùe-dülog.h
"

77 
	~"sùe-dige°.h
"

78 
	~"sùe-ews.h
"

79 
	~"sùe-domöo.h
"

80 
	~"sùe-·.h
"

81 
	~"sùe-mime.h
"

82 
	~"sùe-∆s.h
"

83 
	~"sùe-scheduÀ.h
"

84 
	~"sùe-£ssi⁄.h
"

85 
	~"sùe-medü.h
"

86 
	~"sùe-sign.h
"

87 
	~"sùe-utûs.h
"

88 
	~"sùe-xml.h
"

89 
	~"uuid.h
"

90 
	~"sùe.h
"

92 
	#SIPE_IDLE_SET_DELAY
 1

	)

94 
	#UPDATE_CALENDAR_DELAY
 1*60

	)

95 
	#UPDATE_CALENDAR_INTERVAL
 30*60

	)

98 
	#SIPE_STATUS_ID_UNKNOWN
 
	`puΩÀ_¥imôive_gë_id_‰om_ty≥
(
PURPLE_STATUS_UNSET
Ë

	)

99 
	#SIPE_STATUS_ID_OFFLINE
 
	`puΩÀ_¥imôive_gë_id_‰om_ty≥
(
PURPLE_STATUS_OFFLINE
Ë

	)

100 
	#SIPE_STATUS_ID_AVAILABLE
 
	`puΩÀ_¥imôive_gë_id_‰om_ty≥
(
PURPLE_STATUS_AVAILABLE
Ë

	)

102 
	#SIPE_STATUS_ID_BUSY
 "busy"

	)

103 
	#SIPE_STATUS_ID_BUSYIDLE
 "busyidÀ"

	)

104 
	#SIPE_STATUS_ID_DND
 "do-nŸ-di°urb"

	)

105 
	#SIPE_STATUS_ID_IN_MEETING
 "ö-a-mìtög"

	)

106 
	#SIPE_STATUS_ID_IN_CONF
 "ö-a-c⁄„ªn˚"

	)

107 
	#SIPE_STATUS_ID_ON_PHONE
 "⁄-the-ph⁄e"

	)

108 
	#SIPE_STATUS_ID_INVISIBLE
 
	`puΩÀ_¥imôive_gë_id_‰om_ty≥
(
PURPLE_STATUS_INVISIBLE
Ë

	)

110 
	#SIPE_STATUS_ID_IDLE
 "idÀ"

	)

111 
	#SIPE_STATUS_ID_BRB
 "be-right-back"

	)

112 
	#SIPE_STATUS_ID_AWAY
 
	`puΩÀ_¥imôive_gë_id_‰om_ty≥
(
PURPLE_STATUS_AWAY
Ë

	)

114 
	#SIPE_STATUS_ID_LUNCH
 "out-to-lunch"

	)

120 
	#SIPE_STATUS_ATTR_ID_MESSAGE
 "mesßge"

	)

122 #ifde‡
HAVE_GMIME


124 
	#SDP_ACCEPT_TYPES
 "ãxt/∂aöÅext/htm»image/gi‡mu…ù¨t/Æã∫©ivê≠∂iˇti⁄/im-iscomposög+xm»≠∂iˇti⁄/ms-imdn+xm»ãxt/x-msmsgsövôe"

	)

128 
	#SDP_ACCEPT_TYPES
 "ãxt/∂aöÅext/htm»image/gi‡≠∂iˇti⁄/im-iscomposög+xm»≠∂iˇti⁄/ms-imdn+xm»ãxt/x-msmsgsövôe"

	)

131 
	ssùe_a˘ivôy_m≠_°ru˘


133 
sùe_a˘ivôy
 
	mty≥
;

134 c⁄° *
	mtokí
;

135 c⁄° *
	mdesc
;

136 c⁄° *
	m°©us_id
;

138 } c⁄° 
	gsùe_a˘ivôy_m≠
[] =

143 { 
SIPE_ACTIVITY_UNSET
, "un£t", 
NULL
 , NULL },

144 { 
SIPE_ACTIVITY_ONLINE
, "⁄löe", 
NULL
 , NULL },

145 { 
SIPE_ACTIVITY_INACTIVE
, 
SIPE_STATUS_ID_IDLE
, 
N_
("I«˘ive"Ë, 
NULL
 },

146 { 
SIPE_ACTIVITY_BUSY
, 
SIPE_STATUS_ID_BUSY
, 
N_
("Busy") , SIPE_STATUS_ID_BUSY },

147 { 
SIPE_ACTIVITY_BUSYIDLE
, 
SIPE_STATUS_ID_BUSYIDLE
, 
N_
("Busy-IdÀ"Ë, 
NULL
 },

148 { 
SIPE_ACTIVITY_DND
, 
SIPE_STATUS_ID_DND
, 
NULL
 , SIPE_STATUS_ID_DND },

149 { 
SIPE_ACTIVITY_BRB
, 
SIPE_STATUS_ID_BRB
, 
N_
("BeÑight back") , SIPE_STATUS_ID_BRB },

150 { 
SIPE_ACTIVITY_AWAY
, "away", 
NULL
 , NULL },

151 { 
SIPE_ACTIVITY_LUNCH
, 
SIPE_STATUS_ID_LUNCH
, 
N_
("Ouàtÿlunch"Ë, 
NULL
 },

152 { 
SIPE_ACTIVITY_OFFLINE
, "ofÊöe", 
NULL
 , NULL },

153 { 
SIPE_ACTIVITY_ON_PHONE
, 
SIPE_STATUS_ID_ON_PHONE
, 
N_
("I¿®ˇŒ"Ë, 
NULL
 },

154 { 
SIPE_ACTIVITY_IN_CONF
, 
SIPE_STATUS_ID_IN_CONF
, 
N_
("I¿®c⁄„ªn˚"Ë, 
NULL
 },

155 { 
SIPE_ACTIVITY_IN_MEETING
, 
SIPE_STATUS_ID_IN_MEETING
, 
N_
("I¿®mìtög"Ë, 
NULL
 },

156 { 
SIPE_ACTIVITY_OOF
, "out-of-offi˚", 
N_
("Ouào‡offi˚"Ë, 
NULL
 },

157 { 
SIPE_ACTIVITY_URGENT_ONLY
, "urgít-öãºu±i⁄s-⁄ly", 
N_
("Urgíàöãºu±i⁄†⁄ly"Ë, 
NULL
 }

160 
	#SIPE_ACTIVITY_I18N
(
x
Ë
	`gëãxt
(
sùe_a˘ivôy_m≠
[x].
desc
)

	)

164 
	#ACTION_NAME_PRESENCE
 "<¥e£n˚><%s>"

	)

166 
sùe_a˘ivôy


167 
	$sùe_gë_a˘ivôy_by_tokí
(c⁄° *
tokí
)

169 
i
;

171 
i
 = 0; i < 
SIPE_ACTIVITY_NUM_TYPES
; i++)

173 i‡(
	`sùe_°ªquÆ
(
tokí
, 
sùe_a˘ivôy_m≠
[
i
].token))

174  
sùe_a˘ivôy_m≠
[
i
].
ty≥
;

177  
sùe_a˘ivôy_m≠
[0].
ty≥
;

178 
	}
}

181 
	$sùe_gë_a˘ivôy_desc_by_tokí
(c⁄° *
tokí
)

183 i‡(!
tokí
Ë 
NULL
;

185  
	`SIPE_ACTIVITY_I18N
(
	`sùe_gë_a˘ivôy_by_tokí
(
tokí
));

186 
	}
}

190 
	$sùe_ªjoö_ch©
(
PuΩÀC⁄vîßti⁄
 *
c⁄v
)

192 i‡(
	`puΩÀ_c⁄vîßti⁄_gë_ty≥
(
c⁄v
Ë=
PURPLE_CONV_TYPE_CHAT
 &&

193 
	`PURPLE_CONV_CHAT
(
c⁄v
)->
À·
)

195 
	`PURPLE_CONV_CHAT
(
c⁄v
)->
À·
 = 
FALSE
;

196 
	`puΩÀ_c⁄vîßti⁄_upd©e
(
c⁄v
, 
PURPLE_CONV_UPDATE_CHATLEFT
);

198 
	}
}

200 
£nd_¥e£n˚_°©us
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

201 *
unu£d
);

203 
	$sùe_auth_‰ì
(
sù_auth
 *
auth
)

205 
	`g_‰ì
(
auth
->
›aque
);

206 
auth
->
›aque
 = 
NULL
;

207 
	`g_‰ì
(
auth
->
ªÆm
);

208 
auth
->
ªÆm
 = 
NULL
;

209 
	`g_‰ì
(
auth
->
èrgë
);

210 
auth
->
èrgë
 = 
NULL
;

211 
auth
->
vîsi⁄
 = 0;

212 
auth
->
ty≥
 = 
AUTH_TYPE_UNSET
;

213 
auth
->
ªåõs
 = 0;

214 
auth
->
expúes
 = 0;

215 
	`g_‰ì
(
auth
->
gsßpi_d©a
);

216 
auth
->
gsßpi_d©a
 = 
NULL
;

217 
	`sù_£c_de°roy_c⁄ãxt
(
auth
->
gsßpi_c⁄ãxt
);

218 
auth
->
gsßpi_c⁄ãxt
 = 
NULL
;

219 
	}
}

222 
	$sùe_make_sig«tuª
(
sùe_accou¡_d©a
 *
sù
,

223 
sùmsg
 *
msg
)

225 i‡(
sù
->
ªgi°ør
.
gsßpi_c⁄ãxt
) {

226 
sùmsg_bªakdown
 
msgbd
;

227 
gch¨
 *
sig«tuª_öput_°r
;

228 
msgbd
.
msg
 = msg;

229 
	`sùmsg_bªakdown_∑r£
(&
msgbd
, 
sù
->
ªgi°ør
.
ªÆm
, sù->ªgi°ør.
èrgë
);

230 
msgbd
.
ønd
 = 
	`g_°rdup_¥ötf
("%08x", 
	`g_øndom_öt
());

231 
sù
->
ªgi°ør
.
¡lm_num
++;

232 
msgbd
.
num
 = 
	`g_°rdup_¥ötf
("%d", 
sù
->
ªgi°ør
.
¡lm_num
);

233 
sig«tuª_öput_°r
 = 
	`sùmsg_bªakdown_gë_°rög
(
sù
->
ªgi°ør
.
vîsi⁄
, &
msgbd
);

234 i‡(
sig«tuª_öput_°r
 !
NULL
) {

235 *
sig«tuª_hex
 = 
	`sù_£c_make_sig«tuª
(
sù
->
ªgi°ør
.
gsßpi_c⁄ãxt
, 
sig«tuª_öput_°r
);

236 
msg
->
sig«tuª
 = 
sig«tuª_hex
;

237 
msg
->
ønd
 = 
	`g_°rdup
(
msgbd
.rand);

238 
msg
->
num
 = 
	`g_°rdup
(
msgbd
.num);

239 
	`g_‰ì
(
sig«tuª_öput_°r
);

241 
	`sùmsg_bªakdown_‰ì
(&
msgbd
);

243 
	}
}

245 
gch¨
 *
	$auth_hódî
(
sùe_accou¡_d©a
 *
sù
, 
sù_auth
 *
auth
, 
sùmsg
 * 
msg
)

247 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
SIP_TO_CORE_PRIVATE
;

248 c⁄° *
authu£r
 = 
sù
->authuser;

249 
gch¨
 *
ªt
;

251 i‡(!
authu£r
 || 
	`°æí
(authuser) < 1) {

252 
authu£r
 = 
sù
->
u£∫ame
;

255 i‡(
auth
->
ty≥
 =
AUTH_TYPE_NTLM
 ||áuth->ty≥ =
AUTH_TYPE_KERBEROS
) {

256 
gch¨
 *
auth_¥Ÿocﬁ
 = (
auth
->
ty≥
 =
AUTH_TYPE_NTLM
 ? "NTLM" : "Kerberos");

257 
gch¨
 *
vîsi⁄_°r
;

260 i‡(
msg
->
sig«tuª
) {

261  
	`g_°rdup_¥ötf
("%†q›=\"auth\", o∑que=\"%s\",Ñólm=\"%s\",Å¨gë«me=\"%s\", cønd=\"%s\", cnum=\"%s\",Ñe•⁄£=\"%s\"", 
auth_¥Ÿocﬁ
, 
auth
->
›aque
,áuth->
ªÆm
,áuth->
èrgë
, 
msg
->
ønd
, msg->
num
, msg->
sig«tuª
);

264 i‡((
auth
->
ty≥
 =
AUTH_TYPE_NTLM
 &&áuth->
nc
 =3 &&áuth->
gsßpi_d©a
 &&áuth->
gsßpi_c⁄ãxt
 =
NULL
)

265 || (
auth
->
ty≥
 =
AUTH_TYPE_KERBEROS
 &&áuth->
nc
 == 3)) {

266 
gch¨
 *
gsßpi_d©a
;

267 
gch¨
 *
›aque
;

268 
gch¨
 *
sign_°r
 = 
NULL
;

270 
gsßpi_d©a
 = 
	`sù_£c_öô_c⁄ãxt
(&(
auth
->
gsßpi_c⁄ãxt
),

271 &(
auth
->
expúes
),

272 
auth
->
ty≥
,

273 
	`SIPE_CORE_PUBLIC_FLAG_IS
(
SSO
),

274 
sù
->
authdomaö
 ? sip->authdomain : "",

275 
authu£r
,

276 
sù
->
∑ssw‹d
,

277 
auth
->
èrgë
,

278 
auth
->
gsßpi_d©a
);

279 i‡(!
gsßpi_d©a
 || !
auth
->
gsßpi_c⁄ãxt
) {

280 
	`sùe_backíd_c⁄√˘i⁄_îr‹
(
SIP_TO_CORE_PUBLIC
,

281 
SIPE_CONNECTION_ERROR_AUTHENTICATION_FAILED
,

282 
	`_
("FailedÅoáuthenticateÅo server"));

283  
NULL
;

286 i‡(
auth
->
vîsi⁄
 > 3) {

287 
	`sùe_make_sig«tuª
(
sù
, 
msg
);

288 
sign_°r
 = 
	`g_°rdup_¥ötf
(", crand=\"%s\", cnum=\"%s\",Ñesponse=\"%s\"",

289 
msg
->
ønd
, msg->
num
, msg->
sig«tuª
);

291 
sign_°r
 = 
	`g_°rdup
("");

294 
›aque
 = (
auth
->
ty≥
 =
AUTH_TYPE_NTLM
 ? 
	`g_°rdup_¥ötf
(", o∑que=\"%s\"",áuth->›aqueË: 
	`g_°rdup
(""));

295 
vîsi⁄_°r
 = 
auth
->
vîsi⁄
 > 2 ? 
	`g_°rdup_¥ötf
(", vîsi⁄=%d",áuth->vîsi⁄Ë: 
	`g_°rdup
("");

296 
ªt
 = 
	`g_°rdup_¥ötf
("%†q›=\"auth\"%s,Ñólm=\"%s\",Å¨gë«me=\"%s\", gsßpi-d©a=\"%s\"%s%s", 
auth_¥Ÿocﬁ
, 
›aque
, 
auth
->
ªÆm
,áuth->
èrgë
, 
gsßpi_d©a
, 
vîsi⁄_°r
, 
sign_°r
);

297 
	`g_‰ì
(
›aque
);

298 
	`g_‰ì
(
gsßpi_d©a
);

299 
	`g_‰ì
(
vîsi⁄_°r
);

300 
	`g_‰ì
(
sign_°r
);

301  
ªt
;

304 
vîsi⁄_°r
 = 
auth
->
vîsi⁄
 > 2 ? 
	`g_°rdup_¥ötf
(", vîsi⁄=%d",áuth->vîsi⁄Ë: 
	`g_°rdup
("");

305 
ªt
 = 
	`g_°rdup_¥ötf
("%†q›=\"auth\",Ñólm=\"%s\",Å¨gë«me=\"%s\", gsßpi-d©a=\"\"%s", 
auth_¥Ÿocﬁ
, 
auth
->
ªÆm
,áuth->
èrgë
, 
vîsi⁄_°r
);

306 
	`g_‰ì
(
vîsi⁄_°r
);

307  
ªt
;

310 
gch¨
 *
°rög
;

311 
gch¨
 *
hex_dige°
;

312 
guch¨
 
dige°
[
SIPE_DIGEST_MD5_LENGTH
];

315 i‡(!
auth
->
›aque
) {

316 
	`SIPE_DEBUG_INFO
("Dige°Ç⁄˚: %†ªÆm: %s", 
auth
->
gsßpi_d©a
,áuth->
ªÆm
);

317 i‡(
sù
->
∑ssw‹d
) {

323 
°rög
 = 
	`g_°rdup_¥ötf
("%s:%s:%s",

324 
authu£r
,

325 
auth
->
ªÆm
,

326 
sù
->
∑ssw‹d
);

327 
	`sùe_dige°_md5
((
guch¨
 *)
°rög
, 
	`°æí
(°rög), 
dige°
);

328 
	`g_‰ì
(
°rög
);

329 
auth
->
›aque
 = 
	`buff_to_hex_°r
(
dige°
, (digest));

338 
°rög
 = 
	`g_°rdup_¥ötf
("%s:%s", 
msg
->
mëhod
, msg->
èrgë
);

339 
	`sùe_dige°_md5
((
guch¨
 *)
°rög
, 
	`°æí
(°rög), 
dige°
);

340 
	`g_‰ì
(
°rög
);

342 
hex_dige°
 = 
	`buff_to_hex_°r
(
dige°
, (digest));

343 
°rög
 = 
	`g_°rdup_¥ötf
("%s:%s:%s", 
auth
->
›aque
,áuth->
gsßpi_d©a
, 
hex_dige°
);

344 
	`g_‰ì
(
hex_dige°
);

345 
	`sùe_dige°_md5
((
guch¨
 *)
°rög
, 
	`°æí
(°rög), 
dige°
);

346 
	`g_‰ì
(
°rög
);

348 
hex_dige°
 = 
	`buff_to_hex_°r
(
dige°
, (digest));

349 
	`SIPE_DEBUG_INFO
("Dige°Ñe•⁄£ %s", 
hex_dige°
);

350 
ªt
 = 
	`g_°rdup_¥ötf
("Dige° u£∫ame=\"%s\",Ñólm=\"%s\",Ç⁄˚=\"%s\", uri=\"%s\",Çc=\"%08d\",Ñe•⁄£=\"%s\"", 
authu£r
, 
auth
->
ªÆm
,áuth->
gsßpi_d©a
, 
msg
->
èrgë
,áuth->
nc
++, 
hex_dige°
);

351 
	`g_‰ì
(
hex_dige°
);

352  
ªt
;

354 
	}
}

356 *
	$∑r£_©åibuã
(c⁄° *
©å«me
, c⁄° *
sour˚
)

358 c⁄° *
tmp
, *
tmp2
;

359 *
ªtvÆ
 = 
NULL
;

360 
Àn
 = 
	`°æí
(
©å«me
);

362 i‡(
	`g_°r_has_¥efix
(
sour˚
, 
©å«me
)) {

363 
tmp
 = 
sour˚
 + 
Àn
;

364 
tmp2
 = 
	`g_°r°r_Àn
(
tmp
, 
	`°æí
(tmp), "\"");

365 i‡(
tmp2
)

366 
ªtvÆ
 = 
	`g_°∫dup
(
tmp
, 
tmp2
 -Åmp);

368 
ªtvÆ
 = 
	`g_°rdup
(
tmp
);

371  
ªtvÆ
;

372 
	}
}

374 
	$fûl_auth
(c⁄° 
gch¨
 *
hdr
, 
sù_auth
 *
auth
)

376 
i
;

377 
gch¨
 **
∑πs
;

379 i‡(!
hdr
) {

380 
	`SIPE_DEBUG_ERROR_NOFORMAT
("fill_auth: hdr==NULL");

384 i‡(!
	`g_°∫ˇ£cmp
(
hdr
, "NTLM", 4)) {

385 
	`SIPE_DEBUG_INFO_NOFORMAT
("fill_auth:Åype NTLM");

386 
auth
->
ty≥
 = 
AUTH_TYPE_NTLM
;

387 
hdr
 += 5;

388 
auth
->
nc
 = 1;

389 } i‡(!
	`g_°∫ˇ£cmp
(
hdr
, "Kerberos", 8)) {

390 
	`SIPE_DEBUG_INFO_NOFORMAT
("fill_auth:Åype Kerberos");

391 
auth
->
ty≥
 = 
AUTH_TYPE_KERBEROS
;

392 
hdr
 += 9;

393 
auth
->
nc
 = 3;

395 
	`SIPE_DEBUG_INFO_NOFORMAT
("fill_auth:Åype Digest");

396 
auth
->
ty≥
 = 
AUTH_TYPE_DIGEST
;

397 
hdr
 += 7;

400 
∑πs
 = 
	`g_°r•lô
(
hdr
, "\", ", 0);

401 
i
 = 0; 
∑πs
[i]; i++) {

402 *
tmp
;

406 i‡((
tmp
 = 
	`∑r£_©åibuã
("gsßpi-d©a=\"", 
∑πs
[
i
]))) {

407 
	`g_‰ì
(
auth
->
gsßpi_d©a
);

408 
auth
->
gsßpi_d©a
 = 
tmp
;

410 i‡(
auth
->
ty≥
 =
AUTH_TYPE_NTLM
) {

412 
auth
->
nc
 = 3;

415 } i‡((
tmp
 = 
	`∑r£_©åibuã
("n⁄˚=\"", 
∑πs
[
i
]))) {

417 
	`g_‰ì
(
auth
->
gsßpi_d©a
);

418 
auth
->
gsßpi_d©a
 = 
tmp
;

419 } i‡((
tmp
 = 
	`∑r£_©åibuã
("›aque=\"", 
∑πs
[
i
]))) {

420 
	`g_‰ì
(
auth
->
›aque
);

421 
auth
->
›aque
 = 
tmp
;

422 } i‡((
tmp
 = 
	`∑r£_©åibuã
("ªÆm=\"", 
∑πs
[
i
]))) {

423 
	`g_‰ì
(
auth
->
ªÆm
);

424 
auth
->
ªÆm
 = 
tmp
;

426 i‡(
auth
->
ty≥
 =
AUTH_TYPE_DIGEST
) {

428 
	`g_‰ì
(
auth
->
›aque
);

429 
auth
->
›aque
 = 
NULL
;

430 
auth
->
nc
 = 1;

432 } i‡((
tmp
 = 
	`∑r£_©åibuã
("èrgë«me=\"", 
∑πs
[
i
]))) {

433 
	`g_‰ì
(
auth
->
èrgë
);

434 
auth
->
èrgë
 = 
tmp
;

435 } i‡((
tmp
 = 
	`∑r£_©åibuã
("vîsi⁄=", 
∑πs
[
i
]))) {

436 
auth
->
vîsi⁄
 = 
	`©oi
(
tmp
);

437 
	`g_‰ì
(
tmp
);

442 
	`g_°r‰ìv
(
∑πs
);

445 
	}
}

451 
	$£nd_sﬂp_ªque°_wôh_cb
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

452 
gch¨
 *
‰om0
,

453 
gch¨
 *
body
,

454 
TønsCÆlback
 
ˇŒback
,

455 
å™ß˘i⁄_∑ylﬂd
 *
∑ylﬂd
)

457 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

458 
gch¨
 *
‰om
 = 
‰om0
 ? 
	`g_°rdup
(‰om0Ë: 
	`sù_uri_£lf
(
sù
);

459 
gch¨
 *
c⁄è˘
 = 
	`gë_c⁄è˘
(
sù
);

460 
gch¨
 *
hdr
 = 
	`g_°rdup_¥ötf
("Contact: %s\r\n"

461 "C⁄ã¡-Ty≥:áµliˇti⁄/SOAP+xml\r\n",
c⁄è˘
);

463 
å™ß˘i⁄
 *
å™s
 = 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "SERVICE", 
‰om
, from, 
hdr
, 
body
, 
NULL
, 
ˇŒback
);

464 
å™s
->
∑ylﬂd
 =Öayload;

466 
	`g_‰ì
(
‰om
);

467 
	`g_‰ì
(
c⁄è˘
);

468 
	`g_‰ì
(
hdr
);

469 
	}
}

471 
	$£nd_sﬂp_ªque°
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

472 
gch¨
 *
body
)

474 
	`£nd_sﬂp_ªque°_wôh_cb
(
sùe_¥iv©e
, 
NULL
, 
body
, NULL, NULL);

475 
	}
}

486 
	$sùe_gë_no_sù_uri
(c⁄° *
sù_uri
)

488 c⁄° *
¥efix
 = "sip:";

489 i‡(!
sù_uri
Ë 
NULL
;

491 i‡(
	`g_°r_has_¥efix
(
sù_uri
, 
¥efix
)) {

492  (
sù_uri
+
	`°æí
(
¥efix
));

494  
sù_uri
;

496 
	}
}

499 
	$sùe_c⁄è˘_£t_a˛
 (
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

500 c⁄° 
gch¨
 *
who
,

501 
gch¨
 *
rights
)

503 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

504 
gch¨
 * 
body
 = 
	`g_°rdup_¥ötf
(
SIPE_SOAP_ALLOW_DENY
, 
who
, 
rights
, 
sù
->
a˛_dñè
++);

505 
	`£nd_sﬂp_ªque°
(
sùe_¥iv©e
, 
body
);

506 
	`g_‰ì
(
body
);

507 
	}
}

510 
sùe_ch™ge_ac˚ss_Àvñ
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

511 c⁄° 
c⁄èöî_id
,

512 c⁄° 
gch¨
 *
ty≥
,

513 c⁄° 
gch¨
 *
vÆue
);

516 
	$sùe_c‹e_c⁄è˘_Ælow_díy
 (
sùe_c‹e_public
 *
sùe_public
,

517 c⁄° 
gch¨
 * 
who
, 
gboﬁón
 
Ælow
)

519 i‡(
Ælow
) {

520 
	`SIPE_DEBUG_INFO
("Auth‹izög c⁄è˘ %s", 
who
);

522 
	`SIPE_DEBUG_INFO
("Blockög c⁄è˘ %s", 
who
);

525 i‡(
SIPE_ACCOUNT_DATA
->
ocs2007
) {

526 
	`sùe_ch™ge_ac˚ss_Àvñ
(
SIPE_CORE_PRIVATE
, (
Ælow
 ? -1 : 32000), "u£r", 
	`sùe_gë_no_sù_uri
(
who
));

528 
	`sùe_c⁄è˘_£t_a˛
 (
SIPE_CORE_PRIVATE
, 
who
, 
Ælow
 ? "AA" : "BD");

530 
	}
}

533 
	$sùe_auth_u£r_cb
(* 
d©a
)

535 
sùe_auth_job
 * 
job
 = (sùe_auth_job *Ë
d©a
;

536 i‡(!
job
) ;

538 
	`sùe_c‹e_c⁄è˘_Ælow_díy
(
job
->
sù
->
public
, job->
who
, 
TRUE
);

539 
	`g_‰ì
(
job
);

540 
	}
}

543 
	$sùe_díy_u£r_cb
(* 
d©a
)

545 
sùe_auth_job
 * 
job
 = (sùe_auth_job *Ë
d©a
;

546 i‡(!
job
) ;

548 
	`sùe_c‹e_c⁄è˘_Ælow_díy
(
job
->
sù
->
public
, job->
who
, 
FALSE
);

549 
	`g_‰ì
(
job
);

550 
	}
}

555 
	$sùe_¥o˚ss_¥e£n˚_w≥ndög
 (
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

556 
sùmsg
 * 
msg
)

558 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

559 
sùe_xml
 *
w©chîs
;

560 c⁄° 
sùe_xml
 *
w©chî
;

562 i‡(
msg
->
ª•⁄£
 != 0 && msg->response != 200) ;

564 i‡(
msg
->
bodyÀn
 =0 || msg->
body
 =
NULL
 || 
	`sùe_°ªquÆ
(
	`sùmsg_föd_hódî
(msg, "Event"), "msrtc.wpending")) ;

566 
w©chîs
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

567 i‡(!
w©chîs
) ;

569 
w©chî
 = 
	`sùe_xml_chûd
(
w©chîs
, "w©chî"); w©chî; w©chî = 
	`sùe_xml_twö
(watcher)) {

570 
gch¨
 * 
ªmŸe_u£r
 = 
	`g_°rdup
(
	`sùe_xml_©åibuã
(
w©chî
, "uri"));

571 
gch¨
 * 
Æüs
 = 
	`g_°rdup
(
	`sùe_xml_©åibuã
(
w©chî
, "displayName"));

572 
gboﬁón
 
⁄_li°
 = 
	`g_hash_èbÀ_lookup
(
SIP_TO_CORE_PRIVATE
->
buddõs
, 
ªmŸe_u£r
Ë!
NULL
;

575 i‡(
ªmŸe_u£r
) {

576 
sùe_auth_job
 * 
job
 = 
	`g_√w0
(sipe_auth_job, 1);

577 
job
->
who
 = 
ªmŸe_u£r
;

578 
job
->
sù
 = sip;

579 
	`puΩÀ_accou¡_ªque°_auth‹iz©i⁄
(

580 
sù
->
accou¡
,

581 
ªmŸe_u£r
,

582 
	`_
("you"),

583 
Æüs
,

584 
NULL
,

585 
⁄_li°
,

586 
sùe_auth_u£r_cb
,

587 
sùe_díy_u£r_cb
,

588 (*Ë
job
);

593 
	`sùe_xml_‰ì
(
w©chîs
);

595 
	}
}

598 
	$sùe_group_add
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

599 
sùe_group
 * 
group
)

601 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

602 
PuΩÀGroup
 * 
puΩÀ_group
 = 
	`puΩÀ_föd_group
(
group
->
«me
);

603 i‡(!
puΩÀ_group
) {

604 
puΩÀ_group
 = 
	`puΩÀ_group_√w
(
group
->
«me
);

605 
	`puΩÀ_bli°_add_group
(
puΩÀ_group
, 
NULL
);

608 i‡(
puΩÀ_group
) {

609 
group
->
puΩÀ_group
 =Öurple_group;

610 
sù
->
groups
 = 
	`g_¶i°_≠≥nd
(sù->groups, 
group
);

611 
	`SIPE_DEBUG_INFO
("added grou∞%†(id %d)", 
group
->
«me
, group->
id
);

613 
	`SIPE_DEBUG_INFO
("didÇŸádd grou∞%s", 
group
->
«me
 ? group->name : "");

615 
	}
}

617 
sùe_group
 *
	$sùe_group_föd_by_id
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

618 
id
)

620 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

621 
sùe_group
 *
group
;

622 
GSLi°
 *
íåy
;

623 i‡(
sù
 =
NULL
) {

624  
NULL
;

627 
íåy
 = 
sù
->
groups
;

628 
íåy
) {

629 
group
 = 
íåy
->
d©a
;

630 i‡(
group
->
id
 == id) {

631  
group
;

633 
íåy
 =É¡ry->
√xt
;

635  
NULL
;

636 
	}
}

638 
sùe_group
 *
	$sùe_group_föd_by_«me
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

639 c⁄° 
gch¨
 * 
«me
)

641 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

642 
sùe_group
 *
group
;

643 
GSLi°
 *
íåy
;

644 i‡(!
sù
 || !
«me
) {

645  
NULL
;

648 
íåy
 = 
sù
->
groups
;

649 
íåy
) {

650 
group
 = 
íåy
->
d©a
;

651 i‡(
	`sùe_°ªquÆ
(
group
->
«me
,Çame)) {

652  
group
;

654 
íåy
 =É¡ry->
√xt
;

656  
NULL
;

657 
	}
}

660 
	$sùe_group_ª«me
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

661 
sùe_group
 *
group
,

662 
gch¨
 *
«me
)

664 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

665 
gch¨
 *
body
;

666 
	`SIPE_DEBUG_INFO
("Ríamög grou∞%†tÿ%s", 
group
->
«me
,Çame);

667 
body
 = 
	`g_m¨kup_¥ötf_esˇ≥d
(
SIPE_SOAP_MOD_GROUP
, 
group
->
id
, 
«me
, 
sù
->
c⁄è˘s_dñè
++);

668 
	`£nd_sﬂp_ªque°
(
sùe_¥iv©e
, 
body
);

669 
	`g_‰ì
(
body
);

670 
	`g_‰ì
(
group
->
«me
);

671 
group
->
«me
 = 
	`g_°rdup
(name);

672 
	}
}

678 
GSLi°
 * 
	$¶i°_ö£π_unique_s‹ãd
(
GSLi°
 *
li°
, 
gpoöãr
 
d©a
, 
GCom∑ªFunc
 
func
) {

679 
GSLi°
 * 
ªs
 = 
li°
;

680 i‡(!
	`g_¶i°_föd_cu°om
(
li°
, 
d©a
, 
func
)) {

681 
ªs
 = 
	`g_¶i°_ö£π_s‹ãd
(
li°
, 
d©a
, 
func
);

683  
ªs
;

684 
	}
}

687 
	$sùe_group_com∑ª
(
sùe_group
 *
group1
, sùe_grou∞*
group2
) {

688  
group1
->
id
 - 
group2
->id;

689 
	}
}

694 
gch¨
 *

695 
	$sùe_gë_buddy_groups_°rög
 (
sùe_buddy
 *
buddy
) {

696 
i
 = 0;

697 
gch¨
 *
ªs
;

699 
gch¨
 **
ids_¨r
 = 
	`g_√w
(gch¨ *, 
	`g_¶i°_Àngth
(
buddy
->
groups
) + 1);

700 
GSLi°
 *
íåy
 = 
buddy
->
groups
;

702 i‡(!
ids_¨r
Ë 
NULL
;

704 
íåy
) {

705 
sùe_group
 * 
group
 = 
íåy
->
d©a
;

706 
ids_¨r
[
i
] = 
	`g_°rdup_¥ötf
("%d", 
group
->
id
);

707 
íåy
 =É¡ry->
√xt
;

708 
i
++;

710 
ids_¨r
[
i
] = 
NULL
;

711 
ªs
 = 
	`g_°rjoöv
(" ", 
ids_¨r
);

712 
	`g_°r‰ìv
(
ids_¨r
);

713  
ªs
;

714 
	}
}

720 
	$sùe_c‹e_group_£t_u£r
(
sùe_c‹e_public
 *
sùe_public
, c⁄° 
gch¨
 * 
who
)

722 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA
;

723 
sùe_buddy
 *
buddy
 = 
	`g_hash_èbÀ_lookup
(
SIP_TO_CORE_PRIVATE
->
buddõs
, 
who
);

724 
PuΩÀBuddy
 *
puΩÀ_buddy
 = 
	`puΩÀ_föd_buddy
 (
sù
->
accou¡
, 
who
);

726 i‡(
buddy
 && 
puΩÀ_buddy
) {

727 c⁄° *
Æüs
 = 
	`puΩÀ_buddy_gë_Æüs
(
puΩÀ_buddy
);

728 
gch¨
 *
groups
 = 
	`sùe_gë_buddy_groups_°rög
(
buddy
);

729 i‡(
groups
) {

730 
gch¨
 *
body
;

731 
	`SIPE_DEBUG_INFO
("Savög buddy %†wôhálü†%†™d group†%s", 
who
, 
Æüs
, 
groups
);

733 
body
 = 
	`g_m¨kup_¥ötf_esˇ≥d
(
SIPE_SOAP_SET_CONTACT
,

734 
Æüs
, 
groups
, "åue", 
buddy
->
«me
, 
sù
->
c⁄è˘s_dñè
++

736 
	`£nd_sﬂp_ªque°
(
SIPE_CORE_PRIVATE
, 
body
);

737 
	`g_‰ì
(
groups
);

738 
	`g_‰ì
(
body
);

741 
	}
}

743 
gboﬁón
 
	$¥o˚ss_add_group_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

744 
sùmsg
 *
msg
,

745 
å™ß˘i⁄
 *
å™s
)

747 i‡(
msg
->
ª•⁄£
 == 200) {

748 
sùe_group
 *
group
;

749 
group_u£r_c⁄ãxt
 *
˘x
 = 
å™s
->
∑ylﬂd
->
d©a
;

750 
sùe_xml
 *
xml
;

751 c⁄° 
sùe_xml
 *
node
;

752 *
group_id
;

753 
sùe_buddy
 *
buddy
;

755 
xml
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

756 i‡(!
xml
) {

757  
FALSE
;

760 
node
 = 
	`sùe_xml_chûd
(
xml
, "Body/addGroup/groupID");

761 i‡(!
node
) {

762 
	`sùe_xml_‰ì
(
xml
);

763  
FALSE
;

766 
group_id
 = 
	`sùe_xml_d©a
(
node
);

767 i‡(!
group_id
) {

768 
	`sùe_xml_‰ì
(
xml
);

769  
FALSE
;

772 
group
 = 
	`g_√w0
(
sùe_group
, 1);

773 
group
->
id
 = ()
	`g_ascii_°πod
(
group_id
, 
NULL
);

774 
	`g_‰ì
(
group_id
);

775 
group
->
«me
 = 
	`g_°rdup
(
˘x
->
group_«me
);

777 
	`sùe_group_add
(
sùe_¥iv©e
, 
group
);

779 
buddy
 = 
	`g_hash_èbÀ_lookup
(
sùe_¥iv©e
->
buddõs
, 
˘x
->
u£r_«me
);

780 i‡(
buddy
) {

781 
buddy
->
groups
 = 
	`¶i°_ö£π_unique_s‹ãd
(buddy->groups, 
group
, (
GCom∑ªFunc
)
sùe_group_com∑ª
);

784 
	`sùe_c‹e_group_£t_u£r
(
SIPE_CORE_PUBLIC
, 
˘x
->
u£r_«me
);

786 
	`sùe_xml_‰ì
(
xml
);

787  
TRUE
;

789  
FALSE
;

790 
	}
}

792 
	$sùe_group_c⁄ãxt_de°roy
(
gpoöãr
 
d©a
)

794 
group_u£r_c⁄ãxt
 *
˘x
 = 
d©a
;

795 
	`g_‰ì
(
˘x
->
group_«me
);

796 
	`g_‰ì
(
˘x
->
u£r_«me
);

797 
	`g_‰ì
(
˘x
);

798 
	}
}

800 
	$sùe_group_¸óã
 (
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

801 c⁄° 
gch¨
 *
«me
, c⁄° gch¨ * 
who
)

803 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

804 
å™ß˘i⁄_∑ylﬂd
 *
∑ylﬂd
 = 
	`g_√w0
(transaction_payload, 1);

805 
group_u£r_c⁄ãxt
 *
˘x
 = 
	`g_√w0
(group_user_context, 1);

806 
gch¨
 *
body
;

807 
˘x
->
group_«me
 = 
	`g_°rdup
(
«me
);

808 
˘x
->
u£r_«me
 = 
	`g_°rdup
(
who
);

809 
∑ylﬂd
->
de°roy
 = 
sùe_group_c⁄ãxt_de°roy
;

810 
∑ylﬂd
->
d©a
 = 
˘x
;

812 
body
 = 
	`g_m¨kup_¥ötf_esˇ≥d
(
SIPE_SOAP_ADD_GROUP
, 
«me
, 
sù
->
c⁄è˘s_dñè
++);

813 
	`£nd_sﬂp_ªque°_wôh_cb
(
sùe_¥iv©e
, 
NULL
, 
body
, 
¥o˚ss_add_group_ª•⁄£
, 
∑ylﬂd
);

814 
	`g_‰ì
(
body
);

815 
	}
}

818 
sùe_sched_ˇÀnd¨_°©us_upd©e
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

819 
time_t
 
ˇlcuœã_‰om
);

822 
sùe_gë_avaûabûôy_by_°©us
(c⁄° * 
sùe_°©us_id
, ** 
a˘ivôy_tokí
);

825 
sùe_gë_°©us_by_avaûabûôy
(
avaû
,

826 ** 
a˘ivôy
);

829 
sùe_£t_puΩÀ_accou¡_°©us_™d_nŸe
(c⁄° 
PuΩÀAccou¡
 *
accou¡
,

830 c⁄° *
°©us_id
,

831 c⁄° *
mesßge
,

832 
time_t
 
do_nŸ_publish
[]);

835 
	$sùe_≠∂y_ˇÀnd¨_°©us
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

836 
sùe_buddy
 *
sbuddy
,

837 c⁄° *
°©us_id
)

839 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

840 
time_t
 
ˇl_avaû_sö˚
;

841 
ˇl_°©us
 = 
	`sùe_ˇl_gë_°©us
(
sbuddy
, 
	`time
(
NULL
), &
ˇl_avaû_sö˚
);

842 
avaû
;

843 
gch¨
 *
£lf_uri
;

845 i‡(!
sbuddy
) ;

847 i‡(
ˇl_°©us
 < 
SIPE_CAL_NO_DATA
) {

848 
	`SIPE_DEBUG_INFO
("sùe_≠∂y_ˇÀnd¨_°©us: cÆ_°©u† : %d f‹ %s", 
ˇl_°©us
, 
sbuddy
->
«me
);

849 
	`SIPE_DEBUG_INFO
("sùe_≠∂y_ˇÀnd¨_°©us: cÆ_avaû_sö˚ : %s", 
	`as˘ime
(
	`loˇ…ime
(&
ˇl_avaû_sö˚
)));

853 i‡(!
°©us_id
) {

854 
°©us_id
 = 
sbuddy
->
œ°_n⁄_ˇl_°©us_id
;

855 
	`g_‰ì
(
sbuddy
->
a˘ivôy
);

856 
sbuddy
->
a˘ivôy
 = 
	`g_°rdup
(sbuddy->
œ°_n⁄_ˇl_a˘ivôy
);

859 i‡(!
°©us_id
) {

860 
	`SIPE_DEBUG_INFO
("sipe_apply_calendar_status: status_id is NULL for %s,Éxiting.",

861 
sbuddy
->
«me
 ? sbuddy->name : "" );

866 i‡(
ˇl_°©us
 !
SIPE_CAL_NO_DATA
) {

867 
	`SIPE_DEBUG_INFO
("sùe_≠∂y_ˇÀnd¨_°©us: u£r_avaû_sö˚: %s", 
	`as˘ime
(
	`loˇ…ime
(&
sbuddy
->
u£r_avaû_sö˚
)));

869 i‡(
ˇl_°©us
 =
SIPE_CAL_BUSY


870 && 
ˇl_avaû_sö˚
 > 
sbuddy
->
u£r_avaû_sö˚


871 && 6500 >
	`sùe_gë_avaûabûôy_by_°©us
(
°©us_id
, 
NULL
))

873 
°©us_id
 = 
SIPE_STATUS_ID_BUSY
;

874 
	`g_‰ì
(
sbuddy
->
a˘ivôy
);

875 
sbuddy
->
a˘ivôy
 = 
	`g_°rdup
(
	`SIPE_ACTIVITY_I18N
(
SIPE_ACTIVITY_IN_MEETING
));

877 
avaû
 = 
	`sùe_gë_avaûabûôy_by_°©us
(
°©us_id
, 
NULL
);

879 
	`SIPE_DEBUG_INFO
("sùe_≠∂y_ˇÀnd¨_°©us:á˘ivôy_sö˚ : %s", 
	`as˘ime
(
	`loˇ…ime
(&
sbuddy
->
a˘ivôy_sö˚
)));

880 i‡(
ˇl_avaû_sö˚
 > 
sbuddy
->
a˘ivôy_sö˚
) {

881 i‡(
ˇl_°©us
 =
SIPE_CAL_OOF


882 && 
avaû
 >= 15000)

884 
	`g_‰ì
(
sbuddy
->
a˘ivôy
);

885 
sbuddy
->
a˘ivôy
 = 
	`g_°rdup
(
	`SIPE_ACTIVITY_I18N
(
SIPE_ACTIVITY_OOF
));

891 
	`SIPE_DEBUG_INFO
("sùe_≠∂y_ˇÀnd¨_°©us:Åÿ%†f‹ %s", 
°©us_id
, 
sbuddy
->
«me
 ? sbuddy->name : "" );

892 
	`puΩÀ_¥∂_gŸ_u£r_°©us
(
sù
->
accou¡
, 
sbuddy
->
«me
, 
°©us_id
, 
NULL
);

895 
£lf_uri
 = 
	`sù_uri_£lf
(
sù
);

896 i‡(
sù
->
öôül_°©e_published
 && 
	`sùe_°rˇ£_equÆ
(
sbuddy
->
«me
, 
£lf_uri
)) {

897 i‡(
	`sùe_°ªquÆ
(
°©us_id
, 
SIPE_STATUS_ID_OFFLINE
)) {

898 
°©us_id
 = 
	`g_°rdup
(
SIPE_STATUS_ID_INVISIBLE
);

901 
	`SIPE_DEBUG_INFO
("sùe_≠∂y_ˇÀnd¨_°©us: swôchÅÿ'%s' f‹Åhêaccou¡", 
sù
->
°©us
);

902 
	`sùe_£t_puΩÀ_accou¡_°©us_™d_nŸe
(
sù
->
accou¡
, 
°©us_id
, sù->
nŸe
, sù->
do_nŸ_publish
);

904 
	`g_‰ì
(
£lf_uri
);

905 
	}
}

908 
	$sùe_gŸ_u£r_°©us
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

909 c⁄° * 
uri
,

910 c⁄° *
°©us_id
)

912 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

913 
sùe_buddy
 *
sbuddy
 = 
	`g_hash_èbÀ_lookup
(
sùe_¥iv©e
->
buddõs
, 
uri
);

915 i‡(!
sbuddy
) ;

920 i‡(!
sù
->
ocs2007
) {

921 
	`sùe_≠∂y_ˇÀnd¨_°©us
(
sùe_¥iv©e
, 
sbuddy
, 
°©us_id
);

923 
	`puΩÀ_¥∂_gŸ_u£r_°©us
(
sù
->
accou¡
, 
uri
, 
°©us_id
, 
NULL
);

925 
	}
}

928 
	$upd©e_ˇÀnd¨_°©us_cb
(
SIPE_UNUSED_PARAMETER
 *
«me
,

929 
sùe_buddy
 *
sbuddy
,

930 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

932 
	`sùe_≠∂y_ˇÀnd¨_°©us
(
sùe_¥iv©e
, 
sbuddy
, 
NULL
);

933 
	}
}

942 
	$upd©e_ˇÀnd¨_°©us
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

943 
SIPE_UNUSED_PARAMETER
 *
unu£d
)

945 
	`SIPE_DEBUG_INFO_NOFORMAT
("update_calendar_status() started.");

946 
	`g_hash_èbÀ_f‹óch
(
sùe_¥iv©e
->
buddõs
, (
GHFunc
)
upd©e_ˇÀnd¨_°©us_cb
, sipe_private);

949 
	`sùe_sched_ˇÀnd¨_°©us_upd©e
(
sùe_¥iv©e
, 
	`time
(
NULL
) + 3*60 );

950 
	}
}

962 
	$sùe_sched_ˇÀnd¨_°©us_upd©e
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

963 
time_t
 
ˇlcuœã_‰om
)

965 
öãrvÆ
 = 15*60;

967 
time_t
 
√xt_°¨t
 = (—ime_t)(()(()
ˇlcuœã_‰om
)/
öãrvÆ
 + 1)*interval);

969 
	`SIPE_DEBUG_INFO
("sipe_sched_calendar_status_update: calculate_fromÅime: %s",

970 
	`as˘ime
(
	`loˇ…ime
(&
ˇlcuœã_‰om
)));

971 
	`SIPE_DEBUG_INFO
("sipe_sched_calendar_status_update:Çext startÅime : %s",

972 
	`as˘ime
(
	`loˇ…ime
(&
√xt_°¨t
)));

974 
	`sùe_scheduÀ_£c⁄ds
(
sùe_¥iv©e
,

976 
NULL
,

977 
√xt_°¨t
 - 
	`time
(
NULL
),

978 
upd©e_ˇÀnd¨_°©us
,

979 
NULL
);

980 
	}
}

992 
	$sùe_sched_ˇÀnd¨_°©us_£lf_publish
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

993 
time_t
 
ˇlcuœã_‰om
)

995 
öãrvÆ
 = 5*60;

997 
time_t
 
√xt_°¨t
 = (—ime_t)(()(()
ˇlcuœã_‰om
)/
öãrvÆ
 + 1)*interval);

999 
	`SIPE_DEBUG_INFO
("sipe_sched_calendar_status_self_publish: calculate_fromÅime: %s",

1000 
	`as˘ime
(
	`loˇ…ime
(&
ˇlcuœã_‰om
)));

1001 
	`SIPE_DEBUG_INFO
("sipe_sched_calendar_status_self_publish:Çext startÅime : %s",

1002 
	`as˘ime
(
	`loˇ…ime
(&
√xt_°¨t
)));

1004 
	`sùe_scheduÀ_£c⁄ds
(
sùe_¥iv©e
,

1006 
NULL
,

1007 
√xt_°¨t
 - 
	`time
(
NULL
),

1008 
publish_ˇÀnd¨_°©us_£lf
,

1009 
NULL
);

1010 
	}
}

1012 
¥o˚ss_öcomög_nŸify
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

1013 
sùmsg
 *
msg
,

1014 
gboﬁón
 
ªque°
,

1015 
gboﬁón
 
bíŸify
);

1019 
gch¨
 *

1020 
	$sùe_gë_subs¸ùti⁄_key
(c⁄° 
gch¨
 *
evít
,

1021 c⁄° 
gch¨
 *
wôh
)

1023 
gch¨
 *
key
 = 
NULL
;

1025 i‡(
	`is_em±y
(
evít
)Ë 
NULL
;

1027 i‡(
evít
 && 
	`sùe_°rˇ£_equÆ
(event, "presence")) {

1029 
key
 = 
	`g_°rdup_¥ötf
(
ACTION_NAME_PRESENCE
, 
wôh
);

1032 } i‡(
evít
) {

1034 
key
 = 
	`g_°rdup_¥ötf
("<%s>", 
evít
);

1037  
key
;

1038 
	}
}

1040 
gboﬁón
 
	$¥o˚ss_subs¸ibe_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

1041 
sùmsg
 *
msg
,

1042 
SIPE_UNUSED_PARAMETER
 
å™ß˘i⁄
 *
å™s
)

1044 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

1045 
gch¨
 *
wôh
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, "To"));

1046 c⁄° 
gch¨
 *
evít
 = 
	`sùmsg_föd_hódî
(
msg
, "Event");

1047 
gch¨
 *
key
;

1050 i‡(!
evít
) {

1051 
sùmsg
 *
ªque°_msg
 = 
å™s
->
msg
;

1052 
evít
 = 
	`sùmsg_föd_hódî
(
ªque°_msg
, "Event");

1055 
key
 = 
	`sùe_gë_subs¸ùti⁄_key
(
evít
, 
wôh
);

1058 i‡(
key
 && (
msg
->
ª•⁄£
 == 200 || msg->response == 481)) {

1059 i‡(
	`g_hash_èbÀ_lookup
(
sù
->
subs¸ùti⁄s
, 
key
)) {

1060 
	`g_hash_èbÀ_ªmove
(
sù
->
subs¸ùti⁄s
, 
key
);

1061 
	`SIPE_DEBUG_INFO
("¥o˚ss_subs¸ibe_ª•⁄£: subs¸ùti⁄ dülogÑemoved f‹: %s", 
key
);

1066 i‡(
msg
->
ª•⁄£
 == 200) {

1067 c⁄° 
gch¨
 *
ˇŒid
 = 
	`sùmsg_föd_hódî
(
msg
, "Call-ID");

1068 
gch¨
 *
c£q
 = 
	`sùmsg_föd_∑π_of_hódî
(
	`sùmsg_föd_hódî
(
msg
, "CSeq"), 
NULL
, " ", NULL);

1070 i‡(
key
) {

1071 
sù_subs¸ùti⁄
 *
subs¸ùti⁄
 = 
	`g_√w0
(sip_subscription, 1);

1072 
	`g_hash_èbÀ_ö£π
(
sù
->
subs¸ùti⁄s
, 
	`g_°rdup
(
key
), 
subs¸ùti⁄
);

1074 
subs¸ùti⁄
->
dülog
.
ˇŒid
 = 
	`g_°rdup
(callid);

1075 
subs¸ùti⁄
->
dülog
.
c£q
 = 
	`©oi
(cseq);

1076 
subs¸ùti⁄
->
dülog
.
wôh
 = 
	`g_°rdup
(with);

1077 
subs¸ùti⁄
->
evít
 = 
	`g_°rdup
(event);

1078 
	`sùe_dülog_∑r£
(&
subs¸ùti⁄
->
dülog
, 
msg
, 
TRUE
);

1080 
	`SIPE_DEBUG_INFO
("¥o˚ss_subs¸ibe_ª•⁄£: subs¸ùti⁄ dülogádded f‹: %s", 
key
);

1083 
	`g_‰ì
(
c£q
);

1086 
	`g_‰ì
(
key
);

1087 
	`g_‰ì
(
wôh
);

1089 i‡(
	`sùmsg_föd_hódî
(
msg
, "ms-piggyback-cseq"))

1091 
	`¥o˚ss_öcomög_nŸify
(
sùe_¥iv©e
, 
msg
, 
FALSE
, FALSE);

1093  
TRUE
;

1094 
	}
}

1096 
	$sùe_subs¸ibe_ªsour˚_uri
(c⁄° *
«me
,

1097 
SIPE_UNUSED_PARAMETER
 
gpoöãr
 
vÆue
,

1098 
gch¨
 **
ªsour˚s_uri
)

1100 
gch¨
 *
tmp
 = *
ªsour˚s_uri
;

1101 *
ªsour˚s_uri
 = 
	`g_°rdup_¥ötf
("%s<ªsour˚ uri=\"%s\"/>\n", 
tmp
, 
«me
);

1102 
	`g_‰ì
(
tmp
);

1103 
	}
}

1105 
	$sùe_subs¸ibe_ªsour˚_uri_wôh_c⁄ãxt
(c⁄° *
«me
, 
gpoöãr
 
vÆue
, 
gch¨
 **
ªsour˚s_uri
)

1107 
sùe_buddy
 *
sbuddy
 = (sùe_buddy *)
vÆue
;

1108 
gch¨
 *
c⁄ãxt
 = 
sbuddy
 && sbuddy->
ju°_added
 ? "><context/></resource>" : "/>";

1109 
gch¨
 *
tmp
 = *
ªsour˚s_uri
;

1111 i‡(
sbuddy
Ësbuddy->
ju°_added
 = 
FALSE
;

1113 *
ªsour˚s_uri
 = 
	`g_°rdup_¥ötf
("%s<ªsour˚ uri=\"%s\"%s\n", 
tmp
, 
«me
, 
c⁄ãxt
);

1114 
	`g_‰ì
(
tmp
);

1115 
	}
}

1125 
	$sùe_subs¸ibe_¥e£n˚_b©ched_to
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

1126 
gch¨
 *
ªsour˚s_uri
,

1127 
gch¨
 *
to
)

1129 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

1130 
gch¨
 *
key
;

1131 
gch¨
 *
c⁄è˘
 = 
	`gë_c⁄è˘
(
sù
);

1132 
gch¨
 *
ªque°
;

1133 
gch¨
 *
c⁄ã¡
;

1134 
gch¨
 *
ªquúe
 = "";

1135 
gch¨
 *
ac˚±
 = "";

1136 
gch¨
 *
aut€xãnd
 = "";

1137 
gch¨
 *
c⁄ã¡_ty≥
;

1138 
sù_dülog
 *
dülog
;

1140 i‡(
sù
->
ocs2007
) {

1141 
ªquúe
 = ", categoryList";

1142 
ac˚±
 = ",ápplication/msrtc-event-categories+xml,ápplication/xpidf+xml,ápplication/pidf+xml";

1143 
c⁄ã¡_ty≥
 = "application/msrtc-adrl-categorylist+xml";

1144 
c⁄ã¡
 = 
	`g_°rdup_¥ötf
(

1155 "</b©chSub>", 
sù
->
u£∫ame
, 
ªsour˚s_uri
);

1157 
aut€xãnd
 = "Supported: com.microsoft.autoextend\r\n";

1158 
c⁄ã¡_ty≥
 = "application/adrl+xml";

1159 
c⁄ã¡
 = 
	`g_°rdup_¥ötf
(

1162 "</adho˛i°>\n", 
sù
->
u£∫ame
, sù->u£∫ame, 
ªsour˚s_uri
);

1164 
	`g_‰ì
(
ªsour˚s_uri
);

1166 
ªque°
 = 
	`g_°rdup_¥ötf
(

1175 "C⁄è˘: %s\r\n", 
ªquúe
, 
ac˚±
, 
aut€xãnd
, 
c⁄ã¡_ty≥
, 
c⁄è˘
);

1176 
	`g_‰ì
(
c⁄è˘
);

1180 
key
 = 
	`g_°rdup_¥ötf
(
ACTION_NAME_PRESENCE
, 
to
);

1181 
dülog
 = (
sù_dülog
 *)
	`g_hash_èbÀ_lookup
(
sù
->
subs¸ùti⁄s
, 
key
);

1182 
	`SIPE_DEBUG_INFO
("sùe_subs¸ibe_¥e£n˚_b©ched_to: subs¸ùti⁄ dülog f‹: %†i†%s", 
key
, 
dülog
 ? "Not NULL" : "NULL");

1184 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "SUBSCRIBE", 
to
,Åo, 
ªque°
, 
c⁄ã¡
, 
dülog
, 
¥o˚ss_subs¸ibe_ª•⁄£
);

1186 
	`g_‰ì
(
c⁄ã¡
);

1187 
	`g_‰ì
(
to
);

1188 
	`g_‰ì
(
ªque°
);

1189 
	`g_‰ì
(
key
);

1190 
	}
}

1192 
	$sùe_subs¸ibe_¥e£n˚_b©ched
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

1193 
SIPE_UNUSED_PARAMETER
 *
unu£d
)

1195 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

1196 
gch¨
 *
to
 = 
	`sù_uri_£lf
(
sù
);

1197 
gch¨
 *
ªsour˚s_uri
 = 
	`g_°rdup
("");

1198 i‡(
sù
->
ocs2007
) {

1199 
	`g_hash_èbÀ_f‹óch
(
sùe_¥iv©e
->
buddõs
, (
GHFunc
Ë
sùe_subs¸ibe_ªsour˚_uri_wôh_c⁄ãxt
 , &
ªsour˚s_uri
);

1201 
	`g_hash_èbÀ_f‹óch
(
sùe_¥iv©e
->
buddõs
, (
GHFunc
Ë
sùe_subs¸ibe_ªsour˚_uri
, &
ªsour˚s_uri
);

1204 
	`sùe_subs¸ibe_¥e£n˚_b©ched_to
(
sùe_¥iv©e
, 
ªsour˚s_uri
, 
to
);

1205 
	}
}

1207 
	s¥e£n˚_b©ched_rouãd
 {

1208 
gch¨
 *
	mho°
;

1209 
GSLi°
 *
	mbuddõs
;

1212 
	$sùe_subs¸ibe_¥e£n˚_b©ched_rouãd_‰ì
(*
∑ylﬂd
)

1214 
¥e£n˚_b©ched_rouãd
 *
d©a
 = 
∑ylﬂd
;

1215 
GSLi°
 *
buddõs
 = 
d©a
->buddies;

1216 
buddõs
) {

1217 
	`g_‰ì
(
buddõs
->
d©a
);

1218 
buddõs
 = buddõs->
√xt
;

1220 
	`g_¶i°_‰ì
(
d©a
->
buddõs
);

1221 
	`g_‰ì
(
d©a
->
ho°
);

1222 
	`g_‰ì
(
∑ylﬂd
);

1223 
	}
}

1225 
	$sùe_subs¸ibe_¥e£n˚_b©ched_rouãd
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

1226 *
∑ylﬂd
)

1228 
¥e£n˚_b©ched_rouãd
 *
d©a
 = 
∑ylﬂd
;

1229 
GSLi°
 *
buddõs
 = 
d©a
->buddies;

1230 
gch¨
 *
ªsour˚s_uri
 = 
	`g_°rdup
("");

1231 
buddõs
) {

1232 
gch¨
 *
tmp
 = 
ªsour˚s_uri
;

1233 
ªsour˚s_uri
 = 
	`g_°rdup_¥ötf
("%s<ªsour˚ uri=\"%s\"/>\n", 
tmp
, (*Ë
buddõs
->
d©a
);

1234 
	`g_‰ì
(
tmp
);

1235 
buddõs
 = buddõs->
√xt
;

1237 
	`sùe_subs¸ibe_¥e£n˚_b©ched_to
(
sùe_¥iv©e
, 
ªsour˚s_uri
,

1238 
	`g_°rdup
(
d©a
->
ho°
));

1239 
	}
}

1248 
	$sùe_subs¸ibe_¥e£n˚_sögÀ
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

1249 *
buddy_«me
)

1251 
sùe_accou¡_d©a
 *
sù
 = 
sùe_¥iv©e
->
ãmp‹¨y
;

1252 
gch¨
 *
key
;

1253 
gch¨
 *
to
 = 
	`sù_uri
((*)
buddy_«me
);

1254 
gch¨
 *
tmp
 = 
	`gë_c⁄è˘
(
sù
);

1255 
gch¨
 *
ªque°
;

1256 
gch¨
 *
c⁄ã¡
 = 
NULL
;

1257 
gch¨
 *
aut€xãnd
 = "";

1258 
gch¨
 *
c⁄ã¡_ty≥
 = "";

1259 
sù_dülog
 *
dülog
;

1260 
sùe_buddy
 *
sbuddy
 = 
	`g_hash_èbÀ_lookup
(
sùe_¥iv©e
->
buddõs
, 
to
);

1261 
gch¨
 *
c⁄ãxt
 = 
sbuddy
 && sbuddy->
ju°_added
 ? "><context/></resource>" : "/>";

1263 i‡(
sbuddy
Ësbuddy->
ju°_added
 = 
FALSE
;

1265 i‡(
sù
->
ocs2007
) {

1266 
c⁄ã¡_ty≥
 = "Content-Type:ápplication/msrtc-adrl-categorylist+xml\r\n";

1268 
aut€xãnd
 = "Supported: com.microsoft.autoextend\r\n";

1271 
ªque°
 = 
	`g_°rdup_¥ötf
(

1277 "C⁄è˘: %s\r\n", 
aut€xãnd
, 
c⁄ã¡_ty≥
, 
tmp
);

1279 i‡(
sù
->
ocs2007
) {

1280 
c⁄ã¡
 = 
	`g_°rdup_¥ötf
(

1292 "</b©chSub>", 
sù
->
u£∫ame
, 
to
, 
c⁄ãxt
);

1295 
	`g_‰ì
(
tmp
);

1299 
key
 = 
	`g_°rdup_¥ötf
(
ACTION_NAME_PRESENCE
, 
to
);

1300 
dülog
 = (
sù_dülog
 *)
	`g_hash_èbÀ_lookup
(
sù
->
subs¸ùti⁄s
, 
key
);

1301 
	`SIPE_DEBUG_INFO
("sùe_subs¸ibe_¥e£n˚_sögÀ: subs¸ùti⁄ dülog f‹: %†i†%s", 
key
, 
dülog
 ? "Not NULL" : "NULL");

1303 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "SUBSCRIBE", 
to
,Åo, 
ªque°
, 
c⁄ã¡
, 
dülog
, 
¥o˚ss_subs¸ibe_ª•⁄£
);

1305 
	`g_‰ì
(
c⁄ã¡
);

1306 
	`g_‰ì
(
to
);

1307 
	`g_‰ì
(
ªque°
);

1308 
	`g_‰ì
(
key
);

1309 
	}
}

1311 
	$sùe_£t_°©us
(
PuΩÀAccou¡
 *
accou¡
, 
PuΩÀSètus
 *
°©us
)

1313 
	`SIPE_DEBUG_INFO
("sùe_£t_°©us: sètus=%s", 
	`puΩÀ_°©us_gë_id
(
°©us
));

1315 i‡(!
	`puΩÀ_°©us_is_a˘ive
(
°©us
))

1318 i‡(
accou¡
->
gc
) {

1319 
sùe_accou¡_d©a
 *
sù
 = 
PURPLE_ACCOUNT_TO_SIPE_ACCOUNT_DATA
;

1321 i‡(
sù
) {

1322 
gch¨
 *
a˘i⁄_«me
;

1323 
gch¨
 *
tmp
;

1324 
time_t
 
now
 = 
	`time
(
NULL
);

1325 c⁄° *
°©us_id
 = 
	`puΩÀ_°©us_gë_id
(
°©us
);

1326 c⁄° *
nŸe
 = 
	`puΩÀ_°©us_gë_©å_°rög
(
°©us
, 
SIPE_STATUS_ATTR_ID_MESSAGE
);

1327 
sùe_a˘ivôy
 
a˘ivôy
 = 
	`sùe_gë_a˘ivôy_by_tokí
(
°©us_id
);

1328 
gboﬁón
 
do_nŸ_publish
 = ((
now
 - 
sù
->do_nŸ_publish[
a˘ivôy
]) <= 2);

1333 i‡(
do_nŸ_publish
 && !
nŸe
 && 
sù
->
ˇl
 && sù->ˇl->
oof_nŸe
) {

1334 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_set_status:ÉnablingÖublicationás OOFÇote keepers.");

1335 
do_nŸ_publish
 = 
FALSE
;

1338 
	`SIPE_DEBUG_INFO
("sipe_set_status: was: sip->do_not_publish[%s]=%d [?]Çow(time)=%d",

1339 
°©us_id
, ()
sù
->
do_nŸ_publish
[
a˘ivôy
], ()
now
);

1341 
sù
->
do_nŸ_publish
[
a˘ivôy
] = 0;

1342 
	`SIPE_DEBUG_INFO
("sipe_set_status: set: sip->do_not_publish[%s]=%d [0]",

1343 
°©us_id
, ()
sù
->
do_nŸ_publish
[
a˘ivôy
]);

1345 i‡(
do_nŸ_publish
)

1347 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_set_status:Öublication was switched off,Éxiting.");

1351 
	`g_‰ì
(
sù
->
°©us
);

1352 
sù
->
°©us
 = 
	`g_°rdup
(
°©us_id
);

1355 
tmp
 = 
nŸe
 ? 
	`sùe_utûs_°r_ª∂a˚
“Ÿe, "'", "&≠os;"Ë: 
NULL
;

1358 i‡(!
	`sùe_°ªquÆ
(
tmp
, 
sù
->
nŸe
)) {

1359 
sù
->
is_oof_nŸe
 = 
FALSE
;

1360 
	`g_‰ì
(
sù
->
nŸe
);

1361 
sù
->
nŸe
 = 
	`g_°rdup
(note);

1362 
sù
->
nŸe_sö˚
 = 
	`time
(
NULL
);

1364 
	`g_‰ì
(
tmp
);

1367 
a˘i⁄_«me
 = 
	`g_°rdup_¥ötf
("<%s>", "+set-status");

1368 
	`sùe_scheduÀ_£c⁄ds
(
SIP_TO_CORE_PRIVATE
,

1369 
a˘i⁄_«me
,

1370 
NULL
,

1371 
SIPE_IDLE_SET_DELAY
,

1372 
£nd_¥e£n˚_°©us
,

1373 
NULL
);

1374 
	`g_‰ì
(
a˘i⁄_«me
);

1377 
	}
}

1380 
	$sùe_£t_idÀ
(
PuΩÀC⁄√˘i⁄
 * 
gc
,

1381 
öãrvÆ
)

1383 
	`SIPE_DEBUG_INFO
("sùe_£t_idÀ: i¡îvÆ=%d", 
öãrvÆ
);

1385 i‡(
gc
) {

1386 
sùe_accou¡_d©a
 *
sù
 = 
PURPLE_GC_TO_SIPE_ACCOUNT_DATA
;

1388 i‡(
sù
) {

1389 
sù
->
idÀ_swôch
 = 
	`time
(
NULL
);

1390 
	`SIPE_DEBUG_INFO
("sùe_£t_idÀ: sù->idÀ_swôch : %s", 
	`as˘ime
(
	`loˇ…ime
(&(
sù
->
idÀ_swôch
))));

1393 
	}
}

1396 
	$sùe_group_buddy
(
PuΩÀC⁄√˘i⁄
 *
gc
,

1397 c⁄° *
who
,

1398 c⁄° *
ﬁd_group_«me
,

1399 c⁄° *
√w_group_«me
)

1401 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
PURPLE_GC_TO_SIPE_CORE_PRIVATE
;

1402 
sùe_buddy
 * 
buddy
 = 
	`g_hash_èbÀ_lookup
(
sùe_¥iv©e
->
buddõs
, 
who
);

1403 
sùe_group
 * 
ﬁd_group
 = 
NULL
;

1404 
sùe_group
 * 
√w_group
;

1406 
	`SIPE_DEBUG_INFO
("sipe_group_buddy[CB]: who:%s old_group_name:%sÇew_group_name:%s",

1407 
who
 ? whÿ: "", 
ﬁd_group_«me
 ? old_group_«mê: "", 
√w_group_«me
 ?Çew_group_name : "");

1409 if(!
buddy
) {

1413 i‡(
ﬁd_group_«me
) {

1414 
ﬁd_group
 = 
	`sùe_group_föd_by_«me
(
sùe_¥iv©e
, 
ﬁd_group_«me
);

1416 
√w_group
 = 
	`sùe_group_föd_by_«me
(
sùe_¥iv©e
, 
√w_group_«me
);

1418 i‡(
ﬁd_group
) {

1419 
buddy
->
groups
 = 
	`g_¶i°_ªmove
(buddy->groups, 
ﬁd_group
);

1420 
	`SIPE_DEBUG_INFO
("buddy %†ªmoved from old grou∞%s", 
who
, 
ﬁd_group_«me
);

1423 i‡(!
√w_group
) {

1424 
	`sùe_group_¸óã
(
sùe_¥iv©e
, 
√w_group_«me
, 
who
);

1426 
buddy
->
groups
 = 
	`¶i°_ö£π_unique_s‹ãd
(buddy->groups, 
√w_group
, (
GCom∑ªFunc
)
sùe_group_com∑ª
);

1427 
	`sùe_c‹e_group_£t_u£r
(
SIPE_CORE_PUBLIC
, 
who
);

1429 
	}
}

1431 
	$sùe_add_buddy
(
PuΩÀC⁄√˘i⁄
 *
gc
, 
PuΩÀBuddy
 *
buddy
, 
PuΩÀGroup
 *
group
)

1433 
	`SIPE_DEBUG_INFO
("sùe_add_buddy[CB]: buddy:%†group:%s", 
buddy
 ? buddy->
«me
 : "", 
group
 ? group->name : "");

1436 i‡(
buddy
 && 
group
) {

1437 
sùe_accou¡_d©a
 *
sù
 = 
PURPLE_GC_TO_SIPE_ACCOUNT_DATA
;

1440 
gch¨
 *
buddy_«me
 = 
	`g_ascii_°rdown
(
buddy
->
«me
, -1);

1441 
	`puΩÀ_bli°_ª«me_buddy
(
buddy
, 
buddy_«me
);

1442 
	`g_‰ì
(
buddy_«me
);

1445 i‡(!
	`g_°r_has_¥efix
(
buddy
->
«me
, "sip:")) {

1446 
gch¨
 *
buf
 = 
	`sù_uri_‰om_«me
(
buddy
->
«me
);

1447 
	`puΩÀ_bli°_ª«me_buddy
(
buddy
, 
buf
);

1448 
	`g_‰ì
(
buf
);

1451 i‡(!
	`g_hash_èbÀ_lookup
(
SIP_TO_CORE_PRIVATE
->
buddõs
, 
buddy
->
«me
)) {

1452 
sùe_buddy
 *
b
 = 
	`g_√w0
(sipe_buddy, 1);

1453 
	`SIPE_DEBUG_INFO
("sùe_add_buddy:áddög %s", 
buddy
->
«me
);

1454 
b
->
«me
 = 
	`g_°rdup
(
buddy
->name);

1455 
b
->
ju°_added
 = 
TRUE
;

1456 
	`g_hash_èbÀ_ö£π
(
SIP_TO_CORE_PRIVATE
->
buddõs
, 
b
->
«me
, b);

1457 
	`sùe_group_buddy
(
gc
, 
b
->
«me
, 
NULL
, 
group
->name);

1459 
	`sùe_subs¸ibe_¥e£n˚_sögÀ
(
SIP_TO_CORE_PRIVATE
,

1460 
b
->
«me
);

1462 
	`SIPE_DEBUG_INFO
("sùe_add_buddy: buddy %†Æªady i¿öã∫ÆÜi°", 
buddy
->
«me
);

1465 
	}
}

1467 
	$sùe_‰ì_buddy
(
sùe_buddy
 *
buddy
)

1469 #i‚de‡
_WIN32


1483 
	`g_‰ì
(
buddy
->
«me
);

1485 
	`g_‰ì
(
buddy
->
a˘ivôy
);

1486 
	`g_‰ì
(
buddy
->
mìtög_subje˘
);

1487 
	`g_‰ì
(
buddy
->
mìtög_loˇti⁄
);

1488 
	`g_‰ì
(
buddy
->
nŸe
);

1490 
	`g_‰ì
(
buddy
->
ˇl_°¨t_time
);

1491 
	`g_‰ì
(
buddy
->
ˇl_‰ì_busy_ba£64
);

1492 
	`g_‰ì
(
buddy
->
ˇl_‰ì_busy
);

1493 
	`g_‰ì
(
buddy
->
œ°_n⁄_ˇl_a˘ivôy
);

1495 
	`sùe_ˇl_‰ì_w‹kög_hours
(
buddy
->
ˇl_w‹kög_hours
);

1497 
	`g_‰ì
(
buddy
->
devi˚_«me
);

1498 
	`g_¶i°_‰ì
(
buddy
->
groups
);

1499 
	`g_‰ì
(
buddy
);

1500 
	}
}

1507 
	$sùe_ªmove_buddy
(
PuΩÀC⁄√˘i⁄
 *
gc
, 
PuΩÀBuddy
 *
buddy
, 
PuΩÀGroup
 *
group
)

1509 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
PURPLE_GC_TO_SIPE_CORE_PRIVATE
;

1510 
sùe_buddy
 *
b
;

1511 
sùe_group
 *
g
 = 
NULL
;

1513 
	`SIPE_DEBUG_INFO
("sùe_ªmove_buddy[CB]: buddy:%†group:%s", 
buddy
 ? buddy->
«me
 : "", 
group
 ? group->name : "");

1514 i‡(!
buddy
) ;

1516 
b
 = 
	`g_hash_èbÀ_lookup
(
sùe_¥iv©e
->
buddõs
, 
buddy
->
«me
);

1517 i‡(!
b
) ;

1519 i‡(
group
) {

1520 
g
 = 
	`sùe_group_föd_by_«me
(
sùe_¥iv©e
, 
group
->
«me
);

1523 i‡(
g
) {

1524 
b
->
groups
 = 
	`g_¶i°_ªmove
(b->groups, 
g
);

1525 
	`SIPE_DEBUG_INFO
("buddy %†ªmoved from grou∞%s", 
buddy
->
«me
, 
g
->name);

1528 i‡(
	`g_¶i°_Àngth
(
b
->
groups
) < 1) {

1529 
gch¨
 *
a˘i⁄_«me
 = 
	`g_°rdup_¥ötf
(
ACTION_NAME_PRESENCE
, 
buddy
->
«me
);

1530 
	`sùe_scheduÀ_ˇn˚l
(
sùe_¥iv©e
, 
a˘i⁄_«me
);

1531 
	`g_‰ì
(
a˘i⁄_«me
);

1533 
	`g_hash_èbÀ_ªmove
(
sùe_¥iv©e
->
buddõs
, 
buddy
->
«me
);

1535 i‡(
b
->
«me
) {

1536 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

1537 
gch¨
 * 
body
 = 
	`g_°rdup_¥ötf
(
SIPE_SOAP_DEL_CONTACT
, 
b
->
«me
, 
sù
->
c⁄è˘s_dñè
++);

1538 
	`£nd_sﬂp_ªque°
(
sùe_¥iv©e
, 
body
);

1539 
	`g_‰ì
(
body
);

1542 
	`sùe_‰ì_buddy
(
b
);

1545 
	`sùe_c‹e_group_£t_u£r
(
SIPE_CORE_PUBLIC
, 
b
->
«me
);

1548 
	}
}

1551 
	$sùe_ª«me_group
(
PuΩÀC⁄√˘i⁄
 *
gc
,

1552 c⁄° *
ﬁd_«me
,

1553 
PuΩÀGroup
 *
group
,

1554 
SIPE_UNUSED_PARAMETER
 
GLi°
 *
moved_buddõs
)

1556 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
PURPLE_GC_TO_SIPE_CORE_PRIVATE
;

1557 
sùe_group
 * 
s_group
 = 
	`sùe_group_föd_by_«me
(
sùe_¥iv©e
, 
ﬁd_«me
);

1558 i‡(
s_group
) {

1559 
	`sùe_group_ª«me
(
sùe_¥iv©e
, 
s_group
, 
group
->
«me
);

1561 
	`SIPE_DEBUG_INFO
("C™nŸ föd grou∞%†tÿª«me", 
ﬁd_«me
);

1563 
	}
}

1566 
	$sùe_ªmove_group
(
PuΩÀC⁄√˘i⁄
 *
gc
, 
PuΩÀGroup
 *
group
)

1568 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
PURPLE_GC_TO_SIPE_CORE_PRIVATE
;

1569 
sùe_group
 * 
s_group
 = 
	`sùe_group_föd_by_«me
(
sùe_¥iv©e
, 
group
->
«me
);

1570 i‡(
s_group
) {

1571 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

1572 
gch¨
 *
body
;

1573 
	`SIPE_DEBUG_INFO
("Dñëög grou∞%s", 
group
->
«me
);

1574 
body
 = 
	`g_°rdup_¥ötf
(
SIPE_SOAP_DEL_GROUP
, 
s_group
->
id
, 
sù
->
c⁄è˘s_dñè
++);

1575 
	`£nd_sﬂp_ªque°
(
sùe_¥iv©e
, 
body
);

1576 
	`g_‰ì
(
body
);

1578 
sù
->
groups
 = 
	`g_¶i°_ªmove
(sù->groups, 
s_group
);

1579 
	`g_‰ì
(
s_group
->
«me
);

1580 
	`g_‰ì
(
s_group
);

1582 
	`SIPE_DEBUG_INFO
("C™nŸ föd grou∞%†tÿdñëe", 
group
->
«me
);

1584 
	}
}

1590 
	$sùe_buddy_subs¸ibe_cb
(*
buddy_«me
,

1591 
SIPE_UNUSED_PARAMETER
 
sùe_buddy
 *
buddy
,

1592 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

1594 
gch¨
 *
a˘i⁄_«me
 = 
	`g_°rdup_¥ötf
(
ACTION_NAME_PRESENCE
, 
buddy_«me
);

1596 
guöt
 
time_ønge
 = (
	`g_hash_èbÀ_size
(
sùe_¥iv©e
->
buddõs
) * 1000) / 25;

1597 
guöt
 
timeout
 = ((guötË
	`ønd
()Ë/ (
RAND_MAX
 / 
time_ønge
) + 1;

1599 
	`sùe_scheduÀ_m£c⁄ds
(
sùe_¥iv©e
,

1600 
a˘i⁄_«me
,

1601 
	`g_°rdup
(
buddy_«me
),

1602 
timeout
,

1603 
sùe_subs¸ibe_¥e£n˚_sögÀ
,

1604 
g_‰ì
);

1605 
	`g_‰ì
(
a˘i⁄_«me
);

1606 
	}
}

1612 
	$sùe_˛ónup_loˇl_bli°
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
) {

1613 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

1614 
GSLi°
 *
buddõs
 = 
	`puΩÀ_föd_buddõs
(
sù
->
accou¡
, 
NULL
);

1615 
GSLi°
 *
íåy
 = 
buddõs
;

1616 
sùe_buddy
 *
buddy
;

1617 
PuΩÀBuddy
 *
b
;

1618 
PuΩÀGroup
 *
g
;

1620 
	`SIPE_DEBUG_INFO
("sùe_˛ónup_loˇl_bli°: ovîÆ»%d PuΩÀ buddõ†(ö˛udög cl⁄es)", 
	`g_¶i°_Àngth
(
buddõs
));

1621 
	`SIPE_DEBUG_INFO
("sùe_˛ónup_loˇl_bli°: %d sùêbuddõ†(unique)", 
	`g_hash_èbÀ_size
(
SIP_TO_CORE_PRIVATE
->
buddõs
));

1622 
íåy
) {

1623 
b
 = 
íåy
->
d©a
;

1624 
g
 = 
	`puΩÀ_buddy_gë_group
(
b
);

1625 
buddy
 = 
	`g_hash_èbÀ_lookup
(
sùe_¥iv©e
->
buddõs
, 
b
->
«me
);

1626 if(
buddy
) {

1627 
gboﬁón
 
ö_sùe_groups
 = 
FALSE
;

1628 
GSLi°
 *
íåy2
 = 
buddy
->
groups
;

1629 
íåy2
) {

1630 
sùe_group
 *
group
 = 
íåy2
->
d©a
;

1631 i‡(
	`sùe_°ªquÆ
(
group
->
«me
, 
g
->name)) {

1632 
ö_sùe_groups
 = 
TRUE
;

1635 
íåy2
 =É¡ry2->
√xt
;

1637 if(!
ö_sùe_groups
) {

1638 
	`SIPE_DEBUG_INFO
("*** REMOVING %†‰om PuΩÀ group: %†a†nŸ havögÅhi†grou∞öÑﬂmögÜi°", 
b
->
«me
, 
g
->name);

1639 
	`puΩÀ_bli°_ªmove_buddy
(
b
);

1642 
	`SIPE_DEBUG_INFO
("*** REMOVING %†‰om PuΩÀ group: %†a†thi†buddyÇŸ i¿rﬂmögÜi°", 
b
->
«me
, 
g
->name);

1643 
	`puΩÀ_bli°_ªmove_buddy
(
b
);

1645 
íåy
 =É¡ry->
√xt
;

1647 
	`g_¶i°_‰ì
(
buddõs
);

1648 
	}
}

1651 
sùe_föd_ac˚ss_Àvñ
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

1652 c⁄° 
gch¨
 *
ty≥
,

1653 c⁄° 
gch¨
 *
vÆue
,

1654 
gboﬁón
 *
is_group_ac˚ss
);

1657 
	$sùe_ª‰esh_blocked_°©us_cb
(*
buddy_«me
,

1658 
SIPE_UNUSED_PARAMETER
 
sùe_buddy
 *
buddy
,

1659 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

1661 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

1662 
c⁄èöî_id
 = 
	`sùe_föd_ac˚ss_Àvñ
(
sùe_¥iv©e
, "u£r", 
buddy_«me
, 
NULL
);

1663 
gboﬁón
 
blocked
 = (
c⁄èöî_id
 == 32000);

1664 
gboﬁón
 
blocked_ö_bli°
 = !
	`puΩÀ_¥ivacy_check
(
sù
->
accou¡
, 
buddy_«me
);

1669 i‡(
blocked
 !
blocked_ö_bli°
) {

1670 i‡(
blocked
) {

1671 
	`puΩÀ_¥ivacy_díy_add
(
sù
->
accou¡
, 
buddy_«me
, 
TRUE
);

1673 
	`puΩÀ_¥ivacy_díy_ªmove
(
sù
->
accou¡
, 
buddy_«me
, 
TRUE
);

1678 
PuΩÀBuddy
 *
pbuddy
 = 
	`puΩÀ_föd_buddy
(
sù
->
accou¡
, 
buddy_«me
);

1679 c⁄° 
PuΩÀPª£n˚
 *
¥e£n˚
 = 
	`puΩÀ_buddy_gë_¥e£n˚
(
pbuddy
);

1680 c⁄° 
PuΩÀSètus
 *
p°©us
 = 
	`puΩÀ_¥e£n˚_gë_a˘ive_°©us
(
¥e£n˚
);

1682 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_refresh_blocked_status_cb: forcefullyÑefreshing screen.");

1683 
	`sùe_gŸ_u£r_°©us
(
sùe_¥iv©e
, 
buddy_«me
, 
	`puΩÀ_°©us_gë_id
(
p°©us
));

1687 
	}
}

1690 
	$sùe_ª‰esh_blocked_°©us
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

1692 
	`g_hash_èbÀ_f‹óch
(
sùe_¥iv©e
->
buddõs
,

1693 (
GHFunc
Ë
sùe_ª‰esh_blocked_°©us_cb
,

1694 
sùe_¥iv©e
);

1695 
	}
}

1697 
gboﬁón
 
	$sùe_¥o˚ss_rﬂmög_c⁄è˘s
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

1698 
sùmsg
 *
msg
)

1700 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

1701 
Àn
 = 
msg
->
bodyÀn
;

1703 c⁄° 
gch¨
 *
tmp
 = 
	`sùmsg_föd_hódî
(
msg
, "Event");

1704 c⁄° 
sùe_xml
 *
ôem
;

1705 
sùe_xml
 *
isc
;

1706 c⁄° 
gch¨
 *
c⁄è˘s_dñè
;

1707 c⁄° 
sùe_xml
 *
group_node
;

1708 i‡(!
	`g_°r_has_¥efix
(
tmp
, "vnd-microsoft-roaming-contacts")) {

1709  
FALSE
;

1713 
isc
 = 
	`sùe_xml_∑r£
(
msg
->
body
, 
Àn
);

1714 i‡(!
isc
) {

1715  
FALSE
;

1718 
c⁄è˘s_dñè
 = 
	`sùe_xml_©åibuã
(
isc
, "deltaNum");

1719 i‡(
c⁄è˘s_dñè
) {

1720 
sù
->
c⁄è˘s_dñè
 = ()
	`g_ascii_°πod
(c⁄è˘s_dñè, 
NULL
);

1723 i‡(
	`sùe_°ªquÆ
(
	`sùe_xml_«me
(
isc
), "contactList")) {

1726 
group_node
 = 
	`sùe_xml_chûd
(
isc
, "group"); group_node; group_nodê
	`sùe_xml_twö
(group_node)) {

1727 
sùe_group
 * 
group
 = 
	`g_√w0
(sipe_group, 1);

1728 c⁄° *
«me
 = 
	`sùe_xml_©åibuã
(
group_node
, "name");

1730 i‡(
	`g_°r_has_¥efix
(
«me
, "~")) {

1731 
«me
 = 
	`_
("Other Contacts");

1733 
group
->
«me
 = 
	`g_°rdup
(name);

1734 
group
->
id
 = ()
	`g_ascii_°πod
(
	`sùe_xml_©åibuã
(
group_node
, "id"), 
NULL
);

1736 
	`sùe_group_add
(
sùe_¥iv©e
, 
group
);

1740 i‡(
	`g_¶i°_Àngth
(
sù
->
groups
) == 0) {

1741 
sùe_group
 * 
group
 = 
	`g_√w0
(sipe_group, 1);

1742 
PuΩÀGroup
 *
puΩÀ_group
;

1743 
group
->
«me
 = 
	`g_°rdup
(
	`_
("Other Contacts"));

1744 
group
->
id
 = 1;

1745 
puΩÀ_group
 = 
	`puΩÀ_group_√w
(
group
->
«me
);

1746 
	`puΩÀ_bli°_add_group
(
puΩÀ_group
, 
NULL
);

1747 
sù
->
groups
 = 
	`g_¶i°_≠≥nd
(sù->groups, 
group
);

1751 
ôem
 = 
	`sùe_xml_chûd
(
isc
, "c⁄è˘"); iãm; iãm = 
	`sùe_xml_twö
(item)) {

1752 c⁄° 
gch¨
 *
uri
 = 
	`sùe_xml_©åibuã
(
ôem
, "uri");

1753 c⁄° 
gch¨
 *
«me
 = 
	`sùe_xml_©åibuã
(
ôem
, "name");

1754 
gch¨
 *
buddy_«me
;

1755 
sùe_buddy
 *
buddy
 = 
NULL
;

1756 
gch¨
 *
tmp
;

1757 
gch¨
 **
ôem_groups
;

1758 
i
 = 0;

1761 
tmp
 = 
	`sù_uri_‰om_«me
(
uri
);

1762 
buddy_«me
 = 
	`g_ascii_°rdown
(
tmp
, -1);

1763 
	`g_‰ì
(
tmp
);

1766 
tmp
 = 
	`g_°rdup
(
	`sùe_xml_©åibuã
(
ôem
, "groups"));

1767 if(
	`is_em±y
(
tmp
)) {

1768 
sùe_group
 *
group
 = 
	`sùe_group_föd_by_«me
(
sùe_¥iv©e
, 
	`_
("Other Contacts"));

1769 
	`g_‰ì
(
tmp
);

1770 
tmp
 = 
group
 ? 
	`g_°rdup_¥ötf
("%d", group->
id
Ë: 
	`g_°rdup
("1");

1772 
ôem_groups
 = 
	`g_°r•lô
(
tmp
, " ", 0);

1773 
	`g_‰ì
(
tmp
);

1775 
ôem_groups
[
i
]) {

1776 
sùe_group
 *
group
 = 
	`sùe_group_föd_by_id
(
sùe_¥iv©e
, 
	`g_ascii_°πod
(
ôem_groups
[
i
], 
NULL
));

1779 i‡(
group
 =
NULL
 && 
	`g_¶i°_Àngth
(
sù
->
groups
) > 0) {

1780 
group
 = 
sù
->
groups
->
d©a
;

1783 i‡(
group
 !
NULL
) {

1784 
PuΩÀBuddy
 *
b
 = 
	`puΩÀ_föd_buddy_ö_group
(
sù
->
accou¡
, 
buddy_«me
, 
group
->
puΩÀ_group
);

1785 i‡(!
b
){

1786 
b
 = 
	`puΩÀ_buddy_√w
(
sù
->
accou¡
, 
buddy_«me
, 
uri
);

1787 
	`puΩÀ_bli°_add_buddy
(
b
, 
NULL
, 
group
->
puΩÀ_group
, NULL);

1789 
	`SIPE_DEBUG_INFO
("Cª©edÇew buddy %†wôhálü†%s", 
buddy_«me
, 
uri
);

1792 i‡(
	`sùe_°rˇ£_equÆ
(
uri
, 
	`puΩÀ_buddy_gë_Æüs
(
b
))) {

1793 i‡(
«me
 !
NULL
 && 
	`°æí
(name) != 0) {

1794 
	`puΩÀ_bli°_Æüs_buddy
(
b
, 
«me
);

1796 
	`SIPE_DEBUG_INFO
("Rïœ˚d buddy %†Æü†wôh %s", 
buddy_«me
, 
«me
);

1800 i‡(!
buddy
) {

1801 
buddy
 = 
	`g_√w0
(
sùe_buddy
, 1);

1802 
buddy
->
«me
 = 
	`g_°rdup
(
b
->name);

1803 
	`g_hash_èbÀ_ö£π
(
sùe_¥iv©e
->
buddõs
, 
buddy
->
«me
, buddy);

1806 
buddy
->
groups
 = 
	`¶i°_ö£π_unique_s‹ãd
(buddy->groups, 
group
, (
GCom∑ªFunc
)
sùe_group_com∑ª
);

1808 
	`SIPE_DEBUG_INFO
("Added buddy %†tÿgrou∞%s", 
b
->
«me
, 
group
->name);

1810 
	`SIPE_DEBUG_INFO
("No group found for contact %s! UnableÅoáddÅo buddyÜist",

1811 
«me
);

1814 
i
++;

1816 
	`g_°r‰ìv
(
ôem_groups
);

1817 
	`g_‰ì
(
buddy_«me
);

1821 
	`sùe_˛ónup_loˇl_bli°
(
sùe_¥iv©e
);

1825 i‡(!
sù
->
ocs2007
) {

1826 
gch¨
 *
£lf_uri
 = 
	`sù_uri_£lf
(
sù
);

1827 
sùe_buddy
 *
buddy
 = 
	`g_hash_èbÀ_lookup
(
sùe_¥iv©e
->
buddõs
, 
£lf_uri
);

1829 i‡(!
buddy
) {

1830 
buddy
 = 
	`g_√w0
(
sùe_buddy
, 1);

1831 
buddy
->
«me
 = 
	`g_°rdup
(
£lf_uri
);

1832 
	`g_hash_èbÀ_ö£π
(
sùe_¥iv©e
->
buddõs
, 
buddy
->
«me
, buddy);

1834 
	`g_‰ì
(
£lf_uri
);

1837 
	`sùe_xml_‰ì
(
isc
);

1840 i‡(!
sù
->
subs¸ibed_buddõs
) {

1841 i‡(
sù
->
b©ched_suµ‹t
) {

1842 
	`sùe_subs¸ibe_¥e£n˚_b©ched
(
sùe_¥iv©e
, 
NULL
);

1844 
	`g_hash_èbÀ_f‹óch
(
sùe_¥iv©e
->
buddõs
,

1845 (
GHFunc
)
sùe_buddy_subs¸ibe_cb
,

1846 
sùe_¥iv©e
);

1848 
sù
->
subs¸ibed_buddõs
 = 
TRUE
;

1853 i‡(!
sù
->
ocs2007
) {

1854 
	`sùe_sched_ˇÀnd¨_°©us_upd©e
(
sùe_¥iv©e
, 
	`time
(
NULL
));

1858 
	}
}

1863 
	$sùe_subs¸ibe_rﬂmög_c⁄è˘s
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

1865 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

1866 
gch¨
 *
to
 = 
	`sù_uri_£lf
(
sù
);

1867 
gch¨
 *
tmp
 = 
	`gë_c⁄è˘
(
sù
);

1868 
gch¨
 *
hdr
 = 
	`g_°rdup_¥ötf
(

1875 "C⁄è˘: %s\r\n", 
tmp
);

1876 
	`g_‰ì
(
tmp
);

1878 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "SUBSCRIBE", 
to
,Åo, 
hdr
, "", 
NULL
, 
¥o˚ss_subs¸ibe_ª•⁄£
);

1879 
	`g_‰ì
(
to
);

1880 
	`g_‰ì
(
hdr
);

1881 
	}
}

1883 
	$sùe_subs¸ibe_¥e£n˚_w≥ndög
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

1884 
SIPE_UNUSED_PARAMETER
 *
unu£d
)

1886 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

1887 
gch¨
 *
key
;

1888 
sù_dülog
 *
dülog
;

1889 
gch¨
 *
to
 = 
	`sù_uri_£lf
(
sù
);

1890 
gch¨
 *
tmp
 = 
	`gë_c⁄è˘
(
sù
);

1891 
gch¨
 *
hdr
 = 
	`g_°rdup_¥ötf
(

1898 "C⁄è˘: %s\r\n", 
tmp
);

1899 
	`g_‰ì
(
tmp
);

1902 
key
 = 
	`g_°rdup_¥ötf
("<%s>", "presence.wpending");

1903 
dülog
 = (
sù_dülog
 *)
	`g_hash_èbÀ_lookup
(
sù
->
subs¸ùti⁄s
, 
key
);

1904 
	`SIPE_DEBUG_INFO
("sùe_subs¸ibe_¥e£n˚_w≥ndög: subs¸ùti⁄ dülog f‹: %†i†%s", 
key
, 
dülog
 ? "Not NULL" : "NULL");

1906 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "SUBSCRIBE", 
to
,Åo, 
hdr
, "", 
dülog
, 
¥o˚ss_subs¸ibe_ª•⁄£
);

1908 
	`g_‰ì
(
to
);

1909 
	`g_‰ì
(
hdr
);

1910 
	`g_‰ì
(
key
);

1911 
	}
}

1926 
	$sùe_¥o˚ss_ªgi°øti⁄_nŸify
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

1927 
sùmsg
 *
msg
)

1929 c⁄° 
gch¨
 *
c⁄ã¡ty≥
 = 
	`sùmsg_föd_hódî
(
msg
, "Content-Type");

1930 
gch¨
 *
evít
 = 
NULL
;

1931 
gch¨
 *
ªas⁄
 = 
NULL
;

1932 c⁄° 
gch¨
 *
dügno°ics
 = 
	`sùmsg_föd_hódî
(
msg
, "ms-diagnostics");

1933 
gch¨
 *
w¨nög
;

1935 
dügno°ics
 = dügno°ic†? dügno°ic†: 
	`sùmsg_föd_hódî
(
msg
, "ms-diagnostics-public");

1936 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_process_registration_notify: deregistrationÑeceived.");

1938 i‡(!
	`g_ascii_°∫ˇ£cmp
(
c⁄ã¡ty≥
, "text/registration-event", 23)) {

1939 
evít
 = 
	`sùmsg_föd_∑π_of_hódî
(
msg
->
body
, "evít=", 
NULL
, NULL);

1941 
evít
 =Évíà?Évíà: 
	`sùmsg_föd_∑π_of_hódî
(
msg
->
body
, "evít=", ";", 
NULL
);

1943 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_process_registration_notify: unknown contentÅype,Éxiting.");

1947 i‡(
dügno°ics
 !
NULL
) {

1948 
ªas⁄
 = 
	`sùmsg_föd_∑π_of_hódî
(
dügno°ics
, "ªas⁄=\"", "\"", 
NULL
);

1950 
îr‹_id
 = 0;

1951 i‡(
evít
 && 
	`sùe_°rˇ£_equÆ
(event, "unregistered")) {

1952 
îr‹_id
 = 4140;

1954 
ªas⁄
 = 
	`g_°rdup
(
	`_
("youáreálready signed inátánotherÜocation"));

1955 } i‡(
evít
 && 
	`sùe_°rˇ£_equÆ
(event, "rejected")) {

1956 
îr‹_id
 = 4141;

1957 
ªas⁄
 = 
	`g_°rdup
(
	`_
("user disabled"));

1958 } i‡(
evít
 && 
	`sùe_°rˇ£_equÆ
(event, "deactivated")) {

1959 
îr‹_id
 = 4142;

1960 
ªas⁄
 = 
	`g_°rdup
(
	`_
("user moved"));

1963 
	`g_‰ì
(
evít
);

1964 
w¨nög
 = 
	`g_°rdup_¥ötf
(
	`_
("You havêbì¿ªje˘ed byÅhê£rvî: %s"), 
ªas⁄
 ?Ñeason : _("noÑeason given"));

1965 
	`g_‰ì
(
ªas⁄
);

1967 
	`sùe_backíd_c⁄√˘i⁄_îr‹
(
SIPE_CORE_PUBLIC
,

1968 
SIPE_CONNECTION_ERROR_INVALID_USERNAME
,

1969 
w¨nög
);

1970 
	`g_‰ì
(
w¨nög
);

1972 
	}
}

1974 
	$sùe_¥o˚ss_¥ovisi⁄ög_v2
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

1975 
sùmsg
 *
msg
)

1977 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

1978 
sùe_xml
 *
xn_¥ovisi⁄_group_li°
;

1979 c⁄° 
sùe_xml
 *
node
;

1981 
xn_¥ovisi⁄_group_li°
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

1984 
node
 = 
	`sùe_xml_chûd
(
xn_¥ovisi⁄_group_li°
, "¥ovisi⁄Group");Çode;Çodê
	`sùe_xml_twö
(node)) {

1985 i‡(
	`sùe_°ªquÆ
("SîvîC⁄figuøti⁄", 
	`sùe_xml_©åibuã
(
node
, "name"))) {

1986 
	`g_‰ì
(
sù
->
focus_Á˘‹y_uri
);

1987 
sù
->
focus_Á˘‹y_uri
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "focusFactoryUri"));

1988 
	`SIPE_DEBUG_INFO
("sipe_process_provisioning_v2: sip->focus_factory_uri=%s",

1989 
sù
->
focus_Á˘‹y_uri
 ? sip->focus_factory_uri : "");

1993 
	`sùe_xml_‰ì
(
xn_¥ovisi⁄_group_li°
);

1994 
	}
}

1998 
	$sùe_¥o˚ss_¥ovisi⁄ög
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

1999 
sùmsg
 *
msg
)

2001 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

2002 
sùe_xml
 *
xn_¥ovisi⁄
;

2003 c⁄° 
sùe_xml
 *
node
;

2005 
xn_¥ovisi⁄
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

2006 i‡((
node
 = 
	`sùe_xml_chûd
(
xn_¥ovisi⁄
, "user"))) {

2007 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_¥ovisi⁄ög: uri=%s", 
	`sùe_xml_©åibuã
(
node
, "uri"));

2008 i‡((
node
 = 
	`sùe_xml_chûd
(node, "line"))) {

2009 c⁄° 
gch¨
 *
löe_uri
 = 
	`sùe_xml_©åibuã
(
node
, "uri");

2010 c⁄° 
gch¨
 *
£rvî
 = 
	`sùe_xml_©åibuã
(
node
, "server");

2011 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_¥ovisi⁄ög:Üöe_uri=%†£rvî=%s", 
löe_uri
, 
£rvî
);

2012 
	`sù_c°a_›í
(
sù
, 
löe_uri
, 
£rvî
);

2015 
	`sùe_xml_‰ì
(
xn_¥ovisi⁄
);

2016 
	}
}

2018 
	$sùe_¥o˚ss_rﬂmög_a˛
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

2019 
sùmsg
 *
msg
)

2021 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

2022 c⁄° 
gch¨
 *
c⁄è˘s_dñè
;

2023 
sùe_xml
 *
xml
;

2025 
xml
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

2026 i‡(!
xml
)

2031 
c⁄è˘s_dñè
 = 
	`sùe_xml_©åibuã
(
xml
, "deltaNum");

2032 i‡(
c⁄è˘s_dñè
)

2034 
sù
->
a˛_dñè
 = ()
	`g_ascii_°πod
(
c⁄è˘s_dñè
, 
NULL
);

2037 
	`sùe_xml_‰ì
(
xml
);

2038 
	}
}

2041 
	$‰ì_c⁄èöî_membî
(
sùe_c⁄èöî_membî
 *
membî
)

2043 i‡(!
membî
) ;

2045 
	`g_‰ì
(
membî
->
ty≥
);

2046 
	`g_‰ì
(
membî
->
vÆue
);

2047 
	`g_‰ì
(
membî
);

2048 
	}
}

2051 
	$‰ì_c⁄èöî
(
sùe_c⁄èöî
 *
c⁄èöî
)

2053 
GSLi°
 *
íåy
;

2055 i‡(!
c⁄èöî
) ;

2057 
íåy
 = 
c⁄èöî
->
membîs
;

2058 
íåy
) {

2059 *
d©a
 = 
íåy
->data;

2060 
íåy
 = 
	`g_¶i°_ªmove
”¡ry, 
d©a
);

2061 
	`‰ì_c⁄èöî_membî
((
sùe_c⁄èöî_membî
 *)
d©a
);

2063 
	`g_‰ì
(
c⁄èöî
);

2064 
	}
}

2067 
	$sùe_£nd_c⁄èöî_membîs_¥ï¨e
(c⁄° 
guöt
 
c⁄èöî_id
,

2068 c⁄° 
guöt
 
c⁄èöî_vîsi⁄
,

2069 c⁄° 
gch¨
 *
a˘i⁄
,

2070 c⁄° 
gch¨
 *
ty≥
,

2071 c⁄° 
gch¨
 *
vÆue
,

2072 **
c⁄èöî_xmls
)

2074 
gch¨
 *
vÆue_°r
 = 
vÆue
 ? 
	`g_°rdup_¥ötf
(" vÆue=\"%s\"", vÆueË: 
	`g_°rdup
("");

2075 
gch¨
 *
body
;

2077 i‡(!
c⁄èöî_xmls
) ;

2079 
body
 = 
	`g_°rdup_¥ötf
(

2081 
c⁄èöî_id
,

2082 
c⁄èöî_vîsi⁄
,

2083 
a˘i⁄
,

2084 
ty≥
,

2085 
vÆue_°r
);

2086 
	`g_‰ì
(
vÆue_°r
);

2088 i‡((*
c⁄èöî_xmls
Ë=
NULL
) {

2089 *
c⁄èöî_xmls
 = 
body
;

2091 *
tmp
 = *
c⁄èöî_xmls
;

2093 *
c⁄èöî_xmls
 = 
	`g_°rc⁄ˇt
(*c⁄èöî_xmls, 
body
, 
NULL
);

2094 
	`g_‰ì
(
tmp
);

2095 
	`g_‰ì
(
body
);

2097 
	}
}

2100 
	$sùe_£nd_£t_c⁄èöî_membîs
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

2101 *
c⁄èöî_xmls
)

2103 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

2104 
gch¨
 *
£lf
;

2105 
gch¨
 *
c⁄è˘
;

2106 
gch¨
 *
hdr
;

2107 
gch¨
 *
body
;

2109 i‡(!
c⁄èöî_xmls
) ;

2111 
£lf
 = 
	`sù_uri_£lf
(
sù
);

2112 
body
 = 
	`g_°rdup_¥ötf
(

2116 
c⁄èöî_xmls
);

2118 
c⁄è˘
 = 
	`gë_c⁄è˘
(
sù
);

2119 
hdr
 = 
	`g_°rdup_¥ötf
("Contact: %s\r\n"

2120 "C⁄ã¡-Ty≥:áµliˇti⁄/m§tc-£tc⁄èöîmembîs+xml\r\n", 
c⁄è˘
);

2121 
	`g_‰ì
(
c⁄è˘
);

2123 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "SERVICE", 
£lf
, sñf, 
hdr
, 
body
, 
NULL
, NULL);

2125 
	`g_‰ì
(
hdr
);

2126 
	`g_‰ì
(
body
);

2127 
	`g_‰ì
(
£lf
);

2128 
	}
}

2133 
sùe_c⁄èöî_membî
 *

2134 
	$sùe_föd_c⁄èöî_membî
(
sùe_c⁄èöî
 *
c⁄èöî
,

2135 c⁄° 
gch¨
 *
ty≥
,

2136 c⁄° 
gch¨
 *
vÆue
)

2138 
sùe_c⁄èöî_membî
 *
membî
;

2139 
GSLi°
 *
íåy
;

2141 i‡(
c⁄èöî
 =
NULL
 || 
ty≥
 == NULL) {

2142  
NULL
;

2145 
íåy
 = 
c⁄èöî
->
membîs
;

2146 
íåy
) {

2147 
membî
 = 
íåy
->
d©a
;

2148 i‡(
	`sùe_°rˇ£_equÆ
(
membî
->
ty≥
,Åype) &&

2149 
	`sùe_°rˇ£_equÆ
(
membî
->
vÆue
, value))

2151  
membî
;

2153 
íåy
 =É¡ry->
√xt
;

2155  
NULL
;

2156 
	}
}

2161 
sùe_c⁄èöî
 *

2162 
	$sùe_föd_c⁄èöî
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

2163 
guöt
 
id
)

2165 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

2166 
sùe_c⁄èöî
 *
c⁄èöî
;

2167 
GSLi°
 *
íåy
;

2169 i‡(
sù
 =
NULL
) {

2170  
NULL
;

2173 
íåy
 = 
sù
->
c⁄èöîs
;

2174 
íåy
) {

2175 
c⁄èöî
 = 
íåy
->
d©a
;

2176 i‡(
id
 =
c⁄èöî
->id) {

2177  
c⁄èöî
;

2179 
íåy
 =É¡ry->
√xt
;

2181  
NULL
;

2182 
	}
}

2184 
GSLi°
 *

2185 
	$sùe_gë_ac˚ss_domaös
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

2187 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

2188 
sùe_c⁄èöî
 *
c⁄èöî
;

2189 
sùe_c⁄èöî_membî
 *
membî
;

2190 
GSLi°
 *
íåy
;

2191 
GSLi°
 *
íåy2
;

2192 
GSLi°
 *
ªs
 = 
NULL
;

2194 i‡(!
sù
Ë 
NULL
;

2196 
íåy
 = 
sù
->
c⁄èöîs
;

2197 
íåy
) {

2198 
c⁄èöî
 = 
íåy
->
d©a
;

2200 
íåy2
 = 
c⁄èöî
->
membîs
;

2201 
íåy2
) {

2202 
membî
 = 
íåy2
->
d©a
;

2203 i‡(
	`sùe_°rˇ£_equÆ
(
membî
->
ty≥
, "domain"))

2205 
ªs
 = 
	`¶i°_ö£π_unique_s‹ãd
‘es, 
	`g_°rdup
(
membî
->
vÆue
), (
GCom∑ªFunc
)
g_ascii_°rˇ£cmp
);

2207 
íåy2
 =É¡ry2->
√xt
;

2209 
íåy
 =É¡ry->
√xt
;

2211  
ªs
;

2212 
	}
}

2223 
	$sùe_gë_domaö
(c⁄° *
emaû
)

2225 *
tmp
;

2227 i‡(!
emaû
Ë 
NULL
;

2229 
tmp
 = 
	`°r°r
(
emaû
, "@");

2231 i‡(
tmp
 && (—mp+1Ë< (
emaû
 + 
	`°æí
(email)))) {

2232  
tmp
+1;

2234  
NULL
;

2236 
	}
}

2241 c⁄° * c⁄° 
	gpublic_domaös
 [] = {

2256 
NULL
};

2258 
gboﬁón


2259 
	$sùe_is_public_domaö
(c⁄° *
domaö
)

2261 
i
 = 0;

2262 
public_domaös
[
i
]) {

2263 i‡(
	`sùe_°rˇ£_equÆ
(
public_domaös
[
i
], 
domaö
)) {

2264  
TRUE
;

2266 
i
++;

2268  
FALSE
;

2269 
	}
}

2280 
	$sùe_gë_ac˚ss_Àvñ_«me
(
c⁄èöî_id
)

2282 
c⁄èöî_id
) {

2283 32000:  
	`_
("Blocked");

2284 400:  
	`_
("Personal");

2285 300:  
	`_
("Team");

2286 200:  
	`_
("Company");

2287 100:  
	`_
("Public");

2289  
	`_
("Unknown");

2290 
	}
}

2292 c⁄° 
guöt
 
	gc⁄èöîs
[] = {32000, 400, 300, 200, 100};

2293 
	#CONTAINERS_LEN
 ((
c⁄èöîs
Ë/ (
guöt
))

	)

2297 
	$sùe_föd_membî_ac˚ss_Àvñ
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

2298 c⁄° 
gch¨
 *
ty≥
,

2299 c⁄° 
gch¨
 *
vÆue
)

2301 
i
 = 0;

2302 c⁄° 
gch¨
 *
vÆue_mod
 = 
vÆue
;

2304 i‡(!
ty≥
)  -1;

2306 i‡(
	`sùe_°ªquÆ
("u£r", 
ty≥
)) {

2307 
vÆue_mod
 = 
	`sùe_gë_no_sù_uri
(
vÆue
);

2310 
i
 = 0; i < 
CONTAINERS_LEN
; i++) {

2311 
sùe_c⁄èöî_membî
 *
membî
;

2312 
sùe_c⁄èöî
 *
c⁄èöî
 = 
	`sùe_föd_c⁄èöî
(
sùe_¥iv©e
, 
c⁄èöîs
[
i
]);

2313 i‡(!
c⁄èöî
) ;

2315 
membî
 = 
	`sùe_föd_c⁄èöî_membî
(
c⁄èöî
, 
ty≥
, 
vÆue_mod
);

2316 i‡(
membî
Ë 
c⁄èöîs
[
i
];

2320 
	}
}

2324 
	$sùe_föd_ac˚ss_Àvñ
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

2325 c⁄° 
gch¨
 *
ty≥
,

2326 c⁄° 
gch¨
 *
vÆue
,

2327 
gboﬁón
 *
is_group_ac˚ss
)

2329 
c⁄èöî_id
 = -1;

2331 i‡(
	`sùe_°ªquÆ
("u£r", 
ty≥
)) {

2332 c⁄° *
domaö
;

2333 c⁄° *
no_sù_uri
 = 
	`sùe_gë_no_sù_uri
(
vÆue
);

2335 
c⁄èöî_id
 = 
	`sùe_föd_membî_ac˚ss_Àvñ
(
sùe_¥iv©e
, "u£r", 
no_sù_uri
);

2336 i‡(
c⁄èöî_id
 >= 0) {

2337 i‡(
is_group_ac˚ss
Ë*is_group_ac˚s†
FALSE
;

2338  
c⁄èöî_id
;

2341 
domaö
 = 
	`sùe_gë_domaö
(
no_sù_uri
);

2342 
c⁄èöî_id
 = 
	`sùe_föd_membî_ac˚ss_Àvñ
(
sùe_¥iv©e
, "domaö", 
domaö
);

2343 i‡(
c⁄èöî_id
 >= 0) {

2344 i‡(
is_group_ac˚ss
Ë*is_group_ac˚s†
TRUE
;

2345  
c⁄èöî_id
;

2348 
c⁄èöî_id
 = 
	`sùe_föd_membî_ac˚ss_Àvñ
(
sùe_¥iv©e
, "ßmeE¡î¥i£", 
NULL
);

2349 i‡((
c⁄èöî_id
 >0Ë&& 
	`sùe_°rˇ£_equÆ
(
sùe_¥iv©e
->
public
.
sù_domaö
, 
domaö
)) {

2350 i‡(
is_group_ac˚ss
Ë*is_group_ac˚s†
TRUE
;

2351  
c⁄èöî_id
;

2354 
c⁄èöî_id
 = 
	`sùe_föd_membî_ac˚ss_Àvñ
(
sùe_¥iv©e
, "publicCloud", 
NULL
);

2355 i‡((
c⁄èöî_id
 >0Ë&& 
	`sùe_is_public_domaö
(
domaö
)) {

2356 i‡(
is_group_ac˚ss
Ë*is_group_ac˚s†
TRUE
;

2357  
c⁄èöî_id
;

2360 
c⁄èöî_id
 = 
	`sùe_föd_membî_ac˚ss_Àvñ
(
sùe_¥iv©e
, "evîy⁄e", 
NULL
);

2361 i‡((
c⁄èöî_id
 >= 0)) {

2362 i‡(
is_group_ac˚ss
Ë*is_group_ac˚s†
TRUE
;

2363  
c⁄èöî_id
;

2366 
c⁄èöî_id
 = 
	`sùe_föd_membî_ac˚ss_Àvñ
(
sùe_¥iv©e
, 
ty≥
, 
vÆue
);

2367 i‡(
is_group_ac˚ss
Ë*is_group_ac˚s†
FALSE
;

2370  
c⁄èöî_id
;

2371 
	}
}

2380 
	$sùe_ch™ge_ac˚ss_Àvñ
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

2381 c⁄° 
c⁄èöî_id
,

2382 c⁄° 
gch¨
 *
ty≥
,

2383 c⁄° 
gch¨
 *
vÆue
)

2385 
i
;

2386 
cuºít_c⁄èöî_id
 = -1;

2387 *
c⁄èöî_xmls
 = 
NULL
;

2390 
i
 = 0; i < 
CONTAINERS_LEN
; i++) {

2391 
sùe_c⁄èöî_membî
 *
membî
;

2392 
sùe_c⁄èöî
 *
c⁄èöî
 = 
	`sùe_föd_c⁄èöî
(
sùe_¥iv©e
, 
c⁄èöîs
[
i
]);

2394 i‡(!
c⁄èöî
) ;

2396 
membî
 = 
	`sùe_föd_c⁄èöî_membî
(
c⁄èöî
, 
ty≥
, 
vÆue
);

2397 i‡(
membî
) {

2398 
cuºít_c⁄èöî_id
 = 
c⁄èöîs
[
i
];

2400 i‡(
c⁄èöî_id
 < 0 || c⁄èöî_id !
cuºít_c⁄èöî_id
) {

2401 
	`sùe_£nd_c⁄èöî_membîs_¥ï¨e
(
cuºít_c⁄èöî_id
, 
c⁄èöî
->
vîsi⁄
, "ªmove", 
ty≥
, 
vÆue
, &
c⁄èöî_xmls
);

2403 
c⁄èöî
->
membîs
 = 
	`g_¶i°_ªmove
(c⁄èöî->membîs, 
membî
);

2404 
cuºít_c⁄èöî_id
 = -1;

2410 
cuºít_c⁄èöî_id
 = 
	`sùe_föd_ac˚ss_Àvñ
(
sùe_¥iv©e
, 
ty≥
, 
vÆue
, 
NULL
);

2413 i‡(
c⁄èöî_id
 !
cuºít_c⁄èöî_id
 && container_id >= 0) {

2414 
sùe_c⁄èöî
 *
c⁄èöî
 = 
	`sùe_föd_c⁄èöî
(
sùe_¥iv©e
, 
c⁄èöî_id
);

2415 
guöt
 
vîsi⁄
 = 
c⁄èöî
 ? container->version : 0;

2417 
	`sùe_£nd_c⁄èöî_membîs_¥ï¨e
(
c⁄èöî_id
, 
vîsi⁄
, "add", 
ty≥
, 
vÆue
, &
c⁄èöî_xmls
);

2420 i‡(
c⁄èöî_xmls
) {

2421 
	`sùe_£nd_£t_c⁄èöî_membîs
(
sùe_¥iv©e
, 
c⁄èöî_xmls
);

2423 
	`g_‰ì
(
c⁄èöî_xmls
);

2424 
	}
}

2427 
	$‰ì_publiˇti⁄
(
sùe_publiˇti⁄
 *
publiˇti⁄
)

2429 
	`g_‰ì
(
publiˇti⁄
->
ˇãg‹y
);

2430 
	`g_‰ì
(
publiˇti⁄
->
ˇl_evít_hash
);

2431 
	`g_‰ì
(
publiˇti⁄
->
nŸe
);

2433 
	`g_‰ì
(
publiˇti⁄
->
w‹kög_hours_xml_°r
);

2434 
	`g_‰ì
(
publiˇti⁄
->
fb_°¨t_°r
);

2435 
	`g_‰ì
(
publiˇti⁄
->
‰ì_busy_ba£64
);

2437 
	`g_‰ì
(
publiˇti⁄
);

2438 
	}
}

2441 
gboﬁón


2442 
	$sùe_is_our_publiˇti⁄
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

2443 c⁄° 
gch¨
 *
key
)

2445 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

2446 
GSLi°
 *
íåy
;

2449 i‡(!
sù
->
our_publiˇti⁄_keys
) {

2450 
guöt
 
devi˚_ö°™˚
 = 
	`sùe_gë_pub_ö°™˚
(
sù
, 
SIPE_PUB_DEVICE
);

2451 
guöt
 
machöe_ö°™˚
 = 
	`sùe_gë_pub_ö°™˚
(
sù
, 
SIPE_PUB_STATE_MACHINE
);

2452 
guöt
 
u£r_ö°™˚
 = 
	`sùe_gë_pub_ö°™˚
(
sù
, 
SIPE_PUB_STATE_USER
);

2453 
guöt
 
ˇÀnd¨_ö°™˚
 = 
	`sùe_gë_pub_ö°™˚
(
sù
, 
SIPE_PUB_STATE_CALENDAR
);

2454 
guöt
 
ˇl_oof_ö°™˚
 = 
	`sùe_gë_pub_ö°™˚
(
sù
, 
SIPE_PUB_STATE_CALENDAR_OOF
);

2455 
guöt
 
ˇl_d©a_ö°™˚
 = 
	`sùe_gë_pub_ö°™˚
(
sù
, 
SIPE_PUB_CALENDAR_DATA
);

2456 
guöt
 
nŸe_oof_ö°™˚
 = 
	`sùe_gë_pub_ö°™˚
(
sù
, 
SIPE_PUB_NOTE_OOF
);

2458 
	`SIPE_DEBUG_INFO_NOFORMAT
("* Our Publication Instances *");

2459 
	`SIPE_DEBUG_INFO
("\tDevi˚ : %u\t0x%08X", 
devi˚_ö°™˚
, device_instance);

2460 
	`SIPE_DEBUG_INFO
("\tMachöêSèã : %u\t0x%08X", 
machöe_ö°™˚
, machine_instance);

2461 
	`SIPE_DEBUG_INFO
("\tU£∏Sèª : %u\t0x%08X", 
u£r_ö°™˚
, user_instance);

2462 
	`SIPE_DEBUG_INFO
("\tCÆíd¨ Sèã : %u\t0x%08X", 
ˇÀnd¨_ö°™˚
, calendar_instance);

2463 
	`SIPE_DEBUG_INFO
("\tCÆíd¨ OOF Sèã : %u\t0x%08X", 
ˇl_oof_ö°™˚
, cal_oof_instance);

2464 
	`SIPE_DEBUG_INFO
("\tCÆíd¨ FªeBusy : %u\t0x%08X", 
ˇl_d©a_ö°™˚
, cal_data_instance);

2465 
	`SIPE_DEBUG_INFO
("\tOOF NŸê : %u\t0x%08X", 
nŸe_oof_ö°™˚
,Çote_oof_instance);

2466 
	`SIPE_DEBUG_INFO
("\tNote : %u", 0);

2467 
	`SIPE_DEBUG_INFO
("\tCalendar WorkingHours: %u", 0);

2470 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2471 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "devi˚", 
devi˚_ö°™˚
, 2));

2474 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2475 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "°©e", 
machöe_ö°™˚
, 2));

2476 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2477 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "°©e", 
machöe_ö°™˚
, 3));

2480 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2481 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "°©e", 
u£r_ö°™˚
, 2));

2482 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2483 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "°©e", 
u£r_ö°™˚
, 3));

2486 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2487 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "°©e", 
ˇÀnd¨_ö°™˚
, 2));

2488 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2489 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "°©e", 
ˇÀnd¨_ö°™˚
, 3));

2492 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2493 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "°©e", 
ˇl_oof_ö°™˚
, 2));

2494 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2495 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "°©e", 
ˇl_oof_ö°™˚
, 3));

2498 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2499 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "note", 0, 200));

2500 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2501 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "note", 0, 300));

2502 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2503 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "note", 0, 400));

2506 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2507 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "nŸe", 
nŸe_oof_ö°™˚
, 200));

2508 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2509 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "nŸe", 
nŸe_oof_ö°™˚
, 300));

2510 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2511 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "nŸe", 
nŸe_oof_ö°™˚
, 400));

2514 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2515 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "calendarData", 0, 1));

2516 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2517 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "calendarData", 0, 100));

2518 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2519 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "calendarData", 0, 200));

2520 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2521 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "calendarData", 0, 300));

2522 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2523 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "calendarData", 0, 400));

2524 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2525 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "calendarData", 0, 32000));

2528 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2529 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "ˇÀnd¨D©a", 
ˇl_d©a_ö°™˚
, 1));

2530 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2531 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "ˇÀnd¨D©a", 
ˇl_d©a_ö°™˚
, 100));

2532 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2533 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "ˇÀnd¨D©a", 
ˇl_d©a_ö°™˚
, 200));

2534 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2535 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "ˇÀnd¨D©a", 
ˇl_d©a_ö°™˚
, 300));

2536 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2537 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "ˇÀnd¨D©a", 
ˇl_d©a_ö°™˚
, 400));

2538 
sù
->
our_publiˇti⁄_keys
 = 
	`g_¶i°_≠≥nd
(sip->our_publication_keys,

2539 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "ˇÀnd¨D©a", 
ˇl_d©a_ö°™˚
, 32000));

2547 
íåy
 = 
sù
->
our_publiˇti⁄_keys
;

2548 
íåy
) {

2550 i‡(
	`sùe_°ªquÆ
(
íåy
->
d©a
, 
key
)) {

2551  
TRUE
;

2553 
íåy
 =É¡ry->
√xt
;

2555  
FALSE
;

2556 
	}
}

2559 
	#ALIAS_PROP
 "Æüs"

	)

2560 
	#EMAIL_PROP
 "emaû"

	)

2561 
	#PHONE_PROP
 "ph⁄e"

	)

2562 
	#PHONE_DISPLAY_PROP
 "ph⁄e-di•œy"

	)

2563 
	#PHONE_MOBILE_PROP
 "ph⁄e-mobûe"

	)

2564 
	#PHONE_MOBILE_DISPLAY_PROP
 "ph⁄e-mobûe-di•œy"

	)

2565 
	#PHONE_HOME_PROP
 "ph⁄e-home"

	)

2566 
	#PHONE_HOME_DISPLAY_PROP
 "ph⁄e-home-di•œy"

	)

2567 
	#PHONE_OTHER_PROP
 "ph⁄e-Ÿhî"

	)

2568 
	#PHONE_OTHER_DISPLAY_PROP
 "ph⁄e-Ÿhî-di•œy"

	)

2569 
	#PHONE_CUSTOM1_PROP
 "ph⁄e-cu°om1"

	)

2570 
	#PHONE_CUSTOM1_DISPLAY_PROP
 "ph⁄e-cu°om1-di•œy"

	)

2571 
	#SITE_PROP
 "sôe"

	)

2572 
	#COMPANY_PROP
 "com∑ny"

	)

2573 
	#DEPARTMENT_PROP
 "dï¨tmít"

	)

2574 
	#TITLE_PROP
 "tôÀ"

	)

2575 
	#OFFICE_PROP
 "offi˚"

	)

2577 
	#ADDRESS_STREET_PROP
 "addªss-°ªë"

	)

2578 
	#ADDRESS_CITY_PROP
 "addªss-côy"

	)

2579 
	#ADDRESS_STATE_PROP
 "addªss-°©e"

	)

2580 
	#ADDRESS_ZIPCODE_PROP
 "addªss-zùcode"

	)

2581 
	#ADDRESS_COUNTRYCODE_PROP
 "addªss-cou¡ry-code"

	)

2604 
	$sùe_gë_fú°_œ°_«mes
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

2605 c⁄° *
uri
,

2606 **
fú°_«me
,

2607 **
œ°_«me
)

2609 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

2610 
PuΩÀBuddy
 *
p_buddy
;

2611 *
di•œy_«me
;

2612 c⁄° *
emaû
;

2613 c⁄° *
fú°
, *
œ°
;

2614 *
tmp
;

2615 **
∑πs
;

2616 
gboﬁón
 
has_comma
 = 
FALSE
;

2618 i‡(!
sù
 || !
uri
) ;

2620 
p_buddy
 = 
	`puΩÀ_föd_buddy
(
sù
->
accou¡
, 
uri
);

2622 i‡(!
p_buddy
) ;

2624 
di•œy_«me
 = 
	`g_°rdup
(
	`puΩÀ_buddy_gë_Æüs
(
p_buddy
));

2625 
emaû
 = 
	`puΩÀ_bli°_node_gë_°rög
(&
p_buddy
->
node
, 
EMAIL_PROP
);

2627 i‡(!
di•œy_«me
 && !
emaû
) ;

2630 i‡(
emaû
 && !
di•œy_«me
) {

2631 
di•œy_«me
 = 
	`g_°∫dup
(
emaû
, 
	`°r°r
(email, "@") -Émail);

2632 
di•œy_«me
 = 
	`sùe_utûs_°r_ª∂a˚
((
tmp
 = display_name), ".", " ");

2633 
	`g_‰ì
(
tmp
);

2636 i‡(
di•œy_«me
) {

2637 
has_comma
 = (
	`°r°r
(
di•œy_«me
, ","Ë!
NULL
);

2638 
di•œy_«me
 = 
	`sùe_utûs_°r_ª∂a˚
((
tmp
 = display_name), ", ", " ");

2639 
	`g_‰ì
(
tmp
);

2640 
di•œy_«me
 = 
	`sùe_utûs_°r_ª∂a˚
((
tmp
 = display_name), ",", " ");

2641 
	`g_‰ì
(
tmp
);

2644 
∑πs
 = 
	`g_°r•lô
(
di•œy_«me
, " ", 0);

2646 i‡(!
∑πs
[0] || !parts[1]) {

2647 
	`g_‰ì
(
di•œy_«me
);

2648 
	`g_°r‰ìv
(
∑πs
);

2652 i‡(
has_comma
) {

2653 
œ°
 = 
∑πs
[0];

2654 
fú°
 = 
∑πs
[1];

2656 
fú°
 = 
∑πs
[0];

2657 
œ°
 = 
∑πs
[1];

2660 i‡(
fú°_«me
) {

2661 *
fú°_«me
 = 
	`g_°r°rù
(
	`g_°rdup
(
fú°
));

2664 i‡(
œ°_«me
) {

2665 *
œ°_«me
 = 
	`g_°r°rù
(
	`g_°rdup
(
œ°
));

2668 
	`g_‰ì
(
di•œy_«me
);

2669 
	`g_°r‰ìv
(
∑πs
);

2670 
	}
}

2680 
	$sùe_upd©e_u£r_öfo
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

2681 c⁄° *
uri
,

2682 c⁄° *
¥›îty_«me
,

2683 *
¥›îty_vÆue
)

2685 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

2686 
GSLi°
 *
buddõs
, *
íåy
;

2688 i‡(!
¥›îty_«me
 || 
	`°æí
(property_name) == 0) ;

2690 i‡(
¥›îty_vÆue
)

2691 
¥›îty_vÆue
 = 
	`g_°r°rù
(property_value);

2693 
íåy
 = 
buddõs
 = 
	`puΩÀ_föd_buddõs
(
sù
->
accou¡
, 
uri
);

2694 
íåy
) {

2695 c⁄° *
¥›_°r
;

2696 c⁄° *
£rvî_Æüs
;

2697 
PuΩÀBuddy
 *
p_buddy
 = 
íåy
->
d©a
;

2700 i‡(
	`sùe_°ªquÆ
(
¥›îty_«me
, 
ALIAS_PROP
)) {

2701 i‡(
¥›îty_vÆue
 && 
	`sùe_is_bad_Æüs
(
uri
, 
	`puΩÀ_buddy_gë_Æüs
(
p_buddy
))) {

2702 
	`SIPE_DEBUG_INFO
("Rïœcögálü†f‹ %†wôh %s", 
uri
, 
¥›îty_vÆue
);

2703 
	`puΩÀ_bli°_Æüs_buddy
(
p_buddy
, 
¥›îty_vÆue
);

2706 
£rvî_Æüs
 = 
	`puΩÀ_buddy_gë_£rvî_Æüs
(
p_buddy
);

2707 i‡(!
	`is_em±y
(
¥›îty_vÆue
) &&

2708 (!
	`sùe_°ªquÆ
(
¥›îty_vÆue
, 
£rvî_Æüs
Ë|| 
	`is_em±y
(server_alias)) )

2710 
	`puΩÀ_bli°_£rvî_Æüs_buddy
(
p_buddy
, 
¥›îty_vÆue
);

2715 i‡(!
	`is_em±y
(
¥›îty_vÆue
)) {

2716 
¥›_°r
 = 
	`puΩÀ_bli°_node_gë_°rög
(&
p_buddy
->
node
, 
¥›îty_«me
);

2717 i‡(!
¥›_°r
 || !
	`sùe_°rˇ£_equÆ
’r›_°r, 
¥›îty_vÆue
)) {

2718 
	`puΩÀ_bli°_node_£t_°rög
(&
p_buddy
->
node
, 
¥›îty_«me
, 
¥›îty_vÆue
);

2723 
íåy
 =É¡ry->
√xt
;

2725 
	`g_¶i°_‰ì
(
buddõs
);

2726 
	}
}

2738 
	$sùe_upd©e_u£r_ph⁄e
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

2739 c⁄° *
uri
,

2740 c⁄° 
gch¨
 *
ph⁄e_ty≥
,

2741 
gch¨
 *
ph⁄e
,

2742 
gch¨
 *
ph⁄e_di•œy_°rög
)

2744 c⁄° *
ph⁄e_node
 = 
PHONE_PROP
;

2745 c⁄° *
ph⁄e_di•œy_node
 = 
PHONE_DISPLAY_PROP
;

2747 if(!
ph⁄e
 || 
	`°æí
(phone) == 0) ;

2749 i‡((
	`sùe_°ªquÆ
(
ph⁄e_ty≥
, "mobile") || sipe_strequal(phone_type, "cell"))) {

2750 
ph⁄e_node
 = 
PHONE_MOBILE_PROP
;

2751 
ph⁄e_di•œy_node
 = 
PHONE_MOBILE_DISPLAY_PROP
;

2752 } i‡(
	`sùe_°ªquÆ
(
ph⁄e_ty≥
, "home")) {

2753 
ph⁄e_node
 = 
PHONE_HOME_PROP
;

2754 
ph⁄e_di•œy_node
 = 
PHONE_HOME_DISPLAY_PROP
;

2755 } i‡(
	`sùe_°ªquÆ
(
ph⁄e_ty≥
, "other")) {

2756 
ph⁄e_node
 = 
PHONE_OTHER_PROP
;

2757 
ph⁄e_di•œy_node
 = 
PHONE_OTHER_DISPLAY_PROP
;

2758 } i‡(
	`sùe_°ªquÆ
(
ph⁄e_ty≥
, "custom1")) {

2759 
ph⁄e_node
 = 
PHONE_CUSTOM1_PROP
;

2760 
ph⁄e_di•œy_node
 = 
PHONE_CUSTOM1_DISPLAY_PROP
;

2763 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
ph⁄e_node
, 
ph⁄e
);

2764 i‡(
ph⁄e_di•œy_°rög
) {

2765 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
ph⁄e_di•œy_node
, 
ph⁄e_di•œy_°rög
);

2767 
	}
}

2770 
	$sùe_c‹e_upd©e_ˇÀnd¨
(
sùe_c‹e_public
 *
sùe_public
)

2772 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA
;

2774 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_core_update_calendar: started.");

2780 
	`sùe_ews_upd©e_ˇÀnd¨
(
sù
);

2781 
	`sùe_domöo_upd©e_ˇÀnd¨
(
sù
);

2784 
	`sùe_scheduÀ_£c⁄ds
(
SIP_TO_CORE_PRIVATE
,

2786 
NULL
,

2787 
UPDATE_CALENDAR_INTERVAL
,

2788 (
sùe_scheduÀ_a˘i⁄
)
sùe_c‹e_upd©e_ˇÀnd¨
,

2789 
NULL
);

2791 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_core_update_calendar: finished.");

2792 
	}
}

2804 
	$sùe_£t_puΩÀ_accou¡_°©us_™d_nŸe
(c⁄° 
PuΩÀAccou¡
 *
accou¡
,

2805 c⁄° *
°©us_id
,

2806 c⁄° *
mesßge
,

2807 
time_t
 
do_nŸ_publish
[])

2809 
PuΩÀSètus
 *
°©us
 = 
	`puΩÀ_accou¡_gë_a˘ive_°©us
(
accou¡
);

2810 
gboﬁón
 
ch™ged
 = 
TRUE
;

2812 i‡(
	`g_°r_equÆ
(
°©us_id
, 
	`puΩÀ_°©us_gë_id
(
°©us
)) &&

2813 
	`sùe_°ªquÆ
(
mesßge
, 
	`puΩÀ_°©us_gë_©å_°rög
(
°©us
, 
SIPE_STATUS_ATTR_ID_MESSAGE
)))

2815 
ch™ged
 = 
FALSE
;

2818 i‡(
	`puΩÀ_ßved°©us_is_idÀaway
()) {

2819 
ch™ged
 = 
FALSE
;

2822 i‡(
ch™ged
) {

2823 
PuΩÀSavedSètus
 *
ßved_°©us
;

2824 c⁄° 
PuΩÀSètusTy≥
 *
ac˘_°©us_ty≥
 =

2825 
	`puΩÀ_°©us_ty≥_föd_wôh_id
(
accou¡
->
°©us_ty≥s
, 
°©us_id
);

2826 
PuΩÀSètusPrimôive
 
¥imôive
 = 
	`puΩÀ_°©us_ty≥_gë_¥imôive
(
ac˘_°©us_ty≥
);

2827 
sùe_a˘ivôy
 
a˘ivôy
 = 
	`sùe_gë_a˘ivôy_by_tokí
(
°©us_id
);

2829 
ßved_°©us
 = 
	`puΩÀ_ßved°©us_föd_å™sõ¡_by_ty≥_™d_mesßge
(
¥imôive
, 
mesßge
);

2830 i‡(
ßved_°©us
) {

2831 
	`puΩÀ_ßved°©us_£t_sub°©us
(
ßved_°©us
, 
accou¡
, 
ac˘_°©us_ty≥
, 
mesßge
);

2837 i‡(!
ßved_°©us
) {

2838 
GLi°
 *
tmp
;

2839 
GLi°
 *
a˘ive_ac˘s
 = 
	`puΩÀ_accou¡s_gë_Æl_a˘ive
();

2841 
ßved_°©us
 = 
	`puΩÀ_ßved°©us_√w
(
NULL
, 
¥imôive
);

2842 
	`puΩÀ_ßved°©us_£t_mesßge
(
ßved_°©us
, 
mesßge
);

2844 
tmp
 = 
a˘ive_ac˘s
;Åm∞!
NULL
;Åm∞tmp->
√xt
) {

2845 
	`puΩÀ_ßved°©us_£t_sub°©us
(
ßved_°©us
,

2846 (
PuΩÀAccou¡
 *)
tmp
->
d©a
, 
ac˘_°©us_ty≥
, 
mesßge
);

2848 
	`g_li°_‰ì
(
a˘ive_ac˘s
);

2851 
do_nŸ_publish
[
a˘ivôy
] = 
	`time
(
NULL
);

2852 
	`SIPE_DEBUG_INFO
("sipe_set_purple_account_status_and_note: do_not_publish[%s]=%d [now]",

2853 
°©us_id
, ()
do_nŸ_publish
[
a˘ivôy
]);

2856 
	`puΩÀ_ßved°©us_a˘iv©e
(
ßved_°©us
);

2858 
	}
}

2860 
	shash_èbÀ_dñëe_∑ylﬂd
 {

2861 
GHashTabÀ
 *
	mhash_èbÀ
;

2862 
guöt
 
	mc⁄èöî
;

2866 
	$sùe_ªmove_ˇãg‹y_c⁄èöî_publiˇti⁄s_cb
(c⁄° *
«me
,

2867 
sùe_publiˇti⁄
 *
publiˇti⁄
,

2868 
hash_èbÀ_dñëe_∑ylﬂd
 *
∑ylﬂd
)

2870 i‡(
publiˇti⁄
->
c⁄èöî
 =
∑ylﬂd
->container) {

2871 
	`g_hash_èbÀ_ªmove
(
∑ylﬂd
->
hash_èbÀ
, 
«me
);

2873 
	}
}

2875 
	$sùe_ªmove_ˇãg‹y_c⁄èöî_publiˇti⁄s
(
GHashTabÀ
 *
our_publiˇti⁄s
,

2876 c⁄° *
ˇãg‹y
,

2877 
guöt
 
c⁄èöî
)

2879 
hash_èbÀ_dñëe_∑ylﬂd
 
∑ylﬂd
;

2880 
∑ylﬂd
.
hash_èbÀ
 = 
	`g_hash_èbÀ_lookup
(
our_publiˇti⁄s
, 
ˇãg‹y
);

2882 i‡(!
∑ylﬂd
.
hash_èbÀ
) ;

2884 
∑ylﬂd
.
c⁄èöî
 = container;

2885 
	`g_hash_èbÀ_f‹óch
(
∑ylﬂd
.
hash_èbÀ
, (
GHFunc
)
sùe_ªmove_ˇãg‹y_c⁄èöî_publiˇti⁄s_cb
, &payload);

2886 
	}
}

2889 
£nd_publish_ˇãg‹y_öôül
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
);

2896 
	$sùe_¥o˚ss_rﬂmög_£lf
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

2897 
sùmsg
 *
msg
)

2899 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

2900 
gch¨
 *
c⁄è˘
;

2901 
gch¨
 *
to
;

2902 
sùe_xml
 *
xml
;

2903 c⁄° 
sùe_xml
 *
node
;

2904 c⁄° 
sùe_xml
 *
node2
;

2905 *
di•œy_«me
 = 
NULL
;

2906 *
uri
;

2907 
GSLi°
 *
ˇãg‹y_«mes
 = 
NULL
;

2908 
aggªg_avaû
 = 0;

2909 
gboﬁón
 
do_upd©e_°©us
 = 
FALSE
;

2910 
gboﬁón
 
has_nŸe_˛ó√d
 = 
FALSE
;

2912 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_process_roaming_self");

2914 
xml
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

2915 i‡(!
xml
) ;

2917 
c⁄è˘
 = 
	`gë_c⁄è˘
(
sù
);

2918 
to
 = 
	`sù_uri_£lf
(
sù
);

2923 
node
 = 
	`sùe_xml_chûd
(
xml
, "ˇãg‹õs/ˇãg‹y");Çode;Çodê
	`sùe_xml_twö
(node)) {

2924 c⁄° 
gch¨
 *
«me
 = 
	`sùe_xml_©åibuã
(
node
, "name");

2925 
ˇãg‹y_«mes
 = 
	`¶i°_ö£π_unique_s‹ãd
(ˇãg‹y_«mes, (
gch¨
 *)
«me
, (
GCom∑ªFunc
)
°rcmp
);

2927 
	`SIPE_DEBUG_INFO
("sipe_process_roaming_self: category_namesÜength=%d",

2928 
ˇãg‹y_«mes
 ? (Ë
	`g_¶i°_Àngth
(category_names) : -1);

2930 i‡(
ˇãg‹y_«mes
) {

2931 
GSLi°
 *
íåy
 = 
ˇãg‹y_«mes
;

2932 
íåy
) {

2933 
GHashTabÀ
 *
ˇt_publiˇti⁄s
;

2934 c⁄° 
gch¨
 *
ˇãg‹y
 = 
íåy
->
d©a
;

2935 
íåy
 =É¡ry->
√xt
;

2936 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_rﬂmög_£lf: dr›pög c©eg‹y: %s", 
ˇãg‹y
);

2937 
ˇt_publiˇti⁄s
 = 
	`g_hash_èbÀ_lookup
(
sù
->
our_publiˇti⁄s
, 
ˇãg‹y
);

2938 i‡(
ˇt_publiˇti⁄s
) {

2939 
	`g_hash_èbÀ_ªmove
(
sù
->
our_publiˇti⁄s
, 
ˇãg‹y
);

2940 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_rﬂmög_£lf: dr›≥d c©eg‹y: %s", 
ˇãg‹y
);

2944 
	`g_¶i°_‰ì
(
ˇãg‹y_«mes
);

2946 
node
 = 
	`sùe_xml_chûd
(
xml
, "ˇãg‹õs/ˇãg‹y");Çode;Çodê
	`sùe_xml_twö
(node)) {

2947 c⁄° *
tmp
;

2948 c⁄° 
gch¨
 *
«me
 = 
	`sùe_xml_©åibuã
(
node
, "name");

2949 
guöt
 
c⁄èöî
 = 
	`sùe_xml_öt_©åibuã
(
node
, "container", -1);

2950 
guöt
 
ö°™˚
 = 
	`sùe_xml_öt_©åibuã
(
node
, "instance", -1);

2951 
guöt
 
vîsi⁄
 = 
	`sùe_xml_öt_©åibuã
(
node
, "version", 0);

2952 
time_t
 
publish_time
 = (
tmp
 = 
	`sùe_xml_©åibuã
(
node
, "publishTime")) ?

2953 
	`sùe_utûs_°r_to_time
(
tmp
) : 0;

2954 
gch¨
 *
key
;

2955 
GHashTabÀ
 *
ˇt_publiˇti⁄s
 = 
	`g_hash_èbÀ_lookup
(
sù
->
our_publiˇti⁄s
, 
«me
);

2958 i‡(
c⁄èöî
 =(
guöt
)-1) {

2959 
	`g_‰ì
(
sù
->
nŸe
);

2960 
sù
->
nŸe
 = 
NULL
;

2961 
do_upd©e_°©us
 = 
TRUE
;

2966 i‡(
ö°™˚
 =(
guöt
)-1) {

2967 i‡(
c⁄èöî
 == 200) {

2968 
	`g_‰ì
(
sù
->
nŸe
);

2969 
sù
->
nŸe
 = 
NULL
;

2970 
do_upd©e_°©us
 = 
TRUE
;

2972 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_rﬂmög_£lf:ÑemovögÖubliˇti⁄†f‹: %s/%u", 
«me
, 
c⁄èöî
);

2973 
	`sùe_ªmove_ˇãg‹y_c⁄èöî_publiˇti⁄s
(

2974 
sù
->
our_publiˇti⁄s
, 
«me
, 
c⁄èöî
);

2979 
key
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", 
«me
, 
ö°™˚
, 
c⁄èöî
);

2980 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_rﬂmög_£lf: key=%†vîsi⁄=%d", 
key
, 
vîsi⁄
);

2983 i‡(
	`sùe_°ªquÆ
(
«me
, "°©e"Ë&& (
c⁄èöî
 == 2 || container == 3)) {

2984 c⁄° 
sùe_xml
 *
xn_°©e
 = 
	`sùe_xml_chûd
(
node
, "state");

2986 i‡(
xn_°©e
 && 
	`sùe_°ªquÆ
(
	`sùe_xml_©åibuã
(xn_state, "type"), "userState")) {

2987 
sùe_publiˇti⁄
 *
publiˇti⁄
 = 
	`g_√w0
(sipe_publication, 1);

2988 
publiˇti⁄
->
ˇãg‹y
 = 
	`g_°rdup
(
«me
);

2989 
publiˇti⁄
->
ö°™˚
 = instance;

2990 
publiˇti⁄
->
c⁄èöî
 = container;

2991 
publiˇti⁄
->
vîsi⁄
 = version;

2993 i‡(!
sù
->
u£r_°©e_publiˇti⁄s
) {

2994 
sù
->
u£r_°©e_publiˇti⁄s
 = 
	`g_hash_èbÀ_√w_fuŒ
(

2995 
g_°r_hash
, 
g_°r_equÆ
,

2996 
g_‰ì
, (
GDe°royNŸify
)
‰ì_publiˇti⁄
);

2998 
	`g_hash_èbÀ_ö£π
(
sù
->
u£r_°©e_publiˇti⁄s
, 
	`g_°rdup
(
key
), 
publiˇti⁄
);

2999 
	`SIPE_DEBUG_INFO
("sipe_process_roaming_self:áddedÅo user_state_publications key=%s version=%d",

3000 
key
, 
vîsi⁄
);

3004 i‡(
	`sùe_is_our_publiˇti⁄
(
sùe_¥iv©e
, 
key
)) {

3005 
sùe_publiˇti⁄
 *
publiˇti⁄
 = 
	`g_√w0
(sipe_publication, 1);

3007 
publiˇti⁄
->
ˇãg‹y
 = 
	`g_°rdup
(
«me
);

3008 
publiˇti⁄
->
ö°™˚
 = instance;

3009 
publiˇti⁄
->
c⁄èöî
 = container;

3010 
publiˇti⁄
->
vîsi⁄
 = version;

3013 i‡(
	`sùe_°ªquÆ
(
«me
, "state")) {

3014 c⁄° 
sùe_xml
 *
xn_°©e
 = 
	`sùe_xml_chûd
(
node
, "state");

3015 c⁄° 
sùe_xml
 *
xn_avaû
 = 
	`sùe_xml_chûd
(
xn_°©e
, "availability");

3017 i‡(
xn_avaû
) {

3018 
gch¨
 *
avaû_°r
 = 
	`sùe_xml_d©a
(
xn_avaû
);

3019 i‡(
avaû_°r
) {

3020 
publiˇti⁄
->
avaûabûôy
 = 
	`©oi
(
avaû_°r
);

3022 
	`g_‰ì
(
avaû_°r
);

3025 i‡(
xn_°©e
 && 
	`sùe_°ªquÆ
(
	`sùe_xml_©åibuã
(xn_state, "type"), "calendarState")) {

3026 c⁄° 
sùe_xml
 *
xn_a˘ivôy
 = 
	`sùe_xml_chûd
(
xn_°©e
, "activity");

3027 
sùe_ˇl_evít
 *
evít
 = 
	`g_√w0
(sipe_cal_event, 1);

3029 
evít
->
°¨t_time
 = 
	`sùe_utûs_°r_to_time
(
	`sùe_xml_©åibuã
(
xn_°©e
, "startTime"));

3030 i‡(
xn_a˘ivôy
) {

3031 i‡(
	`sùe_°ªquÆ
(
	`sùe_xml_©åibuã
(
xn_a˘ivôy
, "token"),

3032 
sùe_a˘ivôy_m≠
[
SIPE_ACTIVITY_IN_MEETING
].
tokí
))

3034 
evít
->
is_mìtög
 = 
TRUE
;

3037 
evít
->
subje˘
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
xn_°©e
, "meetingSubject"));

3038 
evít
->
loˇti⁄
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
xn_°©e
, "meetingLocation"));

3040 
publiˇti⁄
->
ˇl_evít_hash
 = 
	`sùe_ˇl_evít_hash
(
evít
);

3041 
	`SIPE_DEBUG_INFO
("sipe_process_roaming_self: hash=%s",

3042 
publiˇti⁄
->
ˇl_evít_hash
);

3043 
	`sùe_ˇl_evít_‰ì
(
evít
);

3047 i‡(
	`sùe_°ªquÆ
(
«me
, "note")) {

3048 c⁄° 
sùe_xml
 *
xn_body
 = 
	`sùe_xml_chûd
(
node
, "note/body");

3050 i‡(!
has_nŸe_˛ó√d
) {

3051 
has_nŸe_˛ó√d
 = 
TRUE
;

3053 
	`g_‰ì
(
sù
->
nŸe
);

3054 
sù
->
nŸe
 = 
NULL
;

3055 
sù
->
nŸe_sö˚
 = 
publish_time
;

3057 
do_upd©e_°©us
 = 
TRUE
;

3060 
	`g_‰ì
(
publiˇti⁄
->
nŸe
);

3061 
publiˇti⁄
->
nŸe
 = 
NULL
;

3062 i‡(
xn_body
) {

3063 *
tmp
;

3065 
publiˇti⁄
->
nŸe
 = 
	`g_m¨kup_esˇ≥_ãxt
((
tmp
 = 
	`sùe_xml_d©a
(
xn_body
)), -1);

3066 
	`g_‰ì
(
tmp
);

3067 i‡(
publish_time
 >
sù
->
nŸe_sö˚
) {

3068 
	`g_‰ì
(
sù
->
nŸe
);

3069 
sù
->
nŸe
 = 
	`g_°rdup
(
publiˇti⁄
->note);

3070 
sù
->
nŸe_sö˚
 = 
publish_time
;

3071 
sù
->
is_oof_nŸe
 = 
	`sùe_°ªquÆ
(
	`sùe_xml_©åibuã
(
xn_body
, "type"), "OOF");

3073 
do_upd©e_°©us
 = 
TRUE
;

3079 i‡(
	`sùe_°ªquÆ
(
«me
, "ˇÀnd¨D©a"Ë&& (
publiˇti⁄
->
c⁄èöî
 == 300)) {

3080 c⁄° 
sùe_xml
 *
xn_‰ì_busy
 = 
	`sùe_xml_chûd
(
node
, "calendarData/freeBusy");

3081 c⁄° 
sùe_xml
 *
xn_w‹kög_hours
 = 
	`sùe_xml_chûd
(
node
, "calendarData/WorkingHours");

3082 i‡(
xn_‰ì_busy
) {

3083 
publiˇti⁄
->
fb_°¨t_°r
 = 
	`g_°rdup
(
	`sùe_xml_©åibuã
(
xn_‰ì_busy
, "startTime"));

3084 
publiˇti⁄
->
‰ì_busy_ba£64
 = 
	`sùe_xml_d©a
(
xn_‰ì_busy
);

3086 i‡(
xn_w‹kög_hours
) {

3087 
publiˇti⁄
->
w‹kög_hours_xml_°r
 = 
	`sùe_xml_°rögify
(
xn_w‹kög_hours
);

3091 i‡(!
ˇt_publiˇti⁄s
) {

3092 
ˇt_publiˇti⁄s
 = 
	`g_hash_èbÀ_√w_fuŒ
(

3093 
g_°r_hash
, 
g_°r_equÆ
,

3094 
g_‰ì
, (
GDe°royNŸify
)
‰ì_publiˇti⁄
);

3095 
	`g_hash_èbÀ_ö£π
(
sù
->
our_publiˇti⁄s
, 
	`g_°rdup
(
«me
), 
ˇt_publiˇti⁄s
);

3096 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_rﬂmög_£lf:ádded GHashTabÀ c©=%s", 
«me
);

3098 
	`g_hash_èbÀ_ö£π
(
ˇt_publiˇti⁄s
, 
	`g_°rdup
(
key
), 
publiˇti⁄
);

3099 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_rﬂmög_£lf:ádded key=%†vîsi⁄=%d", 
key
, 
vîsi⁄
);

3101 
	`g_‰ì
(
key
);

3104 i‡(
	`sùe_°ªquÆ
(
«me
, "°©e"Ë&& 
c⁄èöî
 == 2) {

3105 c⁄° 
sùe_xml
 *
xn_°©e
 = 
	`sùe_xml_chûd
(
node
, "state");

3107 i‡(
xn_°©e
 && 
	`sùe_°ªquÆ
(
	`sùe_xml_©åibuã
(xn_state, "type"), "aggregateState")) {

3108 c⁄° 
sùe_xml
 *
xn_avaû
 = 
	`sùe_xml_chûd
(
xn_°©e
, "availability");

3110 i‡(
xn_avaû
) {

3111 
gch¨
 *
avaû_°r
 = 
	`sùe_xml_d©a
(
xn_avaû
);

3112 i‡(
avaû_°r
) {

3113 
aggªg_avaû
 = 
	`©oi
(
avaû_°r
);

3115 
	`g_‰ì
(
avaû_°r
);

3118 
do_upd©e_°©us
 = 
TRUE
;

3123 i‡(!
sù
->
c°a
 && 
	`sùe_°ªquÆ
(
«me
, "userProperties")) {

3124 c⁄° 
sùe_xml
 *
löe
;

3126 
löe
 = 
	`sùe_xml_chûd
(
node
, "u£rPr›îtõs/löes/löe");Üöe;Üöê
	`sùe_xml_twö
(line)) {

3127 c⁄° 
gch¨
 *
löe_£rvî
 = 
	`sùe_xml_©åibuã
(
löe
, "lineServer");

3128 c⁄° 
gch¨
 *
löe_ty≥
 = 
	`sùe_xml_©åibuã
(
löe
, "lineType");

3129 
gch¨
 *
löe_uri
;

3131 i‡(!
löe_£rvî
 || !(
	`sùe_°ªquÆ
(
löe_ty≥
, "Rcc") || sipe_strequal(line_type, "Dual"))) ;

3133 
löe_uri
 = 
	`sùe_xml_d©a
(
löe
);

3134 i‡(
löe_uri
) {

3135 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_rﬂmög_£lf:Üöe_uri=%†£rvî=%s", 
löe_uri
, 
löe_£rvî
);

3136 
	`sù_c°a_›í
(
sù
, 
löe_uri
, 
löe_£rvî
);

3138 
	`g_‰ì
(
löe_uri
);

3144 
	`SIPE_DEBUG_INFO
("sipe_process_roaming_self: sip->our_publications size=%d",

3145 
sù
->
our_publiˇti⁄s
 ? (Ë
	`g_hash_èbÀ_size
(sip->our_publications) : -1);

3148 
node
 = 
	`sùe_xml_chûd
(
xml
, "c⁄èöîs/c⁄èöî");Çode;Çodê
	`sùe_xml_twö
(node)) {

3149 
guöt
 
id
 = 
	`sùe_xml_öt_©åibuã
(
node
, "id", 0);

3150 
sùe_c⁄èöî
 *
c⁄èöî
 = 
	`sùe_föd_c⁄èöî
(
sùe_¥iv©e
, 
id
);

3152 i‡(
c⁄èöî
) {

3153 
sù
->
c⁄èöîs
 = 
	`g_¶i°_ªmove
(sù->c⁄èöîs, 
c⁄èöî
);

3154 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_rﬂmög_£lf:ÑemovedÉxi°ög c⁄èöî id=%d v%d", 
c⁄èöî
->
id
, c⁄èöî->
vîsi⁄
);

3155 
	`‰ì_c⁄èöî
(
c⁄èöî
);

3157 
c⁄èöî
 = 
	`g_√w0
(
sùe_c⁄èöî
, 1);

3158 
c⁄èöî
->
id
 = id;

3159 
c⁄èöî
->
vîsi⁄
 = 
	`sùe_xml_öt_©åibuã
(
node
, "version", 0);

3160 
sù
->
c⁄èöîs
 = 
	`g_¶i°_≠≥nd
(sù->c⁄èöîs, 
c⁄èöî
);

3161 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_rﬂmög_£lf:ádded c⁄èöî id=%d v%d", 
c⁄èöî
->
id
, c⁄èöî->
vîsi⁄
);

3163 
node2
 = 
	`sùe_xml_chûd
(
node
, "membî");Çode2;Çode2 = 
	`sùe_xml_twö
(node2)) {

3164 
sùe_c⁄èöî_membî
 *
membî
 = 
	`g_√w0
(sipe_container_member, 1);

3165 
membî
->
ty≥
 = 
	`g_°rdup
(
	`sùe_xml_©åibuã
(
node2
, "type"));

3166 
membî
->
vÆue
 = 
	`g_°rdup
(
	`sùe_xml_©åibuã
(
node2
, "value"));

3167 
c⁄èöî
->
membîs
 = 
	`g_¶i°_≠≥nd
(c⁄èöî->membîs, 
membî
);

3168 
	`SIPE_DEBUG_INFO
("sipe_process_roaming_self:ádded container memberÅype=%s value=%s",

3169 
membî
->
ty≥
, membî->
vÆue
 ? member->value : "");

3173 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_rﬂmög_£lf: sù->ac˚ss_Àvñ_£t=%s", 
sù
->
ac˚ss_Àvñ_£t
 ? "TRUE" : "FALSE");

3174 i‡(!
sù
->
ac˚ss_Àvñ_£t
 && 
	`sùe_xml_chûd
(
xml
, "containers")) {

3175 *
c⁄èöî_xmls
 = 
NULL
;

3176 
ßmeE¡î¥i£AL
 = 
	`sùe_föd_ac˚ss_Àvñ
(
sùe_¥iv©e
, "ßmeE¡î¥i£", 
NULL
, NULL);

3177 
„dî©edAL
 = 
	`sùe_föd_ac˚ss_Àvñ
(
sùe_¥iv©e
, "„dî©ed", 
NULL
, NULL);

3179 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_rﬂmög_£lf: sameE¡î¥i£AL=%d", 
ßmeE¡î¥i£AL
);

3180 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_rﬂmög_£lf: fedî©edAL=%d", 
„dî©edAL
);

3182 i‡(
ßmeE¡î¥i£AL
 < 0) {

3183 
sùe_c⁄èöî
 *
c⁄èöî
 = 
	`sùe_föd_c⁄èöî
(
sùe_¥iv©e
, 200);

3184 
guöt
 
vîsi⁄
 = 
c⁄èöî
 ? container->version : 0;

3185 
	`sùe_£nd_c⁄èöî_membîs_¥ï¨e
(200, 
vîsi⁄
, "add", "ßmeE¡î¥i£", 
NULL
, &
c⁄èöî_xmls
);

3187 i‡(
„dî©edAL
 < 0) {

3188 
sùe_c⁄èöî
 *
c⁄èöî
 = 
	`sùe_föd_c⁄èöî
(
sùe_¥iv©e
, 100);

3189 
guöt
 
vîsi⁄
 = 
c⁄èöî
 ? container->version : 0;

3190 
	`sùe_£nd_c⁄èöî_membîs_¥ï¨e
(100, 
vîsi⁄
, "add", "„dî©ed", 
NULL
, &
c⁄èöî_xmls
);

3192 
sù
->
ac˚ss_Àvñ_£t
 = 
TRUE
;

3194 i‡(
c⁄èöî_xmls
) {

3195 
	`sùe_£nd_£t_c⁄èöî_membîs
(
sùe_¥iv©e
, 
c⁄èöî_xmls
);

3197 
	`g_‰ì
(
c⁄èöî_xmls
);

3201 
	`sùe_ª‰esh_blocked_°©us
(
sùe_¥iv©e
);

3204 
node
 = 
	`sùe_xml_chûd
(
xml
, "subs¸ibîs/subs¸ibî");Çode;Çodê
	`sùe_xml_twö
(node)) {

3205 c⁄° *
u£r
;

3206 c⁄° *
acknowÀdged
;

3207 
gch¨
 *
hdr
;

3208 
gch¨
 *
body
;

3210 
u£r
 = 
	`sùe_xml_©åibuã
(
node
, "user");

3211 i‡(!
u£r
) ;

3212 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_rﬂmög_£lf: u£∏%s", 
u£r
);

3213 
di•œy_«me
 = 
	`g_°rdup
(
	`sùe_xml_©åibuã
(
node
, "displayName"));

3214 
uri
 = 
	`sù_uri_‰om_«me
(
u£r
);

3216 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
ALIAS_PROP
, 
di•œy_«me
);

3218 
acknowÀdged

	`sùe_xml_©åibuã
(
node
, "acknowledged");

3219 if(
	`sùe_°rˇ£_equÆ
(
acknowÀdged
,"false")){

3220 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_rﬂmög_£lf: u£∏added you %s", 
u£r
);

3221 i‡(!
	`puΩÀ_föd_buddy
(
sù
->
accou¡
, 
uri
)) {

3222 
	`puΩÀ_accou¡_ªque°_add
(
sù
->
accou¡
, 
uri
, 
	`_
("you"), 
di•œy_«me
, 
NULL
);

3225 
hdr
 = 
	`g_°rdup_¥ötf
(

3227 "C⁄ã¡-Ty≥:áµliˇti⁄/m§tc-¥e£n˚-£tsubs¸ibî+xml\r\n", 
c⁄è˘
);

3229 
body
 = 
	`g_°rdup_¥ötf
(

3232 "</£tSubs¸ibîs>", 
u£r
);

3234 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "SERVICE", 
to
,Åo, 
hdr
, 
body
, 
NULL
, NULL);

3235 
	`g_‰ì
(
body
);

3236 
	`g_‰ì
(
hdr
);

3238 
	`g_‰ì
(
di•œy_«me
);

3239 
	`g_‰ì
(
uri
);

3242 
	`g_‰ì
(
c⁄è˘
);

3243 
	`sùe_xml_‰ì
(
xml
);

3250 i‡(!
sù
->
öôül_°©e_published
) {

3251 
	`£nd_publish_ˇãg‹y_öôül
(
sùe_¥iv©e
);

3252 
sù
->
öôül_°©e_published
 = 
TRUE
;

3254 
	`sùe_scheduÀ_£c⁄ds
(
sùe_¥iv©e
,

3256 
NULL
,

3257 
UPDATE_CALENDAR_DELAY
,

3258 (
sùe_scheduÀ_a˘i⁄
)
sùe_c‹e_upd©e_ˇÀnd¨
,

3259 
NULL
);

3260 
do_upd©e_°©us
 = 
FALSE
;

3261 } i‡(
aggªg_avaû
) {

3263 
	`g_‰ì
(
sù
->
°©us
);

3264 i‡(
aggªg_avaû
 &&ággreg_avail < 18000) {

3265 
sù
->
°©us
 = 
	`g_°rdup
(
	`sùe_gë_°©us_by_avaûabûôy
(
aggªg_avaû
, 
NULL
));

3267 
sù
->
°©us
 = 
	`g_°rdup
(
SIPE_STATUS_ID_INVISIBLE
);

3271 i‡(
do_upd©e_°©us
) {

3272 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_rﬂmög_£lf: swôchÅÿ'%s' f‹Åhêaccou¡", 
sù
->
°©us
);

3273 
	`sùe_£t_puΩÀ_accou¡_°©us_™d_nŸe
(
sù
->
accou¡
, sù->
°©us
, sù->
nŸe
, sù->
do_nŸ_publish
);

3276 
	`g_‰ì
(
to
);

3277 
	}
}

3279 
	$sùe_subs¸ibe_rﬂmög_a˛
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

3281 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

3282 
gch¨
 *
to
 = 
	`sù_uri_£lf
(
sù
);

3283 
gch¨
 *
tmp
 = 
	`gë_c⁄è˘
(
sù
);

3284 
gch¨
 *
hdr
 = 
	`g_°rdup_¥ötf
(

3291 "C⁄è˘: %s\r\n", 
tmp
);

3292 
	`g_‰ì
(
tmp
);

3294 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "SUBSCRIBE", 
to
,Åo, 
hdr
, "", 
NULL
, 
¥o˚ss_subs¸ibe_ª•⁄£
);

3295 
	`g_‰ì
(
to
);

3296 
	`g_‰ì
(
hdr
);

3297 
	}
}

3305 
	$sùe_subs¸ibe_rﬂmög_£lf
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

3307 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

3308 
gch¨
 *
to
 = 
	`sù_uri_£lf
(
sù
);

3309 
gch¨
 *
tmp
 = 
	`gë_c⁄è˘
(
sù
);

3310 
gch¨
 *
hdr
 = 
	`g_°rdup_¥ötf
(

3317 "C⁄ã¡-Ty≥:áµliˇti⁄/vnd-mi¸oso·-rﬂmög-£lf+xml\r\n", 
tmp
);

3319 
gch¨
 *
body
=
	`g_°rdup
(

3325 
	`g_‰ì
(
tmp
);

3326 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "SUBSCRIBE", 
to
,Åo, 
hdr
, 
body
, 
NULL
, 
¥o˚ss_subs¸ibe_ª•⁄£
);

3327 
	`g_‰ì
(
body
);

3328 
	`g_‰ì
(
to
);

3329 
	`g_‰ì
(
hdr
);

3330 
	}
}

3335 
	$sùe_subs¸ibe_rﬂmög_¥ovisi⁄ög
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

3337 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

3338 
gch¨
 *
to
 = 
	`sù_uri_£lf
(
sù
);

3339 
gch¨
 *
tmp
 = 
	`gë_c⁄è˘
(
sù
);

3340 
gch¨
 *
hdr
 = 
	`g_°rdup_¥ötf
(

3348 "C⁄è˘: %s\r\n", 
tmp
);

3350 
	`g_‰ì
(
tmp
);

3351 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "SUBSCRIBE", 
to
,Åo, 
hdr
, 
NULL
, NULL, 
¥o˚ss_subs¸ibe_ª•⁄£
);

3352 
	`g_‰ì
(
to
);

3353 
	`g_‰ì
(
hdr
);

3354 
	}
}

3363 
	$sùe_subs¸ibe_rﬂmög_¥ovisi⁄ög_v2
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

3365 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

3366 
gch¨
 *
to
 = 
	`sù_uri_£lf
(
sù
);

3367 
gch¨
 *
tmp
 = 
	`gë_c⁄è˘
(
sù
);

3368 
gch¨
 *
hdr
 = 
	`g_°rdup_¥ötf
(

3377 "C⁄ã¡-Ty≥:áµliˇti⁄/vnd-mi¸oso·-rﬂmög-¥ovisi⁄ög-v2+xml\r\n", 
tmp
);

3378 
gch¨
 *
body
 = 
	`g_°rdup
(

3384 
	`g_‰ì
(
tmp
);

3385 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "SUBSCRIBE", 
to
,Åo, 
hdr
, 
body
, 
NULL
, 
¥o˚ss_subs¸ibe_ª•⁄£
);

3386 
	`g_‰ì
(
body
);

3387 
	`g_‰ì
(
to
);

3388 
	`g_‰ì
(
hdr
);

3389 
	}
}

3392 
	$sùe_unsubs¸ibe_cb
(
SIPE_UNUSED_PARAMETER
 
gpoöãr
 
key
,

3393 
gpoöãr
 
vÆue
, gpoöã∏
u£r_d©a
)

3395 
sù_subs¸ùti⁄
 *
subs¸ùti⁄
 = 
vÆue
;

3396 
sù_dülog
 *
dülog
 = &
subs¸ùti⁄
->dialog;

3397 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
u£r_d©a
;

3398 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

3399 
gch¨
 *
tmp
 = 
	`gë_c⁄è˘
(
sù
);

3400 
gch¨
 *
hdr
 = 
	`g_°rdup_¥ötf
(

3403 "C⁄è˘: %s\r\n", 
subs¸ùti⁄
->
evít
, 
tmp
);

3404 
	`g_‰ì
(
tmp
);

3407 
	`g_u¶ìp
(1000000 / 25);

3409 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "SUBSCRIBE", 
dülog
->
wôh
, dülog->wôh, 
hdr
, 
NULL
, dialog, NULL);

3410 
	`g_‰ì
(
hdr
);

3411 
	}
}

3416 
gch¨
 *

3417 
	$gë_íd_poöts
 (
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

3418 
sù_£ssi⁄
 *
£ssi⁄
)

3420 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

3421 
gch¨
 *
ªs
;

3423 i‡(
£ssi⁄
 =
NULL
) {

3424  
NULL
;

3427 
ªs
 = 
	`g_°rdup_¥ötf
("<sù:%s>", 
sù
->
u£∫ame
);

3429 
SIPE_DIALOG_FOREACH
 {

3430 
gch¨
 *
tmp
 = 
ªs
;

3431 
ªs
 = 
	`g_°rdup_¥ötf
("%s, <%s>",Ñes, 
dülog
->
wôh
);

3432 
	`g_‰ì
(
tmp
);

3434 i‡(
dülog
->
theúïid
) {

3435 
tmp
 = 
ªs
;

3436 
ªs
 = 
	`g_°rdup_¥ötf
("%s;ïid=%s",Ñes, 
dülog
->
theúïid
);

3437 
	`g_‰ì
(
tmp
);

3439 } 
SIPE_DIALOG_FOREACH_END
;

3441  
ªs
;

3442 
	}
}

3444 
gboﬁón


3445 
	$¥o˚ss_›ti⁄s_ª•⁄£
(
SIPE_UNUSED_PARAMETER
 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

3446 
sùmsg
 *
msg
,

3447 
SIPE_UNUSED_PARAMETER
 
å™ß˘i⁄
 *
å™s
)

3449 
gboﬁón
 
ªt
 = 
TRUE
;

3451 i‡(
msg
->
ª•⁄£
 != 200) {

3452 
	`SIPE_DEBUG_INFO
("¥o˚ss_›ti⁄s_ª•⁄£: OPTIONSÑe•⁄£ i†%d", 
msg
->
ª•⁄£
);

3453  
FALSE
;

3456 
	`SIPE_DEBUG_INFO
("¥o˚ss_›ti⁄s_ª•⁄£: body:\n%s", 
msg
->
body
 ? msg->body : "");

3458  
ªt
;

3459 
	}
}

3464 
	$sùe_›ti⁄s_ªque°
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

3465 c⁄° *
who
)

3467 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

3468 
gch¨
 *
to
 = 
	`sù_uri
(
who
);

3469 
gch¨
 *
c⁄è˘
 = 
	`gë_c⁄è˘
(
sù
);

3470 
gch¨
 *
ªque°
 = 
	`g_°rdup_¥ötf
(

3472 "C⁄è˘: %s\r\n", 
c⁄è˘
);

3473 
	`g_‰ì
(
c⁄è˘
);

3475 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "OPTIONS", 
to
,Åo, 
ªque°
, 
NULL
, NULL, 
¥o˚ss_›ti⁄s_ª•⁄£
);

3477 
	`g_‰ì
(
to
);

3478 
	`g_‰ì
(
ªque°
);

3479 
	}
}

3482 
	$sùe_nŸify_u£r
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

3483 
sù_£ssi⁄
 *
£ssi⁄
,

3484 
PuΩÀMesßgeFœgs
 
Êags
,

3485 c⁄° 
gch¨
 *
mesßge
)

3487 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

3488 
PuΩÀC⁄vîßti⁄
 *
c⁄v
;

3490 i‡(!
£ssi⁄
->
c⁄v
) {

3491 
c⁄v
 = 
	`puΩÀ_föd_c⁄vîßti⁄_wôh_accou¡
(
PURPLE_CONV_TYPE_ANY
, 
£ssi⁄
->
wôh
, 
sù
->
accou¡
);

3493 
c⁄v
 = 
£ssi⁄
->conv;

3495 
	`puΩÀ_c⁄vîßti⁄_wrôe
(
c⁄v
, 
NULL
, 
mesßge
, 
Êags
, 
	`time
(NULL));

3496 
	}
}

3499 
	$sùe_¥e£¡_öfo
(
sùe_accou¡_d©a
 *
sù
,

3500 
sù_£ssi⁄
 *
£ssi⁄
,

3501 c⁄° 
gch¨
 *
mesßge
)

3503 
	`sùe_nŸify_u£r
(
SIP_TO_CORE_PRIVATE
, 
£ssi⁄
, 
PURPLE_MESSAGE_SYSTEM
, 
mesßge
);

3504 
	}
}

3507 
	$sùe_¥e£¡_îr
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

3508 
sù_£ssi⁄
 *
£ssi⁄
,

3509 c⁄° 
gch¨
 *
mesßge
)

3511 
	`sùe_nŸify_u£r
(
sùe_¥iv©e
, 
£ssi⁄
, 
PURPLE_MESSAGE_ERROR
, 
mesßge
);

3512 
	}
}

3515 
	$sùe_¥e£¡_mesßge_undñivîed_îr
(
sùe_accou¡_d©a
 *
sù
,

3516 
sù_£ssi⁄
 *
£ssi⁄
,

3517 
sù_îr‹
,

3518 
sù_w¨nög
,

3519 c⁄° 
gch¨
 *
who
,

3520 c⁄° 
gch¨
 *
mesßge
)

3522 *
msg
, *
msg_tmp
, *
msg_tmp2
;

3523 c⁄° *
œbñ
;

3525 
msg_tmp
 = 
mesßge
 ? 
	`sùe_backíd_m¨kup_°rù_html
(mesßgeË: 
NULL
;

3526 
msg
 = 
msg_tmp
 ? 
	`g_°rdup_¥ötf
("<f⁄àcﬁ‹=\"#888888\"></b>%s<b></f⁄t>", msg_tmpË: 
NULL
;

3527 
	`g_‰ì
(
msg_tmp
);

3529 i‡(
sù_îr‹
 =606 && 
sù_w¨nög
 == 309) {

3530 
œbñ
 = 
	`_
("Your message or invitation wasÇot delivered,Öossibly because it containsá hyperlink or other contentÅhatÅhe systemádministrator has blocked.");

3531 
	`g_‰ì
(
msg
);

3532 
msg
 = 
NULL
;

3533 } i‡(
sù_îr‹
 == 503 || sip_error == 500 || sip_error == 504) {

3534 
œbñ
 = 
	`_
("This message wasÇot deliveredÅo %s becauseÅhe service isÇotávailable");

3535 } i‡(
sù_îr‹
 == 486) {

3536 
œbñ
 = 
	`_
("This message wasÇot deliveredÅo %s because one or moreÑecipients doÇot wantÅo be disturbed");

3537 } i‡(
sù_îr‹
 == 415) {

3538 
œbñ
 = 
	`_
("This message wasÇot deliveredÅo %s because one or moreÑecipients don't supportÅhisÅype of message");

3540 
œbñ
 = 
	`_
("This message wasÇot deliveredÅo %s because one or moreÑecipientsáre offline");

3543 
msg_tmp
 = 
	`g_°rdup_¥ötf
( "%s%s\n%s" ,

3544 
msg_tmp2
 = 
	`g_°rdup_¥ötf
(
œbñ
, 
who
 ? who : ""),

3545 
msg
 ? ":" : "",

3546 
msg
 ? msg : "");

3547 
	`sùe_¥e£¡_îr
(
SIP_TO_CORE_PRIVATE
, 
£ssi⁄
, 
msg_tmp
);

3548 
	`g_‰ì
(
msg_tmp2
);

3549 
	`g_‰ì
(
msg_tmp
);

3550 
	`g_‰ì
(
msg
);

3551 
	}
}

3554 
gboﬁón


3555 
	$¥o˚ss_mesßge_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

3556 
sùmsg
 *
msg
,

3557 
SIPE_UNUSED_PARAMETER
 
å™ß˘i⁄
 *
å™s
)

3559 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

3560 
gboﬁón
 
ªt
 = 
TRUE
;

3561 
gch¨
 *
wôh
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, "To"));

3562 
sù_£ssi⁄
 *
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_im
(
sù
, 
wôh
);

3563 
sù_dülog
 *
dülog
;

3564 
gch¨
 *
c£q
;

3565 *
key
;

3566 
queued_mesßge
 *
mesßge
;

3568 i‡(!
£ssi⁄
) {

3569 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_message_response: unableÅo find IM session");

3570 
	`g_‰ì
(
wôh
);

3571  
FALSE
;

3574 
dülog
 = 
	`sùe_dülog_föd
(
£ssi⁄
, 
wôh
);

3575 i‡(!
dülog
) {

3576 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_message_response: session outgoing dialog is NULL");

3577 
	`g_‰ì
(
wôh
);

3578  
FALSE
;

3581 
c£q
 = 
	`sùmsg_föd_∑π_of_hódî
(
	`sùmsg_föd_hódî
(
msg
, "CSeq"), 
NULL
, " ", NULL);

3582 
key
 = 
	`g_°rdup_¥ötf
("<%s><%d><MESSAGE><%s>", 
	`sùmsg_föd_hódî
(
msg
, "CÆl-ID"), 
	`©oi
(
c£q
), 
wôh
);

3583 
	`g_‰ì
(
c£q
);

3584 
mesßge
 = 
	`g_hash_èbÀ_lookup
(
£ssi⁄
->
unc⁄fúmed_mesßges
, 
key
);

3586 i‡(
msg
->
ª•⁄£
 >= 400) {

3587 
PuΩÀBuddy
 *
pbuddy
;

3588 c⁄° *
Æüs
 = 
wôh
;

3589 c⁄° *
w¨n_hdr
 = 
	`sùmsg_föd_hódî
(
msg
, "Warning");

3590 
w¨nög
 = -1;

3592 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_message_response: MESSAGEÑesponse >= 400");

3594 i‡(
w¨n_hdr
) {

3595 
gch¨
 **
∑πs
 = 
	`g_°r•lô
(
w¨n_hdr
, " ", 2);

3596 i‡(
∑πs
[0]) {

3597 
w¨nög
 = 
	`©oi
(
∑πs
[0]);

3599 
	`g_°r‰ìv
(
∑πs
);

3603 i‡(
msg
->
ª•⁄£
 == 606 &&

3604 
w¨nög
 == 309 &&

3605 
mesßge
 && 
	`g_°r_has_¥efix
(mesßge->
c⁄ã¡_ty≥
, "text/x-msmsgsinvite"))

3607 
GSLi°
 *
∑r£d_body
 = 
	`sùe_·_∑r£_msg_body
(
msg
->
body
);

3608 
	`sùe_·_öcomög_ˇn˚l
(
sù
->
gc
->
accou¡
, 
∑r£d_body
);

3609 
	`sùe_utûs_«mevÆ_‰ì
(
∑r£d_body
);

3612 i‡((
pbuddy
 = 
	`puΩÀ_föd_buddy
(
sù
->
accou¡
, 
wôh
))) {

3613 
Æüs
 = 
	`puΩÀ_buddy_gë_Æüs
(
pbuddy
);

3616 
	`sùe_¥e£¡_mesßge_undñivîed_îr
(
sù
, 
£ssi⁄
, 
msg
->
ª•⁄£
, 
w¨nög
, 
Æüs
, (
mesßge
 ? mesßge->
body
 : 
NULL
));

3619 i‡(
msg
->
ª•⁄£
 == 408 ||

3620 
msg
->
ª•⁄£
 == 480 ||

3621 
msg
->
ª•⁄£
 == 481) {

3622 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_message_response:ássuming dangling IM session, dropping it.");

3623 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "BYE", 
wôh
, wôh, 
NULL
, NULL, 
dülog
, NULL);

3626 
ªt
 = 
FALSE
;

3628 c⁄° 
gch¨
 *
mesßge_id
 = 
	`sùmsg_föd_hódî
(
msg
, "Message-Id");

3629 i‡(
mesßge_id
) {

3630 
	`g_hash_èbÀ_ö£π
(
£ssi⁄
->
c⁄f_unc⁄fúmed_mesßges
, 
	`g_°rdup
(
mesßge_id
), g_°rdup(
mesßge
->
body
));

3631 
	`SIPE_DEBUG_INFO
("process_message_response:ádded message with id %sÅo conf_unconfirmed_messages(count=%d)",

3632 
mesßge_id
, 
	`g_hash_èbÀ_size
(
£ssi⁄
->
c⁄f_unc⁄fúmed_mesßges
));

3635 
	`g_hash_èbÀ_ªmove
(
£ssi⁄
->
unc⁄fúmed_mesßges
, 
key
);

3636 
	`SIPE_DEBUG_INFO
("process_message_response:Ñemoved message %s from unconfirmed_messages(count=%d)",

3637 
key
, 
	`g_hash_èbÀ_size
(
£ssi⁄
->
unc⁄fúmed_mesßges
));

3640 
	`g_‰ì
(
key
);

3641 
	`g_‰ì
(
wôh
);

3643 i‡(
ªt
Ë
	`sùe_im_¥o˚ss_queue
(
sù
, 
£ssi⁄
);

3644  
ªt
;

3645 
	}
}

3647 
gboﬁón


3648 
sùe_is_ñe˘i⁄_föished
(
sù_£ssi⁄
 *
£ssi⁄
);

3651 
sùe_ñe˘i⁄_ªsu…
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

3652 *
£ss
);

3654 
gboﬁón


3655 
	$¥o˚ss_öfo_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

3656 
sùmsg
 *
msg
,

3657 
SIPE_UNUSED_PARAMETER
 
å™ß˘i⁄
 *
å™s
)

3659 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

3660 c⁄° 
gch¨
 *
c⁄ã¡ty≥
 = 
	`sùmsg_föd_hódî
(
msg
, "Content-Type");

3661 c⁄° 
gch¨
 *
ˇŒid
 = 
	`sùmsg_föd_hódî
(
msg
, "Call-ID");

3662 
sù_dülog
 *
dülog
;

3663 
sù_£ssi⁄
 *
£ssi⁄
;

3665 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_ch©_by_ˇŒid
(
sù
, 
ˇŒid
);

3666 i‡(!
£ssi⁄
) {

3667 
	`SIPE_DEBUG_INFO
("¥o˚ss_öfo_ª•⁄£: faûed föd dülog f‹ cÆlid %s,Éxôög.", 
ˇŒid
);

3668  
FALSE
;

3671 i‡(
msg
->
ª•⁄£
 =200 && 
	`g_°r_has_¥efix
(
c⁄ã¡ty≥
, "application/x-ms-mim")) {

3672 
sùe_xml
 *
xn_a˘i⁄
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

3673 c⁄° 
sùe_xml
 *
xn_ªque°_rm_ª•⁄£
 = 
	`sùe_xml_chûd
(
xn_a˘i⁄
, "RequestRMResponse");

3674 c⁄° 
sùe_xml
 *
xn_£t_rm_ª•⁄£
 = 
	`sùe_xml_chûd
(
xn_a˘i⁄
, "SetRMResponse");

3676 i‡(
xn_ªque°_rm_ª•⁄£
) {

3677 c⁄° *
wôh
 = 
	`sùe_xml_©åibuã
(
xn_ªque°_rm_ª•⁄£
, "uri");

3678 c⁄° *
Ælow
 = 
	`sùe_xml_©åibuã
(
xn_ªque°_rm_ª•⁄£
, "allow");

3680 
dülog
 = 
	`sùe_dülog_föd
(
£ssi⁄
, 
wôh
);

3681 i‡(!
dülog
) {

3682 
	`SIPE_DEBUG_INFO
("¥o˚ss_öfo_ª•⁄£: faûed föd dülog f‹ %s,Éxôög.", 
wôh
);

3683 
	`sùe_xml_‰ì
(
xn_a˘i⁄
);

3684  
FALSE
;

3687 i‡(
Ælow
 && !
	`g_°rˇ£cmp
(allow, "true")) {

3688 
	`SIPE_DEBUG_INFO
("¥o˚ss_öfo_ª•⁄£: %†ha†vŸed PRO", 
wôh
);

3689 
dülog
->
ñe˘i⁄_vŸe
 = 1;

3690 } i‡(
Ælow
 && !
	`g_°rˇ£cmp
(allow, "false")) {

3691 
	`SIPE_DEBUG_INFO
("¥o˚ss_öfo_ª•⁄£: %†ha†vŸed CONTRA", 
wôh
);

3692 
dülog
->
ñe˘i⁄_vŸe
 = -1;

3695 i‡(
	`sùe_is_ñe˘i⁄_föished
(
£ssi⁄
)) {

3696 
	`sùe_ñe˘i⁄_ªsu…
(
sùe_¥iv©e
,

3697 
£ssi⁄
);

3700 } i‡(
xn_£t_rm_ª•⁄£
) {

3703 
	`sùe_xml_‰ì
(
xn_a˘i⁄
);

3707  
TRUE
;

3708 
	}
}

3710 
	$sùe_£nd_mesßge
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

3711 
sù_dülog
 *
dülog
,

3712 c⁄° *
msg
, c⁄° *
c⁄ã¡_ty≥
)

3714 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

3715 
gch¨
 *
hdr
;

3716 
gch¨
 *
tmp
;

3717 *
msgãxt
 = 
NULL
;

3718 c⁄° 
gch¨
 *
msgr
 = "";

3719 
gch¨
 *
tmp2
 = 
NULL
;

3721 i‡(!
	`g_°r_has_¥efix
(
c⁄ã¡_ty≥
, "text/x-msmsgsinvite")) {

3722 *
msgf‹m©
;

3723 
gch¨
 *
msgr_vÆue
;

3725 
	`sùe_∑r£_html
(
msg
, &
msgf‹m©
, &
msgãxt
);

3726 
	`SIPE_DEBUG_INFO
("sùe_£nd_mesßge: msgf‹m©=%s", 
msgf‹m©
);

3728 
msgr_vÆue
 = 
	`sùmsg_gë_msgr_°rög
(
msgf‹m©
);

3729 
	`g_‰ì
(
msgf‹m©
);

3730 i‡(
msgr_vÆue
) {

3731 
msgr
 = 
tmp2
 = 
	`g_°rdup_¥ötf
(";msgr=%s", 
msgr_vÆue
);

3732 
	`g_‰ì
(
msgr_vÆue
);

3735 
msgãxt
 = 
	`g_°rdup
(
msg
);

3738 
tmp
 = 
	`gë_c⁄è˘
(
sù
);

3742 i‡(
c⁄ã¡_ty≥
 =
NULL
)

3743 
c⁄ã¡_ty≥
 = "text/plain";

3745 
hdr
 = 
	`g_°rdup_¥ötf
("C⁄è˘: %s\r\nC⁄ã¡-Ty≥: %s; ch¨£t=UTF-8%s\r\n", 
tmp
, 
c⁄ã¡_ty≥
, 
msgr
);

3746 
	`g_‰ì
(
tmp
);

3747 
	`g_‰ì
(
tmp2
);

3749 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "MESSAGE", 
dülog
->
wôh
, dülog->wôh, 
hdr
, 
msgãxt
, dülog, 
¥o˚ss_mesßge_ª•⁄£
);

3750 
	`g_‰ì
(
msgãxt
);

3751 
	`g_‰ì
(
hdr
);

3752 
	}
}

3756 
	$sùe_im_¥o˚ss_queue
 (
sùe_accou¡_d©a
 * 
sù
, 
sù_£ssi⁄
 * 
£ssi⁄
)

3758 
GSLi°
 *
íåy2
 = 
£ssi⁄
->
outgoög_mesßge_queue
;

3759 
íåy2
) {

3760 
queued_mesßge
 *
msg
 = 
íåy2
->
d©a
;

3763 i‡(
£ssi⁄
->
is_mu…ù¨ty
 || sessi⁄->
focus_uri
) {

3764 
gch¨
 *
who
 = 
	`sù_uri_£lf
(
sù
);

3765 
	`£rv_gŸ_ch©_ö
(
sù
->
gc
, 
£ssi⁄
->
ch©_id
, 
who
,

3766 
PURPLE_MESSAGE_SEND
, 
msg
->
body
, 
	`time
(
NULL
));

3767 
	`g_‰ì
(
who
);

3770 
SIPE_DIALOG_FOREACH
 {

3771 *
key
;

3772 
queued_mesßge
 *
mesßge
;

3774 i‡(
dülog
->
outgoög_övôe
) ;

3776 
mesßge
 = 
	`g_√w0
(
queued_mesßge
,1);

3777 
mesßge
->
body
 = 
	`g_°rdup
(
msg
->body);

3778 i‡(
msg
->
c⁄ã¡_ty≥
 !
NULL
)

3779 
mesßge
->
c⁄ã¡_ty≥
 = 
	`g_°rdup
(
msg
->content_type);

3781 
key
 = 
	`g_°rdup_¥ötf
("<%s><%d><MESSAGE><%s>", 
dülog
->
ˇŒid
, (dülog->
c£q
Ë+ 1, dülog->
wôh
);

3782 
	`g_hash_èbÀ_ö£π
(
£ssi⁄
->
unc⁄fúmed_mesßges
, 
	`g_°rdup
(
key
), 
mesßge
);

3783 
	`SIPE_DEBUG_INFO
("sipe_im_process_queue:ádded message %sÅo unconfirmed_messages(count=%d)",

3784 
key
, 
	`g_hash_èbÀ_size
(
£ssi⁄
->
unc⁄fúmed_mesßges
));

3785 
	`g_‰ì
(
key
);

3787 
	`sùe_£nd_mesßge
(
SIP_TO_CORE_PRIVATE
, 
dülog
, 
msg
->
body
, msg->
c⁄ã¡_ty≥
);

3788 } 
SIPE_DIALOG_FOREACH_END
;

3790 
íåy2
 = 
	`sùe_£ssi⁄_dequeue_mesßge
(
£ssi⁄
);

3792 
	}
}

3795 
	$sùe_ª„r_nŸify
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

3796 
sù_£ssi⁄
 *
£ssi⁄
,

3797 c⁄° 
gch¨
 *
who
,

3798 
°©us
,

3799 c⁄° 
gch¨
 *
desc
)

3801 
gch¨
 *
hdr
;

3802 
gch¨
 *
body
;

3803 
sù_dülog
 *
dülog
 = 
	`sùe_dülog_föd
(
£ssi⁄
, 
who
);

3805 
hdr
 = 
	`g_°rdup_¥ötf
(

3809 
°©us
 >= 200 ? "terminated" : "active");

3811 
body
 = 
	`g_°rdup_¥ötf
(

3813 
°©us
, 
desc
);

3815 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "NOTIFY", 
who
, who, 
hdr
, 
body
, 
dülog
, 
NULL
);

3817 
	`g_‰ì
(
hdr
);

3818 
	`g_‰ì
(
body
);

3819 
	}
}

3821 
gboﬁón


3822 
	$¥o˚ss_övôe_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

3823 
sùmsg
 *
msg
, 
å™ß˘i⁄
 *
å™s
)

3825 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

3826 
gch¨
 *
wôh
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, "To"));

3827 
sù_£ssi⁄
 *
£ssi⁄
;

3828 
sù_dülog
 *
dülog
;

3829 *
c£q
;

3830 *
key
;

3831 
queued_mesßge
 *
mesßge
;

3832 
sùmsg
 *
ªque°_msg
 = 
å™s
->
msg
;

3834 c⁄° 
gch¨
 *
ˇŒid
 = 
	`sùmsg_föd_hódî
(
msg
, "Call-ID");

3835 
gch¨
 *
ª„ºed_by
;

3837 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_ch©_by_ˇŒid
(
sù
, 
ˇŒid
);

3838 i‡(!
£ssi⁄
) {

3839 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_im
(
sù
, 
wôh
);

3841 i‡(!
£ssi⁄
) {

3842 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_invite_response: unableÅo find IM session");

3843 
	`g_‰ì
(
wôh
);

3844  
FALSE
;

3847 
dülog
 = 
	`sùe_dülog_föd
(
£ssi⁄
, 
wôh
);

3848 i‡(!
dülog
) {

3849 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_invite_response: session outgoing dialog is NULL");

3850 
	`g_‰ì
(
wôh
);

3851  
FALSE
;

3854 
	`sùe_dülog_∑r£
(
dülog
, 
msg
, 
TRUE
);

3856 
c£q
 = 
	`sùmsg_föd_∑π_of_hódî
(
	`sùmsg_föd_hódî
(
msg
, "CSeq"), 
NULL
, " ", NULL);

3857 
key
 = 
	`g_°rdup_¥ötf
("<%s><%d><INVITE>", 
dülog
->
ˇŒid
, 
	`©oi
(
c£q
));

3858 
	`g_‰ì
(
c£q
);

3859 
mesßge
 = 
	`g_hash_èbÀ_lookup
(
£ssi⁄
->
unc⁄fúmed_mesßges
, 
key
);

3861 i‡(
msg
->
ª•⁄£
 != 200) {

3862 
PuΩÀBuddy
 *
pbuddy
;

3863 c⁄° *
Æüs
 = 
wôh
;

3864 c⁄° *
w¨n_hdr
 = 
	`sùmsg_föd_hódî
(
msg
, "Warning");

3865 
w¨nög
 = -1;

3867 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_invite_response: INVITEÑesponseÇot 200");

3869 i‡(
w¨n_hdr
) {

3870 
gch¨
 **
∑πs
 = 
	`g_°r•lô
(
w¨n_hdr
, " ", 2);

3871 i‡(
∑πs
[0]) {

3872 
w¨nög
 = 
	`©oi
(
∑πs
[0]);

3874 
	`g_°r‰ìv
(
∑πs
);

3878 i‡(
msg
->
ª•⁄£
 == 606 &&

3879 
w¨nög
 == 309 &&

3880 
mesßge
 && 
	`g_°r_has_¥efix
(mesßge->
c⁄ã¡_ty≥
, "text/x-msmsgsinvite"))

3882 
GSLi°
 *
∑r£d_body
 = 
	`sùe_·_∑r£_msg_body
(
mesßge
->
body
);

3883 
	`sùe_·_öcomög_ˇn˚l
(
sù
->
gc
->
accou¡
, 
∑r£d_body
);

3884 
	`sùe_utûs_«mevÆ_‰ì
(
∑r£d_body
);

3887 i‡((
pbuddy
 = 
	`puΩÀ_föd_buddy
(
sù
->
accou¡
, 
wôh
))) {

3888 
Æüs
 = 
	`puΩÀ_buddy_gë_Æüs
(
pbuddy
);

3891 i‡(
mesßge
) {

3892 
	`sùe_¥e£¡_mesßge_undñivîed_îr
(
sù
, 
£ssi⁄
, 
msg
->
ª•⁄£
, 
w¨nög
, 
Æüs
, 
mesßge
->
body
);

3894 
gch¨
 *
tmp_msg
 = 
	`g_°rdup_¥ötf
(
	`_
("FaûedÅÿövôê%s"), 
Æüs
);

3895 
	`sùe_¥e£¡_îr
(
sùe_¥iv©e
, 
£ssi⁄
, 
tmp_msg
);

3896 
	`g_‰ì
(
tmp_msg
);

3899 
	`sùe_dülog_ªmove
(
£ssi⁄
, 
wôh
);

3901 
	`g_‰ì
(
key
);

3902 
	`g_‰ì
(
wôh
);

3903  
FALSE
;

3906 
dülog
->
c£q
 = 0;

3907 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "ACK", 
dülog
->
wôh
, dülog->wôh, 
NULL
, NULL, dialog, NULL);

3908 
dülog
->
outgoög_övôe
 = 
NULL
;

3909 
dülog
->
is_e°ablished
 = 
TRUE
;

3911 
ª„ºed_by
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
ªque°_msg
, "Referred-By"));

3912 i‡(
ª„ºed_by
) {

3913 
	`sùe_ª„r_nŸify
(
sùe_¥iv©e
, 
£ssi⁄
, 
ª„ºed_by
, 200, "OK");

3914 
	`g_‰ì
(
ª„ºed_by
);

3918 i‡(
£ssi⁄
->
is_mu…ù¨ty
) {

3919 
	`puΩÀ_c⁄v_ch©_add_u£r
(
	`PURPLE_CONV_CHAT
(
£ssi⁄
->
c⁄v
),

3920 
wôh
, 
NULL
,

3921 
PURPLE_CBFLAGS_NONE
, 
TRUE
);

3924 if(
	`g_¶i°_föd_cu°om
(
dülog
->
suµ‹ãd
, "ms-ãxt-f‹m©", (
GCom∑ªFunc
)
g_ascii_°rˇ£cmp
)) {

3925 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_invite_response:Ñemote systemáccepted message in INVITE");

3926 
	`sùe_£ssi⁄_dequeue_mesßge
(
£ssi⁄
);

3929 
	`sùe_im_¥o˚ss_queue
(
sù
, 
£ssi⁄
);

3931 
	`g_hash_èbÀ_ªmove
(
£ssi⁄
->
unc⁄fúmed_mesßges
, 
key
);

3932 
	`SIPE_DEBUG_INFO
("process_invite_response:Ñemoved message %s from unconfirmed_messages(count=%d)",

3933 
key
, 
	`g_hash_èbÀ_size
(
£ssi⁄
->
unc⁄fúmed_mesßges
));

3935 
	`g_‰ì
(
key
);

3936 
	`g_‰ì
(
wôh
);

3937  
TRUE
;

3938 
	}
}

3942 
	$sùe_övôe
(
sùe_accou¡_d©a
 *
sù
,

3943 
sù_£ssi⁄
 *
£ssi⁄
,

3944 c⁄° 
gch¨
 *
who
,

3945 c⁄° 
gch¨
 *
msg_body
,

3946 c⁄° 
gch¨
 *
msg_c⁄ã¡_ty≥
,

3947 c⁄° 
gch¨
 *
ª„ºed_by
,

3948 c⁄° 
gboﬁón
 
is_åiggîed
)

3950 
gch¨
 *
hdr
;

3951 
gch¨
 *
to
;

3952 
gch¨
 *
c⁄è˘
;

3953 
gch¨
 *
body
;

3954 
gch¨
 *
£lf
;

3955 *
ms_ãxt_f‹m©
 = 
NULL
;

3956 
gch¨
 *
ro°î_m™agî
;

3957 
gch¨
 *
íd_poöts
;

3958 
gch¨
 *
ª„ºed_by_°r
;

3959 
sù_dülog
 *
dülog
 = 
	`sùe_dülog_föd
(
£ssi⁄
, 
who
);

3961 i‡(
dülog
 && dülog->
is_e°ablished
) {

3962 
	`SIPE_DEBUG_INFO
("£ssi⁄ wôh %†Æªady ha†®dülog o≥n", 
who
);

3966 i‡(!
dülog
) {

3967 
dülog
 = 
	`sùe_dülog_add
(
£ssi⁄
);

3968 
dülog
->
ˇŒid
 = 
£ssi⁄
->ˇŒid ? 
	`g_°rdup
(£ssi⁄->ˇŒidË: 
	`gíˇŒid
();

3969 
dülog
->
wôh
 = 
	`g_°rdup
(
who
);

3972 i‡(!(
dülog
->
ouπag
)) {

3973 
dülog
->
ouπag
 = 
	`gíèg
();

3976 
to
 = 
	`sù_uri
(
who
);

3978 i‡(
msg_body
) {

3979 *
msgãxt
 = 
NULL
;

3980 *
ba£64_msg
;

3981 c⁄° 
gch¨
 *
msgr
 = "";

3982 *
key
;

3983 
queued_mesßge
 *
mesßge
;

3984 
gch¨
 *
tmp
 = 
NULL
;

3986 i‡(!
	`g_°r_has_¥efix
(
msg_c⁄ã¡_ty≥
, "text/x-msmsgsinvite")) {

3987 *
msgf‹m©
;

3988 
gch¨
 *
msgr_vÆue
;

3990 
	`sùe_∑r£_html
(
msg_body
, &
msgf‹m©
, &
msgãxt
);

3991 
	`SIPE_DEBUG_INFO
("sùe_övôe: msgf‹m©=%s", 
msgf‹m©
);

3993 
msgr_vÆue
 = 
	`sùmsg_gë_msgr_°rög
(
msgf‹m©
);

3994 
	`g_‰ì
(
msgf‹m©
);

3995 i‡(
msgr_vÆue
) {

3996 
msgr
 = 
tmp
 = 
	`g_°rdup_¥ötf
(";msgr=%s", 
msgr_vÆue
);

3997 
	`g_‰ì
(
msgr_vÆue
);

4000 
msgãxt
 = 
	`g_°rdup
(
msg_body
);

4003 
ba£64_msg
 = 
	`g_ba£64_ícode
((
guch¨
*Ë
msgãxt
, 
	`°æí
(msgtext));

4004 
ms_ãxt_f‹m©
 = 
	`g_°rdup_¥ötf
(
SIPE_INVITE_TEXT
,

4005 
msg_c⁄ã¡_ty≥
 ? msg_content_type : "text/plain",

4006 
msgr
,

4007 
ba£64_msg
);

4008 
	`g_‰ì
(
msgãxt
);

4009 
	`g_‰ì
(
tmp
);

4010 
	`g_‰ì
(
ba£64_msg
);

4012 
mesßge
 = 
	`g_√w0
(
queued_mesßge
,1);

4013 
mesßge
->
body
 = 
	`g_°rdup
(
msg_body
);

4014 i‡(
msg_c⁄ã¡_ty≥
 !
NULL
)

4015 
mesßge
->
c⁄ã¡_ty≥
 = 
	`g_°rdup
(
msg_c⁄ã¡_ty≥
);

4017 
key
 = 
	`g_°rdup_¥ötf
("<%s><%d><INVITE>", 
dülog
->
ˇŒid
, (dülog->
c£q
) + 1);

4018 
	`g_hash_èbÀ_ö£π
(
£ssi⁄
->
unc⁄fúmed_mesßges
, 
	`g_°rdup
(
key
), 
mesßge
);

4019 
	`SIPE_DEBUG_INFO
("sipe_invite:ádded message %sÅo unconfirmed_messages(count=%d)",

4020 
key
, 
	`g_hash_èbÀ_size
(
£ssi⁄
->
unc⁄fúmed_mesßges
));

4021 
	`g_‰ì
(
key
);

4024 
c⁄è˘
 = 
	`gë_c⁄è˘
(
sù
);

4025 
íd_poöts
 = 
	`gë_íd_poöts
(
SIP_TO_CORE_PRIVATE
, 
£ssi⁄
);

4026 
£lf
 = 
	`sù_uri_£lf
(
sù
);

4027 
ro°î_m™agî
 = 
	`g_°rdup_¥ötf
(

4030 
£lf
,

4031 
íd_poöts
);

4032 
ª„ºed_by_°r
 = 
ª„ºed_by
 ?

4033 
	`g_°rdup_¥ötf
(

4035 
ª„ºed_by
)

4036 : 
	`g_°rdup
("");

4037 
hdr
 = 
	`g_°rdup_¥ötf
(

4045 
	`sùe_°rˇ£_equÆ
(
£ssi⁄
->
ro°î_m™agî
, 
£lf
) ?Ñoster_manager : "",

4046 
ª„ºed_by_°r
,

4047 
is_åiggîed
 ? "TriggeredInvite: TRUE\r\n" : "",

4048 
is_åiggîed
 || 
£ssi⁄
->
is_mu…ù¨ty
 ? "Require: com.microsoft.rtc-multiparty\r\n" : "",

4049 
c⁄è˘
,

4050 
ms_ãxt_f‹m©
 ? ms_text_format : "");

4051 
	`g_‰ì
(
ms_ãxt_f‹m©
);

4052 
	`g_‰ì
(
£lf
);

4054 
body
 = 
	`g_°rdup_¥ötf
(

4061 "a˜c˚±-ty≥s:" 
SDP_ACCEPT_TYPES
 "\r\n",

4062 
	`sùe_backíd_√tw‹k_ù_addªss
(),

4063 
	`sùe_backíd_√tw‹k_ù_addªss
(),

4064 
sù
->
ocs2007
 ? "message" : "x-ms-message",

4065 
SIP_TO_CORE_PRIVATE
->
£rvî_p‹t
);

4067 
dülog
->
outgoög_övôe
 = 
	`£nd_sù_ªque°
(
SIP_TO_CORE_PRIVATE
, "INVITE",

4068 
to
,Åo, 
hdr
, 
body
, 
dülog
, 
¥o˚ss_övôe_ª•⁄£
);

4070 
	`g_‰ì
(
to
);

4071 
	`g_‰ì
(
ro°î_m™agî
);

4072 
	`g_‰ì
(
íd_poöts
);

4073 
	`g_‰ì
(
ª„ºed_by_°r
);

4074 
	`g_‰ì
(
body
);

4075 
	`g_‰ì
(
hdr
);

4076 
	`g_‰ì
(
c⁄è˘
);

4077 
	}
}

4080 
	$sùe_ª„r
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

4081 
sù_£ssi⁄
 *
£ssi⁄
,

4082 c⁄° 
gch¨
 *
who
)

4084 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

4085 
gch¨
 *
hdr
;

4086 
gch¨
 *
c⁄è˘
;

4087 
gch¨
 *
ïid
 = 
	`gë_ïid
(
sù
);

4088 
sù_dülog
 *
dülog
 = 
	`sùe_dülog_föd
(
£ssi⁄
,

4089 
£ssi⁄
->
ro°î_m™agî
);

4090 c⁄° *
ouπag
 = 
dülog
 && dülog->ouπag ? dülog->ouπag : 
NULL
;

4092 
c⁄è˘
 = 
	`gë_c⁄è˘
(
sù
);

4093 
hdr
 = 
	`g_°rdup_¥ötf
(

4098 
c⁄è˘
,

4099 
who
,

4100 
sù
->
u£∫ame
,

4101 
ouπag
 ? ";tag=" : "",

4102 
ouπag
 ? ourtag : "",

4103 
ïid
);

4104 
	`g_‰ì
(
ïid
);

4106 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "REFER",

4107 
£ssi⁄
->
ro°î_m™agî
, sessi⁄->ro°î_m™agî, 
hdr
, 
NULL
, 
dülog
, NULL);

4109 
	`g_‰ì
(
hdr
);

4110 
	`g_‰ì
(
c⁄è˘
);

4111 
	}
}

4114 
	$sùe_£nd_ñe˘i⁄_ªque°_rm
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

4115 
sù_dülog
 *
dülog
,

4116 
bid
)

4118 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

4119 c⁄° 
gch¨
 *
hdr
 = "Content-Type:ápplication/x-ms-mim\r\n";

4121 
gch¨
 *
body
 = 
	`g_°rdup_¥ötf
(

4125 
sù
->
u£∫ame
, 
bid
);

4127 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "INFO",

4128 
dülog
->
wôh
, dülog->wôh, 
hdr
, 
body
, dülog, 
¥o˚ss_öfo_ª•⁄£
);

4130 
	`g_‰ì
(
body
);

4131 
	}
}

4134 
	$sùe_£nd_ñe˘i⁄_£t_rm
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

4135 
sù_dülog
 *
dülog
)

4137 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

4138 c⁄° 
gch¨
 *
hdr
 = "Content-Type:ápplication/x-ms-mim\r\n";

4140 
gch¨
 *
body
 = 
	`g_°rdup_¥ötf
(

4144 
sù
->
u£∫ame
);

4146 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "INFO",

4147 
dülog
->
wôh
, dülog->wôh, 
hdr
, 
body
, dülog, 
¥o˚ss_öfo_ª•⁄£
);

4149 
	`g_‰ì
(
body
);

4150 
	}
}

4153 
	$sùe_£ssi⁄_˛o£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

4154 
sù_£ssi⁄
 * 
£ssi⁄
)

4156 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

4157 i‡(
£ssi⁄
 && sessi⁄->
focus_uri
) {

4158 
	`sùe_c⁄f_immcu_˛o£d
(
sù
, 
£ssi⁄
);

4159 
	`c⁄f_£ssi⁄_˛o£
(
sù
, 
£ssi⁄
);

4162 i‡(
£ssi⁄
) {

4163 
SIPE_DIALOG_FOREACH
 {

4166 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "BYE", 
dülog
->
wôh
, dülog->wôh, 
NULL
, NULL, dialog, NULL);

4167 } 
SIPE_DIALOG_FOREACH_END
;

4169 
	`sùe_£ssi⁄_ªmove
(
sù
, 
£ssi⁄
);

4171 
	}
}

4174 
	$sùe_£ssi⁄_˛o£_Æl
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

4176 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

4177 
GSLi°
 *
íåy
;

4178 (
íåy
 = 
sù
->
£ssi⁄s
Ë!
NULL
) {

4179 
	`sùe_£ssi⁄_˛o£
(
sùe_¥iv©e
, 
íåy
->
d©a
);

4181 
	}
}

4184 
	$sùe_c⁄vo_˛o£d
(
PuΩÀC⁄√˘i⁄
 * 
gc
, c⁄° *
who
)

4186 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
PURPLE_GC_TO_SIPE_CORE_PRIVATE
;

4187 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

4189 
	`SIPE_DEBUG_INFO
("c⁄vîßti⁄ wôh %†˛o£d", 
who
);

4190 
	`sùe_£ssi⁄_˛o£
(
sùe_¥iv©e
, 
	`sùe_£ssi⁄_föd_im
(
sù
, 
who
));

4191 
	}
}

4194 
	$sùe_ch©_Àave
 (
PuΩÀC⁄√˘i⁄
 *
gc
, 
id
)

4196 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
PURPLE_GC_TO_SIPE_CORE_PRIVATE
;

4197 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

4198 
sù_£ssi⁄
 *
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_ch©_by_id
(
sù
, 
id
);

4200 
	`sùe_£ssi⁄_˛o£
(
sùe_¥iv©e
, 
£ssi⁄
);

4201 
	}
}

4203 
	$sùe_im_£nd
(
PuΩÀC⁄√˘i⁄
 *
gc
, c⁄° *
who
, c⁄° *
wh©
,

4204 
SIPE_UNUSED_PARAMETER
 
PuΩÀMesßgeFœgs
 
Êags
)

4206 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
PURPLE_GC_TO_SIPE_CORE_PRIVATE
;

4207 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

4208 
sù_£ssi⁄
 *
£ssi⁄
;

4209 
sù_dülog
 *
dülog
;

4210 
gch¨
 *
uri
 = 
	`sù_uri
(
who
);

4212 
	`SIPE_DEBUG_INFO
("sùe_im_£nd wh©='%s'", 
wh©
);

4214 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_‹_add_im
(
sù
, 
uri
);

4215 
dülog
 = 
	`sùe_dülog_föd
(
£ssi⁄
, 
uri
);

4218 
	`sùe_£ssi⁄_íqueue_mesßge
(
£ssi⁄
, 
wh©
, 
NULL
);

4220 i‡(
dülog
 && !dülog->
outgoög_övôe
) {

4221 
	`sùe_im_¥o˚ss_queue
(
sù
, 
£ssi⁄
);

4222 } i‡(!
dülog
 || !dülog->
outgoög_övôe
) {

4224 
	`sùe_övôe
(
sù
, 
£ssi⁄
, 
uri
, 
wh©
, 
NULL
, NULL, 
FALSE
);

4227 
	`g_‰ì
(
uri
);

4229 
	}
}

4231 
	$sùe_ch©_£nd
(
PuΩÀC⁄√˘i⁄
 *
gc
, 
id
, c⁄° *
wh©
,

4232 
SIPE_UNUSED_PARAMETER
 
PuΩÀMesßgeFœgs
 
Êags
)

4234 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
PURPLE_GC_TO_SIPE_CORE_PRIVATE
;

4235 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

4236 
sù_£ssi⁄
 *
£ssi⁄
;

4238 
	`SIPE_DEBUG_INFO
("sùe_ch©_£nd wh©='%s'", 
wh©
);

4240 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_ch©_by_id
(
sù
, 
id
);

4243 i‡(
£ssi⁄
 && sessi⁄->
dülogs
) {

4244 
	`sùe_£ssi⁄_íqueue_mesßge
(
£ssi⁄
,
wh©
,
NULL
);

4245 
	`sùe_im_¥o˚ss_queue
(
sù
, 
£ssi⁄
);

4246 } i‡(
sù
) {

4247 
gch¨
 *
ch©_«me
 = 
	`puΩÀ_föd_ch©
(
sù
->
gc
, 
id
)->
«me
;

4248 c⁄° 
gch¨
 *
¥Ÿo_ch©_id
 = 
	`sùe_ch©_föd_«me
(
ch©_«me
);

4250 
	`SIPE_DEBUG_INFO
("sùe_ch©_£nd: ch©_«me='%s'", 
ch©_«me
 ? chat_name : "NULL");

4251 
	`SIPE_DEBUG_INFO
("sùe_ch©_£nd:ÖrŸo_ch©_id='%s'", 
¥Ÿo_ch©_id
 ?Öroto_chat_id : "NULL");

4253 i‡(
sù
->
ocs2007
) {

4254 
sù_£ssi⁄
 *
£ssi⁄
 = 
	`sùe_£ssi⁄_add_ch©
(
sù
);

4256 
£ssi⁄
->
is_mu…ù¨ty
 = 
FALSE
;

4257 
£ssi⁄
->
focus_uri
 = 
	`g_°rdup
(
¥Ÿo_ch©_id
);

4258 
	`sùe_£ssi⁄_íqueue_mesßge
(
£ssi⁄
, 
wh©
, 
NULL
);

4259 
	`sùe_övôe_c⁄f_focus
(
sù
, 
£ssi⁄
);

4264 
	}
}

4268 
	$¥o˚ss_öcomög_öfo
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

4269 
sùmsg
 *
msg
)

4271 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

4272 c⁄° 
gch¨
 *
c⁄ã¡ty≥
 = 
	`sùmsg_föd_hódî
(
msg
, "Content-Type");

4273 c⁄° 
gch¨
 *
ˇŒid
 = 
	`sùmsg_föd_hódî
(
msg
, "Call-ID");

4274 
gch¨
 *
‰om
;

4275 
sù_£ssi⁄
 *
£ssi⁄
;

4277 
	`SIPE_DEBUG_INFO
("¥o˚ss_öcomög_öfo: \n%s", 
msg
->
body
 ? msg->body : "");

4280 i‡(
	`g_°r_has_¥efix
(
c⁄ã¡ty≥
, "application/csta+xml"))

4282 
	`¥o˚ss_öcomög_öfo_c°a
(
sù
, 
msg
);

4286 
‰om
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, "From"));

4287 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_ch©_by_ˇŒid
(
sù
, 
ˇŒid
);

4288 i‡(!
£ssi⁄
) {

4289 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_im
(
sù
, 
‰om
);

4291 i‡(!
£ssi⁄
) {

4292 
	`g_‰ì
(
‰om
);

4296 i‡(
	`g_°r_has_¥efix
(
c⁄ã¡ty≥
, "application/x-ms-mim"))

4298 
sùe_xml
 *
xn_a˘i⁄
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

4299 c⁄° 
sùe_xml
 *
xn_ªque°_rm
 = 
	`sùe_xml_chûd
(
xn_a˘i⁄
, "RequestRM");

4300 c⁄° 
sùe_xml
 *
xn_£t_rm
 = 
	`sùe_xml_chûd
(
xn_a˘i⁄
, "SetRM");

4302 
	`sùmsg_add_hódî
(
msg
, "Content-Type", "application/x-ms-mim");

4304 i‡(
xn_ªque°_rm
) {

4306 
bid
 = 
	`sùe_xml_öt_©åibuã
(
xn_ªque°_rm
, "bid", 0);

4307 
gch¨
 *
body
 = 
	`g_°rdup_¥ötf
(

4311 
sù
->
u£∫ame
,

4312 
£ssi⁄
->
bid
 < bid ? "true" : "false");

4313 
	`£nd_sù_ª•⁄£
(
sùe_¥iv©e
, 
msg
, 200, "OK", 
body
);

4314 
	`g_‰ì
(
body
);

4315 } i‡(
xn_£t_rm
) {

4316 
gch¨
 *
body
;

4317 c⁄° *
rm
 = 
	`sùe_xml_©åibuã
(
xn_£t_rm
, "uri");

4318 
	`g_‰ì
(
£ssi⁄
->
ro°î_m™agî
);

4319 
£ssi⁄
->
ro°î_m™agî
 = 
	`g_°rdup
(
rm
);

4321 
body
 = 
	`g_°rdup_¥ötf
(

4325 
sù
->
u£∫ame
);

4326 
	`£nd_sù_ª•⁄£
(
sùe_¥iv©e
, 
msg
, 200, "OK", 
body
);

4327 
	`g_‰ì
(
body
);

4329 
	`sùe_xml_‰ì
(
xn_a˘i⁄
);

4335 i‡(!
£ssi⁄
->
is_mu…ù¨ty
 && !£ssi⁄->
focus_uri
) {

4336 
sùe_xml
 *
xn_keybﬂrd_a˘ivôy
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

4337 c⁄° *
°©us
 = 
	`sùe_xml_©åibuã
(
	`sùe_xml_chûd
(
xn_keybﬂrd_a˘ivôy
, "status"),

4339 i‡(
	`sùe_°ªquÆ
(
°©us
, "type")) {

4340 
	`£rv_gŸ_typög
(
sù
->
gc
, 
‰om
, 
SIPE_TYPING_RECV_TIMEOUT
, 
PURPLE_TYPING
);

4341 } i‡(
	`sùe_°ªquÆ
(
°©us
, "idle")) {

4342 
	`£rv_gŸ_typög_°›≥d
(
sù
->
gc
, 
‰om
);

4344 
	`sùe_xml_‰ì
(
xn_keybﬂrd_a˘ivôy
);

4347 
	`£nd_sù_ª•⁄£
(
sùe_¥iv©e
, 
msg
, 200, "OK", 
NULL
);

4349 
	`g_‰ì
(
‰om
);

4350 
	}
}

4352 
	$¥o˚ss_öcomög_ˇn˚l
(
SIPE_UNUSED_PARAMETER
 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

4353 
SIPE_UNUSED_PARAMETER
 
sùmsg
 *
msg
)

4355 #i‡
HAVE_VV


4356 
sùe_medü_ˇŒ
 *
ˇŒ
 = 
sùe_¥iv©e
->
medü_ˇŒ
;

4357 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

4358 c⁄° 
gch¨
 *
ˇŒid
 = 
	`sùmsg_föd_hódî
(
msg
, "Call-ID");

4359 i‡(
ˇŒ
 && 
	`sùe_°ªquÆ
(
	`sùe_medü_gë_ˇŒid
(ˇŒ), 
ˇŒid
)) {

4360 
sù_£ssi⁄
 *
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_ch©_by_ˇŒid
(
sù
, 
ˇŒid
);

4361 
	`sùe_medü_h™gup
(
sùe_¥iv©e
);

4362 i‡(
£ssi⁄
) {

4363 
gch¨
 *
‰om
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, "From"));

4364 
	`sùe_dülog_ªmove
(
£ssi⁄
, 
‰om
);

4365 
	`g_‰ì
(
‰om
);

4367 
	`sùe_£ssi⁄_˛o£
(
sùe_¥iv©e
, 
£ssi⁄
);

4371 
	}
}

4373 
	$¥o˚ss_öcomög_bye
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

4374 
sùmsg
 *
msg
)

4376 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

4377 c⁄° 
gch¨
 *
ˇŒid
 = 
	`sùmsg_föd_hódî
(
msg
, "Call-ID");

4378 
gch¨
 *
‰om
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, "From"));

4379 
sù_£ssi⁄
 *
£ssi⁄
;

4380 
sù_dülog
 *
dülog
;

4382 #i‡
HAVE_VV


4383 
sùe_medü_ˇŒ
 *
ˇŒ
 = 
sùe_¥iv©e
->
medü_ˇŒ
;

4384 i‡(
ˇŒ
 && 
	`sùe_°ªquÆ
(
	`sùe_medü_gë_ˇŒid
(ˇŒ), 
ˇŒid
)) {

4385 
	`¥ötf
("\n\nRECEIVED BYE FOR ENDING CALL\n\n");

4387 
	`sùe_medü_h™gup
(
sùe_¥iv©e
);

4395 
dülog
 = 
	`g_√w0
(
sù_dülog
, 1);

4396 
dülog
->
ˇŒid
 = 
	`g_°rdup
(callid);

4397 
dülog
->
c£q
 = 
	`∑r£_c£q
(
	`sùmsg_föd_hódî
(
msg
, "CSeq"));

4398 
dülog
->
wôh
 = 
	`g_°rdup
(
‰om
);

4399 
	`sùe_dülog_∑r£
(
dülog
, 
msg
, 
FALSE
);

4401 
	`£nd_sù_ª•⁄£
(
sùe_¥iv©e
, 
msg
, 200, "OK", 
NULL
);

4403 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_ch©_by_ˇŒid
(
sù
, 
ˇŒid
);

4404 i‡(!
£ssi⁄
) {

4405 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_im
(
sù
, 
‰om
);

4407 i‡(!
£ssi⁄
) {

4408 
	`sùe_dülog_‰ì
(
dülog
);

4409 
	`g_‰ì
(
‰om
);

4413 i‡(
£ssi⁄
->
ro°î_m™agî
 && !
	`g_°rˇ£cmp
(
‰om
, session->roster_manager)) {

4414 
	`g_‰ì
(
£ssi⁄
->
ro°î_m™agî
);

4415 
£ssi⁄
->
ro°î_m™agî
 = 
NULL
;

4419 
	`sùe_dülog_ªmove_3
(
£ssi⁄
, 
dülog
);

4420 
	`sùe_dülog_‰ì
(
dülog
);

4421 i‡(
£ssi⁄
->
focus_uri
 && !
	`g_°rˇ£cmp
(
‰om
, sessi⁄->
im_mcu_uri
)) {

4422 
	`sùe_c⁄f_immcu_˛o£d
(
sù
, 
£ssi⁄
);

4423 } i‡(
£ssi⁄
->
is_mu…ù¨ty
) {

4424 
	`puΩÀ_c⁄v_ch©_ªmove_u£r
(
	`PURPLE_CONV_CHAT
(
£ssi⁄
->
c⁄v
), 
‰om
, 
NULL
);

4427 
	`g_‰ì
(
‰om
);

4428 
	}
}

4430 
	$¥o˚ss_öcomög_ª„r
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

4431 
sùmsg
 *
msg
)

4433 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

4434 
gch¨
 *
£lf
 = 
	`sù_uri_£lf
(
sù
);

4435 c⁄° 
gch¨
 *
ˇŒid
 = 
	`sùmsg_föd_hódî
(
msg
, "Call-ID");

4436 
gch¨
 *
‰om
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, "From"));

4437 
gch¨
 *
ª„r_to
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, "Refer-to"));

4438 
gch¨
 *
ª„ºed_by
 = 
	`g_°rdup
(
	`sùmsg_föd_hódî
(
msg
, "Referred-By"));

4439 
sù_£ssi⁄
 *
£ssi⁄
;

4440 
sù_dülog
 *
dülog
;

4442 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_ch©_by_ˇŒid
(
sù
, 
ˇŒid
);

4443 
dülog
 = 
	`sùe_dülog_föd
(
£ssi⁄
, 
‰om
);

4445 i‡(!
£ssi⁄
 || !
dülog
 || !£ssi⁄->
ro°î_m™agî
 || !
	`sùe_°rˇ£_equÆ
(£ssi⁄->ro°î_m™agî, 
£lf
)) {

4446 
	`£nd_sù_ª•⁄£
(
sùe_¥iv©e
, 
msg
, 500, "Sîvî I¡î«»Eº‹", 
NULL
);

4448 
	`£nd_sù_ª•⁄£
(
sùe_¥iv©e
, 
msg
, 202, "Ac˚±ed", 
NULL
);

4450 
	`sùe_övôe
(
sù
, 
£ssi⁄
, 
ª„r_to
, 
NULL
, NULL, 
ª„ºed_by
, 
FALSE
);

4453 
	`g_‰ì
(
£lf
);

4454 
	`g_‰ì
(
‰om
);

4455 
	`g_‰ì
(
ª„r_to
);

4456 
	`g_‰ì
(
ª„ºed_by
);

4457 
	}
}

4460 
	$sùe_£nd_typög
(
PuΩÀC⁄√˘i⁄
 *
gc
, c⁄° *
who
, 
PuΩÀTypögSèã
 
°©e
)

4462 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
PURPLE_GC_TO_SIPE_CORE_PRIVATE
;

4463 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

4464 
sù_£ssi⁄
 *
£ssi⁄
;

4465 
sù_dülog
 *
dülog
;

4467 i‡(
°©e
 =
PURPLE_NOT_TYPING
)

4470 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_im
(
sù
, 
who
);

4471 
dülog
 = 
	`sùe_dülog_föd
(
£ssi⁄
, 
who
);

4473 i‡(
£ssi⁄
 && 
dülog
 && dülog->
is_e°ablished
) {

4474 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "INFO", 
who
, who,

4476 
SIPE_SEND_TYPING
, 
dülog
, 
NULL
);

4478  
SIPE_TYPING_SEND_TIMEOUT
;

4479 
	}
}

4481 
	$do_ªauthítiˇã_cb
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

4482 
SIPE_UNUSED_PARAMETER
 
gpoöãr
 
unu£d
)

4484 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

4488 
	`SIPE_DEBUG_INFO_NOFORMAT
("doá fullÑeauthentication");

4489 
	`sùe_auth_‰ì
(&
sù
->
ªgi°ør
);

4490 
	`sùe_auth_‰ì
(&
sù
->
¥oxy
);

4491 
sù
->
ªgi°î°©us
 = 0;

4492 
	`do_ªgi°î
(
sù
);

4493 
sù
->
ªauthítiˇã_£t
 = 
FALSE
;

4494 
	}
}

4496 
gboﬁón


4497 
	$sùe_¥o˚ss_öcomög_x_msmsgsövôe
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

4498 
sùmsg
 *
msg
,

4499 
GSLi°
 *
∑r£d_body
)

4501 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

4502 
gboﬁón
 
found
 = 
FALSE
;

4504 i‡(
∑r£d_body
) {

4505 c⁄° 
gch¨
 *
övô©i⁄_comm™d
 = 
	`sùe_utûs_«mevÆ_föd
(
∑r£d_body
, "Invitation-Command");

4507 i‡(
	`sùe_°ªquÆ
(
övô©i⁄_comm™d
, "INVITE")) {

4508 
	`sùe_·_öcomög_å™s„r
(
sù
->
gc
->
accou¡
, 
msg
, 
∑r£d_body
);

4509 
found
 = 
TRUE
;

4510 } i‡(
	`sùe_°ªquÆ
(
övô©i⁄_comm™d
, "CANCEL")) {

4511 
	`sùe_·_öcomög_ˇn˚l
(
sù
->
gc
->
accou¡
, 
∑r£d_body
);

4512 
found
 = 
TRUE
;

4513 } i‡(
	`sùe_°ªquÆ
(
övô©i⁄_comm™d
, "ACCEPT")) {

4514 
	`sùe_·_öcomög_ac˚±
(
sù
->
gc
->
accou¡
, 
∑r£d_body
);

4515 
found
 = 
TRUE
;

4518  
found
;

4519 
	}
}

4521 
	$¥o˚ss_öcomög_mesßge
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

4522 
sùmsg
 *
msg
)

4524 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

4525 
gch¨
 *
‰om
;

4526 c⁄° 
gch¨
 *
c⁄ã¡ty≥
;

4527 
gboﬁón
 
found
 = 
FALSE
;

4529 
‰om
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, "From"));

4531 i‡(!
‰om
) ;

4533 
	`SIPE_DEBUG_INFO
("gŸ mesßgê‰om %s: %s", 
‰om
, 
msg
->
body
);

4535 
c⁄ã¡ty≥
 = 
	`sùmsg_föd_hódî
(
msg
, "Content-Type");

4536 i‡(
	`g_°r_has_¥efix
(
c⁄ã¡ty≥
, "text/plain")

4537 || 
	`g_°r_has_¥efix
(
c⁄ã¡ty≥
, "text/html")

4538 || 
	`g_°r_has_¥efix
(
c⁄ã¡ty≥
, "multipart/related")

4539 || 
	`g_°r_has_¥efix
(
c⁄ã¡ty≥
, "multipart/alternative"))

4541 c⁄° 
gch¨
 *
ˇŒid
 = 
	`sùmsg_föd_hódî
(
msg
, "Call-ID");

4542 
gch¨
 *
html
 = 
	`gë_html_mesßge
(
c⁄ã¡ty≥
, 
msg
->
body
);

4544 
sù_£ssi⁄
 *
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_ch©_by_ˇŒid
(
sù
, 
ˇŒid
);

4545 i‡(!
£ssi⁄
) {

4546 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_im
(
sù
, 
‰om
);

4549 i‡(
£ssi⁄
 && sessi⁄->
focus_uri
) {

4550 
gch¨
 *
tmp
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, "Ms-Sender"));

4551 
gch¨
 *
£ndî
 = 
	`∑r£_‰om
(
tmp
);

4552 
	`g_‰ì
(
tmp
);

4553 
	`£rv_gŸ_ch©_ö
(
sù
->
gc
, 
£ssi⁄
->
ch©_id
, 
£ndî
,

4554 
PURPLE_MESSAGE_RECV
, 
html
, 
	`time
(
NULL
));

4555 
	`g_‰ì
(
£ndî
);

4556 } i‡(
£ssi⁄
 && sessi⁄->
is_mu…ù¨ty
) {

4557 
	`£rv_gŸ_ch©_ö
(
sù
->
gc
, 
£ssi⁄
->
ch©_id
, 
‰om
,

4558 
PURPLE_MESSAGE_RECV
, 
html
, 
	`time
(
NULL
));

4560 
	`£rv_gŸ_im
(
sù
->
gc
, 
‰om
, 
html
, 0, 
	`time
(
NULL
));

4562 
	`g_‰ì
(
html
);

4563 
	`£nd_sù_ª•⁄£
(
sùe_¥iv©e
, 
msg
, 200, "OK", 
NULL
);

4564 
found
 = 
TRUE
;

4566 } i‡(
	`g_°r_has_¥efix
(
c⁄ã¡ty≥
, "application/im-iscomposing+xml")) {

4567 
sùe_xml
 *
isc
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

4568 c⁄° 
sùe_xml
 *
°©e
;

4569 
gch¨
 *
°©ed©a
;

4571 i‡(!
isc
) {

4572 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_incoming_message: canÇotÖarse iscomposing");

4573 
	`g_‰ì
(
‰om
);

4577 
°©e
 = 
	`sùe_xml_chûd
(
isc
, "state");

4579 i‡(!
°©e
) {

4580 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_incoming_message:Ço state found");

4581 
	`sùe_xml_‰ì
(
isc
);

4582 
	`g_‰ì
(
‰om
);

4586 
°©ed©a
 = 
	`sùe_xml_d©a
(
°©e
);

4587 i‡(
°©ed©a
) {

4588 i‡(
	`°r°r
(
°©ed©a
, "a˘ive")Ë
	`£rv_gŸ_typög
(
sù
->
gc
, 
‰om
, 0, 
PURPLE_TYPING
);

4589 
	`£rv_gŸ_typög_°›≥d
(
sù
->
gc
, 
‰om
);

4591 
	`g_‰ì
(
°©ed©a
);

4593 
	`sùe_xml_‰ì
(
isc
);

4594 
	`£nd_sù_ª•⁄£
(
sùe_¥iv©e
, 
msg
, 200, "OK", 
NULL
);

4595 
found
 = 
TRUE
;

4596 } i‡(
	`g_°r_has_¥efix
(
c⁄ã¡ty≥
, "text/x-msmsgsinvite")) {

4597 
GSLi°
 *
body
 = 
	`sùe_·_∑r£_msg_body
(
msg
->body);

4598 
found
 = 
	`sùe_¥o˚ss_öcomög_x_msmsgsövôe
(
sùe_¥iv©e
, 
msg
, 
body
);

4599 
	`sùe_utûs_«mevÆ_‰ì
(
body
);

4600 i‡(
found
) {

4601 
	`£nd_sù_ª•⁄£
(
sùe_¥iv©e
, 
msg
, 200, "OK", 
NULL
);

4604 i‡(!
found
) {

4605 c⁄° 
gch¨
 *
ˇŒid
 = 
	`sùmsg_föd_hódî
(
msg
, "Call-ID");

4606 
sù_£ssi⁄
 *
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_ch©_by_ˇŒid
(
sù
, 
ˇŒid
);

4607 i‡(!
£ssi⁄
) {

4608 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_im
(
sù
, 
‰om
);

4610 i‡(
£ssi⁄
) {

4611 
gch¨
 *
îrmsg
 = 
	`g_°rdup_¥ötf
(
	`_
("Receivedá message with unrecognized contents from %s"),

4612 
‰om
);

4613 
	`sùe_¥e£¡_îr
(
sùe_¥iv©e
, 
£ssi⁄
, 
îrmsg
);

4614 
	`g_‰ì
(
îrmsg
);

4617 
	`SIPE_DEBUG_INFO
("gŸ unknow¿mime-ty≥ '%s'", 
c⁄ã¡ty≥
);

4618 
	`£nd_sù_ª•⁄£
(
sùe_¥iv©e
, 
msg
, 415, "Unsuµ‹ãd medüÅy≥", 
NULL
);

4620 
	`g_‰ì
(
‰om
);

4621 
	}
}

4623 #ifde‡
HAVE_VV


4624 
	$sùe_övôe_mime_cb
(
gpoöãr
 
u£r_d©a
, c⁄° 
GSLi°
 *
fõlds
,

4625 c⁄° 
gch¨
 *
body
, 
SIPE_UNUSED_PARAMETER
 
gsize
 
Àngth
)

4627 c⁄° 
gch¨
 *
ty≥
 = 
	`sùe_utûs_«mevÆ_föd
(
fõlds
, "Content-Type");

4628 c⁄° 
gch¨
 *
cd
 = 
	`sùe_utûs_«mevÆ_föd
(
fõlds
, "Content-Disposition");

4630 i‡(!
	`g_°r_has_¥efix
(
ty≥
, "application/sdp"))

4633 i‡(
cd
 && !
	`°r°r
(cd, "ms-proxy-2007fallback")) {

4634 
sùmsg
 *
msg
 = 
u£r_d©a
;

4635 c⁄° 
gch¨
* 
msg_˘
 = 
	`sùmsg_föd_hódî
(
msg
, "Content-Type");

4637 i‡(
	`g_°r_has_¥efix
(
msg_˘
, "application/sdp")) {

4643 
	`sùmsg_ªmove_hódî_now
(
msg
, "Content-Type");

4644 
	`sùmsg_add_hódî_now
(
msg
, "C⁄ã¡-Ty≥", 
ty≥
);

4648 
	`g_‰ì
(
msg
->
body
);

4649 
msg
->
body
 = 
	`g_°∫dup
(body, 
Àngth
);

4651 
	}
}

4654 
	$¥o˚ss_öcomög_övôe
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

4655 
sùmsg
 *
msg
)

4657 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

4658 
gch¨
 *
body
;

4659 
gch¨
 *
√wTag
;

4660 c⁄° 
gch¨
 *
ﬁdHódî
;

4661 
gch¨
 *
√wHódî
;

4662 
gboﬁón
 
is_mu…ù¨ty
 = 
FALSE
;

4663 
gboﬁón
 
is_åiggîed
 = 
FALSE
;

4664 
gboﬁón
 
was_mu…ù¨ty
 = 
TRUE
;

4665 
gboﬁón
 
ju°_joöed
 = 
FALSE
;

4666 
gch¨
 *
‰om
;

4667 c⁄° 
gch¨
 *
ˇŒid
 = 
	`sùmsg_föd_hódî
(
msg
, "Call-ID");

4668 c⁄° 
gch¨
 *
ro°î_m™agî
 = 
	`sùmsg_föd_hódî
(
msg
, "Roster-Manager");

4669 c⁄° 
gch¨
 *
íd_poöts_hdr
 = 
	`sùmsg_föd_hódî
(
msg
, "EndPoints");

4670 c⁄° 
gch¨
 *
åig_övôe
 = 
	`sùmsg_föd_hódî
(
msg
, "TriggeredInvite");

4671 c⁄° 
gch¨
 *
c⁄ã¡_ty≥
 = 
	`sùmsg_föd_hódî
(
msg
, "Content-Type");

4672 
GSLi°
 *
íd_poöts
 = 
NULL
;

4673 *
tmp
 = 
NULL
;

4674 
sù_£ssi⁄
 *
£ssi⁄
;

4675 c⁄° 
gch¨
 *
ms_ãxt_f‹m©
;

4677 
	`SIPE_DEBUG_INFO
("¥o˚ss_öcomög_övôe: body:\n%s!", 
msg
->
body
 ? 
tmp
 = 
	`fix_√wlöes
(msg->body) : "");

4678 
	`g_‰ì
(
tmp
);

4680 #ifde‡
HAVE_VV


4681 i‡(
	`g_°r_has_¥efix
(
c⁄ã¡_ty≥
, "multipart/alternative")) {

4682 
	`sùe_mime_∑πs_f‹óch
(
c⁄ã¡_ty≥
, 
msg
->
body
, 
sùe_övôe_mime_cb
, msg);

4687 i‡(
	`g_°r_has_¥efix
(
c⁄ã¡_ty≥
, "application/ms-conf-invite+xml")) {

4688 
	`¥o˚ss_öcomög_övôe_c⁄f
(
sù
, 
msg
);

4692 #ifde‡
HAVE_VV


4694 i‡(
msg
->
body
 && 
	`°r°r
(msg->body, "m=audio")) {

4695 
	`sùe_medü_öcomög_övôe
(
sùe_¥iv©e
, 
msg
);

4701 i‡(
msg
->
body
 && !(
	`°r°r
(msg->body, "m=message") || strstr(msg->body, "m=x-ms-message"))) {

4702 
	`£nd_sù_ª•⁄£
(
sùe_¥iv©e
, 
msg
, 501, "NŸ im∂emíãd", 
NULL
);

4707 
	`SIPE_DEBUG_INFO_NOFORMAT
("Addingá TagÅoÅhe To Header on Invite Request...");

4708 
ﬁdHódî
 = 
	`sùmsg_föd_hódî
(
msg
, "To");

4709 
√wTag
 = 
	`gíèg
();

4710 
√wHódî
 = 
	`g_°rdup_¥ötf
("%s;èg=%s", 
ﬁdHódî
, 
√wTag
);

4711 
	`sùmsg_ªmove_hódî_now
(
msg
, "To");

4712 
	`sùmsg_add_hódî_now
(
msg
, "To", 
√wHódî
);

4713 
	`g_‰ì
(
√wHódî
);

4715 i‡(
íd_poöts_hdr
) {

4716 
íd_poöts
 = 
	`sùmsg_∑r£_ídpoöts_hódî
(
íd_poöts_hdr
);

4718 i‡(
	`g_¶i°_Àngth
(
íd_poöts
) > 2) {

4719 
is_mu…ù¨ty
 = 
TRUE
;

4722 i‡(
åig_övôe
 && !
	`g_°rˇ£cmp
(trig_invite, "TRUE")) {

4723 
is_åiggîed
 = 
TRUE
;

4724 
is_mu…ù¨ty
 = 
TRUE
;

4727 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_ch©_by_ˇŒid
(
sù
, 
ˇŒid
);

4729 i‡(
£ssi⁄
 && 
is_mu…ù¨ty
 && !session->is_multiparty) {

4730 
	`g_‰ì
(
£ssi⁄
->
wôh
);

4731 
£ssi⁄
->
wôh
 = 
NULL
;

4732 
was_mu…ù¨ty
 = 
FALSE
;

4733 
£ssi⁄
->
is_mu…ù¨ty
 = 
TRUE
;

4734 
£ssi⁄
->
ch©_id
 = 
	`ønd
();

4737 i‡(!
£ssi⁄
 && 
is_mu…ù¨ty
) {

4738 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_‹_add_ch©_by_ˇŒid
(
sù
, 
ˇŒid
);

4741 
‰om
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, "From"));

4742 i‡(!
£ssi⁄
) {

4743 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_‹_add_im
(
sù
, 
‰om
);

4746 i‡(
£ssi⁄
) {

4747 
	`g_‰ì
(
£ssi⁄
->
ˇŒid
);

4748 
£ssi⁄
->
ˇŒid
 = 
	`g_°rdup
(callid);

4750 
£ssi⁄
->
is_mu…ù¨ty
 = is_multiparty;

4751 i‡(
ro°î_m™agî
) {

4752 
£ssi⁄
->
ro°î_m™agî
 = 
	`g_°rdup
(roster_manager);

4756 i‡(
is_mu…ù¨ty
 && 
íd_poöts
) {

4757 
gch¨
 *
to
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, "To"));

4758 
GSLi°
 *
íåy
 = 
íd_poöts
;

4759 
íåy
) {

4760 
sù_dülog
 *
dülog
;

4761 
sùídpoöt
 *
íd_poöt
 = 
íåy
->
d©a
;

4762 
íåy
 =É¡ry->
√xt
;

4764 i‡(!
	`g_°rˇ£cmp
(
‰om
, 
íd_poöt
->
c⁄è˘
) ||

4765 !
	`g_°rˇ£cmp
(
to
, 
íd_poöt
->
c⁄è˘
))

4768 
dülog
 = 
	`sùe_dülog_föd
(
£ssi⁄
, 
íd_poöt
->
c⁄è˘
);

4769 i‡(
dülog
) {

4770 
	`g_‰ì
(
dülog
->
theúïid
);

4771 
dülog
->
theúïid
 = 
íd_poöt
->
ïid
;

4772 
íd_poöt
->
ïid
 = 
NULL
;

4774 
dülog
 = 
	`sùe_dülog_add
(
£ssi⁄
);

4776 
dülog
->
ˇŒid
 = 
	`g_°rdup
(
£ssi⁄
->callid);

4777 
dülog
->
wôh
 = 
íd_poöt
->
c⁄è˘
;

4778 
íd_poöt
->
c⁄è˘
 = 
NULL
;

4779 
dülog
->
theúïid
 = 
íd_poöt
->
ïid
;

4780 
íd_poöt
->
ïid
 = 
NULL
;

4782 
ju°_joöed
 = 
TRUE
;

4785 
	`sùe_övôe
(
sù
, 
£ssi⁄
, 
dülog
->
wôh
, 
NULL
, NULL, NULL, 
TRUE
);

4788 
	`g_‰ì
(
to
);

4791 i‡(
íd_poöts
) {

4792 
GSLi°
 *
íåy
 = 
íd_poöts
;

4793 
íåy
) {

4794 
sùídpoöt
 *
íd_poöt
 = 
íåy
->
d©a
;

4795 
íåy
 =É¡ry->
√xt
;

4796 
	`g_‰ì
(
íd_poöt
->
c⁄è˘
);

4797 
	`g_‰ì
(
íd_poöt
->
ïid
);

4798 
	`g_‰ì
(
íd_poöt
);

4800 
	`g_¶i°_‰ì
(
íd_poöts
);

4803 i‡(
£ssi⁄
) {

4804 
sù_dülog
 *
dülog
 = 
	`sùe_dülog_föd
(
£ssi⁄
, 
‰om
);

4805 i‡(
dülog
) {

4806 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_incoming_invite, sessionálready has dialog!");

4807 
	`sùe_dülog_∑r£_rouãs
(
dülog
, 
msg
, 
FALSE
);

4809 
dülog
 = 
	`sùe_dülog_add
(
£ssi⁄
);

4811 
dülog
->
ˇŒid
 = 
	`g_°rdup
(
£ssi⁄
->callid);

4812 
dülog
->
wôh
 = 
	`g_°rdup
(
‰om
);

4813 
	`sùe_dülog_∑r£
(
dülog
, 
msg
, 
FALSE
);

4815 i‡(!
dülog
->
ouπag
) {

4816 
dülog
->
ouπag
 = 
√wTag
;

4817 
√wTag
 = 
NULL
;

4820 
ju°_joöed
 = 
TRUE
;

4823 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_incoming_invite, failedÅo find or create IM session");

4825 
	`g_‰ì
(
√wTag
);

4827 i‡(
is_mu…ù¨ty
 && !
£ssi⁄
->
c⁄v
) {

4828 
gch¨
 *
ch©_tôÀ
 = 
	`sùe_ch©_gë_«me
(
ˇŒid
);

4829 
gch¨
 *
£lf
 = 
	`sù_uri_£lf
(
sù
);

4831 
£ssi⁄
->
c⁄v
 = 
	`£rv_gŸ_joöed_ch©
(
sù
->
gc
, sessi⁄->
ch©_id
, 
ch©_tôÀ
);

4832 
£ssi⁄
->
ch©_tôÀ
 = 
	`g_°rdup
(chat_title);

4833 
	`puΩÀ_c⁄v_ch©_£t_nick
(
	`PURPLE_CONV_CHAT
(
£ssi⁄
->
c⁄v
), 
£lf
);

4835 
	`puΩÀ_c⁄v_ch©_add_u£r
(
	`PURPLE_CONV_CHAT
(
£ssi⁄
->
c⁄v
),

4836 
£lf
, 
NULL
,

4837 
PURPLE_CBFLAGS_NONE
, 
FALSE
);

4838 
	`g_‰ì
(
ch©_tôÀ
);

4839 
	`g_‰ì
(
£lf
);

4842 i‡(
is_mu…ù¨ty
 && !
was_mu…ù¨ty
) {

4844 
	`puΩÀ_c⁄v_ch©_add_u£r
(
	`PURPLE_CONV_CHAT
(
£ssi⁄
->
c⁄v
),

4845 
	`sùe_dülog_fú°
(
£ssi⁄
)->
wôh
, 
NULL
,

4846 
PURPLE_CBFLAGS_NONE
, 
FALSE
);

4850 i‡(
ju°_joöed
 && 
£ssi⁄
->
c⁄v
) {

4851 
	`puΩÀ_c⁄v_ch©_add_u£r
(
	`PURPLE_CONV_CHAT
(
£ssi⁄
->
c⁄v
),

4852 
‰om
, 
NULL
,

4853 
PURPLE_CBFLAGS_NONE
, 
TRUE
);

4863 
ms_ãxt_f‹m©
 = 
	`sùmsg_föd_hódî
(
msg
, "ms-text-format");

4864 i‡(
is_mu…ù¨ty
 ||

4865 (
ms_ãxt_f‹m©
 && 
	`g_°r_has_¥efix
(ms_text_format, "text/x-msmsgsinvite")) )

4867 i‡(
ms_ãxt_f‹m©
) {

4868 i‡(
	`g_°r_has_¥efix
(
ms_ãxt_f‹m©
, "text/x-msmsgsinvite"))

4870 
gch¨
 *
tmp
 = 
	`sùmsg_föd_∑π_of_hódî
(
ms_ãxt_f‹m©
, "ms-body=", 
NULL
, NULL);

4871 i‡(
tmp
) {

4872 
gsize
 
Àn
;

4873 
gch¨
 *
body
 = (gch¨ *Ë
	`g_ba£64_decode
(
tmp
, &
Àn
);

4875 
GSLi°
 *
∑r£d_body
 = 
	`sùe_·_∑r£_msg_body
(
body
);

4877 
	`sùe_¥o˚ss_öcomög_x_msmsgsövôe
(
sùe_¥iv©e
, 
msg
, 
∑r£d_body
);

4878 
	`sùe_utûs_«mevÆ_‰ì
(
∑r£d_body
);

4879 
	`sùmsg_add_hódî
(
msg
, "Supported", "ms-text-format");

4881 
	`g_‰ì
(
tmp
);

4883 i‡(
	`g_°r_has_¥efix
(
ms_ãxt_f‹m©
, "text/plain") || g_str_has_prefix(ms_text_format, "text/html"))

4886 
gch¨
 *
html
 = 
	`gë_html_mesßge
(
ms_ãxt_f‹m©
, 
NULL
);

4887 i‡(
html
) {

4888 i‡(
is_mu…ù¨ty
) {

4889 
	`£rv_gŸ_ch©_ö
(
sù
->
gc
, 
£ssi⁄
->
ch©_id
, 
‰om
,

4890 
PURPLE_MESSAGE_RECV
, 
html
, 
	`time
(
NULL
));

4892 
	`£rv_gŸ_im
(
sù
->
gc
, 
‰om
, 
html
, 0, 
	`time
(
NULL
));

4894 
	`g_‰ì
(
html
);

4895 
	`sùmsg_add_hódî
(
msg
, "Supported", "ms-text-format");

4901 
	`g_‰ì
(
‰om
);

4903 
	`sùmsg_add_hódî
(
msg
, "Supported", "com.microsoft.rtc-multiparty");

4904 
	`sùmsg_add_hódî
(
msg
, "U£r-Agít", 
	`sùe_gë_u£øgít
(
sùe_¥iv©e
));

4905 
	`sùmsg_add_hódî
(
msg
, "Content-Type", "application/sdp");

4907 
body
 = 
	`g_°rdup_¥ötf
(

4914 "a˜c˚±-ty≥s:" 
SDP_ACCEPT_TYPES
 "\r\n",

4915 
	`sùe_backíd_√tw‹k_ù_addªss
(),

4916 
	`sùe_backíd_√tw‹k_ù_addªss
(),

4917 
sù
->
ocs2007
 ? "message" : "x-ms-message",

4918 
sùe_¥iv©e
->
£rvî_p‹t
,

4919 
sù
->
u£∫ame
);

4920 
	`£nd_sù_ª•⁄£
(
sùe_¥iv©e
, 
msg
, 200, "OK", 
body
);

4921 
	`g_‰ì
(
body
);

4922 
	}
}

4924 
	$¥o˚ss_öcomög_›ti⁄s
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

4925 
sùmsg
 *
msg
)

4927 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

4928 
gch¨
 *
body
;

4930 
	`sùmsg_add_hódî
(
msg
, "Allow", "INVITE, MESSAGE, INFO, SUBSCRIBE, OPTIONS, BYE, CANCEL, NOTIFY, ACK, REFER, BENOTIFY");

4931 
	`sùmsg_add_hódî
(
msg
, "U£r-Agít", 
	`sùe_gë_u£øgít
(
sùe_¥iv©e
));

4932 
	`sùmsg_add_hódî
(
msg
, "Content-Type", "application/sdp");

4934 
body
 = 
	`g_°rdup_¥ötf
(

4941 "a˜c˚±-ty≥s:" 
SDP_ACCEPT_TYPES
 "\r\n",

4942 
sù
->
ocs2007
 ? "message" : "x-ms-message",

4943 
sùe_¥iv©e
->
£rvî_p‹t
,

4944 
sù
->
u£∫ame
);

4945 
	`£nd_sù_ª•⁄£
(
sùe_¥iv©e
, 
msg
, 200, "OK", 
body
);

4946 
	`g_‰ì
(
body
);

4947 
	}
}

4950 
	$sùe_gë_auth_scheme_«me
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

4952 c⁄° *
ªs
 = "NTLM";

4953 #ifde‡
HAVE_LIBKRB5


4954 i‡(
	`SIPE_CORE_PUBLIC_FLAG_IS
(
KRB5
)) {

4955 
ªs
 = "Kerberos";

4958 (Ë
sùe_¥iv©e
;

4960  
ªs
;

4961 
	}
}

4963 
sùe_c⁄√˘i⁄_˛ónup
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
);

4965 
gboﬁón
 
	$¥o˚ss_ªgi°î_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

4966 
sùmsg
 *
msg
,

4967 
SIPE_UNUSED_PARAMETER
 
å™ß˘i⁄
 *
å™s
)

4969 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

4970 
gch¨
 *
tmp
;

4971 c⁄° 
gch¨
 *
expúes_hódî
;

4972 
expúes
, 
i
;

4973 
GSLi°
 *
hdr
 = 
msg
->
hódîs
;

4974 
sù«mevÆ
 *
ñem
;

4976 
expúes_hódî
 = 
	`sùmsg_föd_hódî
(
msg
, "Expires");

4977 
expúes
 = 
expúes_hódî
 !
NULL
 ? 
	`°πﬁ
(expires_header, NULL, 10) : 0;

4978 
	`SIPE_DEBUG_INFO
("¥o˚ss_ªgi°î_ª•⁄£: gŸÑe•⁄£ÅÿREGISTER;Éxpúe†%d", 
expúes
);

4980 
msg
->
ª•⁄£
) {

4982 i‡(
expúes
 == 0) {

4983 
sù
->
ªgi°î°©us
 = 0;

4985 c⁄° 
gch¨
 *
c⁄è˘_hdr
;

4986 
gch¨
 *
gruu
 = 
NULL
;

4987 
gch¨
 *
ïid
;

4988 
gch¨
 *
uuid
;

4989 
gch¨
 *
timeout
;

4990 c⁄° 
gch¨
 *
£rvî_hdr
 = 
	`sùmsg_föd_hódî
(
msg
, "Server");

4991 c⁄° *
auth_scheme
;

4993 i‡(!
sù
->
ªªgi°î_£t
) {

4994 
gch¨
 *
a˘i⁄_«me
 = 
	`g_°rdup_¥ötf
("<%s>", "registration");

4995 
	`sùe_scheduÀ_£c⁄ds
(
sùe_¥iv©e
,

4996 
a˘i⁄_«me
,

4997 
NULL
,

4998 
expúes
,

4999 
do_ªgi°î_cb
,

5000 
NULL
);

5001 
	`g_‰ì
(
a˘i⁄_«me
);

5002 
sù
->
ªªgi°î_£t
 = 
TRUE
;

5005 
sù
->
ªgi°î°©us
 = 3;

5007 i‡(
£rvî_hdr
 && !
sùe_¥iv©e
->
£rvî_vîsi⁄
) {

5008 
sùe_¥iv©e
->
£rvî_vîsi⁄
 = 
	`g_°rdup
(
£rvî_hdr
);

5009 
	`g_‰ì
(
sùe_¥iv©e
->
u£øgít
);

5010 
sùe_¥iv©e
->
u£øgít
 = 
NULL
;

5013 
auth_scheme
 = 
	`sùe_gë_auth_scheme_«me
(
sùe_¥iv©e
);

5014 
tmp
 = 
	`sùmsg_föd_auth_hódî
(
msg
, 
auth_scheme
);

5016 i‡(
tmp
) {

5017 
	`SIPE_DEBUG_INFO
("¥o˚ss_ªgi°î_ª•⁄£ - Auth hódî: %s", 
tmp
);

5018 
	`fûl_auth
(
tmp
, &
sù
->
ªgi°ør
);

5021 i‡(!
sù
->
ªauthítiˇã_£t
) {

5022 
gch¨
 *
a˘i⁄_«me
 = 
	`g_°rdup_¥ötf
("<%s>", "+reauthentication");

5023 
guöt
 
ªauth_timeout
;

5024 i‡(
sù
->
ªgi°ør
.
ty≥
 =
AUTH_TYPE_KERBEROS
 && sù->ªgi°ør.
expúes
 > 0) {

5026 
ªauth_timeout
 = 
sù
->
ªgi°ør
.
expúes
 - 300;

5030 
ªauth_timeout
 = (8 * 3600) - 300;

5032 
	`sùe_scheduÀ_£c⁄ds
(
sùe_¥iv©e
,

5033 
a˘i⁄_«me
,

5034 
NULL
,

5035 
ªauth_timeout
,

5036 
do_ªauthítiˇã_cb
,

5037 
NULL
);

5038 
	`g_‰ì
(
a˘i⁄_«me
);

5039 
sù
->
ªauthítiˇã_£t
 = 
TRUE
;

5042 
	`puΩÀ_c⁄√˘i⁄_£t_°©e
(
sù
->
gc
, 
PURPLE_CONNECTED
);

5044 
ïid
 = 
	`gë_ïid
(
sù
);

5045 
uuid
 = 
	`gíî©eUUID‰omEPID
(
ïid
);

5046 
	`g_‰ì
(
ïid
);

5050 
i
 = 0; (
c⁄è˘_hdr
 = 
	`sùmsg_föd_hódî_ö°™˚
 (
msg
, "Contact", i)); i++) {

5051 
gch¨
 * 
vÆid_c⁄è˘
 = 
	`sùmsg_föd_∑π_of_hódî
 (
c⁄è˘_hdr
, 
uuid
, 
NULL
, NULL);

5052 i‡(
vÆid_c⁄è˘
) {

5053 
gruu
 = 
	`sùmsg_föd_∑π_of_hódî
(
c⁄è˘_hdr
, "gruu=\"", "\"", 
NULL
);

5055 
	`g_‰ì
(
vÆid_c⁄è˘
);

5061 
	`g_‰ì
(
uuid
);

5063 
	`g_‰ì
(
sù
->
c⁄è˘
);

5064 if(
gruu
) {

5065 
sù
->
c⁄è˘
 = 
	`g_°rdup_¥ötf
("<%s>", 
gruu
);

5066 
	`g_‰ì
(
gruu
);

5069 
	`sù_å™•‹t_deÁu…_c⁄è˘
(
sùe_¥iv©e
);

5071 
sù
->
ocs2007
 = 
FALSE
;

5072 
sù
->
b©ched_suµ‹t
 = 
FALSE
;

5074 
hdr
)

5076 
ñem
 = 
hdr
->
d©a
;

5077 i‡(
	`sùe_°rˇ£_equÆ
(
ñem
->
«me
, "Supported")) {

5078 i‡(
	`sùe_°rˇ£_equÆ
(
ñem
->
vÆue
, "msrtc-event-categories")) {

5080 
sù
->
ocs2007
 = 
TRUE
;

5081 
	`SIPE_DEBUG_INFO
("Suµ‹ãd: %†(ödiˇã†OCS2007+)", 
ñem
->
vÆue
);

5083 i‡(
	`sùe_°rˇ£_equÆ
(
ñem
->
vÆue
, "adhoclist")) {

5084 
sù
->
b©ched_suµ‹t
 = 
TRUE
;

5085 
	`SIPE_DEBUG_INFO
("Suµ‹ãd: %s", 
ñem
->
vÆue
);

5088 i‡(
	`sùe_°rˇ£_equÆ
(
ñem
->
«me
, "Allow-Events")){

5089 
gch¨
 **
ˇps
 = 
	`g_°r•lô
(
ñem
->
vÆue
,",",0);

5090 
i
 = 0;

5091 
ˇps
[
i
]) {

5092 
sù
->
Ælow_evíts
 = 
	`g_¶i°_≠≥nd
(sù->Ælow_evíts, 
	`g_°rdup
(
ˇps
[
i
]));

5093 
	`SIPE_DEBUG_INFO
("AŒow-Evíts: %s", 
ˇps
[
i
]);

5094 
i
++;

5096 
	`g_°r‰ìv
(
ˇps
);

5098 
hdr
 = 
	`g_¶i°_√xt
(hdr);

5102 
	`puΩÀ_c⁄vîßti⁄_f‹óch
(
sùe_ªjoö_ch©
);

5105 i‡(!
sù
->
subs¸ibed
) {

5107 i‡(
	`g_¶i°_föd_cu°om
(
sù
->
Ælow_evíts
, "vnd-microsoft-roaming-contacts",

5108 (
GCom∑ªFunc
)
g_ascii_°rˇ£cmp
)) {

5109 
	`sùe_subs¸ibe_rﬂmög_c⁄è˘s
(
sùe_¥iv©e
);

5118 i‡(
sù
->
ocs2007
)

5120 i‡(
	`g_¶i°_föd_cu°om
(
sù
->
Ælow_evíts
, "vnd-microsoft-roaming-self",

5121 (
GCom∑ªFunc
)
g_ascii_°rˇ£cmp
)) {

5122 
	`sùe_subs¸ibe_rﬂmög_£lf
(
sùe_¥iv©e
);

5124 i‡(
	`g_¶i°_föd_cu°om
(
sù
->
Ælow_evíts
, "vnd-microsoft-provisioning-v2",

5125 (
GCom∑ªFunc
)
g_ascii_°rˇ£cmp
)) {

5126 
	`sùe_subs¸ibe_rﬂmög_¥ovisi⁄ög_v2
(
sùe_¥iv©e
);

5134 i‡(
	`g_¶i°_föd_cu°om
(
sù
->
Ælow_evíts
, "vnd-microsoft-roaming-ACL",

5135 (
GCom∑ªFunc
)
g_ascii_°rˇ£cmp
)) {

5136 
	`sùe_subs¸ibe_rﬂmög_a˛
(
sùe_¥iv©e
);

5138 i‡(
	`g_¶i°_föd_cu°om
(
sù
->
Ælow_evíts
, "vnd-microsoft-provisioning",

5139 (
GCom∑ªFunc
)
g_ascii_°rˇ£cmp
)) {

5140 
	`sùe_subs¸ibe_rﬂmög_¥ovisi⁄ög
(
sùe_¥iv©e
);

5142 i‡(
	`g_¶i°_föd_cu°om
(
sù
->
Ælow_evíts
, "presence.wpending",

5143 (
GCom∑ªFunc
)
g_ascii_°rˇ£cmp
)) {

5144 
	`sùe_subs¸ibe_¥e£n˚_w≥ndög
(
sùe_¥iv©e
,

5145 
msg
);

5161 
sù
->
subs¸ibed
 = 
TRUE
;

5164 
timeout
 = 
	`sùmsg_föd_∑π_of_hódî
(
	`sùmsg_föd_hódî
(
msg
, "ms-keep-alive"),

5165 "timeout=", ";", 
NULL
);

5166 i‡(
timeout
 !
NULL
) {

5167 
	`ssˇnf
(
timeout
, "%u", &
sùe_¥iv©e
->
public
.
kì∑live_timeout
);

5168 
	`SIPE_DEBUG_INFO
("server determined keepáliveÅimeout is %u seconds",

5169 
sùe_¥iv©e
->
public
.
kì∑live_timeout
);

5170 
	`g_‰ì
(
timeout
);

5173 
	`SIPE_DEBUG_INFO
("¥o˚ss_ªgi°î_ª•⁄£ - gŸ 200,Ñemovög CSeq: %d", 
sù
->
c£q
);

5178 
gch¨
 *
ªdúe˘
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, "Contact"));

5180 i‡(
ªdúe˘
 && (
	`g_°∫ˇ£cmp
("sip:",Ñedirect, 4) == 0)) {

5181 
gch¨
 **
∑πs
 = 
	`g_°r•lô
(
ªdúe˘
 + 4, ";", 0);

5182 
gch¨
 **
tmp
;

5183 
gch¨
 *
ho°«me
;

5184 
p‹t
 = 0;

5185 
guöt
 
å™•‹t
 = 
SIPE_TRANSPORT_TLS
;

5186 
i
 = 1;

5188 
tmp
 = 
	`g_°r•lô
(
∑πs
[0], ":", 0);

5189 
ho°«me
 = 
	`g_°rdup
(
tmp
[0]);

5190 i‡(
tmp
[1]Ë
p‹t
 = 
	`°πoul
—mp[1], 
NULL
, 10);

5191 
	`g_°r‰ìv
(
tmp
);

5193 
∑πs
[
i
]) {

5194 
tmp
 = 
	`g_°r•lô
(
∑πs
[
i
], "=", 0);

5195 i‡(
tmp
[1]) {

5196 i‡(
	`g_°rˇ£cmp
("å™•‹t", 
tmp
[0]) == 0) {

5197 i‡(
	`g_°rˇ£cmp
("t˝", 
tmp
[1]) == 0) {

5198 
å™•‹t
 = 
SIPE_TRANSPORT_TCP
;

5202 
	`g_°r‰ìv
(
tmp
);

5203 
i
++;

5205 
	`g_°r‰ìv
(
∑πs
);

5208 
	`sùe_c⁄√˘i⁄_˛ónup
(
sùe_¥iv©e
);

5211 
	`sùe_£rvî_ªgi°î
(
sùe_¥iv©e
, 
å™•‹t
, 
ho°«me
, 
p‹t
);

5212 
	`SIPE_DEBUG_INFO
("process_register_response:ÑedirectedÅo host %sÖort %dÅransport %d",

5213 
ho°«me
, 
p‹t
, 
å™•‹t
);

5215 
	`g_‰ì
(
ªdúe˘
);

5219 i‡(
sù
->
ªgi°î°©us
 != 2) {

5220 c⁄° *
auth_scheme
;

5221 
	`SIPE_DEBUG_INFO
("REGISTERÑërõ†%d", 
sù
->
ªgi°ør
.
ªåõs
);

5222 i‡(
sù
->
ªgi°ør
.
ªåõs
 > 3) {

5223 
	`sùe_backíd_c⁄√˘i⁄_îr‹
(
SIPE_CORE_PUBLIC
,

5224 
SIPE_CONNECTION_ERROR_AUTHENTICATION_FAILED
,

5225 
	`_
("Authentication failed"));

5226  
TRUE
;

5229 
auth_scheme
 = 
	`sùe_gë_auth_scheme_«me
(
sùe_¥iv©e
);

5230 
tmp
 = 
	`sùmsg_föd_auth_hódî
(
msg
, 
auth_scheme
);

5232 
	`SIPE_DEBUG_INFO
("¥o˚ss_ªgi°î_ª•⁄£ - Auth hódî: %s", 
tmp
 ?Åmp : "");

5233 i‡(!
tmp
) {

5234 *
tmp2
 = 
	`g_°rc⁄ˇt
(
	`_
("Incom∑tibÀáuthítiˇti⁄ schemêcho£n"), ": ", 
auth_scheme
, 
NULL
);

5235 
	`sùe_backíd_c⁄√˘i⁄_îr‹
(
SIPE_CORE_PUBLIC
,

5236 
SIPE_CONNECTION_ERROR_AUTHENTICATION_IMPOSSIBLE
,

5237 
tmp2
);

5238 
	`g_‰ì
(
tmp2
);

5239  
TRUE
;

5241 
	`fûl_auth
(
tmp
, &
sù
->
ªgi°ør
);

5242 
sù
->
ªgi°î°©us
 = 2;

5243 i‡(
sù
->
accou¡
->
disc⁄√˘ög
) {

5244 
	`do_ªgi°î_exp
(
sù
, 0);

5246 
	`do_ªgi°î
(
sù
);

5252 c⁄° 
gch¨
 *
dügno°ics
 = 
	`sùmsg_föd_hódî
(
msg
, "Warning");

5253 
gch¨
 **
ªas⁄
 = 
NULL
;

5254 
gch¨
 *
w¨nög
;

5255 i‡(
dügno°ics
 !
NULL
) {

5259 
ªas⁄
 = 
	`g_°r•lô
(
dügno°ics
, "\"", 0);

5261 
w¨nög
 = 
	`g_°rdup_¥ötf
(
	`_
("You have beenÑejected byÅhe server: %s"),

5262 (
ªas⁄
 &&Ñós⁄[1]Ë?Ñós⁄[1] : 
	`_
("noÑeason given"));

5263 
	`g_°r‰ìv
(
ªas⁄
);

5265 
	`sùe_backíd_c⁄√˘i⁄_îr‹
(
SIPE_CORE_PUBLIC
,

5266 
SIPE_CONNECTION_ERROR_INVALID_SETTINGS
,

5267 
w¨nög
);

5268 
	`g_‰ì
(
w¨nög
);

5269  
TRUE
;

5274 c⁄° 
gch¨
 *
dügno°ics
 = 
	`sùmsg_föd_hódî
(
msg
, "ms-diagnostics");

5275 
gch¨
 *
ªas⁄
 = 
NULL
;

5276 
gch¨
 *
w¨nög
;

5277 i‡(
dügno°ics
 !
NULL
) {

5278 
ªas⁄
 = 
	`sùmsg_föd_∑π_of_hódî
(
dügno°ics
, "ªas⁄=\"", "\"", 
NULL
);

5280 
w¨nög
 = 
	`g_°rdup_¥ötf
(
	`_
("Not found: %s. Please contact your Administrator"),

5281 
dügno°ics
 ? (
ªas⁄
 ?Ñós⁄ : 
	`_
("noÑeason given")) :

5282 
	`_
("SIP isÉitherÇotÉnabled forÅhe destination URI or it doesÇotÉxist"));

5283 
	`g_‰ì
(
ªas⁄
);

5285 
	`sùe_backíd_c⁄√˘i⁄_îr‹
(
SIPE_CORE_PUBLIC
,

5286 
SIPE_CONNECTION_ERROR_INVALID_USERNAME
,

5287 
w¨nög
);

5288 
	`g_‰ì
(
w¨nög
);

5289  
TRUE
;

5295 c⁄° 
gch¨
 *
dügno°ics
 = 
	`sùmsg_föd_hódî
(
msg
, "ms-diagnostics");

5296 
gch¨
 *
ªas⁄
 = 
NULL
;

5297 
gch¨
 *
w¨nög
;

5298 i‡(
dügno°ics
 !
NULL
) {

5299 
ªas⁄
 = 
	`sùmsg_föd_∑π_of_hódî
(
dügno°ics
, "ªas⁄=\"", "\"", 
NULL
);

5301 
w¨nög
 = 
	`g_°rdup_¥ötf
(
	`_
("Sîvi˚ u«vaûabÀ: %s"), 
ªas⁄
 ?Ñeason : _("noÑeason given"));

5302 
	`g_‰ì
(
ªas⁄
);

5304 
	`sùe_backíd_c⁄√˘i⁄_îr‹
(
SIPE_CORE_PUBLIC
,

5305 
SIPE_CONNECTION_ERROR_NETWORK
,

5306 
w¨nög
);

5307 
	`g_‰ì
(
w¨nög
);

5308  
TRUE
;

5312  
TRUE
;

5313 
	}
}

5321 
	$sùe_gë_a˘_avaû_by_°©us_2005
(c⁄° *
°©us
,

5322 *
a˘ivôy
,

5323 *
avaûabûôy
)

5325 
avaû
 = 300;

5326 
a˘
 = 400;

5328 i‡(
	`sùe_°ªquÆ
(
°©us
, 
SIPE_STATUS_ID_AWAY
)) {

5329 
a˘
 = 100;

5332 } i‡(
	`sùe_°ªquÆ
(
°©us
, 
SIPE_STATUS_ID_BRB
)) {

5333 
a˘
 = 300;

5334 } i‡(
	`sùe_°ªquÆ
(
°©us
, 
SIPE_STATUS_ID_AVAILABLE
)) {

5335 
a˘
 = 400;

5338 } i‡(
	`sùe_°ªquÆ
(
°©us
, 
SIPE_STATUS_ID_BUSY
) ||

5339 
	`sùe_°ªquÆ
(
°©us
, 
SIPE_STATUS_ID_DND
)) {

5340 
a˘
 = 600;

5341 } i‡(
	`sùe_°ªquÆ
(
°©us
, 
SIPE_STATUS_ID_INVISIBLE
) ||

5342 
	`sùe_°ªquÆ
(
°©us
, 
SIPE_STATUS_ID_OFFLINE
)) {

5343 
avaû
 = 0;

5344 
a˘
 = 100;

5346 
a˘
 = 400;

5349 i‡(
a˘ivôy
Ë*a˘ivôy = 
a˘
;

5350 i‡(
avaûabûôy
Ë*avaûabûôy = 
avaû
;

5351 
	}
}

5360 
	$sùe_gë_°©us_by_a˘_avaû_2005
(c⁄° 
a˘ivôy
,

5361 c⁄° 
avaûablôy
,

5362 **
a˘ivôy_desc
)

5364 c⁄° *
°©us_id
 = 
NULL
;

5365 c⁄° *
a˘
 = 
NULL
;

5367 i‡(
a˘ivôy
 < 150) {

5368 
°©us_id
 = 
SIPE_STATUS_ID_AWAY
;

5369 } i‡(
a˘ivôy
 < 200) {

5371 
°©us_id
 = 
SIPE_STATUS_ID_AWAY
;

5372 
a˘
 = 
	`SIPE_ACTIVITY_I18N
(
SIPE_ACTIVITY_LUNCH
);

5373 } i‡(
a˘ivôy
 < 300) {

5375 
°©us_id
 = 
SIPE_STATUS_ID_AWAY
;

5376 
a˘
 = 
	`SIPE_ACTIVITY_I18N
(
SIPE_ACTIVITY_INACTIVE
);

5377 } i‡(
a˘ivôy
 < 400) {

5378 
°©us_id
 = 
SIPE_STATUS_ID_BRB
;

5379 } i‡(
a˘ivôy
 < 500) {

5380 
°©us_id
 = 
SIPE_STATUS_ID_AVAILABLE
;

5381 } i‡(
a˘ivôy
 < 600) {

5383 
°©us_id
 = 
SIPE_STATUS_ID_BUSY
;

5384 
a˘
 = 
	`SIPE_ACTIVITY_I18N
(
SIPE_ACTIVITY_ON_PHONE
);

5385 } i‡(
a˘ivôy
 < 700) {

5386 
°©us_id
 = 
SIPE_STATUS_ID_BUSY
;

5387 } i‡(
a˘ivôy
 < 800) {

5388 
°©us_id
 = 
SIPE_STATUS_ID_AWAY
;

5390 
°©us_id
 = 
SIPE_STATUS_ID_AVAILABLE
;

5393 i‡(
avaûablôy
 < 100)

5394 
°©us_id
 = 
SIPE_STATUS_ID_OFFLINE
;

5396 i‡(
a˘ivôy_desc
 && 
a˘
) {

5397 
	`g_‰ì
(*
a˘ivôy_desc
);

5398 *
a˘ivôy_desc
 = 
	`g_°rdup
(
a˘
);

5401  
°©us_id
;

5402 
	}
}

5408 
	$sùe_gë_°©us_by_avaûabûôy
(
avaû
,

5409 ** 
a˘ivôy_desc
)

5411 c⁄° *
°©us
;

5412 c⁄° *
a˘
 = 
NULL
;

5414 i‡(
avaû
 < 3000) {

5415 
°©us
 = 
SIPE_STATUS_ID_OFFLINE
;

5416 } i‡(
avaû
 < 4500) {

5417 
°©us
 = 
SIPE_STATUS_ID_AVAILABLE
;

5418 } i‡(
avaû
 < 6000) {

5420 
°©us
 = 
SIPE_STATUS_ID_AVAILABLE
;

5421 
a˘
 = 
	`SIPE_ACTIVITY_I18N
(
SIPE_ACTIVITY_INACTIVE
);

5422 } i‡(
avaû
 < 7500) {

5423 
°©us
 = 
SIPE_STATUS_ID_BUSY
;

5424 } i‡(
avaû
 < 9000) {

5426 
°©us
 = 
SIPE_STATUS_ID_BUSY
;

5427 
a˘
 = 
	`SIPE_ACTIVITY_I18N
(
SIPE_ACTIVITY_BUSYIDLE
);

5428 } i‡(
avaû
 < 12000) {

5429 
°©us
 = 
SIPE_STATUS_ID_DND
;

5430 } i‡(
avaû
 < 15000) {

5431 
°©us
 = 
SIPE_STATUS_ID_BRB
;

5432 } i‡(
avaû
 < 18000) {

5433 
°©us
 = 
SIPE_STATUS_ID_AWAY
;

5435 
°©us
 = 
SIPE_STATUS_ID_OFFLINE
;

5438 i‡(
a˘ivôy_desc
 && 
a˘
) {

5439 
	`g_‰ì
(*
a˘ivôy_desc
);

5440 *
a˘ivôy_desc
 = 
	`g_°rdup
(
a˘
);

5443  
°©us
;

5444 
	}
}

5453 
	$sùe_gë_avaûabûôy_by_°©us
(c⁄° * 
sùe_°©us_id
, ** 
a˘ivôy_tokí
)

5455 
avaûabûôy
;

5456 
sùe_a˘ivôy
 
a˘ivôy
 = 
SIPE_ACTIVITY_UNSET
;

5458 i‡(
	`sùe_°ªquÆ
(
sùe_°©us_id
, 
SIPE_STATUS_ID_AWAY
)) {

5459 
avaûabûôy
 = 15500;

5460 i‡(!
a˘ivôy_tokí
 || !(*activity_token)) {

5461 
a˘ivôy
 = 
SIPE_ACTIVITY_AWAY
;

5463 } i‡(
	`sùe_°ªquÆ
(
sùe_°©us_id
, 
SIPE_STATUS_ID_BRB
)) {

5464 
avaûabûôy
 = 12500;

5465 
a˘ivôy
 = 
SIPE_ACTIVITY_BRB
;

5466 } i‡(
	`sùe_°ªquÆ
(
sùe_°©us_id
, 
SIPE_STATUS_ID_DND
)) {

5467 
avaûabûôy
 = 9500;

5468 
a˘ivôy
 = 
SIPE_ACTIVITY_DND
;

5469 } i‡(
	`sùe_°ªquÆ
(
sùe_°©us_id
, 
SIPE_STATUS_ID_BUSY
)) {

5470 
avaûabûôy
 = 6500;

5471 i‡(!
a˘ivôy_tokí
 || !(*activity_token)) {

5472 
a˘ivôy
 = 
SIPE_ACTIVITY_BUSY
;

5474 } i‡(
	`sùe_°ªquÆ
(
sùe_°©us_id
, 
SIPE_STATUS_ID_AVAILABLE
)) {

5475 
avaûabûôy
 = 3500;

5476 
a˘ivôy
 = 
SIPE_ACTIVITY_ONLINE
;

5477 } i‡(
	`sùe_°ªquÆ
(
sùe_°©us_id
, 
SIPE_STATUS_ID_UNKNOWN
)) {

5478 
avaûabûôy
 = 0;

5481 
avaûabûôy
 = 18500;

5482 
a˘ivôy
 = 
SIPE_ACTIVITY_OFFLINE
;

5485 i‡(
a˘ivôy_tokí
) {

5486 *
a˘ivôy_tokí
 = 
	`g_°rdup
(
sùe_a˘ivôy_m≠
[
a˘ivôy
].
tokí
);

5488  
avaûabûôy
;

5489 
	}
}

5491 
	$¥o˚ss_öcomög_nŸify_æmi
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

5492 c⁄° 
gch¨
 *
d©a
, 
Àn
)

5494 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

5495 c⁄° *
uri
;

5496 
sùe_xml
 *
xn_ˇãg‹õs
;

5497 c⁄° 
sùe_xml
 *
xn_ˇãg‹y
;

5498 c⁄° *
°©us
 = 
NULL
;

5499 
gboﬁón
 
do_upd©e_°©us
 = 
FALSE
;

5500 
gboﬁón
 
has_nŸe_˛ó√d
 = 
FALSE
;

5501 
gboﬁón
 
has_‰ì_busy_˛ó√d
 = 
FALSE
;

5503 
xn_ˇãg‹õs
 = 
	`sùe_xml_∑r£
(
d©a
, 
Àn
);

5504 
uri
 = 
	`sùe_xml_©åibuã
(
xn_ˇãg‹õs
, "uri");

5506 
xn_ˇãg‹y
 = 
	`sùe_xml_chûd
(
xn_ˇãg‹õs
, "category");

5507 
xn_ˇãg‹y
 ;

5508 
xn_ˇãg‹y
 = 
	`sùe_xml_twö
(xn_category) )

5510 c⁄° 
sùe_xml
 *
xn_node
;

5511 c⁄° *
tmp
;

5512 c⁄° *
©åV¨
 = 
	`sùe_xml_©åibuã
(
xn_ˇãg‹y
, "name");

5513 
time_t
 
publish_time
 = (
tmp
 = 
	`sùe_xml_©åibuã
(
xn_ˇãg‹y
, "publishTime")) ?

5514 
	`sùe_utûs_°r_to_time
(
tmp
) : 0;

5517 i‡(
	`sùe_°ªquÆ
(
©åV¨
, "contactCard"))

5519 c⁄° 
sùe_xml
 *
ˇrd
 = 
	`sùe_xml_chûd
(
xn_ˇãg‹y
, "contactCard");

5521 i‡(
ˇrd
) {

5522 c⁄° 
sùe_xml
 *
node
;

5524 
node
 = 
	`sùe_xml_chûd
(
ˇrd
, "identity");

5525 i‡(
node
) {

5526 * 
di•œy_«me
 = 
	`sùe_xml_d©a
(

5527 
	`sùe_xml_chûd
(
node
, "name/displayName"));

5528 * 
emaû
 = 
	`sùe_xml_d©a
(

5529 
	`sùe_xml_chûd
(
node
, "email"));

5531 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
ALIAS_PROP
, 
di•œy_«me
);

5532 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
EMAIL_PROP
, 
emaû
);

5534 
	`g_‰ì
(
di•œy_«me
);

5535 
	`g_‰ì
(
emaû
);

5538 
node
 = 
	`sùe_xml_chûd
(
ˇrd
, "company");

5539 i‡(
node
) {

5540 * 
com∑ny
 = 
	`sùe_xml_d©a
(
node
);

5541 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
COMPANY_PROP
, 
com∑ny
);

5542 
	`g_‰ì
(
com∑ny
);

5545 
node
 = 
	`sùe_xml_chûd
(
ˇrd
, "department");

5546 i‡(
node
) {

5547 * 
dï¨tmít
 = 
	`sùe_xml_d©a
(
node
);

5548 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
DEPARTMENT_PROP
, 
dï¨tmít
);

5549 
	`g_‰ì
(
dï¨tmít
);

5552 
node
 = 
	`sùe_xml_chûd
(
ˇrd
, "title");

5553 i‡(
node
) {

5554 * 
tôÀ
 = 
	`sùe_xml_d©a
(
node
);

5555 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
TITLE_PROP
, 
tôÀ
);

5556 
	`g_‰ì
(
tôÀ
);

5559 
node
 = 
	`sùe_xml_chûd
(
ˇrd
, "office");

5560 i‡(
node
) {

5561 * 
offi˚
 = 
	`sùe_xml_d©a
(
node
);

5562 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
OFFICE_PROP
, 
offi˚
);

5563 
	`g_‰ì
(
offi˚
);

5566 
node
 = 
	`sùe_xml_chûd
(
ˇrd
, "url");

5567 i‡(
node
) {

5568 * 
sôe
 = 
	`sùe_xml_d©a
(
node
);

5569 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
SITE_PROP
, 
sôe
);

5570 
	`g_‰ì
(
sôe
);

5573 
node
 = 
	`sùe_xml_chûd
(
ˇrd
, "phone");

5574 
node
;

5575 
node
 = 
	`sùe_xml_twö
(node))

5577 c⁄° *
ph⁄e_ty≥
 = 
	`sùe_xml_©åibuã
(
node
, "type");

5578 * 
ph⁄e
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "uri"));

5579 * 
ph⁄e_di•œy_°rög
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "displayString"));

5581 
	`sùe_upd©e_u£r_ph⁄e
(
sùe_¥iv©e
, 
uri
, 
ph⁄e_ty≥
, 
ph⁄e
, 
ph⁄e_di•œy_°rög
);

5583 
	`g_‰ì
(
ph⁄e
);

5584 
	`g_‰ì
(
ph⁄e_di•œy_°rög
);

5587 
node
 = 
	`sùe_xml_chûd
(
ˇrd
, "address");

5588 
node
;

5589 
node
 = 
	`sùe_xml_twö
(node))

5591 i‡(
	`sùe_°ªquÆ
(
	`sùe_xml_©åibuã
(
node
, "type"), "work")) {

5592 * 
°ªë
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "street"));

5593 * 
côy
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "city"));

5594 * 
°©e
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "state"));

5595 * 
zùcode
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "zipcode"));

5596 * 
cou¡ry_code
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
node
, "countryCode"));

5598 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
ADDRESS_STREET_PROP
, 
°ªë
);

5599 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
ADDRESS_CITY_PROP
, 
côy
);

5600 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
ADDRESS_STATE_PROP
, 
°©e
);

5601 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
ADDRESS_ZIPCODE_PROP
, 
zùcode
);

5602 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
ADDRESS_COUNTRYCODE_PROP
, 
cou¡ry_code
);

5604 
	`g_‰ì
(
°ªë
);

5605 
	`g_‰ì
(
côy
);

5606 
	`g_‰ì
(
°©e
);

5607 
	`g_‰ì
(
zùcode
);

5608 
	`g_‰ì
(
cou¡ry_code
);

5616 i‡(
	`sùe_°ªquÆ
(
©åV¨
, "note"))

5618 i‡(
uri
) {

5619 
sùe_buddy
 *
sbuddy
 = 
	`g_hash_èbÀ_lookup
(
SIP_TO_CORE_PRIVATE
->
buddõs
, 
uri
);

5621 i‡(!
has_nŸe_˛ó√d
) {

5622 
has_nŸe_˛ó√d
 = 
TRUE
;

5624 
	`g_‰ì
(
sbuddy
->
nŸe
);

5625 
sbuddy
->
nŸe
 = 
NULL
;

5626 
sbuddy
->
is_oof_nŸe
 = 
FALSE
;

5627 
sbuddy
->
nŸe_sö˚
 = 
publish_time
;

5629 
do_upd©e_°©us
 = 
TRUE
;

5631 i‡(
sbuddy
 && (
publish_time
 >sbuddy->
nŸe_sö˚
)) {

5635 
	`g_‰ì
(
sbuddy
->
nŸe
);

5636 
sbuddy
->
nŸe
 = 
NULL
;

5637 
sbuddy
->
is_oof_nŸe
 = 
FALSE
;

5638 
sbuddy
->
nŸe_sö˚
 = 
publish_time
;

5640 
xn_node
 = 
	`sùe_xml_chûd
(
xn_ˇãg‹y
, "note/body");

5641 i‡(
xn_node
) {

5642 *
tmp
;

5643 
sbuddy
->
nŸe
 = 
	`g_m¨kup_esˇ≥_ãxt
((
tmp
 = 
	`sùe_xml_d©a
(
xn_node
)), -1);

5644 
	`g_‰ì
(
tmp
);

5645 
sbuddy
->
is_oof_nŸe
 = 
	`sùe_°ªquÆ
(
	`sùe_xml_©åibuã
(
xn_node
, "type"), "OOF");

5646 
sbuddy
->
nŸe_sö˚
 = 
publish_time
;

5648 
	`SIPE_DEBUG_INFO
("process_incoming_notify_rlmi: uri(%s),Çote(%s)",

5649 
uri
, 
sbuddy
->
nŸe
 ? sbuddy->note : "");

5652 
do_upd©e_°©us
 = 
TRUE
;

5657 if(
	`sùe_°ªquÆ
(
©åV¨
, "state"))

5659 *
tmp
;

5660 
avaûabûôy
;

5661 c⁄° 
sùe_xml
 *
xn_avaûabûôy
;

5662 c⁄° 
sùe_xml
 *
xn_a˘ivôy
;

5663 c⁄° 
sùe_xml
 *
xn_mìtög_subje˘
;

5664 c⁄° 
sùe_xml
 *
xn_mìtög_loˇti⁄
;

5665 
sùe_buddy
 *
sbuddy
 = 
uri
 ? 
	`g_hash_èbÀ_lookup
(
SIP_TO_CORE_PRIVATE
->
buddõs
, uriË: 
NULL
;

5667 
xn_node
 = 
	`sùe_xml_chûd
(
xn_ˇãg‹y
, "state");

5668 i‡(!
xn_node
) ;

5669 
xn_avaûabûôy
 = 
	`sùe_xml_chûd
(
xn_node
, "availability");

5670 i‡(!
xn_avaûabûôy
) ;

5671 
xn_a˘ivôy
 = 
	`sùe_xml_chûd
(
xn_node
, "activity");

5672 
xn_mìtög_subje˘
 = 
	`sùe_xml_chûd
(
xn_node
, "meetingSubject");

5673 
xn_mìtög_loˇti⁄
 = 
	`sùe_xml_chûd
(
xn_node
, "meetingLocation");

5675 
tmp
 = 
	`sùe_xml_d©a
(
xn_avaûabûôy
);

5676 
avaûabûôy
 = 
	`©oi
(
tmp
);

5677 
	`g_‰ì
(
tmp
);

5680 i‡(
sbuddy
) {

5681 *
tmp
 = 
NULL
;

5684 
	`g_‰ì
(
sbuddy
->
a˘ivôy
);

5685 
sbuddy
->
a˘ivôy
 = 
NULL
;

5686 i‡(
xn_a˘ivôy
) {

5687 c⁄° *
tokí
 = 
	`sùe_xml_©åibuã
(
xn_a˘ivôy
, "token");

5688 c⁄° 
sùe_xml
 *
xn_cu°om
 = 
	`sùe_xml_chûd
(
xn_a˘ivôy
, "custom");

5691 i‡(!
	`is_em±y
(
tokí
)) {

5692 
sbuddy
->
a˘ivôy
 = 
	`g_°rdup
(
	`sùe_gë_a˘ivôy_desc_by_tokí
(
tokí
));

5695 i‡(
xn_cu°om
) {

5696 *
cu°om
 = 
	`sùe_xml_d©a
(
xn_cu°om
);

5698 i‡(!
	`is_em±y
(
cu°om
)) {

5699 
sbuddy
->
a˘ivôy
 = 
cu°om
;

5700 
cu°om
 = 
NULL
;

5702 
	`g_‰ì
(
cu°om
);

5706 
	`g_‰ì
(
sbuddy
->
mìtög_subje˘
);

5707 
sbuddy
->
mìtög_subje˘
 = 
NULL
;

5708 i‡(
xn_mìtög_subje˘
) {

5709 *
mìtög_subje˘
 = 
	`sùe_xml_d©a
(
xn_mìtög_subje˘
);

5711 i‡(!
	`is_em±y
(
mìtög_subje˘
)) {

5712 
sbuddy
->
mìtög_subje˘
 = meeting_subject;

5713 
mìtög_subje˘
 = 
NULL
;

5715 
	`g_‰ì
(
mìtög_subje˘
);

5718 
	`g_‰ì
(
sbuddy
->
mìtög_loˇti⁄
);

5719 
sbuddy
->
mìtög_loˇti⁄
 = 
NULL
;

5720 i‡(
xn_mìtög_loˇti⁄
) {

5721 *
mìtög_loˇti⁄
 = 
	`sùe_xml_d©a
(
xn_mìtög_loˇti⁄
);

5723 i‡(!
	`is_em±y
(
mìtög_loˇti⁄
)) {

5724 
sbuddy
->
mìtög_loˇti⁄
 = meeting_location;

5725 
mìtög_loˇti⁄
 = 
NULL
;

5727 
	`g_‰ì
(
mìtög_loˇti⁄
);

5730 
°©us
 = 
	`sùe_gë_°©us_by_avaûabûôy
(
avaûabûôy
, &
tmp
);

5731 i‡(
sbuddy
->
a˘ivôy
 && 
tmp
) {

5732 *
tmp2
 = 
sbuddy
->
a˘ivôy
;

5734 
sbuddy
->
a˘ivôy
 = 
	`g_°rdup_¥ötf
("%s, %s", sbuddy->a˘ivôy, 
tmp
);

5735 
	`g_‰ì
(
tmp
);

5736 
	`g_‰ì
(
tmp2
);

5737 } i‡(
tmp
) {

5738 
sbuddy
->
a˘ivôy
 = 
tmp
;

5742 
do_upd©e_°©us
 = 
TRUE
;

5745 if(
	`sùe_°ªquÆ
(
©åV¨
, "calendarData"))

5747 
sùe_buddy
 *
sbuddy
 = 
uri
 ? 
	`g_hash_èbÀ_lookup
(
SIP_TO_CORE_PRIVATE
->
buddõs
, uriË: 
NULL
;

5748 c⁄° 
sùe_xml
 *
xn_‰ì_busy
 = 
	`sùe_xml_chûd
(
xn_ˇãg‹y
, "calendarData/freeBusy");

5749 c⁄° 
sùe_xml
 *
xn_w‹kög_hours
 = 
	`sùe_xml_chûd
(
xn_ˇãg‹y
, "calendarData/WorkingHours");

5751 i‡(
sbuddy
 && 
xn_‰ì_busy
) {

5752 i‡(!
has_‰ì_busy_˛ó√d
) {

5753 
has_‰ì_busy_˛ó√d
 = 
TRUE
;

5755 
	`g_‰ì
(
sbuddy
->
ˇl_°¨t_time
);

5756 
sbuddy
->
ˇl_°¨t_time
 = 
NULL
;

5758 
	`g_‰ì
(
sbuddy
->
ˇl_‰ì_busy_ba£64
);

5759 
sbuddy
->
ˇl_‰ì_busy_ba£64
 = 
NULL
;

5761 
	`g_‰ì
(
sbuddy
->
ˇl_‰ì_busy
);

5762 
sbuddy
->
ˇl_‰ì_busy
 = 
NULL
;

5764 
sbuddy
->
ˇl_‰ì_busy_published
 = 
publish_time
;

5767 i‡(
publish_time
 >
sbuddy
->
ˇl_‰ì_busy_published
) {

5768 
	`g_‰ì
(
sbuddy
->
ˇl_°¨t_time
);

5769 
sbuddy
->
ˇl_°¨t_time
 = 
	`g_°rdup
(
	`sùe_xml_©åibuã
(
xn_‰ì_busy
, "startTime"));

5771 
sbuddy
->
ˇl_gønuœrôy
 = 
	`sùe_°rˇ£_equÆ
(
	`sùe_xml_©åibuã
(
xn_‰ì_busy
, "granularity"), "PT15M") ?

5774 
	`g_‰ì
(
sbuddy
->
ˇl_‰ì_busy_ba£64
);

5775 
sbuddy
->
ˇl_‰ì_busy_ba£64
 = 
	`sùe_xml_d©a
(
xn_‰ì_busy
);

5777 
	`g_‰ì
(
sbuddy
->
ˇl_‰ì_busy
);

5778 
sbuddy
->
ˇl_‰ì_busy
 = 
NULL
;

5780 
sbuddy
->
ˇl_‰ì_busy_published
 = 
publish_time
;

5782 
	`SIPE_DEBUG_INFO
("¥o˚ss_öcomög_nŸify_æmi: sèπTime=%†gønuœrôy=%d cÆ_‰ì_busy_ba£64=\n%s", 
sbuddy
->
ˇl_°¨t_time
, sbuddy->
ˇl_gønuœrôy
, sbuddy->
ˇl_‰ì_busy_ba£64
);

5786 i‡(
sbuddy
 && 
xn_w‹kög_hours
) {

5787 
	`sùe_ˇl_∑r£_w‹kög_hours
(
xn_w‹kög_hours
, 
sbuddy
);

5792 i‡(
do_upd©e_°©us
) {

5793 i‡(!
°©us
) {

5794 
PuΩÀBuddy
 *
pbuddy
 = 
	`puΩÀ_föd_buddy
((
PuΩÀAccou¡
 *)
sù
->
accou¡
, 
uri
);

5795 c⁄° 
PuΩÀPª£n˚
 *
¥e£n˚
 = 
	`puΩÀ_buddy_gë_¥e£n˚
(
pbuddy
);

5796 c⁄° 
PuΩÀSètus
 *
p°©us
 = 
	`puΩÀ_¥e£n˚_gë_a˘ive_°©us
(
¥e£n˚
);

5797 
°©us
 = 
	`puΩÀ_°©us_gë_id
(
p°©us
);

5800 
	`SIPE_DEBUG_INFO
("¥o˚ss_öcomög_nŸify_æmi: %s", 
°©us
);

5801 
	`sùe_gŸ_u£r_°©us
(
sùe_¥iv©e
, 
uri
, 
°©us
);

5804 
	`sùe_xml_‰ì
(
xn_ˇãg‹õs
);

5805 
	}
}

5807 
	$sùe_subs¸ibe_poﬁfqdn_ªsour˚_uri
(c⁄° *
ho°
,

5808 
GSLi°
 *
£rvî
,

5809 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

5811 
¥e£n˚_b©ched_rouãd
 *
∑ylﬂd
 = 
	`g_mÆloc
((presence_batched_routed));

5812 
	`SIPE_DEBUG_INFO
("¥o˚ss_öcomög_nŸify_æmi_ªsub:Öoﬁ(%s)", 
ho°
);

5813 
∑ylﬂd
->
ho°
 = 
	`g_°rdup
(host);

5814 
∑ylﬂd
->
buddõs
 = 
£rvî
;

5815 
	`sùe_subs¸ibe_¥e£n˚_b©ched_rouãd
(
sùe_¥iv©e
,

5816 
∑ylﬂd
);

5817 
	`sùe_subs¸ibe_¥e£n˚_b©ched_rouãd_‰ì
(
∑ylﬂd
);

5818 
	}
}

5820 
	$¥o˚ss_öcomög_nŸify_æmi_ªsub
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

5821 c⁄° 
gch¨
 *
d©a
, 
Àn
)

5823 
sùe_xml
 *
xn_li°
;

5824 c⁄° 
sùe_xml
 *
xn_ªsour˚
;

5825 
GHashTabÀ
 *
£rvîs
 = 
	`g_hash_èbÀ_√w_fuŒ
(
g_°r_hash
, 
g_°r_equÆ
,

5826 
g_‰ì
, 
NULL
);

5827 
GSLi°
 *
£rvî
;

5828 
gch¨
 *
ho°
;

5830 
xn_li°
 = 
	`sùe_xml_∑r£
(
d©a
, 
Àn
);

5832 
xn_ªsour˚
 = 
	`sùe_xml_chûd
(
xn_li°
, "resource");

5833 
xn_ªsour˚
;

5834 
xn_ªsour˚
 = 
	`sùe_xml_twö
(xn_resource) )

5836 c⁄° *
uri
, *
°©e
;

5837 c⁄° 
sùe_xml
 *
xn_ö°™˚
;

5839 
xn_ö°™˚
 = 
	`sùe_xml_chûd
(
xn_ªsour˚
, "instance");

5840 i‡(!
xn_ö°™˚
) ;

5842 
uri
 = 
	`sùe_xml_©åibuã
(
xn_ªsour˚
, "uri");

5843 
°©e
 = 
	`sùe_xml_©åibuã
(
xn_ö°™˚
, "state");

5844 
	`SIPE_DEBUG_INFO
("¥o˚ss_öcomög_nŸify_æmi_ªsub: uri(%s),°©e(%s)", 
uri
, 
°©e
);

5846 i‡(
	`°r°r
(
°©e
, "resubscribe")) {

5847 c⁄° *
poﬁFqdn
 = 
	`sùe_xml_©åibuã
(
xn_ö°™˚
, "poolFqdn");

5849 i‡(
poﬁFqdn
) {

5850 
gch¨
 *
u£r
 = 
	`g_°rdup
(
uri
);

5851 
ho°
 = 
	`g_°rdup
(
poﬁFqdn
);

5852 
£rvî
 = 
	`g_hash_èbÀ_lookup
(
£rvîs
, 
ho°
);

5853 
£rvî
 = 
	`g_¶i°_≠≥nd
(£rvî, 
u£r
);

5854 
	`g_hash_èbÀ_ö£π
(
£rvîs
, 
ho°
, 
£rvî
);

5856 
	`sùe_subs¸ibe_¥e£n˚_sögÀ
(
sùe_¥iv©e
,

5857 (*Ë
uri
);

5863 
	`g_hash_èbÀ_f‹óch
(
£rvîs
, (
GHFunc
Ë
sùe_subs¸ibe_poﬁfqdn_ªsour˚_uri
, 
sùe_¥iv©e
);

5864 
	`g_hash_èbÀ_de°roy
(
£rvîs
);

5866 
	`sùe_xml_‰ì
(
xn_li°
);

5867 
	}
}

5869 
	$¥o˚ss_öcomög_nŸify_pidf
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

5870 c⁄° 
gch¨
 *
d©a
, 
Àn
)

5872 
gch¨
 *
uri
;

5873 
gch¨
 *
gëbasic
;

5874 
gch¨
 *
a˘ivôy
 = 
NULL
;

5875 
sùe_xml
 *
pidf
;

5876 c⁄° 
sùe_xml
 *
basic°©us
 = 
NULL
, *
tu∂e
, *
°©us
;

5877 
gboﬁón
 
is⁄löe
 = 
FALSE
;

5878 c⁄° 
sùe_xml
 *
di•œy_«me_node
;

5880 
pidf
 = 
	`sùe_xml_∑r£
(
d©a
, 
Àn
);

5881 i‡(!
pidf
) {

5882 
	`SIPE_DEBUG_INFO
("¥o˚ss_öcomög_nŸify_pidf:Çÿ∑r£abÀÖidf:%s", 
d©a
);

5886 i‡((
tu∂e
 = 
	`sùe_xml_chûd
(
pidf
, "tuple")))

5888 i‡((
°©us
 = 
	`sùe_xml_chûd
(
tu∂e
, "status"))) {

5889 
basic°©us
 = 
	`sùe_xml_chûd
(
°©us
, "basic");

5893 i‡(!
basic°©us
) {

5894 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_incoming_notify_pidf:Ço basic found");

5895 
	`sùe_xml_‰ì
(
pidf
);

5899 
gëbasic
 = 
	`sùe_xml_d©a
(
basic°©us
);

5900 i‡(!
gëbasic
) {

5901 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_incoming_notify_pidf:Ço basic data found");

5902 
	`sùe_xml_‰ì
(
pidf
);

5906 
	`SIPE_DEBUG_INFO
("¥o˚ss_öcomög_nŸify_pidf: basic-°©us(%s)", 
gëbasic
);

5907 i‡(
	`°r°r
(
gëbasic
, "open")) {

5908 
is⁄löe
 = 
TRUE
;

5910 
	`g_‰ì
(
gëbasic
);

5912 
uri
 = 
	`sù_uri
(
	`sùe_xml_©åibuã
(
pidf
, "entity"));

5914 
di•œy_«me_node
 = 
	`sùe_xml_chûd
(
pidf
, "display-name");

5915 i‡(
di•œy_«me_node
) {

5916 * 
di•œy_«me
 = 
	`sùe_xml_d©a
(
di•œy_«me_node
);

5918 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
ALIAS_PROP
, 
di•œy_«me
);

5919 
	`g_‰ì
(
di•œy_«me
);

5922 i‡((
tu∂e
 = 
	`sùe_xml_chûd
(
pidf
, "tuple"))) {

5923 i‡((
°©us
 = 
	`sùe_xml_chûd
(
tu∂e
, "status"))) {

5924 i‡((
basic°©us
 = 
	`sùe_xml_chûd
(
°©us
, "activities"))) {

5925 i‡((
basic°©us
 = 
	`sùe_xml_chûd
(basicstatus, "activity"))) {

5926 
a˘ivôy
 = 
	`sùe_xml_d©a
(
basic°©us
);

5927 
	`SIPE_DEBUG_INFO
("¥o˚ss_öcomög_nŸify_pidf:á˘ivôy(%s)", 
a˘ivôy
);

5933 i‡(
is⁄löe
) {

5934 c⁄° 
gch¨
 * 
°©us_id
 = 
NULL
;

5935 i‡(
a˘ivôy
) {

5936 i‡(
	`sùe_°ªquÆ
(
a˘ivôy
, 
sùe_a˘ivôy_m≠
[
SIPE_ACTIVITY_BUSY
].
tokí
)) {

5937 
°©us_id
 = 
SIPE_STATUS_ID_BUSY
;

5938 } i‡(
	`sùe_°ªquÆ
(
a˘ivôy
, 
sùe_a˘ivôy_m≠
[
SIPE_ACTIVITY_AWAY
].
tokí
)) {

5939 
°©us_id
 = 
SIPE_STATUS_ID_AWAY
;

5943 i‡(!
°©us_id
) {

5944 
°©us_id
 = 
SIPE_STATUS_ID_AVAILABLE
;

5947 
	`SIPE_DEBUG_INFO
("¥o˚ss_öcomög_nŸify_pidf: sètus_id(%s)", 
°©us_id
);

5948 
	`sùe_gŸ_u£r_°©us
(
sùe_¥iv©e
, 
uri
, 
°©us_id
);

5950 
	`sùe_gŸ_u£r_°©us
(
sùe_¥iv©e
, 
uri
, 
SIPE_STATUS_ID_OFFLINE
);

5953 
	`g_‰ì
(
a˘ivôy
);

5954 
	`g_‰ì
(
uri
);

5955 
	`sùe_xml_‰ì
(
pidf
);

5956 
	}
}

5960 
	$sùe_u£r_öfo_has_upd©ed
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

5961 c⁄° 
sùe_xml
 *
xn_u£röfo
)

5963 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

5964 c⁄° 
sùe_xml
 *
xn_°©es
;

5966 
	`g_‰ì
(
sù
->
u£r_°©es
);

5967 
sù
->
u£r_°©es
 = 
NULL
;

5968 i‡((
xn_°©es
 = 
	`sùe_xml_chûd
(
xn_u£röfo
, "°©es")Ë!
NULL
) {

5969 
gch¨
 *
‹ig
 = 
sù
->
u£r_°©es
 = 
	`sùe_xml_°rögify
(
xn_°©es
);

5976 i‡(
‹ig
) {

5977 
gch¨
 
c
, *
°rù≥d
 = 
‹ig
;

5978 (
c
 = *
‹ig
++)) {

5979 i‡((
c
 != '\n') ) {

5980 *
°rù≥d
++ = 
c
;

5983 *
°rù≥d
 = '\0';

5991 i‡(!
sù
->
öôül_°©e_published
) {

5992 
	`£nd_¥e£n˚_sﬂp
(
sù
, 
FALSE
);

5994 
	`sùe_scheduÀ_£c⁄ds
(
sùe_¥iv©e
,

5996 
NULL
,

5997 
UPDATE_CALENDAR_DELAY
,

5998 (
sùe_scheduÀ_a˘i⁄
Ë
sùe_c‹e_upd©e_ˇÀnd¨
,

5999 
NULL
);

6001 
	}
}

6003 
	$¥o˚ss_öcomög_nŸify_m§tc
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

6004 c⁄° 
gch¨
 *
d©a
, 
Àn
)

6006 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

6007 *
a˘ivôy
 = 
NULL
;

6008 c⁄° *
ïid
;

6009 c⁄° *
°©us_id
 = 
NULL
;

6010 c⁄° *
«me
;

6011 *
uri
;

6012 *
£lf_uri
 = 
	`sù_uri_£lf
(
sù
);

6013 
avl
;

6014 
a˘
;

6015 c⁄° *
devi˚_«me
 = 
NULL
;

6016 c⁄° *
ˇl_°¨t_time
 = 
NULL
;

6017 c⁄° *
ˇl_gønuœrôy
 = 
NULL
;

6018 *
ˇl_‰ì_busy_ba£64
 = 
NULL
;

6019 
sùe_buddy
 *
sbuddy
;

6020 c⁄° 
sùe_xml
 *
node
;

6021 
sùe_xml
 *
xn_¥e£¡ôy
;

6022 c⁄° 
sùe_xml
 *
xn_avaûabûôy
;

6023 c⁄° 
sùe_xml
 *
xn_a˘ivôy
;

6024 c⁄° 
sùe_xml
 *
xn_di•œy_«me
;

6025 c⁄° 
sùe_xml
 *
xn_emaû
;

6026 c⁄° 
sùe_xml
 *
xn_ph⁄e_numbî
;

6027 c⁄° 
sùe_xml
 *
xn_u£röfo
;

6028 c⁄° 
sùe_xml
 *
xn_nŸe
;

6029 c⁄° 
sùe_xml
 *
xn_oof
;

6030 c⁄° 
sùe_xml
 *
xn_°©e
;

6031 c⁄° 
sùe_xml
 *
xn_c⁄è˘
;

6032 *
nŸe
;

6033 *
‰ì_a˘ivôy
;

6034 
u£r_avaû
;

6035 c⁄° *
u£r_avaû_nû
;

6036 
ªs_avaû
;

6037 
time_t
 
u£r_avaû_sö˚
 = 0;

6038 
time_t
 
a˘ivôy_sö˚
 = 0;

6041 i‡(
d©a
 && 
	`°r°r
(data, "encoding=\"utf-16\"")) {

6042 *
tmp_d©a
;

6043 
tmp_d©a
 = 
	`ª∂a˚
(
d©a
, "encoding=\"utf-16\"", "encoding=\"utf-8\"");

6044 
xn_¥e£¡ôy
 = 
	`sùe_xml_∑r£
(
tmp_d©a
, 
	`°æí
(tmp_data));

6045 
	`g_‰ì
(
tmp_d©a
);

6047 
xn_¥e£¡ôy
 = 
	`sùe_xml_∑r£
(
d©a
, 
Àn
);

6050 
xn_avaûabûôy
 = 
	`sùe_xml_chûd
(
xn_¥e£¡ôy
, "availability");

6051 
xn_a˘ivôy
 = 
	`sùe_xml_chûd
(
xn_¥e£¡ôy
, "activity");

6052 
xn_di•œy_«me
 = 
	`sùe_xml_chûd
(
xn_¥e£¡ôy
, "displayName");

6053 
xn_emaû
 = 
	`sùe_xml_chûd
(
xn_¥e£¡ôy
, "email");

6054 
xn_ph⁄e_numbî
 = 
	`sùe_xml_chûd
(
xn_¥e£¡ôy
, "phoneNumber");

6055 
xn_u£röfo
 = 
	`sùe_xml_chûd
(
xn_¥e£¡ôy
, "userInfo");

6056 
xn_oof
 = 
xn_u£röfo
 ? 
	`sùe_xml_chûd
(xn_u£röfo, "oof"Ë: 
NULL
;

6057 
xn_°©e
 = 
xn_u£röfo
 ? 
	`sùe_xml_chûd
(xn_u£röfo, "°©es/°©e"): 
NULL
;

6058 
u£r_avaû
 = 
xn_°©e
 ? 
	`sùe_xml_öt_©åibuã
(xn_state, "avail", 0) : 0;

6059 
u£r_avaû_sö˚
 = 
xn_°©e
 ? 
	`sùe_utûs_°r_to_time
(
	`sùe_xml_©åibuã
(xn_state, "since")) : 0;

6060 
u£r_avaû_nû
 = 
xn_°©e
 ? 
	`sùe_xml_©åibuã
(xn_°©e, "nû"Ë: 
NULL
;

6061 
xn_c⁄è˘
 = 
xn_u£röfo
 ? 
	`sùe_xml_chûd
(xn_u£röfo, "c⁄è˘"Ë: 
NULL
;

6062 
xn_nŸe
 = 
xn_u£röfo
 ? 
	`sùe_xml_chûd
(xn_u£röfo, "nŸe"Ë: 
NULL
;

6063 
nŸe
 = 
xn_nŸe
 ? 
	`sùe_xml_d©a
(xn_nŸeË: 
NULL
;

6065 i‡(
	`sùe_°ªquÆ
(
u£r_avaû_nû
, "true")) {

6066 
u£r_avaû
 = 0;

6067 
u£r_avaû_sö˚
 = 0;

6070 
‰ì_a˘ivôy
 = 
NULL
;

6072 
«me
 = 
	`sùe_xml_©åibuã
(
xn_¥e£¡ôy
, "uri");

6073 
uri
 = 
	`sù_uri_‰om_«me
(
«me
);

6074 
avl
 = 
	`sùe_xml_öt_©åibuã
(
xn_avaûabûôy
, "aggregate", 0);

6075 
ïid
 = 
	`sùe_xml_©åibuã
(
xn_avaûabûôy
, "epid");

6076 
a˘
 = 
	`sùe_xml_öt_©åibuã
(
xn_a˘ivôy
, "aggregate", 0);

6078 
°©us_id
 = 
	`sùe_gë_°©us_by_a˘_avaû_2005
(
a˘
, 
avl
, &
a˘ivôy
);

6079 
ªs_avaû
 = 
	`sùe_gë_avaûabûôy_by_°©us
(
°©us_id
, 
NULL
);

6080 i‡(
u£r_avaû
 > 
ªs_avaû
) {

6081 
ªs_avaû
 = 
u£r_avaû
;

6082 
°©us_id
 = 
	`sùe_gë_°©us_by_avaûabûôy
(
u£r_avaû
, 
NULL
);

6085 i‡(
xn_di•œy_«me
) {

6086 *
di•œy_«me
 = 
	`g_°rdup
(
	`sùe_xml_©åibuã
(
xn_di•œy_«me
, "displayName"));

6087 *
emaû
 = 
xn_emaû
 ? 
	`g_°rdup
(
	`sùe_xml_©åibuã
(xn_emaû, "emaû")Ë: 
NULL
;

6088 *
ph⁄e_œbñ
 = 
xn_ph⁄e_numbî
 ? 
	`g_°rdup
(
	`sùe_xml_©åibuã
(xn_ph⁄e_numbî, "œbñ")Ë: 
NULL
;

6089 *
ph⁄e_numbî
 = 
xn_ph⁄e_numbî
 ? 
	`g_°rdup
(
	`sùe_xml_©åibuã
(xn_ph⁄e_numbî, "numbî")Ë: 
NULL
;

6090 *
ãl_uri
 = 
	`sù_to_ãl_uri
(
ph⁄e_numbî
);

6092 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
ALIAS_PROP
, 
di•œy_«me
);

6093 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
EMAIL_PROP
, 
emaû
);

6094 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
PHONE_PROP
, 
ãl_uri
);

6095 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
PHONE_DISPLAY_PROP
, !
	`is_em±y
(
ph⁄e_œbñ
Ë?Öh⁄e_œbñ : 
ph⁄e_numbî
);

6097 
	`g_‰ì
(
ãl_uri
);

6098 
	`g_‰ì
(
ph⁄e_œbñ
);

6099 
	`g_‰ì
(
ph⁄e_numbî
);

6100 
	`g_‰ì
(
emaû
);

6101 
	`g_‰ì
(
di•œy_«me
);

6104 i‡(
xn_c⁄è˘
) {

6106 
node
 = 
	`sùe_xml_chûd
(
xn_c⁄è˘
, "ãl");Çode;Çodê
	`sùe_xml_twö
(node))

6109 c⁄° *
ph⁄e_ty≥
 = 
	`sùe_xml_©åibuã
(
node
, "type");

6110 * 
ph⁄e
 = 
	`sùe_xml_d©a
(
node
);

6112 
	`sùe_upd©e_u£r_ph⁄e
(
sùe_¥iv©e
, 
uri
, 
ph⁄e_ty≥
, 
ph⁄e
, 
NULL
);

6114 
	`g_‰ì
(
ph⁄e
);

6119 
node
 = 
	`sùe_xml_chûd
(
xn_¥e£¡ôy
, "devi˚s/devi˚Pª£n˚");Çode;Çodê
	`sùe_xml_twö
(node)) {

6120 c⁄° 
sùe_xml
 *
xn_devi˚_«me
;

6121 c⁄° 
sùe_xml
 *
xn_ˇÀnd¨_öfo
;

6122 c⁄° 
sùe_xml
 *
xn_°©e
;

6123 *
°©e
;

6126 i‡(
	`sùe_°ªquÆ
(
	`sùe_xml_©åibuã
(
node
, "ïid"), 
ïid
)) {

6127 
xn_devi˚_«me
 = 
	`sùe_xml_chûd
(
node
, "deviceName");

6128 
devi˚_«me
 = 
xn_devi˚_«me
 ? 
	`sùe_xml_©åibuã
(xn_devi˚_«me, "«me"Ë: 
NULL
;

6132 
xn_ˇÀnd¨_öfo
 = 
	`sùe_xml_chûd
(
node
, "calendarInfo");

6133 i‡(
xn_ˇÀnd¨_öfo
) {

6134 c⁄° *
ˇl_°¨t_time_tmp
 = 
	`sùe_xml_©åibuã
(
xn_ˇÀnd¨_öfo
, "startTime");

6136 i‡(
ˇl_°¨t_time
) {

6137 
time_t
 
ˇl_°¨t_time_t
 = 
	`sùe_utûs_°r_to_time
(
ˇl_°¨t_time
);

6138 
time_t
 
ˇl_°¨t_time_t_tmp
 = 
	`sùe_utûs_°r_to_time
(
ˇl_°¨t_time_tmp
);

6140 i‡(
ˇl_°¨t_time_t_tmp
 > 
ˇl_°¨t_time_t
) {

6141 
ˇl_°¨t_time
 = 
ˇl_°¨t_time_tmp
;

6142 
ˇl_gønuœrôy
 = 
	`sùe_xml_©åibuã
(
xn_ˇÀnd¨_öfo
, "granularity");

6143 
	`g_‰ì
(
ˇl_‰ì_busy_ba£64
);

6144 
ˇl_‰ì_busy_ba£64
 = 
	`sùe_xml_d©a
(
xn_ˇÀnd¨_öfo
);

6146 
	`SIPE_DEBUG_INFO
("¥o˚ss_öcomög_nŸify_m§tc: sèπTime=%†gønuœrôy=%†ˇl_‰ì_busy_ba£64=\n%s", 
ˇl_°¨t_time
, 
ˇl_gønuœrôy
, 
ˇl_‰ì_busy_ba£64
);

6149 
ˇl_°¨t_time
 = 
ˇl_°¨t_time_tmp
;

6150 
ˇl_gønuœrôy
 = 
	`sùe_xml_©åibuã
(
xn_ˇÀnd¨_öfo
, "granularity");

6151 
	`g_‰ì
(
ˇl_‰ì_busy_ba£64
);

6152 
ˇl_‰ì_busy_ba£64
 = 
	`sùe_xml_d©a
(
xn_ˇÀnd¨_öfo
);

6154 
	`SIPE_DEBUG_INFO
("¥o˚ss_öcomög_nŸify_m§tc: sèπTime=%†gønuœrôy=%†ˇl_‰ì_busy_ba£64=\n%s", 
ˇl_°¨t_time
, 
ˇl_gønuœrôy
, 
ˇl_‰ì_busy_ba£64
);

6159 
xn_°©e
 = 
	`sùe_xml_chûd
(
node
, "states/state");

6160 i‡(
xn_°©e
) {

6161 
dev_avaû
 = 
	`sùe_xml_öt_©åibuã
(
xn_°©e
, "avail", 0);

6162 
time_t
 
dev_avaû_sö˚
 = 
	`sùe_utûs_°r_to_time
(
	`sùe_xml_©åibuã
(
xn_°©e
, "since"));

6164 
°©e
 = 
	`sùe_xml_d©a
(
xn_°©e
);

6165 i‡(
dev_avaû_sö˚
 > 
u£r_avaû_sö˚
 &&

6166 
dev_avaû
 >
ªs_avaû
)

6168 
ªs_avaû
 = 
dev_avaû
;

6169 i‡(!
	`is_em±y
(
°©e
))

6171 i‡(
	`sùe_°ªquÆ
(
°©e
, 
sùe_a˘ivôy_m≠
[
SIPE_ACTIVITY_ON_PHONE
].
tokí
)) {

6172 
	`g_‰ì
(
a˘ivôy
);

6173 
a˘ivôy
 = 
	`g_°rdup
(
	`SIPE_ACTIVITY_I18N
(
SIPE_ACTIVITY_ON_PHONE
));

6174 } i‡(
	`sùe_°ªquÆ
(
°©e
, "presenting")) {

6175 
	`g_‰ì
(
a˘ivôy
);

6176 
a˘ivôy
 = 
	`g_°rdup
(
	`SIPE_ACTIVITY_I18N
(
SIPE_ACTIVITY_IN_CONF
));

6178 
a˘ivôy
 = 
°©e
;

6179 
°©e
 = 
NULL
;

6181 
a˘ivôy_sö˚
 = 
dev_avaû_sö˚
;

6183 
°©us_id
 = 
	`sùe_gë_°©us_by_avaûabûôy
(
ªs_avaû
, &
a˘ivôy
);

6185 
	`g_‰ì
(
°©e
);

6190 i‡(
xn_oof
 && 
ªs_avaû
 >= 15000) {

6191 
	`g_‰ì
(
a˘ivôy
);

6192 
a˘ivôy
 = 
	`g_°rdup
(
	`SIPE_ACTIVITY_I18N
(
SIPE_ACTIVITY_OOF
));

6193 
a˘ivôy_sö˚
 = 0;

6196 
sbuddy
 = 
	`g_hash_èbÀ_lookup
(
sùe_¥iv©e
->
buddõs
, 
uri
);

6197 i‡(
sbuddy
)

6199 
	`g_‰ì
(
sbuddy
->
a˘ivôy
);

6200 
sbuddy
->
a˘ivôy
 =áctivity;

6201 
a˘ivôy
 = 
NULL
;

6203 
sbuddy
->
a˘ivôy_sö˚
 =áctivity_since;

6205 
sbuddy
->
u£r_avaû
 = user_avail;

6206 
sbuddy
->
u£r_avaû_sö˚
 = user_avail_since;

6208 
	`g_‰ì
(
sbuddy
->
nŸe
);

6209 
sbuddy
->
nŸe
 = 
NULL
;

6210 i‡(!
	`is_em±y
(
nŸe
)Ë{ 
sbuddy
->nŸê
	`g_m¨kup_esˇ≥_ãxt
(note, -1); }

6212 
sbuddy
->
is_oof_nŸe
 = (
xn_oof
 !
NULL
);

6214 
	`g_‰ì
(
sbuddy
->
devi˚_«me
);

6215 
sbuddy
->
devi˚_«me
 = 
NULL
;

6216 i‡(!
	`is_em±y
(
devi˚_«me
)Ë{ 
sbuddy
->devi˚_«mê
	`g_°rdup
(device_name); }

6218 i‡(!
	`is_em±y
(
ˇl_‰ì_busy_ba£64
)) {

6219 
	`g_‰ì
(
sbuddy
->
ˇl_°¨t_time
);

6220 
sbuddy
->
ˇl_°¨t_time
 = 
	`g_°rdup
(cal_start_time);

6222 
sbuddy
->
ˇl_gønuœrôy
 = 
	`sùe_°rˇ£_equÆ
(cal_granularity, "PT15M") ? 15 : 0;

6224 
	`g_‰ì
(
sbuddy
->
ˇl_‰ì_busy_ba£64
);

6225 
sbuddy
->
ˇl_‰ì_busy_ba£64
 = cal_free_busy_base64;

6226 
ˇl_‰ì_busy_ba£64
 = 
NULL
;

6228 
	`g_‰ì
(
sbuddy
->
ˇl_‰ì_busy
);

6229 
sbuddy
->
ˇl_‰ì_busy
 = 
NULL
;

6232 
sbuddy
->
œ°_n⁄_ˇl_°©us_id
 = 
°©us_id
;

6233 
	`g_‰ì
(
sbuddy
->
œ°_n⁄_ˇl_a˘ivôy
);

6234 
sbuddy
->
œ°_n⁄_ˇl_a˘ivôy
 = 
	`g_°rdup
(sbuddy->
a˘ivôy
);

6236 i‡(
	`sùe_°rˇ£_equÆ
(
sbuddy
->
«me
, 
£lf_uri
)) {

6237 i‡(!
	`sùe_°ªquÆ
(
sbuddy
->
nŸe
, 
sù
->note))

6239 
sù
->
is_oof_nŸe
 = 
sbuddy
->is_oof_note;

6241 
	`g_‰ì
(
sù
->
nŸe
);

6242 
sù
->
nŸe
 = 
	`g_°rdup
(
sbuddy
->note);

6244 
sù
->
nŸe_sö˚
 = 
	`time
(
NULL
);

6247 
	`g_‰ì
(
sù
->
°©us
);

6248 
sù
->
°©us
 = 
	`g_°rdup
(
sbuddy
->
œ°_n⁄_ˇl_°©us_id
);

6251 
	`g_‰ì
(
ˇl_‰ì_busy_ba£64
);

6252 
	`g_‰ì
(
a˘ivôy
);

6254 
	`SIPE_DEBUG_INFO
("¥o˚ss_öcomög_nŸify_m§tc: sètus(%s)", 
°©us_id
);

6255 
	`sùe_gŸ_u£r_°©us
(
sùe_¥iv©e
, 
uri
, 
°©us_id
);

6257 i‡(!
sù
->
ocs2007
 && 
	`sùe_°rˇ£_equÆ
(
£lf_uri
, 
uri
)) {

6258 
	`sùe_u£r_öfo_has_upd©ed
(
sùe_¥iv©e
, 
xn_u£röfo
);

6261 
	`g_‰ì
(
nŸe
);

6262 
	`sùe_xml_‰ì
(
xn_¥e£¡ôy
);

6263 
	`g_‰ì
(
uri
);

6264 
	`g_‰ì
(
£lf_uri
);

6265 
	}
}

6267 
	$sùe_¥e£n˚_mime_cb
(
gpoöãr
 
u£r_d©a
,

6268 c⁄° 
GSLi°
 *
fõlds
,

6269 c⁄° 
gch¨
 *
body
,

6270 
gsize
 
Àngth
)

6272 c⁄° 
gch¨
 *
ty≥
 = 
	`sùe_utûs_«mevÆ_föd
(
fõlds
, "Content-Type");

6274 i‡(
	`°r°r
(
ty≥
,"application/rlmi+xml")) {

6275 
	`¥o˚ss_öcomög_nŸify_æmi_ªsub
(
u£r_d©a
, 
body
, 
Àngth
);

6276 } i‡(
	`°r°r
(
ty≥
, "text/xml+msrtc.pidf")) {

6277 
	`¥o˚ss_öcomög_nŸify_m§tc
(
u£r_d©a
, 
body
, 
Àngth
);

6279 
	`¥o˚ss_öcomög_nŸify_æmi
(
u£r_d©a
, 
body
, 
Àngth
);

6281 
	}
}

6283 
	$sùe_¥o˚ss_¥e£n˚
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

6284 
sùmsg
 *
msg
)

6286 c⁄° *
˘y≥
 = 
	`sùmsg_föd_hódî
(
msg
, "Content-Type");

6288 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_¥e£n˚: C⁄ã¡-Ty≥: %s", 
˘y≥
 ? ctype : "");

6290 i‡(
˘y≥
 &&

6291 (
	`°r°r
(
˘y≥
, "application/rlmi+xml") ||

6292 
	`°r°r
(
˘y≥
, "application/msrtc-event-categories+xml")))

6294 i‡(
	`°r°r
(
˘y≥
, "multipart"))

6296 
	`sùe_mime_∑πs_f‹óch
(
˘y≥
, 
msg
->
body
, 
sùe_¥e£n˚_mime_cb
, 
sùe_¥iv©e
);

6298 if(
	`°r°r
(
˘y≥
, "application/msrtc-event-categories+xml") )

6300 
	`¥o˚ss_öcomög_nŸify_æmi
(
sùe_¥iv©e
, 
msg
->
body
, msg->
bodyÀn
);

6302 if(
	`°r°r
(
˘y≥
, "application/rlmi+xml"))

6304 
	`¥o˚ss_öcomög_nŸify_æmi_ªsub
(
sùe_¥iv©e
, 
msg
->
body
, msg->
bodyÀn
);

6307 if(
˘y≥
 && 
	`°r°r
(ctype, "text/xml+msrtc.pidf"))

6309 
	`¥o˚ss_öcomög_nŸify_m§tc
(
sùe_¥iv©e
, 
msg
->
body
, msg->
bodyÀn
);

6313 
	`¥o˚ss_öcomög_nŸify_pidf
(
sùe_¥iv©e
, 
msg
->
body
, msg->
bodyÀn
);

6315 
	}
}

6317 
	$sùe_¥e£n˚_timeout_mime_cb
(
gpoöãr
 
u£r_d©a
,

6318 
SIPE_UNUSED_PARAMETER
 c⁄° 
GSLi°
 *
fõlds
,

6319 c⁄° 
gch¨
 *
body
,

6320 
gsize
 
Àngth
)

6322 
GSLi°
 **
buddõs
 = 
u£r_d©a
;

6323 
sùe_xml
 *
xml
 = 
	`sùe_xml_∑r£
(
body
, 
Àngth
);

6325 i‡(
xml
 && !
	`sùe_°ªquÆ
(
	`sùe_xml_«me
(xml), "list")) {

6326 c⁄° 
gch¨
 *
uri
 = 
	`sùe_xml_©åibuã
(
xml
, "uri");

6327 c⁄° 
sùe_xml
 *
xn_ˇãg‹y
;

6334 
xn_ˇãg‹y
 = 
	`sùe_xml_chûd
(
xml
, "category");

6335 
xn_ˇãg‹y
;

6336 
xn_ˇãg‹y
 = 
	`sùe_xml_twö
(xn_category)) {

6337 i‡(
	`sùe_°ªquÆ
(
	`sùe_xml_©åibuã
(
xn_ˇãg‹y
, "name"),

6339 c⁄° 
sùe_xml
 *
node
 = 
	`sùe_xml_chûd
(
xn_ˇãg‹y
, "contactCard/automaton");

6340 i‡(
node
) {

6341 *
boﬁón
 = 
	`sùe_xml_d©a
(
node
);

6342 i‡(
	`sùe_°ªquÆ
(
boﬁón
, "true")) {

6343 
	`SIPE_DEBUG_INFO
("sipe_process_presence_timeout: %s isánáutomaton: -Çot subscribingÅoÖresence updates",

6344 
uri
);

6345 
uri
 = 
NULL
;

6347 
	`g_‰ì
(
boﬁón
);

6353 i‡(
uri
) {

6354 *
buddõs
 = 
	`g_¶i°_≠≥nd
(*buddõs, 
	`sù_uri
(
uri
));

6358 
	`sùe_xml_‰ì
(
xml
);

6359 
	}
}

6361 
	$sùe_¥o˚ss_¥e£n˚_timeout
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

6362 
sùmsg
 *
msg
, 
gch¨
 *
who
,

6363 
timeout
)

6365 c⁄° *
˘y≥
 = 
	`sùmsg_föd_hódî
(
msg
, "Content-Type");

6366 
gch¨
 *
a˘i⁄_«me
 = 
	`g_°rdup_¥ötf
(
ACTION_NAME_PRESENCE
, 
who
);

6368 
	`SIPE_DEBUG_INFO
("sùe_¥o˚ss_¥e£n˚_timeout: C⁄ã¡-Ty≥: %s", 
˘y≥
 ? ctype : "");

6370 i‡(
˘y≥
 &&

6371 
	`°r°r
(
˘y≥
, "multipart") &&

6372 (
	`°r°r
(
˘y≥
, "application/rlmi+xml") ||

6373 
	`°r°r
(
˘y≥
, "application/msrtc-event-categories+xml"))) {

6374 
GSLi°
 *
buddõs
 = 
NULL
;

6376 
	`sùe_mime_∑πs_f‹óch
(
˘y≥
, 
msg
->
body
, 
sùe_¥e£n˚_timeout_mime_cb
, &
buddõs
);

6378 i‡(
buddõs
) {

6379 
¥e£n˚_b©ched_rouãd
 *
∑ylﬂd
 = 
	`g_mÆloc
((presence_batched_routed));

6380 
∑ylﬂd
->
ho°
 = 
	`g_°rdup
(
who
);

6381 
∑ylﬂd
->
buddõs
 = buddies;

6382 
	`sùe_scheduÀ_£c⁄ds
(
sùe_¥iv©e
,

6383 
a˘i⁄_«me
,

6384 
∑ylﬂd
,

6385 
timeout
,

6386 
sùe_subs¸ibe_¥e£n˚_b©ched_rouãd
,

6387 
sùe_subs¸ibe_¥e£n˚_b©ched_rouãd_‰ì
);

6388 
	`SIPE_DEBUG_INFO
("Resubs¸ùti⁄ mu…ùÀ c⁄è˘†wôh b©ched suµ‹à&Ñouã(%sËö %d", 
who
, 
timeout
);

6392 
	`sùe_scheduÀ_£c⁄ds
(
sùe_¥iv©e
,

6393 
a˘i⁄_«me
,

6394 
	`g_°rdup
(
who
),

6395 
timeout
,

6396 
sùe_subs¸ibe_¥e£n˚_sögÀ
,

6397 
g_‰ì
);

6398 
	`SIPE_DEBUG_INFO
("Resubs¸ùti⁄ sögÀ c⁄è˘ wôh b©ched suµ‹t(%sËö %d", 
who
, 
timeout
);

6400 
	`g_‰ì
(
a˘i⁄_«me
);

6401 
	}
}

6411 
	$¥o˚ss_öcomög_nŸify
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

6412 
sùmsg
 *
msg
,

6413 
gboﬁón
 
ªque°
, gboﬁó¿
bíŸify
)

6415 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

6416 c⁄° 
gch¨
 *
c⁄ã¡_ty≥
 = 
	`sùmsg_föd_hódî
(
msg
, "Content-Type");

6417 c⁄° 
gch¨
 *
evít
 = 
	`sùmsg_föd_hódî
(
msg
, "Event");

6418 c⁄° 
gch¨
 *
subs¸ùti⁄_°©e
 = 
	`sùmsg_föd_hódî
(
msg
, "subscription-state");

6419 *
tmp
;

6421 
	`SIPE_DEBUG_INFO
("process_incoming_notify: Event: %s\n\n%s",

6422 
evít
 ?Évent : "",

6423 
tmp
 = 
	`fix_√wlöes
(
msg
->
body
));

6424 
	`g_‰ì
(
tmp
);

6425 
	`SIPE_DEBUG_INFO
("¥o˚ss_öcomög_nŸify: subs¸ùti⁄_°©e: %s", 
subs¸ùti⁄_°©e
 ? subscription_state : "");

6428 i‡(
c⁄ã¡_ty≥
 && 
	`g_°r_has_¥efix
(content_type, "application/ms-imdn+xml")) {

6429 
	`sùe_¥o˚ss_imdn
(
sù
, 
msg
);

6432 i‡(
evít
) {

6434 i‡(
	`sùe_°rˇ£_equÆ
(
evít
, "vnd-microsoft-provisioning-v2"))

6436 
	`sùe_¥o˚ss_¥ovisi⁄ög_v2
(
sùe_¥iv©e
, 
msg
);

6438 i‡(
	`sùe_°rˇ£_equÆ
(
evít
, "vnd-microsoft-provisioning"))

6440 
	`sùe_¥o˚ss_¥ovisi⁄ög
(
sùe_¥iv©e
, 
msg
);

6442 i‡(
	`sùe_°rˇ£_equÆ
(
evít
, "presence"))

6444 
	`sùe_¥o˚ss_¥e£n˚
(
sùe_¥iv©e
, 
msg
);

6446 i‡(
	`sùe_°rˇ£_equÆ
(
evít
, "registration-notify"))

6448 
	`sùe_¥o˚ss_ªgi°øti⁄_nŸify
(
sùe_¥iv©e
, 
msg
);

6451 i‡(!
subs¸ùti⁄_°©e
 || 
	`°r°r
(subscription_state, "active"))

6453 i‡(
	`sùe_°rˇ£_equÆ
(
evít
, "vnd-microsoft-roaming-contacts"))

6455 
	`sùe_¥o˚ss_rﬂmög_c⁄è˘s
(
sùe_¥iv©e
, 
msg
);

6457 i‡(
	`sùe_°rˇ£_equÆ
(
evít
, "vnd-microsoft-roaming-self"))

6459 
	`sùe_¥o˚ss_rﬂmög_£lf
(
sùe_¥iv©e
, 
msg
);

6461 i‡(
	`sùe_°rˇ£_equÆ
(
evít
, "vnd-microsoft-roaming-ACL"))

6463 
	`sùe_¥o˚ss_rﬂmög_a˛
(
sùe_¥iv©e
, 
msg
);

6465 i‡(
	`sùe_°rˇ£_equÆ
(
evít
, "presence.wpending"))

6467 
	`sùe_¥o˚ss_¥e£n˚_w≥ndög
(
sùe_¥iv©e
, 
msg
);

6469 i‡(
	`sùe_°rˇ£_equÆ
(
evít
, "conference"))

6471 
	`sùe_¥o˚ss_c⁄„ªn˚
(
sù
, 
msg
);

6477 i‡(
subs¸ùti⁄_°©e
 && 
	`°r°r
(subscription_state, "terminated") ) {

6478 
gch¨
 *
who
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, 
ªque°
 ? "From" : "To"));

6479 
gch¨
 *
key
 = 
	`sùe_gë_subs¸ùti⁄_key
(
evít
, 
who
);

6481 
	`SIPE_DEBUG_INFO
("¥o˚ss_öcomög_nŸify: sîvî say†th© subs¸ùti⁄Åÿ%†wa†ãrmö©ed.", 
who
);

6482 
	`g_‰ì
(
who
);

6484 i‡(
	`g_hash_èbÀ_lookup
(
sù
->
subs¸ùti⁄s
, 
key
)) {

6485 
	`g_hash_èbÀ_ªmove
(
sù
->
subs¸ùti⁄s
, 
key
);

6486 
	`SIPE_DEBUG_INFO
("¥o˚ss_subs¸ibe_ª•⁄£: subs¸ùti⁄ dülogÑemoved f‹: %s", 
key
);

6489 
	`g_‰ì
(
key
);

6492 i‡(!
ªque°
 && 
evít
) {

6493 c⁄° 
gch¨
 *
expúes_hódî
 = 
	`sùmsg_föd_hódî
(
msg
, "Expires");

6494 
timeout
 = 
expúes_hódî
 ? 
	`°πﬁ
”xpúes_hódî, 
NULL
, 10) : 0;

6495 
	`SIPE_DEBUG_INFO
("¥o˚ss_öcomög_nŸify: subs¸ùti⁄Éxpúes:%d", 
timeout
);

6497 i‡(
timeout
) {

6499 
timeout
 = (timeout - 120) > 120 ? (timeout - 120) :Åimeout;

6501 i‡(
	`sùe_°rˇ£_equÆ
(
evít
, "presence.wpending") &&

6502 
	`g_¶i°_föd_cu°om
(
sù
->
Ælow_evíts
, "¥e£n˚.w≥ndög", (
GCom∑ªFunc
)
g_ascii_°rˇ£cmp
))

6504 
gch¨
 *
a˘i⁄_«me
 = 
	`g_°rdup_¥ötf
("<%s>", "presence.wpending");

6505 
	`sùe_scheduÀ_£c⁄ds
(
sùe_¥iv©e
,

6506 
a˘i⁄_«me
,

6507 
NULL
,

6508 
timeout
,

6509 
sùe_subs¸ibe_¥e£n˚_w≥ndög
,

6510 
NULL
);

6511 
	`g_‰ì
(
a˘i⁄_«me
);

6513 i‡(
	`sùe_°rˇ£_equÆ
(
evít
, "presence") &&

6514 
	`g_¶i°_föd_cu°om
(
sù
->
Ælow_evíts
, "¥e£n˚", (
GCom∑ªFunc
)
g_ascii_°rˇ£cmp
))

6516 
gch¨
 *
who
 = 
	`∑r£_‰om
(
	`sùmsg_föd_hódî
(
msg
, "To"));

6517 
gch¨
 *
a˘i⁄_«me
 = 
	`g_°rdup_¥ötf
(
ACTION_NAME_PRESENCE
, 
who
);

6519 i‡(
sù
->
b©ched_suµ‹t
) {

6520 
	`sùe_¥o˚ss_¥e£n˚_timeout
(
sùe_¥iv©e
, 
msg
, 
who
, 
timeout
);

6523 
	`sùe_scheduÀ_£c⁄ds
(
sùe_¥iv©e
,

6524 
a˘i⁄_«me
,

6525 
	`g_°rdup
(
who
),

6526 
timeout
,

6527 
sùe_subs¸ibe_¥e£n˚_sögÀ
,

6528 
g_‰ì
);

6529 
	`SIPE_DEBUG_INFO
("Resubs¸ùti⁄ sögÀ c⁄è˘ (%sËö %d", 
who
, 
timeout
);

6531 
	`g_‰ì
(
a˘i⁄_«me
);

6532 
	`g_‰ì
(
who
);

6538 i‡(
ªque°
 && !
bíŸify
)

6540 
	`£nd_sù_ª•⁄£
(
sùe_¥iv©e
, 
msg
, 200, "OK", 
NULL
);

6542 
	}
}

6549 
gboﬁón


6550 
	$sùe_is_u£r_°©e
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

6552 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

6553 
gboﬁón
 
ªs
;

6554 
time_t
 
now
 = 
	`time
(
NULL
);

6556 
	`SIPE_DEBUG_INFO
("sùe_is_u£r_°©e: sù->idÀ_swôch : %s", 
	`as˘ime
(
	`loˇ…ime
(&(
sù
->
idÀ_swôch
))));

6557 
	`SIPE_DEBUG_INFO
("sùe_is_u£r_°©e:Çow : %s", 
	`as˘ime
(
	`loˇ…ime
(&
now
)));

6559 
ªs
 = ((
now
 - 
SIPE_IDLE_SET_DELAY
 * 2Ë>
sù
->
idÀ_swôch
);

6561 
	`SIPE_DEBUG_INFO
("sùe_is_u£r_°©e:Ñe† = %s", 
ªs
 ? "USER" : "MACHINE");

6562  
ªs
;

6563 
	}
}

6566 
	$£nd_¥e£n˚_sﬂp0
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

6567 
gboﬁón
 
do_publish_ˇÀnd¨
,

6568 
gboﬁón
 
do_ª£t_°©us
)

6570 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

6571 
sùe_ˇÀnd¨
* 
ˇl
 = 
sù
->cal;

6572 
avaûabûôy
 = 0;

6573 
a˘ivôy
 = 0;

6574 
gch¨
 *
body
;

6575 
gch¨
 *
tmp
;

6576 
gch¨
 *
tmp2
 = 
NULL
;

6577 
gch¨
 *
ªs_nŸe
 = 
NULL
;

6578 
gch¨
 *
ªs_oof
 = 
NULL
;

6579 c⁄° 
gch¨
 *
nŸe_pub
 = 
NULL
;

6580 
gch¨
 *
°©es
 = 
NULL
;

6581 
gch¨
 *
ˇÀnd¨_d©a
 = 
NULL
;

6582 
gch¨
 *
ïid
 = 
	`gë_ïid
(
sù
);

6583 
time_t
 
now
 = 
	`time
(
NULL
);

6584 
gch¨
 *
sö˚_time_°r
 = 
	`sùe_utûs_time_to_°r
(
now
);

6585 c⁄° 
gch¨
 *
oof_nŸe
 = 
ˇl
 ? 
	`sùe_ews_gë_oof_nŸe
(ˇlË: 
NULL
;

6586 c⁄° *
u£r_öput
;

6587 
gboﬁón
 
pub_oof
 = 
ˇl
 && 
oof_nŸe
 && (!
sù
->
nŸe
 || cÆ->
upd©ed
 > sù->
nŸe_sö˚
);

6589 i‡(
oof_nŸe
 && 
sù
->
nŸe
) {

6590 
	`SIPE_DEBUG_INFO
("ˇl->oof_°¨à : %s", 
	`as˘ime
(
	`loˇ…ime
(&(
ˇl
->
oof_°¨t
))));

6591 
	`SIPE_DEBUG_INFO
("sù->nŸe_sö˚ : %s", 
	`as˘ime
(
	`loˇ…ime
(&(
sù
->
nŸe_sö˚
))));

6594 
	`SIPE_DEBUG_INFO
("sù->nŸê : %s", 
sù
->
nŸe
 ? sip->note : "");

6596 i‡(!
sù
->
öôül_°©e_published
 ||

6597 
do_ª£t_°©us
)

6599 
	`g_‰ì
(
sù
->
°©us
);

6600 
sù
->
°©us
 = 
	`g_°rdup
(
SIPE_STATUS_ID_AVAILABLE
);

6603 
	`sùe_gë_a˘_avaû_by_°©us_2005
(
sù
->
°©us
, &
a˘ivôy
, &
avaûabûôy
);

6606 i‡(
pub_oof
) {

6607 
nŸe_pub
 = 
oof_nŸe
;

6608 
ªs_oof
 = 
SIPE_SOAP_SET_PRESENCE_OOF_XML
;

6609 
ˇl
->
published
 = 
TRUE
;

6610 } i‡(
sù
->
nŸe
) {

6611 i‡(
sù
->
is_oof_nŸe
 && !
oof_nŸe
) {

6612 
	`g_‰ì
(
sù
->
nŸe
);

6613 
sù
->
nŸe
 = 
NULL
;

6614 
sù
->
is_oof_nŸe
 = 
FALSE
;

6615 
sù
->
nŸe_sö˚
 = 0;

6617 
nŸe_pub
 = 
sù
->
nŸe
;

6618 
ªs_oof
 = 
sù
->
is_oof_nŸe
 ? 
SIPE_SOAP_SET_PRESENCE_OOF_XML
 : "";

6622 i‡(
nŸe_pub
)

6625 
tmp
 = 
	`sùe_backíd_m¨kup_°rù_html
(
nŸe_pub
);

6626 
ªs_nŸe
 = 
	`g_m¨kup_¥ötf_esˇ≥d
(
SIPE_SOAP_SET_PRESENCE_NOTE_XML
, 
tmp
);

6627 
	`g_‰ì
(
tmp
);

6631 i‡(!
do_ª£t_°©us
) {

6632 i‡(
	`sùe_is_u£r_°©e
(
sùe_¥iv©e
Ë&& !
do_publish_ˇÀnd¨
 && 
sù
->
öôül_°©e_published
)

6634 
gch¨
 *
a˘ivôy_tokí
 = 
NULL
;

6635 
avaû_2007
 = 
	`sùe_gë_avaûabûôy_by_°©us
(
sù
->
°©us
, &
a˘ivôy_tokí
);

6637 
°©es
 = 
	`g_°rdup_¥ötf
(
SIPE_SOAP_SET_PRESENCE_STATES
,

6638 
avaû_2007
,

6639 
sö˚_time_°r
,

6640 
ïid
,

6641 
a˘ivôy_tokí
);

6642 
	`g_‰ì
(
a˘ivôy_tokí
);

6646 i‡(
sù
->
u£r_°©es
) {

6647 
°©es
 = 
	`g_°rdup
(
sù
->
u£r_°©es
);

6653 
sù
->
öôül_°©e_published
 = 
TRUE
;

6656 i‡(
ˇl
 && (!
	`is_em±y
(ˇl->
Àgacy_dn
Ë|| !is_em±y(ˇl->
emaû
)Ë&& cÆ->
fb_°¨t
 && !is_em±y(ˇl->
‰ì_busy
))

6658 *
fb_°¨t_°r
 = 
	`sùe_utûs_time_to_°r
(
ˇl
->
fb_°¨t
);

6659 *
‰ì_busy_ba£64
 = 
	`sùe_ˇl_gë_‰ìbusy_ba£64
(
ˇl
->
‰ì_busy
);

6660 
ˇÀnd¨_d©a
 = 
	`g_°rdup_¥ötf
(
SIPE_SOAP_SET_PRESENCE_CALENDAR
,

6661 !
	`is_em±y
(
ˇl
->
Àgacy_dn
Ë? cÆ->Àgacy_d¿: cÆ->
emaû
,

6662 
fb_°¨t_°r
,

6663 
‰ì_busy_ba£64
);

6664 
	`g_‰ì
(
fb_°¨t_°r
);

6665 
	`g_‰ì
(
‰ì_busy_ba£64
);

6668 
u£r_öput
 = !
	`sùe_is_u£r_°©e
(
sùe_¥iv©e
Ë&& 
sù
->
°©us
 !
SIPE_STATUS_ID_AVAILABLE
 ? "idle" : "active";

6671 
body
 = 
	`g_°rdup_¥ötf
(
SIPE_SOAP_SET_PRESENCE
,

6672 
sù
->
u£∫ame
,

6673 
avaûabûôy
,

6674 
a˘ivôy
,

6675 (
tmp
 = 
	`g_ascii_°rup
(
	`g_gë_ho°_«me
(), -1)),

6676 
ªs_nŸe
 ?Ñes_note : "",

6677 
ªs_oof
 ?Ñes_oof : "",

6678 
°©es
 ? states : "",

6679 
ˇÀnd¨_d©a
 ? calendar_data : "",

6680 
ïid
,

6681 
sö˚_time_°r
,

6682 
sö˚_time_°r
,

6683 
u£r_öput
);

6684 
	`g_‰ì
(
tmp
);

6685 
	`g_‰ì
(
tmp2
);

6686 
	`g_‰ì
(
ªs_nŸe
);

6687 
	`g_‰ì
(
°©es
);

6688 
	`g_‰ì
(
ˇÀnd¨_d©a
);

6690 
	`£nd_sﬂp_ªque°
(
sùe_¥iv©e
, 
body
);

6692 
	`g_‰ì
(
body
);

6693 
	`g_‰ì
(
sö˚_time_°r
);

6694 
	`g_‰ì
(
ïid
);

6695 
	}
}

6698 
	$£nd_¥e£n˚_sﬂp
(
sùe_accou¡_d©a
 *
sù
,

6699 
gboﬁón
 
do_publish_ˇÀnd¨
)

6701  
	`£nd_¥e£n˚_sﬂp0
(
SIP_TO_CORE_PRIVATE
, 
do_publish_ˇÀnd¨
, 
FALSE
);

6702 
	}
}

6705 
gboﬁón


6706 
	$¥o˚ss_£nd_¥e£n˚_ˇãg‹y_publish_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

6707 
sùmsg
 *
msg
,

6708 
å™ß˘i⁄
 *
å™s
)

6710 c⁄° 
gch¨
 *
c⁄ã¡ty≥
 = 
	`sùmsg_föd_hódî
(
msg
, "Content-Type");

6712 i‡(
msg
->
ª•⁄£
 =409 && 
	`g_°r_has_¥efix
(
c⁄ã¡ty≥
, "application/msrtc-fault+xml")) {

6713 
sùe_xml
 *
xml
;

6714 c⁄° 
sùe_xml
 *
node
;

6715 
gch¨
 *
Áu…_code
;

6716 
GHashTabÀ
 *
Áu…s
;

6717 
ödex_our
;

6718 
gboﬁón
 
has_devi˚_publiˇti⁄
 = 
FALSE
;

6720 
xml
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

6723 
Áu…_code
 = 
	`sùe_xml_d©a
(
	`sùe_xml_chûd
(
xml
, "Faultcode"));

6724 i‡(!
	`sùe_°ªquÆ
(
Áu…_code
, "Client.BadCall.WrongDelta")) {

6725 
	`SIPE_DEBUG_INFO
("¥o˚ss_£nd_¥e£n˚_ˇãg‹y_publish_ª•⁄£: unsuµ‹ãd fau… code:%†ªtu∫ög.", 
Áu…_code
);

6726 
	`g_‰ì
(
Áu…_code
);

6727 
	`sùe_xml_‰ì
(
xml
);

6728  
TRUE
;

6730 
	`g_‰ì
(
Áu…_code
);

6733 
Áu…s
 = 
	`g_hash_èbÀ_√w_fuŒ
(
g_°r_hash
, 
g_°r_equÆ
, 
g_‰ì
, g_free);

6734 
node
 = 
	`sùe_xml_chûd
(
xml
, "details/operation");

6735 
node
;

6736 
node
 = 
	`sùe_xml_twö
(node))

6738 c⁄° 
gch¨
 *
ödex
 = 
	`sùe_xml_©åibuã
(
node
, "index");

6739 c⁄° 
gch¨
 *
curVîsi⁄
 = 
	`sùe_xml_©åibuã
(
node
, "curVersion");

6741 
	`g_hash_èbÀ_ö£π
(
Áu…s
, 
	`g_°rdup
(
ödex
), g_°rdup(
curVîsi⁄
));

6742 
	`SIPE_DEBUG_INFO
("Áu…ádded: index:%†curVîsi⁄:%s", 
ödex
, 
curVîsi⁄
);

6744 
	`sùe_xml_‰ì
(
xml
);

6749 
xml
 = 
	`sùe_xml_∑r£
(
å™s
->
msg
->
body
,Åøns->msg->
bodyÀn
);

6752 
node
 = 
	`sùe_xml_chûd
(
xml
, "publications/publication"),

6753 
ödex_our
 = 1;

6754 
node
;

6755 
node
 = 
	`sùe_xml_twö
“ode), 
ödex_our
++)

6757 
gch¨
 *
idx
 = 
	`g_°rdup_¥ötf
("%d", 
ödex_our
);

6758 c⁄° 
gch¨
 *
curVîsi⁄
 = 
	`g_hash_èbÀ_lookup
(
Áu…s
, 
idx
);

6759 c⁄° 
gch¨
 *
ˇãg‹yName
 = 
	`sùe_xml_©åibuã
(
node
, "categoryName");

6760 
	`g_‰ì
(
idx
);

6762 i‡(
	`sùe_°ªquÆ
("devi˚", 
ˇãg‹yName
)) {

6763 
has_devi˚_publiˇti⁄
 = 
TRUE
;

6766 i‡(
curVîsi⁄
) {

6767 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

6768 c⁄° 
gch¨
 *
c⁄èöî
 = 
	`sùe_xml_©åibuã
(
node
, "container");

6769 c⁄° 
gch¨
 *
ö°™˚
 = 
	`sùe_xml_©åibuã
(
node
, "instance");

6771 
gch¨
 *
key
 = 
	`g_°rdup_¥ötf
("<%s><%s><%s>", 
ˇãg‹yName
, 
ö°™˚
, 
c⁄èöî
);

6772 
GHashTabÀ
 *
ˇãg‹y
 = 
	`g_hash_èbÀ_lookup
(
sù
->
our_publiˇti⁄s
, 
ˇãg‹yName
);

6774 i‡(
ˇãg‹y
) {

6775 
sùe_publiˇti⁄
 *
publiˇti⁄
 =

6776 
	`g_hash_èbÀ_lookup
(
ˇãg‹y
, 
key
);

6778 
	`SIPE_DEBUG_INFO
("key i†%s", 
key
);

6780 i‡(
publiˇti⁄
) {

6781 
	`SIPE_DEBUG_INFO
("Updating %s with version %s. Was %d before.",

6782 
key
, 
curVîsi⁄
, 
publiˇti⁄
->
vîsi⁄
);

6784 
publiˇti⁄
->
vîsi⁄
 = 
	`©oi
(
curVîsi⁄
);

6788 
sùe_publiˇti⁄
 *
publiˇti⁄
 = 
	`g_√w0
(sipe_publication, 1);

6789 
publiˇti⁄
->
ˇãg‹y
 = 
	`g_°rdup
(
ˇãg‹yName
);

6790 
publiˇti⁄
->
ö°™˚
 = 
	`©oi
(instance);

6791 
publiˇti⁄
->
c⁄èöî
 = 
	`©oi
(container);

6792 
publiˇti⁄
->
vîsi⁄
 = 
	`©oi
(
curVîsi⁄
);

6793 
ˇãg‹y
 = 
	`g_hash_èbÀ_√w_fuŒ
(
g_°r_hash
, 
g_°r_equÆ
,

6794 
g_‰ì
, (
GDe°royNŸify
)
‰ì_publiˇti⁄
);

6795 
	`g_hash_èbÀ_ö£π
(
ˇãg‹y
, 
	`g_°rdup
(
key
), 
publiˇti⁄
);

6796 
	`g_hash_èbÀ_ö£π
(
sù
->
our_publiˇti⁄s
, 
	`g_°rdup
(
ˇãg‹yName
), 
ˇãg‹y
);

6797 
	`SIPE_DEBUG_INFO
("addedÜo° c©eg‹y '%s' key '%s'", 
ˇãg‹yName
, 
key
);

6799 
	`g_‰ì
(
key
);

6802 
	`sùe_xml_‰ì
(
xml
);

6803 
	`g_hash_èbÀ_de°roy
(
Áu…s
);

6806 i‡(
has_devi˚_publiˇti⁄
) {

6807 
	`£nd_publish_ˇãg‹y_öôül
(
sùe_¥iv©e
);

6809 
	`£nd_¥e£n˚_°©us
(
sùe_¥iv©e
, 
NULL
);

6812  
TRUE
;

6813 
	}
}

6819 
gch¨
 *

6820 
	$sùe_publish_gë_ˇãg‹y_devi˚
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

6822 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

6823 
gch¨
 *
uri
;

6824 
gch¨
 *
doc
;

6825 
gch¨
 *
ïid
 = 
	`gë_ïid
(
sù
);

6826 
gch¨
 *
uuid
 = 
	`gíî©eUUID‰omEPID
(
ïid
);

6827 
guöt
 
devi˚_ö°™˚
 = 
	`sùe_gë_pub_ö°™˚
(
sù
, 
SIPE_PUB_DEVICE
);

6829 
gch¨
 *
key
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "devi˚", 
devi˚_ö°™˚
, 2);

6830 
sùe_publiˇti⁄
 *
publiˇti⁄
 =

6831 
	`g_hash_èbÀ_lookup
(g_hash_èbÀ_lookup(
sù
->
our_publiˇti⁄s
, "devi˚"), 
key
);

6833 
	`g_‰ì
(
key
);

6834 
	`g_‰ì
(
ïid
);

6836 
uri
 = 
	`sù_uri_£lf
(
sù
);

6837 
doc
 = 
	`g_°rdup_¥ötf
(
SIPE_PUB_XML_DEVICE
,

6838 
devi˚_ö°™˚
,

6839 
publiˇti⁄
 ?Öubliˇti⁄->
vîsi⁄
 : 0,

6840 
uuid
,

6841 
uri
,

6843 
	`g_gë_ho°_«me
()

6846 
	`g_‰ì
(
uri
);

6847 
	`g_‰ì
(
uuid
);

6849  
doc
;

6850 
	}
}

6858 
gch¨
 *

6859 
	$sùe_publish_gë_ˇãg‹y_°©e
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

6860 
gboﬁón
 
is_u£r_°©e
)

6862 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

6863 
avaûabûôy
 = 
	`sùe_gë_avaûabûôy_by_°©us
(
sù
->
°©us
, 
NULL
);

6864 
guöt
 
ö°™˚
 = 
is_u£r_°©e
 ? 
	`sùe_gë_pub_ö°™˚
(
sù
, 
SIPE_PUB_STATE_USER
) :

6865 
	`sùe_gë_pub_ö°™˚
(
sù
, 
SIPE_PUB_STATE_MACHINE
);

6867 
gch¨
 *
key_2
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "°©e", 
ö°™˚
, 2);

6868 
gch¨
 *
key_3
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "°©e", 
ö°™˚
, 3);

6869 
sùe_publiˇti⁄
 *
publiˇti⁄_2
 =

6870 
	`g_hash_èbÀ_lookup
(g_hash_èbÀ_lookup(
sù
->
our_publiˇti⁄s
, "°©e"), 
key_2
);

6871 
sùe_publiˇti⁄
 *
publiˇti⁄_3
 =

6872 
	`g_hash_èbÀ_lookup
(g_hash_èbÀ_lookup(
sù
->
our_publiˇti⁄s
, "°©e"), 
key_3
);

6874 
	`g_‰ì
(
key_2
);

6875 
	`g_‰ì
(
key_3
);

6877 i‡(
publiˇti⁄_2
 && (publiˇti⁄_2->
avaûabûôy
 ==ávailability))

6879 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_publish_get_category_state: state has NOT changed. Exiting.");

6880  
NULL
;

6883  
	`g_°rdup_¥ötf
–
is_u£r_°©e
 ? 
SIPE_PUB_XML_STATE_USER
 : 
SIPE_PUB_XML_STATE_MACHINE
,

6884 
ö°™˚
,

6885 
publiˇti⁄_2
 ?Öubliˇti⁄_2->
vîsi⁄
 : 0,

6886 
avaûabûôy
,

6887 
ö°™˚
,

6888 
publiˇti⁄_3
 ?Öubliˇti⁄_3->
vîsi⁄
 : 0,

6889 
avaûabûôy
);

6890 
	}
}

6898 
gch¨
 *

6899 
	$sùe_publish_gë_ˇãg‹y_°©e_ˇÀnd¨
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

6900 
sùe_ˇl_evít
 *
evít
,

6901 c⁄° *
uri
,

6902 
ˇl_ßtus
)

6904 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

6905 
gch¨
 *
°¨t_time_°r
;

6906 
avaûabûôy
 = 0;

6907 
gch¨
 *
ªs
;

6908 
gch¨
 *
tmp
 = 
NULL
;

6909 
guöt
 
ö°™˚
 = (
ˇl_ßtus
 =
SIPE_CAL_OOF
) ?

6910 
	`sùe_gë_pub_ö°™˚
(
sù
, 
SIPE_PUB_STATE_CALENDAR_OOF
) :

6911 
	`sùe_gë_pub_ö°™˚
(
sù
, 
SIPE_PUB_STATE_CALENDAR
);

6914 
gch¨
 *
key_2
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "°©e", 
ö°™˚
, 2);

6915 
gch¨
 *
key_3
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "°©e", 
ö°™˚
, 3);

6916 
sùe_publiˇti⁄
 *
publiˇti⁄_2
 =

6917 
	`g_hash_èbÀ_lookup
(g_hash_èbÀ_lookup(
sù
->
our_publiˇti⁄s
, "°©e"), 
key_2
);

6918 
sùe_publiˇti⁄
 *
publiˇti⁄_3
 =

6919 
	`g_hash_èbÀ_lookup
(g_hash_èbÀ_lookup(
sù
->
our_publiˇti⁄s
, "°©e"), 
key_3
);

6921 
	`g_‰ì
(
key_2
);

6922 
	`g_‰ì
(
key_3
);

6924 i‡(!
publiˇti⁄_3
 && !
evít
) {

6925 
	`SIPE_DEBUG_INFO
("sipe_publish_get_category_state_calendar: "

6926 "Exôögá†nÿpubliˇti⁄ándÇÿevíàf‹ cÆ_ßtus:%d", 
ˇl_ßtus
);

6927  
NULL
;

6930 i‡(
evít
 &&

6931 
publiˇti⁄_3
 &&

6932 (
publiˇti⁄_3
->
avaûabûôy
 ==ávailability) &&

6933 
	`sùe_°ªquÆ
(
publiˇti⁄_3
->
ˇl_evít_hash
, (
tmp
 = 
	`sùe_ˇl_evít_hash
(
evít
))))

6935 
	`g_‰ì
(
tmp
);

6936 
	`SIPE_DEBUG_INFO
("sipe_publish_get_category_state_calendar: "

6937 "ˇ»°©êha†NOT ch™ged f‹ cÆ_ßtus:%d. Exôög.", 
ˇl_ßtus
);

6938  
NULL
;

6940 
	`g_‰ì
(
tmp
);

6942 i‡(
evít
 &&

6943 (
evít
->
ˇl_°©us
 =
SIPE_CAL_BUSY
 ||

6944 
evít
->
ˇl_°©us
 =
SIPE_CAL_OOF
))

6946 
gch¨
 *
avaûabûôy_xml_°r
 = 
NULL
;

6947 
gch¨
 *
a˘ivôy_xml_°r
 = 
NULL
;

6949 i‡(
evít
->
ˇl_°©us
 =
SIPE_CAL_BUSY
) {

6950 
avaûabûôy_xml_°r
 = 
	`g_°rdup_¥ötf
(
SIPE_PUB_XML_STATE_CALENDAR_AVAIL
, 6500);

6953 i‡(
evít
->
ˇl_°©us
 =
SIPE_CAL_BUSY
 &&Évít->
is_mìtög
) {

6954 
a˘ivôy_xml_°r
 = 
	`g_°rdup_¥ötf
(
SIPE_PUB_XML_STATE_CALENDAR_ACTIVITY
,

6955 
sùe_a˘ivôy_m≠
[
SIPE_ACTIVITY_IN_MEETING
].
tokí
,

6958 } i‡(
evít
->
ˇl_°©us
 =
SIPE_CAL_OOF
) {

6959 
a˘ivôy_xml_°r
 = 
	`g_°rdup_¥ötf
(
SIPE_PUB_XML_STATE_CALENDAR_ACTIVITY
,

6960 
sùe_a˘ivôy_m≠
[
SIPE_ACTIVITY_OOF
].
tokí
,

6964 
°¨t_time_°r
 = 
	`sùe_utûs_time_to_°r
(
evít
->
°¨t_time
);

6966 
ªs
 = 
	`g_°rdup_¥ötf
(
SIPE_PUB_XML_STATE_CALENDAR
,

6967 
ö°™˚
,

6968 
publiˇti⁄_2
 ?Öubliˇti⁄_2->
vîsi⁄
 : 0,

6969 
uri
,

6970 
°¨t_time_°r
,

6971 
avaûabûôy_xml_°r
 ?ávailability_xml_str : "",

6972 
a˘ivôy_xml_°r
 ?áctivity_xml_str : "",

6973 
evít
->
subje˘
 ?Évent->subject : "",

6974 
evít
->
loˇti⁄
 ?Évent->location : "",

6976 
ö°™˚
,

6977 
publiˇti⁄_3
 ?Öubliˇti⁄_3->
vîsi⁄
 : 0,

6978 
uri
,

6979 
°¨t_time_°r
,

6980 
avaûabûôy_xml_°r
 ?ávailability_xml_str : "",

6981 
a˘ivôy_xml_°r
 ?áctivity_xml_str : "",

6982 
evít
->
subje˘
 ?Évent->subject : "",

6983 
evít
->
loˇti⁄
 ?Évent->location : ""

6985 
	`g_‰ì
(
°¨t_time_°r
);

6986 
	`g_‰ì
(
avaûabûôy_xml_°r
);

6987 
	`g_‰ì
(
a˘ivôy_xml_°r
);

6992 
ªs
 = 
	`g_°rdup_¥ötf
(
SIPE_PUB_XML_STATE_CALENDAR_CLEAR
,

6993 
ö°™˚
,

6994 
publiˇti⁄_2
 ?Öubliˇti⁄_2->
vîsi⁄
 : 0,

6996 
ö°™˚
,

6997 
publiˇti⁄_3
 ?Öubliˇti⁄_3->
vîsi⁄
 : 0

7001  
ªs
;

7002 
	}
}

7008 
gch¨
 *

7009 
	$sùe_publish_gë_ˇãg‹y_°©e_machöe
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

7011  
	`sùe_publish_gë_ˇãg‹y_°©e
(
sùe_¥iv©e
, 
FALSE
);

7012 
	}
}

7018 
gch¨
 *

7019 
	$sùe_publish_gë_ˇãg‹y_°©e_u£r
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

7021  
	`sùe_publish_gë_ˇãg‹y_°©e
(
sùe_¥iv©e
, 
TRUE
);

7022 
	}
}

7033 
gch¨
 *

7034 
	$sùe_publish_gë_ˇãg‹y_nŸe
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

7035 c⁄° *
nŸe
,

7036 c⁄° *
nŸe_ty≥
,

7037 
time_t
 
nŸe_°¨t
,

7038 
time_t
 
nŸe_íd
)

7040 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

7041 
guöt
 
ö°™˚
 = 
	`sùe_°ªquÆ
("OOF", 
nŸe_ty≥
Ë? 
	`sùe_gë_pub_ö°™˚
(
sù
, 
SIPE_PUB_NOTE_OOF
) : 0;

7043 
gch¨
 *
key_nŸe_200
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "nŸe", 
ö°™˚
, 200);

7044 
gch¨
 *
key_nŸe_300
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "nŸe", 
ö°™˚
, 300);

7045 
gch¨
 *
key_nŸe_400
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "nŸe", 
ö°™˚
, 400);

7047 
sùe_publiˇti⁄
 *
publiˇti⁄_nŸe_200
 =

7048 
	`g_hash_èbÀ_lookup
(g_hash_èbÀ_lookup(
sù
->
our_publiˇti⁄s
, "nŸe"), 
key_nŸe_200
);

7049 
sùe_publiˇti⁄
 *
publiˇti⁄_nŸe_300
 =

7050 
	`g_hash_èbÀ_lookup
(g_hash_èbÀ_lookup(
sù
->
our_publiˇti⁄s
, "nŸe"), 
key_nŸe_300
);

7051 
sùe_publiˇti⁄
 *
publiˇti⁄_nŸe_400
 =

7052 
	`g_hash_èbÀ_lookup
(g_hash_èbÀ_lookup(
sù
->
our_publiˇti⁄s
, "nŸe"), 
key_nŸe_400
);

7054 *
tmp
 = 
nŸe
 ? 
	`sùe_backíd_m¨kup_°rù_html
“ŸeË: 
NULL
;

7055 *
n1
 = 
tmp
 ? 
	`g_m¨kup_esˇ≥_ãxt
—mp, -1Ë: 
NULL
;

7056 c⁄° *
n2
 = 
publiˇti⁄_nŸe_200
 ?Öubliˇti⁄_nŸe_200->
nŸe
 : 
NULL
;

7057 *
ªs
, *
tmp1
, *
tmp2
, *
tmp3
;

7058 *
°¨t_time_©å
;

7059 *
íd_time_©å
;

7061 
	`g_‰ì
(
tmp
);

7062 
tmp
 = 
NULL
;

7063 
	`g_‰ì
(
key_nŸe_200
);

7064 
	`g_‰ì
(
key_nŸe_300
);

7065 
	`g_‰ì
(
key_nŸe_400
);

7068 i‡(
	`sùe_°ªquÆ
(
n1
, 
n2
))

7070 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_publish_get_category_note:Çote has NOT changed. Exiting.");

7071 
	`g_‰ì
(
n1
);

7072  
NULL
;

7075 
°¨t_time_©å
 = 
nŸe_°¨t
 ? 
	`g_°rdup_¥ötf
(" sèπTime=\"%s\"", (
tmp
 = 
	`sùe_utûs_time_to_°r
“Ÿe_°¨t))Ë: 
NULL
;

7076 
	`g_‰ì
(
tmp
);

7077 
tmp
 = 
NULL
;

7078 
íd_time_©å
 = 
nŸe_íd
 ? 
	`g_°rdup_¥ötf
("ÉndTime=\"%s\"", (
tmp
 = 
	`sùe_utûs_time_to_°r
“Ÿe_íd))Ë: 
NULL
;

7079 
	`g_‰ì
(
tmp
);

7081 i‡(
n1
) {

7082 
tmp1
 = 
	`g_°rdup_¥ötf
(
SIPE_PUB_XML_NOTE
,

7083 
ö°™˚
,

7085 
publiˇti⁄_nŸe_200
 ?Öubliˇti⁄_nŸe_200->
vîsi⁄
 : 0,

7086 
nŸe_ty≥
,

7087 
°¨t_time_©å
 ? start_time_attr : "",

7088 
íd_time_©å
 ?Énd_time_attr : "",

7089 
n1
);

7091 
tmp2
 = 
	`g_°rdup_¥ötf
(
SIPE_PUB_XML_NOTE
,

7092 
ö°™˚
,

7094 
publiˇti⁄_nŸe_300
 ?Öubliˇti⁄_nŸe_300->
vîsi⁄
 : 0,

7095 
nŸe_ty≥
,

7096 
°¨t_time_©å
 ? start_time_attr : "",

7097 
íd_time_©å
 ?Énd_time_attr : "",

7098 
n1
);

7100 
tmp3
 = 
	`g_°rdup_¥ötf
(
SIPE_PUB_XML_NOTE
,

7101 
ö°™˚
,

7103 
publiˇti⁄_nŸe_400
 ?Öubliˇti⁄_nŸe_400->
vîsi⁄
 : 0,

7104 
nŸe_ty≥
,

7105 
°¨t_time_©å
 ? start_time_attr : "",

7106 
íd_time_©å
 ?Énd_time_attr : "",

7107 
n1
);

7109 
tmp1
 = 
	`g_°rdup_¥ötf
–
SIPE_PUB_XML_PUBLICATION_CLEAR
,

7111 
ö°™˚
,

7113 
publiˇti⁄_nŸe_200
 ?Öubliˇti⁄_nŸe_200->
vîsi⁄
 : 0,

7115 
tmp2
 = 
	`g_°rdup_¥ötf
–
SIPE_PUB_XML_PUBLICATION_CLEAR
,

7117 
ö°™˚
,

7119 
publiˇti⁄_nŸe_200
 ?Öubliˇti⁄_nŸe_200->
vîsi⁄
 : 0,

7121 
tmp3
 = 
	`g_°rdup_¥ötf
–
SIPE_PUB_XML_PUBLICATION_CLEAR
,

7123 
ö°™˚
,

7125 
publiˇti⁄_nŸe_200
 ?Öubliˇti⁄_nŸe_200->
vîsi⁄
 : 0,

7128 
ªs
 = 
	`g_°rc⁄ˇt
(
tmp1
, 
tmp2
, 
tmp3
, 
NULL
);

7130 
	`g_‰ì
(
°¨t_time_©å
);

7131 
	`g_‰ì
(
íd_time_©å
);

7132 
	`g_‰ì
(
tmp1
);

7133 
	`g_‰ì
(
tmp2
);

7134 
	`g_‰ì
(
tmp3
);

7135 
	`g_‰ì
(
n1
);

7137  
ªs
;

7138 
	}
}

7144 
gch¨
 *

7145 
	$sùe_publish_gë_ˇãg‹y_ˇl_w‹kög_hours
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

7147 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

7148 
sùe_ˇÀnd¨
* 
ˇl
 = 
sù
->cal;

7151 
gch¨
 *
key_ˇl_1
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "calendarData", 0, 1);

7152 
gch¨
 *
key_ˇl_100
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "calendarData", 0, 100);

7153 
gch¨
 *
key_ˇl_200
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "calendarData", 0, 200);

7154 
gch¨
 *
key_ˇl_300
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "calendarData", 0, 300);

7155 
gch¨
 *
key_ˇl_400
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "calendarData", 0, 400);

7156 
gch¨
 *
key_ˇl_32000
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "calendarData", 0, 32000);

7158 
sùe_publiˇti⁄
 *
publiˇti⁄_ˇl_1
 =

7159 
	`g_hash_èbÀ_lookup
(g_hash_èbÀ_lookup(
sù
->
our_publiˇti⁄s
, "ˇÀnd¨D©a"), 
key_ˇl_1
);

7160 
sùe_publiˇti⁄
 *
publiˇti⁄_ˇl_100
 =

7161 
	`g_hash_èbÀ_lookup
(g_hash_èbÀ_lookup(
sù
->
our_publiˇti⁄s
, "ˇÀnd¨D©a"), 
key_ˇl_100
);

7162 
sùe_publiˇti⁄
 *
publiˇti⁄_ˇl_200
 =

7163 
	`g_hash_èbÀ_lookup
(g_hash_èbÀ_lookup(
sù
->
our_publiˇti⁄s
, "ˇÀnd¨D©a"), 
key_ˇl_200
);

7164 
sùe_publiˇti⁄
 *
publiˇti⁄_ˇl_300
 =

7165 
	`g_hash_èbÀ_lookup
(g_hash_èbÀ_lookup(
sù
->
our_publiˇti⁄s
, "ˇÀnd¨D©a"), 
key_ˇl_300
);

7166 
sùe_publiˇti⁄
 *
publiˇti⁄_ˇl_400
 =

7167 
	`g_hash_èbÀ_lookup
(g_hash_èbÀ_lookup(
sù
->
our_publiˇti⁄s
, "ˇÀnd¨D©a"), 
key_ˇl_400
);

7168 
sùe_publiˇti⁄
 *
publiˇti⁄_ˇl_32000
 =

7169 
	`g_hash_èbÀ_lookup
(g_hash_èbÀ_lookup(
sù
->
our_publiˇti⁄s
, "ˇÀnd¨D©a"), 
key_ˇl_32000
);

7171 c⁄° *
n1
 = 
ˇl
 ? cÆ->
w‹kög_hours_xml_°r
 : 
NULL
;

7172 c⁄° *
n2
 = 
publiˇti⁄_ˇl_300
 ?Öubliˇti⁄_ˇl_300->
w‹kög_hours_xml_°r
 : 
NULL
;

7174 
	`g_‰ì
(
key_ˇl_1
);

7175 
	`g_‰ì
(
key_ˇl_100
);

7176 
	`g_‰ì
(
key_ˇl_200
);

7177 
	`g_‰ì
(
key_ˇl_300
);

7178 
	`g_‰ì
(
key_ˇl_400
);

7179 
	`g_‰ì
(
key_ˇl_32000
);

7181 i‡(!
ˇl
 || 
	`is_em±y
(ˇl->
emaû
Ë|| is_em±y(ˇl->
w‹kög_hours_xml_°r
)) {

7182 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_publish_get_category_cal_working_hours:Ço dataÅoÖublish,Éxiting");

7183  
NULL
;

7186 i‡(
	`sùe_°ªquÆ
(
n1
, 
n2
))

7188 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_publish_get_category_cal_working_hours: WorkingHours has NOT changed. Exiting.");

7189  
NULL
;

7192  
	`g_°rdup_¥ötf
(
SIPE_PUB_XML_WORKING_HOURS
,

7194 
publiˇti⁄_ˇl_1
 ?Öubliˇti⁄_ˇl_1->
vîsi⁄
 : 0,

7195 
ˇl
->
emaû
,

7196 
ˇl
->
w‹kög_hours_xml_°r
,

7198 
publiˇti⁄_ˇl_100
 ?Öubliˇti⁄_ˇl_100->
vîsi⁄
 : 0,

7200 
publiˇti⁄_ˇl_200
 ?Öubliˇti⁄_ˇl_200->
vîsi⁄
 : 0,

7201 
ˇl
->
emaû
,

7202 
ˇl
->
w‹kög_hours_xml_°r
,

7204 
publiˇti⁄_ˇl_300
 ?Öubliˇti⁄_ˇl_300->
vîsi⁄
 : 0,

7205 
ˇl
->
emaû
,

7206 
ˇl
->
w‹kög_hours_xml_°r
,

7208 
publiˇti⁄_ˇl_400
 ?Öubliˇti⁄_ˇl_400->
vîsi⁄
 : 0,

7209 
ˇl
->
emaû
,

7210 
ˇl
->
w‹kög_hours_xml_°r
,

7212 
publiˇti⁄_ˇl_32000
 ?Öubliˇti⁄_ˇl_32000->
vîsi⁄
 : 0

7214 
	}
}

7220 
gch¨
 *

7221 
	$sùe_publish_gë_ˇãg‹y_ˇl_‰ì_busy
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

7223 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

7224 
sùe_ˇÀnd¨
* 
ˇl
 = 
sù
->cal;

7225 
guöt
 
ˇl_d©a_ö°™˚
 = 
	`sùe_gë_pub_ö°™˚
(
sù
, 
SIPE_PUB_CALENDAR_DATA
);

7226 *
fb_°¨t_°r
;

7227 *
‰ì_busy_ba£64
;

7228 c⁄° *
°
;

7229 c⁄° *
fb
;

7230 *
ªs
;

7233 
gch¨
 *
key_ˇl_1
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "ˇÀnd¨D©a", 
ˇl_d©a_ö°™˚
, 1);

7234 
gch¨
 *
key_ˇl_100
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "ˇÀnd¨D©a", 
ˇl_d©a_ö°™˚
, 100);

7235 
gch¨
 *
key_ˇl_200
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "ˇÀnd¨D©a", 
ˇl_d©a_ö°™˚
, 200);

7236 
gch¨
 *
key_ˇl_300
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "ˇÀnd¨D©a", 
ˇl_d©a_ö°™˚
, 300);

7237 
gch¨
 *
key_ˇl_400
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "ˇÀnd¨D©a", 
ˇl_d©a_ö°™˚
, 400);

7238 
gch¨
 *
key_ˇl_32000
 = 
	`g_°rdup_¥ötf
("<%s><%u><%u>", "ˇÀnd¨D©a", 
ˇl_d©a_ö°™˚
, 32000);

7240 
sùe_publiˇti⁄
 *
publiˇti⁄_ˇl_1
 =

7241 
	`g_hash_èbÀ_lookup
(g_hash_èbÀ_lookup(
sù
->
our_publiˇti⁄s
, "ˇÀnd¨D©a"), 
key_ˇl_1
);

7242 
sùe_publiˇti⁄
 *
publiˇti⁄_ˇl_100
 =

7243 
	`g_hash_èbÀ_lookup
(g_hash_èbÀ_lookup(
sù
->
our_publiˇti⁄s
, "ˇÀnd¨D©a"), 
key_ˇl_100
);

7244 
sùe_publiˇti⁄
 *
publiˇti⁄_ˇl_200
 =

7245 
	`g_hash_èbÀ_lookup
(g_hash_èbÀ_lookup(
sù
->
our_publiˇti⁄s
, "ˇÀnd¨D©a"), 
key_ˇl_200
);

7246 
sùe_publiˇti⁄
 *
publiˇti⁄_ˇl_300
 =

7247 
	`g_hash_èbÀ_lookup
(g_hash_èbÀ_lookup(
sù
->
our_publiˇti⁄s
, "ˇÀnd¨D©a"), 
key_ˇl_300
);

7248 
sùe_publiˇti⁄
 *
publiˇti⁄_ˇl_400
 =

7249 
	`g_hash_èbÀ_lookup
(g_hash_èbÀ_lookup(
sù
->
our_publiˇti⁄s
, "ˇÀnd¨D©a"), 
key_ˇl_400
);

7250 
sùe_publiˇti⁄
 *
publiˇti⁄_ˇl_32000
 =

7251 
	`g_hash_èbÀ_lookup
(g_hash_èbÀ_lookup(
sù
->
our_publiˇti⁄s
, "ˇÀnd¨D©a"), 
key_ˇl_32000
);

7253 
	`g_‰ì
(
key_ˇl_1
);

7254 
	`g_‰ì
(
key_ˇl_100
);

7255 
	`g_‰ì
(
key_ˇl_200
);

7256 
	`g_‰ì
(
key_ˇl_300
);

7257 
	`g_‰ì
(
key_ˇl_400
);

7258 
	`g_‰ì
(
key_ˇl_32000
);

7260 i‡(!
ˇl
 || 
	`is_em±y
(ˇl->
emaû
Ë|| !ˇl->
fb_°¨t
 || is_em±y(ˇl->
‰ì_busy
)) {

7261 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_publish_get_category_cal_free_busy:Ço dataÅoÖublish,Éxiting");

7262  
NULL
;

7265 
fb_°¨t_°r
 = 
	`sùe_utûs_time_to_°r
(
ˇl
->
fb_°¨t
);

7266 
‰ì_busy_ba£64
 = 
	`sùe_ˇl_gë_‰ìbusy_ba£64
(
ˇl
->
‰ì_busy
);

7268 
°
 = 
publiˇti⁄_ˇl_300
 ?Öubliˇti⁄_ˇl_300->
fb_°¨t_°r
 : 
NULL
;

7269 
fb
 = 
publiˇti⁄_ˇl_300
 ?Öubliˇti⁄_ˇl_300->
‰ì_busy_ba£64
 : 
NULL
;

7282 
ªs
 = 
	`g_°rdup_¥ötf
(
SIPE_PUB_XML_FREE_BUSY
,

7284 
ˇl_d©a_ö°™˚
,

7285 
publiˇti⁄_ˇl_1
 ?Öubliˇti⁄_ˇl_1->
vîsi⁄
 : 0,

7287 
ˇl_d©a_ö°™˚
,

7288 
publiˇti⁄_ˇl_100
 ?Öubliˇti⁄_ˇl_100->
vîsi⁄
 : 0,

7290 
ˇl_d©a_ö°™˚
,

7291 
publiˇti⁄_ˇl_200
 ?Öubliˇti⁄_ˇl_200->
vîsi⁄
 : 0,

7292 
ˇl
->
emaû
,

7293 
fb_°¨t_°r
,

7294 
‰ì_busy_ba£64
,

7296 
ˇl_d©a_ö°™˚
,

7297 
publiˇti⁄_ˇl_300
 ?Öubliˇti⁄_ˇl_300->
vîsi⁄
 : 0,

7298 
ˇl
->
emaû
,

7299 
fb_°¨t_°r
,

7300 
‰ì_busy_ba£64
,

7302 
ˇl_d©a_ö°™˚
,

7303 
publiˇti⁄_ˇl_400
 ?Öubliˇti⁄_ˇl_400->
vîsi⁄
 : 0,

7304 
ˇl
->
emaû
,

7305 
fb_°¨t_°r
,

7306 
‰ì_busy_ba£64
,

7308 
ˇl_d©a_ö°™˚
,

7309 
publiˇti⁄_ˇl_32000
 ?Öubliˇti⁄_ˇl_32000->
vîsi⁄
 : 0

7312 
	`g_‰ì
(
fb_°¨t_°r
);

7313 
	`g_‰ì
(
‰ì_busy_ba£64
);

7314  
ªs
;

7315 
	}
}

7317 
	$£nd_¥e£n˚_publish
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

7318 c⁄° *
publiˇti⁄s
)

7320 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

7321 
gch¨
 *
uri
;

7322 
gch¨
 *
doc
;

7323 
gch¨
 *
tmp
;

7324 
gch¨
 *
hdr
;

7326 
uri
 = 
	`sù_uri_£lf
(
sù
);

7327 
doc
 = 
	`g_°rdup_¥ötf
(
SIPE_SEND_PRESENCE
,

7328 
uri
,

7329 
publiˇti⁄s
);

7331 
tmp
 = 
	`gë_c⁄è˘
(
sù
);

7332 
hdr
 = 
	`g_°rdup_¥ötf
("Contact: %s\r\n"

7333 "C⁄ã¡-Ty≥:áµliˇti⁄/m§tc-ˇãg‹y-publish+xml\r\n", 
tmp
);

7335 
	`£nd_sù_ªque°
(
sùe_¥iv©e
, "SERVICE", 
uri
, uri, 
hdr
, 
doc
, 
NULL
, 
¥o˚ss_£nd_¥e£n˚_ˇãg‹y_publish_ª•⁄£
);

7337 
	`g_‰ì
(
tmp
);

7338 
	`g_‰ì
(
hdr
);

7339 
	`g_‰ì
(
uri
);

7340 
	`g_‰ì
(
doc
);

7341 
	}
}

7344 
	$£nd_publish_ˇãg‹y_öôül
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

7346 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

7347 
gch¨
 *
pub_devi˚
 = 
	`sùe_publish_gë_ˇãg‹y_devi˚
(
sùe_¥iv©e
);

7348 
gch¨
 *
pub_machöe
;

7349 
gch¨
 *
publiˇti⁄s
;

7351 
	`g_‰ì
(
sù
->
°©us
);

7352 
sù
->
°©us
 = 
	`g_°rdup
(
SIPE_STATUS_ID_AVAILABLE
);

7354 
pub_machöe
 = 
	`sùe_publish_gë_ˇãg‹y_°©e_machöe
(
sùe_¥iv©e
);

7355 
publiˇti⁄s
 = 
	`g_°rdup_¥ötf
("%s%s",

7356 
pub_devi˚
,

7357 
pub_machöe
 ?Öub_machine : "");

7358 
	`g_‰ì
(
pub_devi˚
);

7359 
	`g_‰ì
(
pub_machöe
);

7361 
	`£nd_¥e£n˚_publish
(
sùe_¥iv©e
, 
publiˇti⁄s
);

7362 
	`g_‰ì
(
publiˇti⁄s
);

7363 
	}
}

7366 
	$£nd_¥e£n˚_ˇãg‹y_publish
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

7368 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

7369 
gch¨
 *
pub_°©e
 = 
	`sùe_is_u£r_°©e
(
sùe_¥iv©e
) ?

7370 
	`sùe_publish_gë_ˇãg‹y_°©e_u£r
(
sùe_¥iv©e
) :

7371 
	`sùe_publish_gë_ˇãg‹y_°©e_machöe
(
sùe_¥iv©e
);

7372 
gch¨
 *
pub_nŸe
 = 
	`sùe_publish_gë_ˇãg‹y_nŸe
(
sùe_¥iv©e
,

7373 
sù
->
nŸe
,

7374 
sù
->
is_oof_nŸe
 ? "OOF" : "personal",

7377 
gch¨
 *
publiˇti⁄s
;

7379 i‡(!
pub_°©e
 && !
pub_nŸe
) {

7380 
	`SIPE_DEBUG_INFO_NOFORMAT
("send_presence_category_publish:Çothing has changed. Exiting.");

7384 
publiˇti⁄s
 = 
	`g_°rdup_¥ötf
("%s%s",

7385 
pub_°©e
 ?Öub_state : "",

7386 
pub_nŸe
 ?Öub_note : "");

7388 
	`g_‰ì
(
pub_°©e
);

7389 
	`g_‰ì
(
pub_nŸe
);

7391 
	`£nd_¥e£n˚_publish
(
sùe_¥iv©e
, 
publiˇti⁄s
);

7392 
	`g_‰ì
(
publiˇti⁄s
);

7393 
	}
}

7402 
	$publish_ˇÀnd¨_°©us_£lf
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

7403 
SIPE_UNUSED_PARAMETER
 *
unu£d
)

7405 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

7406 
sùe_ˇl_evít
* 
evít
 = 
NULL
;

7407 
gch¨
 *
pub_ˇl_w‹kög_hours
 = 
NULL
;

7408 
gch¨
 *
pub_ˇl_‰ì_busy
 = 
NULL
;

7409 
gch¨
 *
pub_ˇÀnd¨
 = 
NULL
;

7410 
gch¨
 *
pub_ˇÀnd¨2
 = 
NULL
;

7411 
gch¨
 *
pub_oof_nŸe
 = 
NULL
;

7412 c⁄° 
gch¨
 *
oof_nŸe
;

7413 
time_t
 
oof_°¨t
 = 0;

7414 
time_t
 
oof_íd
 = 0;

7416 i‡(!
sù
->
ˇl
) {

7417 
	`SIPE_DEBUG_INFO_NOFORMAT
("publish_calendar_status_self()Ço calendar data.");

7421 
	`SIPE_DEBUG_INFO_NOFORMAT
("publish_calendar_status_self() started.");

7422 i‡(
sù
->
ˇl
->
ˇl_evíts
) {

7423 
evít
 = 
	`sùe_ˇl_gë_evít
(
sù
->
ˇl
->
ˇl_evíts
, 
	`time
(
NULL
));

7426 i‡(!
evít
) {

7427 
	`SIPE_DEBUG_INFO_NOFORMAT
("publish_calendar_status_self: currentÉvent is NULL");

7429 *
desc
 = 
	`sùe_ˇl_evít_des¸ibe
(
evít
);

7430 
	`SIPE_DEBUG_INFO
("publish_ˇÀnd¨_°©us_£lf: cuºíàevíàis:\n%s", 
desc
 ? desc : "");

7431 
	`g_‰ì
(
desc
);

7442 i‡(
evít
 &&Évít->
ˇl_°©us
 =
SIPE_CAL_OOF
) {

7443 
pub_ˇÀnd¨
 = 
	`sùe_publish_gë_ˇãg‹y_°©e_ˇÀnd¨
(
sùe_¥iv©e
, 
evít
, 
sù
->
ˇl
->
emaû
, 
SIPE_CAL_OOF
);

7444 
pub_ˇÀnd¨2
 = 
	`sùe_publish_gë_ˇãg‹y_°©e_ˇÀnd¨
(
sùe_¥iv©e
, 
NULL
, 
sù
->
ˇl
->
emaû
, 
SIPE_CAL_BUSY
);

7445 } i‡(
evít
 &&Évít->
ˇl_°©us
 =
SIPE_CAL_BUSY
) {

7446 
pub_ˇÀnd¨
 = 
	`sùe_publish_gë_ˇãg‹y_°©e_ˇÀnd¨
(
sùe_¥iv©e
, 
NULL
, 
sù
->
ˇl
->
emaû
, 
SIPE_CAL_OOF
);

7447 
pub_ˇÀnd¨2
 = 
	`sùe_publish_gë_ˇãg‹y_°©e_ˇÀnd¨
(
sùe_¥iv©e
, 
evít
, 
sù
->
ˇl
->
emaû
, 
SIPE_CAL_BUSY
);

7449 
pub_ˇÀnd¨
 = 
	`sùe_publish_gë_ˇãg‹y_°©e_ˇÀnd¨
(
sùe_¥iv©e
, 
NULL
, 
sù
->
ˇl
->
emaû
, 
SIPE_CAL_OOF
);

7450 
pub_ˇÀnd¨2
 = 
	`sùe_publish_gë_ˇãg‹y_°©e_ˇÀnd¨
(
sùe_¥iv©e
, 
NULL
, 
sù
->
ˇl
->
emaû
, 
SIPE_CAL_BUSY
);

7453 
oof_nŸe
 = 
	`sùe_ews_gë_oof_nŸe
(
sù
->
ˇl
);

7454 i‡(
	`sùe_°ªquÆ
("ScheduÀd", 
sù
->
ˇl
->
oof_°©e
)) {

7455 
oof_°¨t
 = 
sù
->
ˇl
->oof_start;

7456 
oof_íd
 = 
sù
->
ˇl
->oof_end;

7458 
pub_oof_nŸe
 = 
	`sùe_publish_gë_ˇãg‹y_nŸe
(
sùe_¥iv©e
, 
oof_nŸe
, "OOF", 
oof_°¨t
, 
oof_íd
);

7460 
pub_ˇl_w‹kög_hours
 = 
	`sùe_publish_gë_ˇãg‹y_ˇl_w‹kög_hours
(
sùe_¥iv©e
);

7461 
pub_ˇl_‰ì_busy
 = 
	`sùe_publish_gë_ˇãg‹y_ˇl_‰ì_busy
(
sùe_¥iv©e
);

7463 i‡(!
pub_ˇl_w‹kög_hours
 && !
pub_ˇl_‰ì_busy
 && !
pub_ˇÀnd¨
 && !
pub_ˇÀnd¨2
 && !
pub_oof_nŸe
) {

7464 
	`SIPE_DEBUG_INFO_NOFORMAT
("publish_calendar_status_self:Çothing has changed.");

7466 
gch¨
 *
publiˇti⁄s
 = 
	`g_°rdup_¥ötf
("%s%s%s%s%s",

7467 
pub_ˇl_w‹kög_hours
 ?Öub_cal_working_hours : "",

7468 
pub_ˇl_‰ì_busy
 ?Öub_cal_free_busy : "",

7469 
pub_ˇÀnd¨
 ?Öub_calendar : "",

7470 
pub_ˇÀnd¨2
 ?Öub_calendar2 : "",

7471 
pub_oof_nŸe
 ?Öub_oof_note : "");

7473 
	`£nd_¥e£n˚_publish
(
sùe_¥iv©e
, 
publiˇti⁄s
);

7474 
	`g_‰ì
(
publiˇti⁄s
);

7477 
	`g_‰ì
(
pub_ˇl_w‹kög_hours
);

7478 
	`g_‰ì
(
pub_ˇl_‰ì_busy
);

7479 
	`g_‰ì
(
pub_ˇÀnd¨
);

7480 
	`g_‰ì
(
pub_ˇÀnd¨2
);

7481 
	`g_‰ì
(
pub_oof_nŸe
);

7484 
	`sùe_sched_ˇÀnd¨_°©us_£lf_publish
(
sùe_¥iv©e
, 
	`time
(
NULL
));

7485 
	}
}

7487 
	$£nd_¥e£n˚_°©us
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

7488 
SIPE_UNUSED_PARAMETER
 *
unu£d
)

7490 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

7491 
PuΩÀSètus
 * 
°©us
 = 
	`puΩÀ_accou¡_gë_a˘ive_°©us
(
sù
->
accou¡
);

7493 i‡(!
°©us
) ;

7495 
	`SIPE_DEBUG_INFO
("send_presence_status: status: %s (%s)",

7496 
	`puΩÀ_°©us_gë_id
(
°©us
) ?Öurple_status_get_id(status) : "",

7497 
	`sùe_is_u£r_°©e
(
sùe_¥iv©e
) ? "USER" : "MACHINE");

7499 i‡(
sù
->
ocs2007
) {

7500 
	`£nd_¥e£n˚_ˇãg‹y_publish
(
sùe_¥iv©e
);

7502 
	`£nd_¥e£n˚_sﬂp
(
sù
, 
FALSE
);

7504 
	}
}

7506 
	$¥o˚ss_öput_mesßge
(
sùe_accou¡_d©a
 *
sù
,

7507 
sùmsg
 *
msg
)

7509 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
SIP_TO_CORE_PRIVATE
;

7510 
gboﬁón
 
found
 = 
FALSE
;

7511 c⁄° *
mëhod
 = 
msg
->method ? msg->method : "NOT FOUND";

7512 
	`SIPE_DEBUG_INFO
("msg->ª•⁄£(%d),msg->mëhod(%s)", 
msg
->
ª•⁄£
,
mëhod
);

7513 i‡(
msg
->
ª•⁄£
 == 0) {

7514 i‡(
	`sùe_°ªquÆ
(
mëhod
, "MESSAGE")) {

7515 
	`¥o˚ss_öcomög_mesßge
(
sùe_¥iv©e
, 
msg
);

7516 
found
 = 
TRUE
;

7517 } i‡(
	`sùe_°ªquÆ
(
mëhod
, "NOTIFY")) {

7518 
	`SIPE_DEBUG_INFO_NOFORMAT
("send->process_incoming_notify");

7519 
	`¥o˚ss_öcomög_nŸify
(
sùe_¥iv©e
, 
msg
, 
TRUE
, 
FALSE
);

7520 
found
 = 
TRUE
;

7521 } i‡(
	`sùe_°ªquÆ
(
mëhod
, "BENOTIFY")) {

7522 
	`SIPE_DEBUG_INFO_NOFORMAT
("send->process_incoming_benotify");

7523 
	`¥o˚ss_öcomög_nŸify
(
sùe_¥iv©e
, 
msg
, 
TRUE
, TRUE);

7524 
found
 = 
TRUE
;

7525 } i‡(
	`sùe_°ªquÆ
(
mëhod
, "INVITE")) {

7526 
	`¥o˚ss_öcomög_övôe
(
sùe_¥iv©e
, 
msg
);

7527 
found
 = 
TRUE
;

7528 } i‡(
	`sùe_°ªquÆ
(
mëhod
, "REFER")) {

7529 
	`¥o˚ss_öcomög_ª„r
(
sùe_¥iv©e
, 
msg
);

7530 
found
 = 
TRUE
;

7531 } i‡(
	`sùe_°ªquÆ
(
mëhod
, "OPTIONS")) {

7532 
	`¥o˚ss_öcomög_›ti⁄s
(
sùe_¥iv©e
, 
msg
);

7533 
found
 = 
TRUE
;

7534 } i‡(
	`sùe_°ªquÆ
(
mëhod
, "INFO")) {

7535 
	`¥o˚ss_öcomög_öfo
(
sùe_¥iv©e
, 
msg
);

7536 
found
 = 
TRUE
;

7537 } i‡(
	`sùe_°ªquÆ
(
mëhod
, "ACK")) {

7539 
found
 = 
TRUE
;

7540 } i‡(
	`sùe_°ªquÆ
(
mëhod
, "PRACK")) {

7541 
found
 = 
TRUE
;

7542 
	`£nd_sù_ª•⁄£
(
SIP_TO_CORE_PRIVATE
, 
msg
, 200, "OK", 
NULL
);

7543 } i‡(
	`sùe_°ªquÆ
(
mëhod
, "SUBSCRIBE")) {

7545 
found
 = 
TRUE
;

7546 
	`£nd_sù_ª•⁄£
(
sùe_¥iv©e
, 
msg
, 200, "OK", 
NULL
);

7547 } i‡(
	`sùe_°ªquÆ
(
mëhod
, "CANCEL")) {

7548 
	`¥o˚ss_öcomög_ˇn˚l
(
sùe_¥iv©e
, 
msg
);

7549 
found
 = 
TRUE
;

7550 } i‡(
	`sùe_°ªquÆ
(
mëhod
, "BYE")) {

7551 
	`¥o˚ss_öcomög_bye
(
sùe_¥iv©e
, 
msg
);

7552 
found
 = 
TRUE
;

7554 
	`£nd_sù_ª•⁄£
(
sùe_¥iv©e
, 
msg
, 501, "NŸ im∂emíãd", 
NULL
);

7557 
å™ß˘i⁄
 *
å™s
 = 
	`å™ß˘i⁄s_föd
(
sùe_¥iv©e
,

7558 
msg
);

7559 i‡(
å™s
) {

7560 i‡(
msg
->
ª•⁄£
 == 407) {

7561 
gch¨
 *
ª£nd
, *
auth
;

7562 c⁄° 
gch¨
 *
±mp
;

7564 i‡(
sù
->
¥oxy
.
ªåõs
 > 30) ;

7565 
sù
->
¥oxy
.
ªåõs
++;

7568 
±mp
 = 
	`sùmsg_föd_hódî
(
msg
, "Proxy-Authenticate");

7570 
	`fûl_auth
(
±mp
, &
sù
->
¥oxy
);

7571 
auth
 = 
	`auth_hódî
(
sù
, &sù->
¥oxy
, 
å™s
->
msg
);

7572 
	`sùmsg_ªmove_hódî_now
(
å™s
->
msg
, "Proxy-Authorization");

7573 
	`sùmsg_add_hódî_now_pos
(
å™s
->
msg
, "Proxy-Auth‹iz©i⁄", 
auth
, 5);

7574 
	`g_‰ì
(
auth
);

7575 
ª£nd
 = 
	`sùmsg_to_°rög
(
å™s
->
msg
);

7577 
	`sùe_backíd_å™•‹t_mesßge
(
sùe_¥iv©e
->
å™•‹t
, 
ª£nd
);

7578 
	`g_‰ì
(
ª£nd
);

7580 i‡(
msg
->
ª•⁄£
 < 200) {

7581 i‡(
msg
->
bodyÀn
 != 0) {

7582 
	`SIPE_DEBUG_INFO
("gŸÖrovisi⁄Æ (%dËª•⁄£ wôh body", 
msg
->
ª•⁄£
);

7583 i‡(
å™s
->
ˇŒback
) {

7584 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_input_message - we haveáÅransaction callback");

7585 (
å™s
->
ˇŒback
)(
sùe_¥iv©e
, 
msg
,Årans);

7589 
	`SIPE_DEBUG_INFO
("gŸÖrovisi⁄Æ (%dËª•⁄£, ign‹ög", 
msg
->
ª•⁄£
);

7592 
sù
->
¥oxy
.
ªåõs
 = 0;

7593 i‡(
	`sùe_°ªquÆ
(
å™s
->
msg
->
mëhod
, "REGISTER")) {

7594 i‡(
msg
->
ª•⁄£
 == 401)

7596 
sù
->
ªgi°ør
.
ªåõs
++;

7600 
sù
->
ªgi°ør
.
ªåõs
 = 0;

7602 
	`SIPE_DEBUG_INFO
("RE-REGISTER CSeq: %d", 
sù
->
c£q
);

7604 i‡(
msg
->
ª•⁄£
 == 401) {

7605 
gch¨
 *
ª£nd
, *
auth
, *
±mp
;

7606 c⁄° * 
auth_scheme
;

7608 i‡(
sù
->
ªgi°ør
.
ªåõs
 > 4) ;

7609 
sù
->
ªgi°ør
.
ªåõs
++;

7611 
auth_scheme
 = 
	`sùe_gë_auth_scheme_«me
(
sùe_¥iv©e
);

7612 
±mp
 = 
	`sùmsg_föd_auth_hódî
(
msg
, 
auth_scheme
);

7614 
	`SIPE_DEBUG_INFO
("¥o˚ss_öput_mesßgê- Auth hódî: %s", 
±mp
 ?Ötmp : "");

7615 i‡(!
±mp
) {

7616 *
tmp2
 = 
	`g_°rc⁄ˇt
(
	`_
("Incom∑tibÀáuthítiˇti⁄ schemêcho£n"), ": ", 
auth_scheme
, 
NULL
);

7617 
	`sùe_backíd_c⁄√˘i⁄_îr‹
(
SIPE_CORE_PUBLIC
,

7618 
SIPE_CONNECTION_ERROR_AUTHENTICATION_IMPOSSIBLE
,

7619 
tmp2
);

7620 
	`g_‰ì
(
tmp2
);

7624 
	`fûl_auth
(
±mp
, &
sù
->
ªgi°ør
);

7625 
auth
 = 
	`auth_hódî
(
sù
, &sù->
ªgi°ør
, 
å™s
->
msg
);

7626 
	`sùmsg_ªmove_hódî_now
(
å™s
->
msg
, "Authorization");

7627 
	`sùmsg_add_hódî_now_pos
(
å™s
->
msg
, "Auth‹iz©i⁄", 
auth
, 5);

7628 
	`g_‰ì
(
auth
);

7629 
ª£nd
 = 
	`sùmsg_to_°rög
(
å™s
->
msg
);

7631 
	`sùe_backíd_å™•‹t_mesßge
(
sùe_¥iv©e
->
å™•‹t
, 
ª£nd
);

7632 
	`g_‰ì
(
ª£nd
);

7636 i‡(
å™s
->
ˇŒback
) {

7637 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_input_message - we haveáÅransaction callback");

7639 (
å™s
->
ˇŒback
)(
sùe_¥iv©e
, 
msg
,Årans);

7642 
	`SIPE_DEBUG_INFO
("¥o˚ss_öput_mesßgê-Ñemovög CSeq %d", 
sù
->
c£q
);

7643 
	`å™ß˘i⁄s_ªmove
(
sùe_¥iv©e
, 
å™s
);

7647 
found
 = 
TRUE
;

7649 
	`SIPE_DEBUG_INFO_NOFORMAT
("receivedÑesponseÅo unknownÅransaction");

7652 i‡(!
found
) {

7653 
	`SIPE_DEBUG_INFO
("ª˚ivedá unknow¿sù mesßgêwôh mëhod %†™dÑe•⁄£ %d", 
mëhod
, 
msg
->
ª•⁄£
);

7655 
	}
}

7657 
guöt
 
	$sùe_ht_hash_nick
(c⁄° *
nick
)

7659 *
lc
 = 
	`g_utf8_°rdown
(
nick
, -1);

7660 
guöt
 
buckë
 = 
	`g_°r_hash
(
lc
);

7661 
	`g_‰ì
(
lc
);

7663  
buckë
;

7664 
	}
}

7666 
gboﬁón
 
	$sùe_ht_equÆs_nick
(c⁄° *
nick1
, c⁄° *
nick2
)

7668 *
nick1_n‹m
 = 
NULL
;

7669 *
nick2_n‹m
 = 
NULL
;

7670 
gboﬁón
 
equÆ
;

7672 i‡(
nick1
 =
NULL
 && 
nick2
 =NULLË 
TRUE
;

7673 i‡(
nick1
 =
NULL
 || 
nick2
 == NULL ||

7674 !
	`g_utf8_vÆid©e
(
nick1
, -1, 
NULL
) ||

7675 !
	`g_utf8_vÆid©e
(
nick2
, -1, 
NULL
)Ë 
FALSE
;

7677 
nick1_n‹m
 = 
	`g_utf8_ˇ£fﬁd
(
nick1
, -1);

7678 
nick2_n‹m
 = 
	`g_utf8_ˇ£fﬁd
(
nick2
, -1);

7679 
equÆ
 = 
	`g_utf8_cﬁœã
(
nick2_n‹m
,Çick2_norm) == 0;

7680 
	`g_‰ì
(
nick2_n‹m
);

7681 
	`g_‰ì
(
nick1_n‹m
);

7683  
equÆ
;

7684 
	}
}

7687 
	$sùe_puΩÀ_£tup
(
sùe_c‹e_public
 *
sùe_public
,

7688 
PuΩÀC⁄√˘i⁄
 *
gc
)

7690 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA
;

7691 
sù
->
gc
 = gc;

7692 
sù
->
accou¡
 = 
	`puΩÀ_c⁄√˘i⁄_gë_accou¡
(
gc
);

7693 
	}
}

7695 
sùe_c‹e_public
 *
	$sùe_c‹e_Æloˇã
(c⁄° 
gch¨
 *
signö_«me
,

7696 c⁄° 
gch¨
 *
logö_domaö
,

7697 c⁄° 
gch¨
 *
logö_accou¡
,

7698 c⁄° 
gch¨
 *
∑ssw‹d
,

7699 c⁄° 
gch¨
 *
emaû
,

7700 c⁄° 
gch¨
 *
emaû_uæ
,

7701 c⁄° 
gch¨
 **
îrmsg
)

7703 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
;

7704 
sùe_accou¡_d©a
 *
sù
;

7705 
gch¨
 **
u£r_domaö
;

7707 
	`SIPE_DEBUG_INFO
("sùe_c‹e_Æloˇã: signö_«mê'%s'", 
signö_«me
);

7710 i‡(
	`°Ωbrk
(
signö_«me
, "\t\v\r\n"Ë!
NULL
) {

7711 *
îrmsg
 = 
	`_
("SIP Exchange userÇame contains invalid characters");

7712  
NULL
;

7716 i‡(!
	`°rchr
(
signö_«me
, '@') ||

7717 
	`g_°r_has_¥efix
(
signö_«me
, "@") ||

7718 
	`g_°r_has_suffix
(
signö_«me
, "@")) {

7719 *
îrmsg
 = 
	`_
("UserÇame should beá valid SIP URI\nExample: user@company.com");

7720  
NULL
;

7724 i‡(!
	`is_em±y
(
emaû
) &&

7725 (!
	`°rchr
(
emaû
, '@') ||

7726 
	`g_°r_has_¥efix
(
emaû
, "@") ||

7727 
	`g_°r_has_suffix
(
emaû
, "@")))

7729 *
îrmsg
 = 
	`_
("Emailáddress should be valid ifÖrovided\nExample: user@company.com");

7730  
NULL
;

7734 
u£r_domaö
 = 
	`g_°r•lô
(
signö_«me
, "@", 2);

7735 
	`SIPE_DEBUG_INFO
("sùe_c‹e_Æloˇã: u£∏'%s' domaö '%s'", 
u£r_domaö
[0], user_domain[1]);

7736 i‡(
	`°rchr
(
u£r_domaö
[0], ' 'Ë!
NULL
) {

7737 
	`g_°r‰ìv
(
u£r_domaö
);

7738 *
îrmsg
 = 
	`_
("SIP Exchange userÇame contains whitespace");

7739  
NULL
;

7746 i‡(!
	`is_em±y
(
emaû_uæ
)) {

7747 *
tmp
 = 
	`g_ascii_°rdown
(
emaû_uæ
, -1);

7748 i‡(!
	`g_°r_has_¥efix
(
tmp
, "https://"))

7750 
	`g_‰ì
(
tmp
);

7751 
	`g_°r‰ìv
(
u£r_domaö
);

7752 *
îrmsg
 = 
	`_
("Email services URL should be valid ifÖrovided\n"

7755  
NULL
;

7757 
	`g_‰ì
(
tmp
);

7760 
sùe_¥iv©e
 = 
	`g_√w0
(
sùe_c‹e_¥iv©e
, 1);

7761 
sùe_¥iv©e
->
ãmp‹¨y
 = 
sù
 = 
	`g_√w0
(
sùe_accou¡_d©a
, 1);

7762 
sù
->
public
 = (
sùe_c‹e_public
 *)
sùe_¥iv©e
;

7763 
sù
->
¥iv©e
 = 
sùe_¥iv©e
;

7764 
sù
->
ªªgi°î_£t
 = 
FALSE
;

7765 
sù
->
ªauthítiˇã_£t
 = 
FALSE
;

7766 
sù
->
subs¸ibed
 = 
FALSE
;

7767 
sù
->
subs¸ibed_buddõs
 = 
FALSE
;

7768 
sù
->
öôül_°©e_published
 = 
FALSE
;

7769 
sù
->
u£∫ame
 = 
	`g_°rdup
(
signö_«me
);

7770 
sù
->
emaû
 = 
	`is_em±y
”maûË? 
	`g_°rdup
(
signö_«me
) : g_strdup(email);

7771 
sù
->
authdomaö
 = 
	`is_em±y
(
logö_domaö
Ë? 
NULL
 : 
	`g_°rdup
(login_domain);

7772 
sù
->
authu£r
 = 
	`is_em±y
(
logö_accou¡
Ë? 
NULL
 : 
	`g_°rdup
(login_account);

7773 
sù
->
∑ssw‹d
 = 
	`g_°rdup
(password);

7774 
sùe_¥iv©e
->
public
.
sù_«me
 = 
	`g_°rdup
(
u£r_domaö
[0]);

7775 
sùe_¥iv©e
->
public
.
sù_domaö
 = 
	`g_°rdup
(
u£r_domaö
[1]);

7776 
	`g_°r‰ìv
(
u£r_domaö
);

7778 
sùe_¥iv©e
->
buddõs
 = 
	`g_hash_èbÀ_√w
((
GHashFunc
)
sùe_ht_hash_nick
, (
GEquÆFunc
)
sùe_ht_equÆs_nick
);

7779 
sù
->
our_publiˇti⁄s
 = 
	`g_hash_èbÀ_√w_fuŒ
(
g_°r_hash
, 
g_°r_equÆ
,

7780 
g_‰ì
, (
GDe°royNŸify
)
g_hash_èbÀ_de°roy
);

7781 
sù
->
subs¸ùti⁄s
 = 
	`g_hash_èbÀ_√w_fuŒ
(
g_°r_hash
, 
g_°r_equÆ
,

7782 
g_‰ì
, (
GDe°royNŸify
)
sùe_subs¸ùti⁄_‰ì
);

7783 
sù
->
fûëøns„rs
 = 
	`g_hash_èbÀ_√w_fuŒ
(
g_°r_hash
, 
g_°r_equÆ
,
g_‰ì
,
NULL
);

7784 
sù
->
°©us
 = 
	`g_°rdup
(
SIPE_STATUS_ID_UNKNOWN
);

7786 ((
sùe_c‹e_public
 *)
sùe_¥iv©e
);

7787 
	}
}

7789 
	$sùe_c⁄√˘i⁄_˛ónup
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

7791 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

7793 
	`g_‰ì
(
sù
->
ïid
);

7794 
sù
->
ïid
 = 
NULL
;

7796 
	`sùe_backíd_å™•‹t_disc⁄√˘
(
sùe_¥iv©e
->
å™•‹t
);

7797 
sùe_¥iv©e
->
å™•‹t
 = 
NULL
;

7798 
	`g_‰ì
(
sùe_¥iv©e
->
£rvî_«me
);

7799 
sùe_¥iv©e
->
£rvî_«me
 = 
NULL
;

7800 
sùe_¥iv©e
->
£rvi˚_d©a
 = 
NULL
;

7802 
	`sùe_auth_‰ì
(&
sù
->
ªgi°ør
);

7803 
	`sùe_auth_‰ì
(&
sù
->
¥oxy
);

7805 
	`g_‰ì
(
sùe_¥iv©e
->
£rvî_vîsi⁄
);

7806 
sùe_¥iv©e
->
£rvî_vîsi⁄
 = 
NULL
;

7808 
	`sùe_scheduÀ_ˇn˚l_Æl
(
sùe_¥iv©e
);

7810 i‡(
sù
->
Ælow_evíts
) {

7811 
GSLi°
 *
íåy
 = 
sù
->
Ælow_evíts
;

7812 
íåy
) {

7813 
	`g_‰ì
(
íåy
->
d©a
);

7814 
íåy
 =É¡ry->
√xt
;

7817 
	`g_¶i°_‰ì
(
sù
->
Ælow_evíts
);

7819 i‡(
sù
->
c⁄èöîs
) {

7820 
GSLi°
 *
íåy
 = 
sù
->
c⁄èöîs
;

7821 
íåy
) {

7822 
	`‰ì_c⁄èöî
((
sùe_c⁄èöî
 *)
íåy
->
d©a
);

7823 
íåy
 =É¡ry->
√xt
;

7826 
	`g_¶i°_‰ì
(
sù
->
c⁄èöîs
);

7828 i‡(
sù
->
c⁄è˘
)

7829 
	`g_‰ì
(
sù
->
c⁄è˘
);

7830 
sù
->
c⁄è˘
 = 
NULL
;

7831 i‡(
sù
->
ªgˇŒid
)

7832 
	`g_‰ì
(
sù
->
ªgˇŒid
);

7833 
sù
->
ªgˇŒid
 = 
NULL
;

7835 i‡(
sù
->
focus_Á˘‹y_uri
)

7836 
	`g_‰ì
(
sù
->
focus_Á˘‹y_uri
);

7837 
sù
->
focus_Á˘‹y_uri
 = 
NULL
;

7839 
sù
->
¥o˚ssög_öput
 = 
FALSE
;

7841 i‡(
sù
->
ˇl
) {

7842 
	`sùe_ˇl_ˇÀnd¨_‰ì
(
sù
->
ˇl
);

7844 
sù
->
ˇl
 = 
NULL
;

7845 
	}
}

7850 
gboﬁón
 
	$sùe_buddy_ªmove
(
SIPE_UNUSED_PARAMETER
 
gpoöãr
 
key
, gpoöã∏
buddy
,

7851 
SIPE_UNUSED_PARAMETER
 
gpoöãr
 
u£r_d©a
)

7853 
	`sùe_‰ì_buddy
((
sùe_buddy
 *Ë
buddy
);

7856 (
TRUE
);

7857 
	}
}

7859 
	$sùe_c‹e_dóŒoˇã
(
sùe_c‹e_public
 *
sùe_public
)

7861 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
SIPE_CORE_PRIVATE
;

7862 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

7865 
	`sùe_£ssi⁄_˛o£_Æl
(
sùe_¥iv©e
);

7866 
	`sùe_£ssi⁄_ªmove_Æl
(
sù
);

7868 i‡(
sù
->
c°a
) {

7869 
	`sù_c°a_˛o£
(
sù
);

7872 i‡(
	`PURPLE_CONNECTION_IS_CONNECTED
(
sù
->
gc
)) {

7874 
	`g_hash_èbÀ_f‹óch
(
sù
->
subs¸ùti⁄s
, 
sùe_unsubs¸ibe_cb
, 
sùe_¥iv©e
);

7877 
	`do_ªgi°î_exp
(
sù
, 0);

7880 
	`sùe_c⁄√˘i⁄_˛ónup
(
sùe_¥iv©e
);

7881 
	`g_‰ì
(
sùe_¥iv©e
->
public
.
sù_«me
);

7882 
	`g_‰ì
(
sùe_¥iv©e
->
public
.
sù_domaö
);

7883 
	`g_‰ì
(
sùe_¥iv©e
->
u£øgít
);

7884 
	`g_‰ì
(
sù
->
u£∫ame
);

7885 
	`g_‰ì
(
sù
->
emaû
);

7886 
	`g_‰ì
(
sù
->
∑ssw‹d
);

7887 
	`g_‰ì
(
sù
->
authdomaö
);

7888 
	`g_‰ì
(
sù
->
authu£r
);

7889 
	`g_‰ì
(
sù
->
°©us
);

7890 
	`g_‰ì
(
sù
->
nŸe
);

7891 
	`g_‰ì
(
sù
->
u£r_°©es
);

7893 
	`g_hash_èbÀ_f‹óch_°ól
(
sùe_¥iv©e
->
buddõs
, 
sùe_buddy_ªmove
, 
NULL
);

7894 
	`g_hash_èbÀ_de°roy
(
sùe_¥iv©e
->
buddõs
);

7895 
	`g_hash_èbÀ_de°roy
(
sù
->
our_publiˇti⁄s
);

7896 
	`g_hash_èbÀ_de°roy
(
sù
->
u£r_°©e_publiˇti⁄s
);

7897 
	`g_hash_èbÀ_de°roy
(
sù
->
subs¸ùti⁄s
);

7898 
	`g_hash_èbÀ_de°roy
(
sù
->
fûëøns„rs
);

7900 i‡(
sù
->
groups
) {

7901 
GSLi°
 *
íåy
 = 
sù
->
groups
;

7902 
íåy
) {

7903 
sùe_group
 *
group
 = 
íåy
->
d©a
;

7904 
	`g_‰ì
(
group
->
«me
);

7905 
	`g_‰ì
(
group
);

7906 
íåy
 =É¡ry->
√xt
;

7909 
	`g_¶i°_‰ì
(
sù
->
groups
);

7911 i‡(
sù
->
our_publiˇti⁄_keys
) {

7912 
GSLi°
 *
íåy
 = 
sù
->
our_publiˇti⁄_keys
;

7913 
íåy
) {

7914 
	`g_‰ì
(
íåy
->
d©a
);

7915 
íåy
 =É¡ry->
√xt
;

7918 
	`g_¶i°_‰ì
(
sù
->
our_publiˇti⁄_keys
);

7920 
sùe_¥iv©e
->
å™ß˘i⁄s
)

7921 
	`å™ß˘i⁄s_ªmove
(
sùe_¥iv©e
,

7922 
sùe_¥iv©e
->
å™ß˘i⁄s
->
d©a
);

7923 
	`g_‰ì
(
sù
);

7924 
	`g_‰ì
(
sùe_¥iv©e
);

7925 
	}
}

7927 
	$sùe_£¨chªsu…s_im_buddy
(
PuΩÀC⁄√˘i⁄
 *
gc
, 
GLi°
 *
row
,

7928 
SIPE_UNUSED_PARAMETER
 *
u£r_d©a
)

7930 
PuΩÀAccou¡
 *
ac˘
 = 
	`puΩÀ_c⁄√˘i⁄_gë_accou¡
(
gc
);

7931 *
id
 = 
	`sù_uri_‰om_«me
((
gch¨
 *)
	`g_li°_¡h_d©a
(
row
, 0));

7932 
PuΩÀC⁄vîßti⁄
 *
c⁄v
 = 
	`puΩÀ_föd_c⁄vîßti⁄_wôh_accou¡
(
PURPLE_CONV_TYPE_IM
, 
id
, 
ac˘
);

7933 i‡(
c⁄v
 =
NULL
)

7934 
c⁄v
 = 
	`puΩÀ_c⁄vîßti⁄_√w
(
PURPLE_CONV_TYPE_IM
, 
ac˘
, 
id
);

7935 
	`puΩÀ_c⁄vîßti⁄_¥e£¡
(
c⁄v
);

7936 
	`g_‰ì
(
id
);

7937 
	}
}

7939 
	$sùe_£¨chªsu…s_add_buddy
(
PuΩÀC⁄√˘i⁄
 *
gc
, 
GLi°
 *
row
,

7940 
SIPE_UNUSED_PARAMETER
 *
u£r_d©a
)

7943 
	`puΩÀ_bli°_ªque°_add_buddy
(
	`puΩÀ_c⁄√˘i⁄_gë_accou¡
(
gc
),

7944 
	`g_li°_¡h_d©a
(
row
, 0), 
	`_
("Other Contacts"), g_list_nth_data(row, 1));

7945 
	}
}

7947 
gboﬁón
 
	$¥o˚ss_£¨ch_c⁄è˘_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

7948 
sùmsg
 *
msg
,

7949 
SIPE_UNUSED_PARAMETER
 
å™ß˘i⁄
 *
å™s
)

7951 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

7952 
PuΩÀNŸifySórchResu…s
 *
ªsu…s
;

7953 
PuΩÀNŸifySórchCﬁumn
 *
cﬁumn
;

7954 
sùe_xml
 *
£¨chResu…s
;

7955 c⁄° 
sùe_xml
 *
mrow
;

7956 
m©ch_cou¡
 = 0;

7957 
gboﬁón
 
m‹e
 = 
FALSE
;

7958 
gch¨
 *
£c⁄d¨y
;

7960 
	`SIPE_DEBUG_INFO
("¥o˚ss_£¨ch_c⁄è˘_ª•⁄£: body:\n%s", 
msg
->
body
 ? msg->body : "");

7962 
£¨chResu…s
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

7963 i‡(!
£¨chResu…s
) {

7964 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_search_contact_response:ÇoÖarseable searchResults");

7965  
FALSE
;

7968 
ªsu…s
 = 
	`puΩÀ_nŸify_£¨chªsu…s_√w
();

7970 i‡(
ªsu…s
 =
NULL
) {

7971 
	`SIPE_DEBUG_ERROR_NOFORMAT
("purple_parse_searchreply: UnableÅo displayÅhe searchÑesults.");

7972 
	`puΩÀ_nŸify_îr‹
(
sù
->
gc
, 
NULL
, 
	`_
("UnableÅo displayÅhe searchÑesults"), NULL);

7974 
	`sùe_xml_‰ì
(
£¨chResu…s
);

7975  
FALSE
;

7978 
cﬁumn
 = 
	`puΩÀ_nŸify_£¨chªsu…s_cﬁumn_√w
(
	`_
("UserÇame"));

7979 
	`puΩÀ_nŸify_£¨chªsu…s_cﬁumn_add
(
ªsu…s
, 
cﬁumn
);

7981 
cﬁumn
 = 
	`puΩÀ_nŸify_£¨chªsu…s_cﬁumn_√w
(
	`_
("Name"));

7982 
	`puΩÀ_nŸify_£¨chªsu…s_cﬁumn_add
(
ªsu…s
, 
cﬁumn
);

7984 
cﬁumn
 = 
	`puΩÀ_nŸify_£¨chªsu…s_cﬁumn_√w
(
	`_
("Company"));

7985 
	`puΩÀ_nŸify_£¨chªsu…s_cﬁumn_add
(
ªsu…s
, 
cﬁumn
);

7987 
cﬁumn
 = 
	`puΩÀ_nŸify_£¨chªsu…s_cﬁumn_√w
(
	`_
("Country"));

7988 
	`puΩÀ_nŸify_£¨chªsu…s_cﬁumn_add
(
ªsu…s
, 
cﬁumn
);

7990 
cﬁumn
 = 
	`puΩÀ_nŸify_£¨chªsu…s_cﬁumn_√w
(
	`_
("Email"));

7991 
	`puΩÀ_nŸify_£¨chªsu…s_cﬁumn_add
(
ªsu…s
, 
cﬁumn
);

7993 
mrow
 = 
	`sùe_xml_chûd
(
£¨chResu…s
, "Body/Aºay/row"); mrow; mrow = 
	`sùe_xml_twö
(mrow)) {

7994 
GLi°
 *
row
 = 
NULL
;

7996 
gch¨
 **
uri_∑πs
 = 
	`g_°r•lô
(
	`sùe_xml_©åibuã
(
mrow
, "uri"), ":", 2);

7997 
row
 = 
	`g_li°_≠≥nd
‘ow, 
	`g_°rdup
(
uri_∑πs
[1]));

7998 
	`g_°r‰ìv
(
uri_∑πs
);

8000 
row
 = 
	`g_li°_≠≥nd
‘ow, 
	`g_°rdup
(
	`sùe_xml_©åibuã
(
mrow
, "displayName")));

8001 
row
 = 
	`g_li°_≠≥nd
‘ow, 
	`g_°rdup
(
	`sùe_xml_©åibuã
(
mrow
, "company")));

8002 
row
 = 
	`g_li°_≠≥nd
‘ow, 
	`g_°rdup
(
	`sùe_xml_©åibuã
(
mrow
, "country")));

8003 
row
 = 
	`g_li°_≠≥nd
‘ow, 
	`g_°rdup
(
	`sùe_xml_©åibuã
(
mrow
, "email")));

8005 
	`puΩÀ_nŸify_£¨chªsu…s_row_add
(
ªsu…s
, 
row
);

8006 
m©ch_cou¡
++;

8009 i‡((
mrow
 = 
	`sùe_xml_chûd
(
£¨chResu…s
, "Body/dúe˘‹ySórch/m‹eAvaûabÀ")Ë!
NULL
) {

8010 *
d©a
 = 
	`sùe_xml_d©a
(
mrow
);

8011 
m‹e
 = (
	`g_°rˇ£cmp
(
d©a
, "true") == 0);

8012 
	`g_‰ì
(
d©a
);

8015 
£c⁄d¨y
 = 
	`g_°rdup_¥ötf
(

8016 
	`dngëãxt
(
PACKAGE_NAME
,

8018 "Found %d c⁄è˘s%s:", 
m©ch_cou¡
),

8019 
m©ch_cou¡
, 
m‹e
 ? 
	`_
(" (more matched your query)") : "");

8021 
	`puΩÀ_nŸify_£¨chªsu…s_buâ⁄_add
(
ªsu…s
, 
PURPLE_NOTIFY_BUTTON_IM
, 
sùe_£¨chªsu…s_im_buddy
);

8022 
	`puΩÀ_nŸify_£¨chªsu…s_buâ⁄_add
(
ªsu…s
, 
PURPLE_NOTIFY_BUTTON_ADD
, 
sùe_£¨chªsu…s_add_buddy
);

8023 
	`puΩÀ_nŸify_£¨chªsu…s
(
sù
->
gc
, 
NULL
, NULL, 
£c⁄d¨y
, 
ªsu…s
, NULL, NULL);

8025 
	`g_‰ì
(
£c⁄d¨y
);

8026 
	`sùe_xml_‰ì
(
£¨chResu…s
);

8027  
TRUE
;

8028 
	}
}

8030 
	$sùe_£¨ch_c⁄è˘_wôh_cb
(
PuΩÀC⁄√˘i⁄
 *
gc
, 
PuΩÀReque°Fõlds
 *
fõlds
)

8032 
GLi°
 *
íåõs
 = 
	`puΩÀ_ªque°_fõld_group_gë_fõlds
(
	`puΩÀ_ªque°_fõlds_gë_groups
(
fõlds
)->
d©a
);

8033 
gch¨
 **
©ås
 = 
	`g_√w
(gch¨ *, 
	`g_li°_Àngth
(
íåõs
) + 1);

8034 
i
 = 0;

8036 i‡(!
©ås
) ;

8039 
PuΩÀReque°Fõld
 *
fõld
 = 
íåõs
->
d©a
;

8040 c⁄° *
id
 = 
	`puΩÀ_ªque°_fõld_gë_id
(
fõld
);

8041 c⁄° *
vÆue
 = 
	`puΩÀ_ªque°_fõld_°rög_gë_vÆue
(
fõld
);

8043 
	`SIPE_DEBUG_INFO
("sùe_£¨ch_c⁄è˘_wôh_cb: %†'%s'", 
id
, 
vÆue
 ? value : "");

8045 i‡(
vÆue
 !
NULL
Ë
©ås
[
i
++] = 
	`g_m¨kup_¥ötf_esˇ≥d
(
SIPE_SOAP_SEARCH_ROW
, 
id
, value);

8046 } (
íåõs
 = 
	`g_li°_√xt
”¡rõs)Ë!
NULL
);

8047 
©ås
[
i
] = 
NULL
;

8049 i‡(
i
 > 0) {

8050 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
PURPLE_GC_TO_SIPE_CORE_PRIVATE
;

8051 
gch¨
 *
domaö_uri
 = 
	`sù_uri_‰om_«me
(
sùe_¥iv©e
->
public
.
sù_domaö
);

8052 
gch¨
 *
quîy
 = 
	`g_°rjoöv
(
NULL
, 
©ås
);

8053 
gch¨
 *
body
 = 
	`g_°rdup_¥ötf
(
SIPE_SOAP_SEARCH_CONTACT
, 100, 
quîy
);

8054 
	`SIPE_DEBUG_INFO
("sùe_£¨ch_c⁄è˘_wôh_cb: body:\n%s", 
body
 ? body : "");

8055 
	`£nd_sﬂp_ªque°_wôh_cb
(
sùe_¥iv©e
, 
domaö_uri
, 
body
,

8056 
¥o˚ss_£¨ch_c⁄è˘_ª•⁄£
, 
NULL
);

8057 
	`g_‰ì
(
domaö_uri
);

8058 
	`g_‰ì
(
body
);

8059 
	`g_‰ì
(
quîy
);

8062 
	`g_°r‰ìv
(
©ås
);

8063 
	}
}

8065 
	$sùe_publish_gë_ˇt_°©e_u£r_to_˛ór
(
SIPE_UNUSED_PARAMETER
 c⁄° *
«me
,

8066 
gpoöãr
 
vÆue
,

8067 
GSåög
* 
°r
)

8069 
sùe_publiˇti⁄
 *
publiˇti⁄
 = 
vÆue
;

8071 
	`g_°rög_≠≥nd_¥ötf
–
°r
,

8072 
SIPE_PUB_XML_PUBLICATION_CLEAR
,

8073 
publiˇti⁄
->
ˇãg‹y
,

8074 
publiˇti⁄
->
ö°™˚
,

8075 
publiˇti⁄
->
c⁄èöî
,

8076 
publiˇti⁄
->
vîsi⁄
,

8078 
	}
}

8080 
	$sùe_c‹e_ª£t_°©us
(
sùe_c‹e_public
 *
sùe_public
)

8082 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
SIPE_CORE_PRIVATE
;

8083 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA
;

8084 i‡(
sù
->
ocs2007
)

8086 
GSåög
* 
°r
 = 
	`g_°rög_√w
(
NULL
);

8087 
gch¨
 *
publiˇti⁄s
;

8089 i‡(!
sù
->
u£r_°©e_publiˇti⁄s
 || 
	`g_hash_èbÀ_size
(sip->user_state_publications) == 0) {

8090 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_reset_status:Ço userStateÖublications,Éxiting.");

8094 
	`g_hash_èbÀ_f‹óch
(
sù
->
u£r_°©e_publiˇti⁄s
, (
GHFunc
)
sùe_publish_gë_ˇt_°©e_u£r_to_˛ór
, 
°r
);

8095 
publiˇti⁄s
 = 
	`g_°rög_‰ì
(
°r
, 
FALSE
);

8097 
	`£nd_¥e£n˚_publish
(
sùe_¥iv©e
, 
publiˇti⁄s
);

8098 
	`g_‰ì
(
publiˇti⁄s
);

8102 
	`£nd_¥e£n˚_sﬂp0
(
sùe_¥iv©e
, 
FALSE
, 
TRUE
);

8104 
	}
}

8107 
	#INDENT_FMT
 " %s"

	)

8112 
	#INDENT_MARKED_FMT
 "* %s"

	)

8118 
	#INDENT_MARKED_INHERITED_FMT
 "%s"

	)

8120 
GSLi°
 *
	$sùe_c‹e_buddy_öfo
(
sùe_c‹e_public
 *
sùe_public
,

8121 c⁄° 
gch¨
 *
«me
,

8122 c⁄° 
gch¨
 *
°©us_«me
,

8123 
gboﬁón
 
is_⁄löe
)

8125 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
SIPE_CORE_PRIVATE
;

8126 
gch¨
 *
nŸe
 = 
NULL
;

8127 
gboﬁón
 
is_oof_nŸe
 = 
FALSE
;

8128 
gch¨
 *
a˘ivôy
 = 
NULL
;

8129 
gch¨
 *
ˇÀnd¨
 = 
NULL
;

8130 
gch¨
 *
mìtög_subje˘
 = 
NULL
;

8131 
gch¨
 *
mìtög_loˇti⁄
 = 
NULL
;

8132 
gch¨
 *
ac˚ss_ãxt
 = 
NULL
;

8133 
GSLi°
 *
öfo
 = 
NULL
;

8135 
	#SIPE_ADD_BUDDY_INFO
(
l
, 
t
) \

8137 
sùe_buddy_öfo
 *
sbi
 = 
	`g_mÆloc
((sipe_buddy_info)); \

8138 
sbi
->
œbñ
 = (
l
); \

8139 
sbi
->
ãxt
 = (
t
); \

8140 
öfo
 = 
	`g_¶i°_≠≥nd
(öfo, 
sbi
); \

8141 }

	)

8143 i‡(
sùe_public
) {

8144 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA
;

8145 
sùe_buddy
 *
sbuddy
 = 
	`g_hash_èbÀ_lookup
(
sùe_¥iv©e
->
buddõs
, 
«me
);

8146 i‡(
sbuddy
) {

8147 
nŸe
 = 
sbuddy
->note;

8148 
is_oof_nŸe
 = 
sbuddy
->is_oof_note;

8149 
a˘ivôy
 = 
sbuddy
->activity;

8150 
ˇÀnd¨
 = 
	`sùe_ˇl_gë_des¸ùti⁄
(
sbuddy
);

8151 
mìtög_subje˘
 = 
sbuddy
->meeting_subject;

8152 
mìtög_loˇti⁄
 = 
sbuddy
->meeting_location;

8154 i‡(
sù
->
ocs2007
) {

8155 
gboﬁón
 
is_group_ac˚ss
 = 
FALSE
;

8156 c⁄° 
c⁄èöî_id
 = 
	`sùe_föd_ac˚ss_Àvñ
(
sùe_¥iv©e
, "u£r", 
	`sùe_gë_no_sù_uri
(
«me
), &
is_group_ac˚ss
);

8157 c⁄° *
ac˚ss_Àvñ
 = 
	`sùe_gë_ac˚ss_Àvñ_«me
(
c⁄èöî_id
);

8158 
ac˚ss_ãxt
 = 
is_group_ac˚ss
 ?

8159 
	`g_°rdup
(
ac˚ss_Àvñ
) :

8160 
	`g_°rdup_¥ötf
(
INDENT_MARKED_FMT
, 
ac˚ss_Àvñ
);

8165 i‡(
is_⁄löe
)

8167 
gch¨
 *
°©us_°r
 = 
	`g_°rdup
(
a˘ivôy
 ?á˘ivôy : 
°©us_«me
);

8169 
	`SIPE_ADD_BUDDY_INFO
(
	`_
("Sètus"), 
°©us_°r
);

8171 i‡(
is_⁄löe
 && !
	`is_em±y
(
ˇÀnd¨
))

8173 
	`SIPE_ADD_BUDDY_INFO
(
	`_
("CÆíd¨"), 
ˇÀnd¨
);

8174 
ˇÀnd¨
 = 
NULL
;

8176 
	`g_‰ì
(
ˇÀnd¨
);

8177 i‡(!
	`is_em±y
(
mìtög_loˇti⁄
))

8179 
	`SIPE_ADD_BUDDY_INFO
(
	`_
("Mìtög in"), 
	`g_°rdup
(
mìtög_loˇti⁄
));

8181 i‡(!
	`is_em±y
(
mìtög_subje˘
))

8183 
	`SIPE_ADD_BUDDY_INFO
(
	`_
("Mìtögábout"), 
	`g_°rdup
(
mìtög_subje˘
));

8185 i‡(
nŸe
)

8187 
	`SIPE_DEBUG_INFO
("sùe_toﬁtù_ãxt: %†nŸe: '%s'", 
«me
, 
nŸe
);

8188 
	`SIPE_ADD_BUDDY_INFO
(
is_oof_nŸe
 ? 
	`_
("Out of officeÇote") : _("Note"),

8189 
	`g_°rdup_¥ötf
("<i>%s</i>", 
nŸe
));

8191 i‡(
ac˚ss_ãxt
) {

8192 
	`SIPE_ADD_BUDDY_INFO
(
	`_
("Ac˚s†Àvñ"), 
ac˚ss_ãxt
);

8195 (
öfo
);

8196 
	}
}

8198 
PuΩÀBuddy
 *

8199 
	$puΩÀ_bli°_add_buddy_˛⁄e
(
PuΩÀGroup
 * 
group
, 
PuΩÀBuddy
 * 
buddy
)

8201 
PuΩÀBuddy
 *
˛⁄e
;

8202 c⁄° 
gch¨
 *
£rvî_Æüs
, *
emaû
;

8203 c⁄° 
PuΩÀSètus
 *
°©us
 = 
	`puΩÀ_¥e£n˚_gë_a˘ive_°©us
(
	`puΩÀ_buddy_gë_¥e£n˚
(
buddy
));

8205 
˛⁄e
 = 
	`puΩÀ_buddy_√w
(
buddy
->
accou¡
, buddy->
«me
, buddy->
Æüs
);

8207 
	`puΩÀ_bli°_add_buddy
(
˛⁄e
, 
NULL
, 
group
, NULL);

8209 
£rvî_Æüs
 = 
	`puΩÀ_buddy_gë_£rvî_Æüs
(
buddy
);

8210 i‡(
£rvî_Æüs
) {

8211 
	`puΩÀ_bli°_£rvî_Æüs_buddy
(
˛⁄e
, 
£rvî_Æüs
);

8214 
emaû
 = 
	`puΩÀ_bli°_node_gë_°rög
(&
buddy
->
node
, 
EMAIL_PROP
);

8215 i‡(
emaû
) {

8216 
	`puΩÀ_bli°_node_£t_°rög
(&
˛⁄e
->
node
, 
EMAIL_PROP
, 
emaû
);

8219 
	`puΩÀ_¥e£n˚_£t_°©us_a˘ive
(
	`puΩÀ_buddy_gë_¥e£n˚
(
˛⁄e
), 
	`puΩÀ_°©us_gë_id
(
°©us
), 
TRUE
);

8221 
	`puΩÀ_¥∂_gŸ_u£r_°©us
(
˛⁄e
->
accou¡
, cl⁄e->
«me
, 
	`puΩÀ_°©us_gë_id
(
°©us
), 
NULL
);

8222  
˛⁄e
;

8223 
	}
}

8226 
	$sùe_buddy_míu_c›y_to_cb
(
PuΩÀBli°Node
 *
node
, c⁄° *
group_«me
)

8228 
PuΩÀBuddy
 *
buddy
, *
b
;

8229 
PuΩÀC⁄√˘i⁄
 *
gc
;

8230 
PuΩÀGroup
 * 
group
 = 
	`puΩÀ_föd_group
(
group_«me
);

8232 
	`g_ªtu∫_if_Áû
(
	`PURPLE_BLIST_NODE_IS_BUDDY
(
node
));

8234 
buddy
 = (
PuΩÀBuddy
 *)
node
;

8236 
	`SIPE_DEBUG_INFO
("sùe_buddy_míu_c›y_to_cb: c›yög %†tÿ%s", 
buddy
->
«me
, 
group_«me
);

8237 
gc
 = 
	`puΩÀ_accou¡_gë_c⁄√˘i⁄
(
buddy
->
accou¡
);

8239 
b
 = 
	`puΩÀ_föd_buddy_ö_group
(
buddy
->
accou¡
, buddy->
«me
, 
group
);

8240 i‡(!
b
){

8241 
	`puΩÀ_bli°_add_buddy_˛⁄e
(
group
, 
buddy
);

8244 
	`sùe_group_buddy
(
gc
, 
buddy
->
«me
, 
NULL
, 
group_«me
);

8245 
	}
}

8248 
	$sùe_buddy_míu_ch©_√w_cb
(
PuΩÀBuddy
 *
buddy
)

8250 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
PURPLE_BUDDY_TO_SIPE_CORE_PRIVATE
;

8251 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

8253 
	`SIPE_DEBUG_INFO
("sùe_buddy_míu_ch©_√w_cb: buddy->«me=%s", 
buddy
->
«me
);

8256 i‡(
sù
->
ocs2007
)

8258 
	`sùe_c⁄f_add
(
sù
, 
buddy
->
«me
);

8262 
gch¨
 *
£lf
 = 
	`sù_uri_£lf
(
sù
);

8263 
sù_£ssi⁄
 *
£ssi⁄
;

8265 
£ssi⁄
 = 
	`sùe_£ssi⁄_add_ch©
(
sù
);

8266 
£ssi⁄
->
ch©_tôÀ
 = 
	`sùe_ch©_gë_«me
(£ssi⁄->
ˇŒid
);

8267 
£ssi⁄
->
ro°î_m™agî
 = 
	`g_°rdup
(
£lf
);

8269 
£ssi⁄
->
c⁄v
 = 
	`£rv_gŸ_joöed_ch©
(
buddy
->
accou¡
->
gc
, sessi⁄->
ch©_id
, sessi⁄->
ch©_tôÀ
);

8270 
	`puΩÀ_c⁄v_ch©_£t_nick
(
	`PURPLE_CONV_CHAT
(
£ssi⁄
->
c⁄v
), 
£lf
);

8271 
	`puΩÀ_c⁄v_ch©_add_u£r
(
	`PURPLE_CONV_CHAT
(
£ssi⁄
->
c⁄v
), 
£lf
, 
NULL
, 
PURPLE_CBFLAGS_NONE
, 
FALSE
);

8272 
	`sùe_övôe
(
sù
, 
£ssi⁄
, 
buddy
->
«me
, 
NULL
, NULL, NULL, 
FALSE
);

8274 
	`g_‰ì
(
£lf
);

8276 
	}
}

8278 
gboﬁón


8279 
	$sùe_is_ñe˘i⁄_föished
(
sù_£ssi⁄
 *
£ssi⁄
)

8281 
gboﬁón
 
ªs
 = 
TRUE
;

8283 
SIPE_DIALOG_FOREACH
 {

8284 i‡(
dülog
->
ñe˘i⁄_vŸe
 == 0) {

8285 
ªs
 = 
FALSE
;

8288 } 
SIPE_DIALOG_FOREACH_END
;

8290 i‡(
ªs
) {

8291 
£ssi⁄
->
is_vŸög_ö_¥ogªss
 = 
FALSE
;

8293  
ªs
;

8294 
	}
}

8297 
	$sùe_ñe˘i⁄_°¨t
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

8298 
sù_£ssi⁄
 *
£ssi⁄
)

8300 i‡(
£ssi⁄
->
is_vŸög_ö_¥ogªss
) {

8301 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_election_start: otherÉlection is inÖrogress,Éxiting.");

8304 
£ssi⁄
->
is_vŸög_ö_¥ogªss
 = 
TRUE
;

8306 
£ssi⁄
->
bid
 = 
	`ønd
();

8308 
	`SIPE_DEBUG_INFO
("sùe_ñe˘i⁄_°¨t: RMÉÀ˘i⁄ ha†öôüãd. Ou∏bid=%d", 
£ssi⁄
->
bid
);

8310 
SIPE_DIALOG_FOREACH
 {

8312 
dülog
->
ñe˘i⁄_vŸe
 = 0;

8315 
	`sùe_£nd_ñe˘i⁄_ªque°_rm
(
sùe_¥iv©e
, 
dülog
, 
£ssi⁄
->
bid
);

8316 } 
SIPE_DIALOG_FOREACH_END
;

8318 
	`sùe_scheduÀ_£c⁄ds
(
sùe_¥iv©e
,

8320 
£ssi⁄
,

8322 
sùe_ñe˘i⁄_ªsu…
,

8323 
NULL
);

8324 
	}
}

8330 
	$sùe_övôe_to_ch©
(
sùe_accou¡_d©a
 *
sù
,

8331 
sù_£ssi⁄
 *
£ssi⁄
,

8332 c⁄° 
gch¨
 *
who
)

8335 i‡(
£ssi⁄
->
focus_uri
)

8337 
	`sùe_övôe_c⁄f
(
sù
, 
£ssi⁄
, 
who
);

8341 
gch¨
 *
£lf
 = 
	`sù_uri_£lf
(
sù
);

8342 i‡(
£ssi⁄
->
ro°î_m™agî
) {

8343 i‡(
	`sùe_°rˇ£_equÆ
(
£ssi⁄
->
ro°î_m™agî
, 
£lf
)) {

8344 
	`sùe_övôe
(
sù
, 
£ssi⁄
, 
who
, 
NULL
, NULL, NULL, 
FALSE
);

8346 
	`sùe_ª„r
(
SIP_TO_CORE_PRIVATE
, 
£ssi⁄
, 
who
);

8349 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_buddy_menu_chat_invite:Ço RMávailable");

8351 
£ssi⁄
->
≥ndög_övôe_queue
 = 
	`¶i°_ö£π_unique_s‹ãd
(

8352 
£ssi⁄
->
≥ndög_övôe_queue
, 
	`g_°rdup
(
who
), (
GCom∑ªFunc
)
°rcmp
);

8354 
	`sùe_ñe˘i⁄_°¨t
(
SIP_TO_CORE_PRIVATE
, 
£ssi⁄
);

8356 
	`g_‰ì
(
£lf
);

8358 
	}
}

8361 
	$sùe_¥o˚ss_≥ndög_övôe_queue
(
sùe_accou¡_d©a
 *
sù
,

8362 
sù_£ssi⁄
 *
£ssi⁄
)

8364 
gch¨
 *
övôì
;

8365 
GSLi°
 *
íåy
 = 
£ssi⁄
->
≥ndög_övôe_queue
;

8367 
íåy
) {

8368 
övôì
 = 
íåy
->
d©a
;

8369 
	`sùe_övôe_to_ch©
(
sù
, 
£ssi⁄
, 
övôì
);

8370 
íåy
 = 
£ssi⁄
->
≥ndög_övôe_queue
 = 
	`g_¶i°_ªmove
(£ssi⁄->≥ndög_övôe_queue, 
övôì
);

8371 
	`g_‰ì
(
övôì
);

8373 
	}
}

8376 
	$sùe_ñe˘i⁄_ªsu…
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

8377 *
£ss
)

8379 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

8380 
sù_£ssi⁄
 *
£ssi⁄
 = (sù_£ssi⁄ *)
£ss
;

8381 
gch¨
 *
rivÆ
;

8382 
gboﬁón
 
has_w⁄
 = 
TRUE
;

8384 i‡(
£ssi⁄
->
ro°î_m™agî
) {

8385 
	`SIPE_DEBUG_INFO
(

8387 
£ssi⁄
->
ro°î_m™agî
);

8391 
£ssi⁄
->
is_vŸög_ö_¥ogªss
 = 
FALSE
;

8393 
SIPE_DIALOG_FOREACH
 {

8394 i‡(
dülog
->
ñe˘i⁄_vŸe
 < 0) {

8395 
has_w⁄
 = 
FALSE
;

8396 
rivÆ
 = 
dülog
->
wôh
;

8399 } 
SIPE_DIALOG_FOREACH_END
;

8401 i‡(
has_w⁄
) {

8402 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_election_result: we have won RMÉlection!");

8404 
£ssi⁄
->
ro°î_m™agî
 = 
	`sù_uri_£lf
(
sù
);

8406 
SIPE_DIALOG_FOREACH
 {

8408 
	`sùe_£nd_ñe˘i⁄_£t_rm
(
sùe_¥iv©e
, 
dülog
);

8409 } 
SIPE_DIALOG_FOREACH_END
;

8411 
	`SIPE_DEBUG_INFO
("sùe_ñe˘i⁄_ªsu…: wêloo£ RMÉÀ˘i⁄Åÿ%s", 
rivÆ
);

8413 
£ssi⁄
->
bid
 = 0;

8415 
	`sùe_¥o˚ss_≥ndög_övôe_queue
(
sù
, 
£ssi⁄
);

8416 
	}
}

8422 
	$sùe_buddy_míu_ch©_make_Àadî_cb
(
PuΩÀBuddy
 *
buddy
, c⁄° *
ch©_tôÀ
)

8424 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
PURPLE_BUDDY_TO_SIPE_CORE_PRIVATE
;

8425 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

8426 
sù_£ssi⁄
 *
£ssi⁄
;

8428 
	`SIPE_DEBUG_INFO
("sùe_buddy_míu_ch©_make_Àadî_cb: buddy->«me=%s", 
buddy
->
«me
);

8429 
	`SIPE_DEBUG_INFO
("sùe_buddy_míu_ch©_make_Àadî_cb: ch©_tôÀ=%s", 
ch©_tôÀ
);

8431 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_ch©_by_tôÀ
(
sù
, 
ch©_tôÀ
);

8433 
	`sùe_c⁄f_modify_u£r_rﬁe
(
sù
, 
£ssi⁄
, 
buddy
->
«me
);

8434 
	}
}

8440 
	$sùe_buddy_míu_ch©_ªmove_cb
(
PuΩÀBuddy
 *
buddy
, c⁄° *
ch©_tôÀ
)

8442 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
PURPLE_BUDDY_TO_SIPE_CORE_PRIVATE
;

8443 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

8444 
sù_£ssi⁄
 *
£ssi⁄
;

8446 
	`SIPE_DEBUG_INFO
("sùe_buddy_míu_ch©_ªmove_cb: buddy->«me=%s", 
buddy
->
«me
);

8447 
	`SIPE_DEBUG_INFO
("sùe_buddy_míu_ch©_ªmove_cb: ch©_tôÀ=%s", 
ch©_tôÀ
);

8449 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_ch©_by_tôÀ
(
sù
, 
ch©_tôÀ
);

8451 
	`sùe_c⁄f_dñëe_u£r
(
sù
, 
£ssi⁄
, 
buddy
->
«me
);

8452 
	}
}

8455 
	$sùe_buddy_míu_ch©_övôe_cb
(
PuΩÀBuddy
 *
buddy
, *
ch©_tôÀ
)

8457 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
PURPLE_BUDDY_TO_SIPE_CORE_PRIVATE
;

8458 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

8459 
sù_£ssi⁄
 *
£ssi⁄
;

8461 
	`SIPE_DEBUG_INFO
("sùe_buddy_míu_ch©_övôe_cb: buddy->«me=%s", 
buddy
->
«me
);

8462 
	`SIPE_DEBUG_INFO
("sùe_buddy_míu_ch©_övôe_cb: ch©_tôÀ=%s", 
ch©_tôÀ
);

8464 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_ch©_by_tôÀ
(
sù
, 
ch©_tôÀ
);

8466 
	`sùe_övôe_to_ch©
(
sù
, 
£ssi⁄
, 
buddy
->
«me
);

8467 
	}
}

8470 
	$sùe_buddy_míu_make_ˇŒ_cb
(
PuΩÀBuddy
 *
buddy
, c⁄° *
ph⁄e
)

8472 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
PURPLE_BUDDY_TO_SIPE_CORE_PRIVATE
;

8473 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

8475 
	`SIPE_DEBUG_INFO
("sùe_buddy_míu_make_ˇŒ_cb: buddy->«me=%s", 
buddy
->
«me
);

8476 i‡(
ph⁄e
) {

8477 *
ãl_uri
 = 
	`sù_to_ãl_uri
(
ph⁄e
);

8479 
	`SIPE_DEBUG_INFO
("sùe_buddy_míu_make_ˇŒ_cb: goögÅÿˇŒÇumbî: %s", 
ãl_uri
 ?Åel_uri : "");

8480 
	`sù_c°a_make_ˇŒ
(
sù
, 
ãl_uri
);

8482 
	`g_‰ì
(
ãl_uri
);

8484 
	}
}

8487 
	$sùe_buddy_míu_ac˚ss_Àvñ_hñp_cb
(
PuΩÀBuddy
 *
buddy
)

8491 
	`puΩÀ_nŸify_uri
(
buddy
->
accou¡
->
gc
, 
	`_
("https://sourceforge.net/apps/mediawiki/sipe/index.php?title=Access_Levels"));

8492 
	}
}

8495 
	$sùe_buddy_míu_£nd_emaû_cb
(
PuΩÀBuddy
 *
buddy
)

8497 c⁄° 
gch¨
 *
emaû
;

8498 
	`SIPE_DEBUG_INFO
("sùe_buddy_míu_£nd_emaû_cb: buddy->«me=%s", 
buddy
->
«me
);

8500 
emaû
 = 
	`puΩÀ_bli°_node_gë_°rög
(&
buddy
->
node
, 
EMAIL_PROP
);

8501 i‡(
emaû
)

8503 *
comm™d_löe
 = 
	`g_°rdup_¥ötf
(

8504 #ifde‡
_WIN32


8509 " maûto:%s", 
emaû
);

8510 
	`SIPE_DEBUG_INFO
("sùe_buddy_míu_£nd_emaû_cb: goögÅÿˇŒÉmaû clõ¡: %s", 
comm™d_löe
);

8512 
	`g_•awn_comm™d_löe_async
(
comm™d_löe
, 
NULL
);

8513 
	`g_‰ì
(
comm™d_löe
);

8517 
	`SIPE_DEBUG_INFO
("sùe_buddy_míu_£nd_emaû_cb:Çÿemaûáddªs†°‹ed f‹ buddy=%s", 
buddy
->
«me
);

8519 
	}
}

8522 
	$sùe_buddy_míu_ac˚ss_Àvñ_cb
(
PuΩÀBuddy
 *
buddy
,

8523 
sùe_c⁄èöî
 *
c⁄èöî
)

8525 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
PURPLE_BUDDY_TO_SIPE_CORE_PRIVATE
;

8526 
sùe_c⁄èöî_membî
 *
membî
;

8528 i‡(!
c⁄èöî
 || !c⁄èöî->
membîs
) ;

8530 
membî
 = ((
sùe_c⁄èöî_membî
 *)
c⁄èöî
->
membîs
->
d©a
);

8532 i‡(!
membî
->
ty≥
) ;

8534 
	`SIPE_DEBUG_INFO
("sipe_buddy_menu_access_level_cb: container->id=%d, member->type=%s, member->value=%s",

8535 
c⁄èöî
->
id
, 
membî
->
ty≥
, membî->
vÆue
 ? member->value : "");

8537 
	`sùe_ch™ge_ac˚ss_Àvñ
(
sùe_¥iv©e
, 
c⁄èöî
->
id
, 
membî
->
ty≥
, membî->
vÆue
);

8538 
	}
}

8540 
GLi°
 *

8541 
sùe_gë_ac˚ss_c⁄åﬁ_míu
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

8542 c⁄° * 
uri
);

8547 
GLi°
 *

8548 
	$sùe_buddy_míu
(
PuΩÀBuddy
 *
buddy
)

8550 
PuΩÀBli°Node
 *
g_node
;

8551 
PuΩÀGroup
 *
group
, *
gr_∑ª¡
;

8552 
PuΩÀMíuA˘i⁄
 *
a˘
;

8553 
GLi°
 *
míu
 = 
NULL
;

8554 
GLi°
 *
míu_groups
 = 
NULL
;

8555 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
PURPLE_BUDDY_TO_SIPE_CORE_PRIVATE
;

8556 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

8557 c⁄° *
emaû
;

8558 c⁄° *
ph⁄e
;

8559 c⁄° *
ph⁄e_di•_°r
;

8560 
gch¨
 *
£lf
 = 
	`sù_uri_£lf
(
sù
);

8562 
SIPE_SESSION_FOREACH
 {

8563 i‡(!
	`sùe_°rˇ£_equÆ
(
£lf
, 
buddy
->
«me
Ë&& 
£ssi⁄
->
ch©_tôÀ
 && sessi⁄->
c⁄v
)

8565 i‡(
	`puΩÀ_c⁄v_ch©_föd_u£r
(
	`PURPLE_CONV_CHAT
(
£ssi⁄
->
c⁄v
), 
buddy
->
«me
))

8567 
PuΩÀC⁄vCh©BuddyFœgs
 
Êags
;

8568 
PuΩÀC⁄vCh©BuddyFœgs
 
Êags_us
;

8570 
Êags
 = 
	`puΩÀ_c⁄v_ch©_u£r_gë_Êags
(
	`PURPLE_CONV_CHAT
(
£ssi⁄
->
c⁄v
), 
buddy
->
«me
);

8571 
Êags_us
 = 
	`puΩÀ_c⁄v_ch©_u£r_gë_Êags
(
	`PURPLE_CONV_CHAT
(
£ssi⁄
->
c⁄v
), 
£lf
);

8572 i‡(
£ssi⁄
->
focus_uri


8573 && 
PURPLE_CBFLAGS_OP
 !(
Êags
 & PURPLE_CBFLAGS_OP)

8574 && 
PURPLE_CBFLAGS_OP
 =(
Êags_us
 & PURPLE_CBFLAGS_OP))

8576 
gch¨
 *
œbñ
 = 
	`g_°rdup_¥ötf
(
	`_
("MakêÀadî o‡'%s'"), 
£ssi⁄
->
ch©_tôÀ
);

8577 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
œbñ
,

8578 
	`PURPLE_CALLBACK
(
sùe_buddy_míu_ch©_make_Àadî_cb
),

8579 
£ssi⁄
->
ch©_tôÀ
, 
NULL
);

8580 
	`g_‰ì
(
œbñ
);

8581 
míu
 = 
	`g_li°_¥ïíd
(míu, 
a˘
);

8584 i‡(
£ssi⁄
->
focus_uri


8585 && 
PURPLE_CBFLAGS_OP
 =(
Êags_us
 & PURPLE_CBFLAGS_OP))

8587 
gch¨
 *
œbñ
 = 
	`g_°rdup_¥ötf
(
	`_
("Removê‰om '%s'"), 
£ssi⁄
->
ch©_tôÀ
);

8588 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
œbñ
,

8589 
	`PURPLE_CALLBACK
(
sùe_buddy_míu_ch©_ªmove_cb
),

8590 
£ssi⁄
->
ch©_tôÀ
, 
NULL
);

8591 
	`g_‰ì
(
œbñ
);

8592 
míu
 = 
	`g_li°_¥ïíd
(míu, 
a˘
);

8597 i‡(!
£ssi⁄
->
focus_uri


8598 || (
£ssi⁄
->
focus_uri
 && !£ssi⁄->
locked
))

8600 
gch¨
 *
œbñ
 = 
	`g_°rdup_¥ötf
(
	`_
("Invôêtÿ'%s'"), 
£ssi⁄
->
ch©_tôÀ
);

8601 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
œbñ
,

8602 
	`PURPLE_CALLBACK
(
sùe_buddy_míu_ch©_övôe_cb
),

8603 
£ssi⁄
->
ch©_tôÀ
, 
NULL
);

8604 
	`g_‰ì
(
œbñ
);

8605 
míu
 = 
	`g_li°_¥ïíd
(míu, 
a˘
);

8609 } 
SIPE_SESSION_FOREACH_END
;

8611 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
	`_
("New chat"),

8612 
	`PURPLE_CALLBACK
(
sùe_buddy_míu_ch©_√w_cb
),

8613 
NULL
, NULL);

8614 
míu
 = 
	`g_li°_¥ïíd
(míu, 
a˘
);

8616 i‡(
sù
->
c°a
 && !sù->c°a->
löe_°©us
) {

8617 
gch¨
 *
tmp
 = 
NULL
;

8619 
ph⁄e
 = 
	`puΩÀ_bli°_node_gë_°rög
(&
buddy
->
node
, 
PHONE_PROP
);

8620 
ph⁄e_di•_°r
 = 
	`puΩÀ_bli°_node_gë_°rög
(&
buddy
->
node
, 
PHONE_DISPLAY_PROP
);

8621 i‡(
ph⁄e
) {

8622 
gch¨
 *
œbñ
 = 
	`g_°rdup_¥ötf
(
	`_
("Work %s"),

8623 
ph⁄e_di•_°r
 ?Öh⁄e_di•_°∏: (
tmp
 = 
	`sù_ãl_uri_dí‹mÆize
(
ph⁄e
)));

8624 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
œbñ
, 
	`PURPLE_CALLBACK
(
sùe_buddy_míu_make_ˇŒ_cb
), (
gpoöãr
Ë
ph⁄e
, 
NULL
);

8625 
	`g_‰ì
(
tmp
);

8626 
tmp
 = 
NULL
;

8627 
	`g_‰ì
(
œbñ
);

8628 
míu
 = 
	`g_li°_¥ïíd
(míu, 
a˘
);

8632 
ph⁄e
 = 
	`puΩÀ_bli°_node_gë_°rög
(&
buddy
->
node
, 
PHONE_MOBILE_PROP
);

8633 
ph⁄e_di•_°r
 = 
	`puΩÀ_bli°_node_gë_°rög
(&
buddy
->
node
, 
PHONE_MOBILE_DISPLAY_PROP
);

8634 i‡(
ph⁄e
) {

8635 
gch¨
 *
œbñ
 = 
	`g_°rdup_¥ötf
(
	`_
("Mobile %s"),

8636 
ph⁄e_di•_°r
 ?Öh⁄e_di•_°∏: (
tmp
 = 
	`sù_ãl_uri_dí‹mÆize
(
ph⁄e
)));

8637 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
œbñ
, 
	`PURPLE_CALLBACK
(
sùe_buddy_míu_make_ˇŒ_cb
), (
gpoöãr
Ë
ph⁄e
, 
NULL
);

8638 
	`g_‰ì
(
tmp
);

8639 
tmp
 = 
NULL
;

8640 
	`g_‰ì
(
œbñ
);

8641 
míu
 = 
	`g_li°_¥ïíd
(míu, 
a˘
);

8645 
ph⁄e
 = 
	`puΩÀ_bli°_node_gë_°rög
(&
buddy
->
node
, 
PHONE_HOME_PROP
);

8646 
ph⁄e_di•_°r
 = 
	`puΩÀ_bli°_node_gë_°rög
(&
buddy
->
node
, 
PHONE_HOME_DISPLAY_PROP
);

8647 i‡(
ph⁄e
) {

8648 
gch¨
 *
œbñ
 = 
	`g_°rdup_¥ötf
(
	`_
("Home %s"),

8649 
ph⁄e_di•_°r
 ?Öh⁄e_di•_°∏: (
tmp
 = 
	`sù_ãl_uri_dí‹mÆize
(
ph⁄e
)));

8650 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
œbñ
, 
	`PURPLE_CALLBACK
(
sùe_buddy_míu_make_ˇŒ_cb
), (
gpoöãr
Ë
ph⁄e
, 
NULL
);

8651 
	`g_‰ì
(
tmp
);

8652 
tmp
 = 
NULL
;

8653 
	`g_‰ì
(
œbñ
);

8654 
míu
 = 
	`g_li°_¥ïíd
(míu, 
a˘
);

8658 
ph⁄e
 = 
	`puΩÀ_bli°_node_gë_°rög
(&
buddy
->
node
, 
PHONE_OTHER_PROP
);

8659 
ph⁄e_di•_°r
 = 
	`puΩÀ_bli°_node_gë_°rög
(&
buddy
->
node
, 
PHONE_OTHER_DISPLAY_PROP
);

8660 i‡(
ph⁄e
) {

8661 
gch¨
 *
œbñ
 = 
	`g_°rdup_¥ötf
(
	`_
("Other %s"),

8662 
ph⁄e_di•_°r
 ?Öh⁄e_di•_°∏: (
tmp
 = 
	`sù_ãl_uri_dí‹mÆize
(
ph⁄e
)));

8663 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
œbñ
, 
	`PURPLE_CALLBACK
(
sùe_buddy_míu_make_ˇŒ_cb
), (
gpoöãr
Ë
ph⁄e
, 
NULL
);

8664 
	`g_‰ì
(
tmp
);

8665 
tmp
 = 
NULL
;

8666 
	`g_‰ì
(
œbñ
);

8667 
míu
 = 
	`g_li°_¥ïíd
(míu, 
a˘
);

8671 
ph⁄e
 = 
	`puΩÀ_bli°_node_gë_°rög
(&
buddy
->
node
, 
PHONE_CUSTOM1_PROP
);

8672 
ph⁄e_di•_°r
 = 
	`puΩÀ_bli°_node_gë_°rög
(&
buddy
->
node
, 
PHONE_CUSTOM1_DISPLAY_PROP
);

8673 i‡(
ph⁄e
) {

8674 
gch¨
 *
œbñ
 = 
	`g_°rdup_¥ötf
(
	`_
("Custom1 %s"),

8675 
ph⁄e_di•_°r
 ?Öh⁄e_di•_°∏: (
tmp
 = 
	`sù_ãl_uri_dí‹mÆize
(
ph⁄e
)));

8676 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
œbñ
, 
	`PURPLE_CALLBACK
(
sùe_buddy_míu_make_ˇŒ_cb
), (
gpoöãr
Ë
ph⁄e
, 
NULL
);

8677 
	`g_‰ì
(
tmp
);

8678 
tmp
 = 
NULL
;

8679 
	`g_‰ì
(
œbñ
);

8680 
míu
 = 
	`g_li°_¥ïíd
(míu, 
a˘
);

8684 
emaû
 = 
	`puΩÀ_bli°_node_gë_°rög
(&
buddy
->
node
, 
EMAIL_PROP
);

8685 i‡(
emaû
) {

8686 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
	`_
("SendÉmail..."),

8687 
	`PURPLE_CALLBACK
(
sùe_buddy_míu_£nd_emaû_cb
),

8688 
NULL
, NULL);

8689 
míu
 = 
	`g_li°_¥ïíd
(míu, 
a˘
);

8693 i‡(
sù
->
ocs2007
) {

8694 
GLi°
 *
míu_ac˚ss_Àvñs
 = 
	`sùe_gë_ac˚ss_c⁄åﬁ_míu
(
sùe_¥iv©e
, 
buddy
->
«me
);

8696 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
	`_
("AccessÜevel"),

8697 
NULL
,

8698 
NULL
, 
míu_ac˚ss_Àvñs
);

8699 
míu
 = 
	`g_li°_¥ïíd
(míu, 
a˘
);

8703 
gr_∑ª¡
 = 
	`puΩÀ_buddy_gë_group
(
buddy
);

8704 
g_node
 = 
	`puΩÀ_bli°_gë_roŸ
(); g_node; g_nodêg_node->
√xt
) {

8705 i‡(
g_node
->
ty≥
 !
PURPLE_BLIST_GROUP_NODE
)

8708 
group
 = (
PuΩÀGroup
 *)
g_node
;

8709 i‡(
group
 =
gr_∑ª¡
)

8712 i‡(
	`puΩÀ_föd_buddy_ö_group
(
buddy
->
accou¡
, buddy->
«me
, 
group
))

8715 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
	`puΩÀ_group_gë_«me
(
group
),

8716 
	`PURPLE_CALLBACK
(
sùe_buddy_míu_c›y_to_cb
),

8717 
group
->
«me
, 
NULL
);

8718 
míu_groups
 = 
	`g_li°_¥ïíd
(míu_groups, 
a˘
);

8720 
míu_groups
 = 
	`g_li°_ªvî£
(menu_groups);

8722 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
	`_
("CopyÅo"),

8723 
NULL
,

8724 
NULL
, 
míu_groups
);

8725 
míu
 = 
	`g_li°_¥ïíd
(míu, 
a˘
);

8727 
míu
 = 
	`g_li°_ªvî£
(menu);

8729 
	`g_‰ì
(
£lf
);

8730  
míu
;

8731 
	}
}

8734 
	$sùe_ask_ac˚ss_domaö_cb
(
PuΩÀC⁄√˘i⁄
 *
gc
, 
PuΩÀReque°Fõlds
 *
fõlds
)

8736 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
PURPLE_GC_TO_SIPE_CORE_PRIVATE
;

8737 c⁄° *
domaö
 = 
	`puΩÀ_ªque°_fõlds_gë_°rög
(
fõlds
, "access_domain");

8738 
ödex
 = 
	`puΩÀ_ªque°_fõlds_gë_choi˚
(
fõlds
, "container_id");

8740 
i
 = (
ödex
 == 4) ? 0 : index + 1;

8741 
c⁄èöî_id
 = 
c⁄èöîs
[
i
];

8743 
	`SIPE_DEBUG_INFO
("sùe_ask_ac˚ss_domaö_cb: domaö=%s, c⁄èöî_id=(%d)%d", 
domaö
 ? domaö : "", 
ödex
, 
c⁄èöî_id
);

8745 
	`sùe_ch™ge_ac˚ss_Àvñ
(
sùe_¥iv©e
, 
c⁄èöî_id
, "domaö", 
domaö
);

8746 
	}
}

8749 
	$sùe_ask_ac˚ss_domaö
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

8751 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

8752 
PuΩÀAccou¡
 *
accou¡
 = 
sù
->account;

8753 
PuΩÀC⁄√˘i⁄
 *
gc
 = 
sù
->gc;

8754 
PuΩÀReque°Fõlds
 *
fõlds
;

8755 
PuΩÀReque°FõldGroup
 *
g
;

8756 
PuΩÀReque°Fõld
 *
f
;

8758 
fõlds
 = 
	`puΩÀ_ªque°_fõlds_√w
();

8760 
g
 = 
	`puΩÀ_ªque°_fõld_group_√w
(
NULL
);

8761 
f
 = 
	`puΩÀ_ªque°_fõld_°rög_√w
("ac˚ss_domaö", 
	`_
("Domaö"), "∑π√r-com∑ny.com", 
FALSE
);

8762 
	`puΩÀ_ªque°_fõld_£t_ªquúed
(
f
, 
TRUE
);

8763 
	`puΩÀ_ªque°_fõld_group_add_fõld
(
g
, 
f
);

8765 
f
 = 
	`puΩÀ_ªque°_fõld_choi˚_√w
("c⁄èöî_id", 
	`_
("AccessÜevel"), 0);

8766 
	`puΩÀ_ªque°_fõld_choi˚_add
(
f
, 
	`_
("Personal"));

8767 
	`puΩÀ_ªque°_fõld_choi˚_add
(
f
, 
	`_
("Team"));

8768 
	`puΩÀ_ªque°_fõld_choi˚_add
(
f
, 
	`_
("Company"));

8769 
	`puΩÀ_ªque°_fõld_choi˚_add
(
f
, 
	`_
("Public"));

8770 
	`puΩÀ_ªque°_fõld_choi˚_add
(
f
, 
	`_
("Blocked"));

8771 
	`puΩÀ_ªque°_fõld_choi˚_£t_deÁu…_vÆue
(
f
, 3);

8772 
	`puΩÀ_ªque°_fõld_£t_ªquúed
(
f
, 
TRUE
);

8773 
	`puΩÀ_ªque°_fõld_group_add_fõld
(
g
, 
f
);

8775 
	`puΩÀ_ªque°_fõlds_add_group
(
fõlds
, 
g
);

8777 
	`puΩÀ_ªque°_fõlds
(
gc
, 
	`_
("AddÇew domain"),

8778 
	`_
("AddÇew domaö"), 
NULL
, 
fõlds
,

8779 
	`_
("Add"), 
	`G_CALLBACK
(
sùe_ask_ac˚ss_domaö_cb
),

8780 
	`_
("C™˚l"), 
NULL
,

8781 
accou¡
, 
NULL
, NULL, 
gc
);

8782 
	}
}

8785 
	$sùe_buddy_míu_ac˚ss_Àvñ_add_domaö_cb
(
PuΩÀBuddy
 *
buddy
)

8787 
	`sùe_ask_ac˚ss_domaö
(
PURPLE_BUDDY_TO_SIPE_CORE_PRIVATE
);

8788 
	}
}

8790 
GLi°
 *

8791 
	$sùe_gë_ac˚ss_Àvñs_míu
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

8792 c⁄° * 
membî_ty≥
,

8793 c⁄° * 
membî_vÆue
,

8794 c⁄° 
gboﬁón
 
exåa_míu
)

8796 
GLi°
 *
míu_ac˚ss_Àvñs
 = 
NULL
;

8797 
i
;

8798 *
míu_«me
;

8799 
PuΩÀMíuA˘i⁄
 *
a˘
;

8800 
sùe_c⁄èöî
 *
c⁄èöî
;

8801 
sùe_c⁄èöî_membî
 *
membî
;

8802 
gboﬁón
 
is_group_ac˚ss
 = 
FALSE
;

8803 
c⁄èöî_id
 = 
	`sùe_föd_ac˚ss_Àvñ
(
sùe_¥iv©e
, 
membî_ty≥
, 
membî_vÆue
, &
is_group_ac˚ss
);

8805 
i
 = 1; i <
CONTAINERS_LEN
; i++) {

8809 
j
 = (
i
 =
CONTAINERS_LEN
) ? 0 : i;

8810 c⁄° *
acc_Àvñ_«me
 = 
	`sùe_gë_ac˚ss_Àvñ_«me
(
c⁄èöîs
[
j
]);

8812 
c⁄èöî
 = 
	`g_√w0
(
sùe_c⁄èöî
, 1);

8813 
membî
 = 
	`g_√w0
(
sùe_c⁄èöî_membî
, 1);

8814 
c⁄èöî
->
id
 = 
c⁄èöîs
[
j
];

8815 
c⁄èöî
->
membîs
 = 
	`g_¶i°_≠≥nd
(c⁄èöî->membîs, 
membî
);

8816 
membî
->
ty≥
 = 
	`g_°rdup
(
membî_ty≥
);

8817 
membî
->
vÆue
 = 
	`g_°rdup
(
membî_vÆue
);

8820 i‡((()
c⁄èöîs
[
j
]Ë=
c⁄èöî_id
) {

8821 
míu_«me
 = 
is_group_ac˚ss
 ?

8822 
	`g_°rdup_¥ötf
(
INDENT_MARKED_INHERITED_FMT
, 
acc_Àvñ_«me
) :

8823 
	`g_°rdup_¥ötf
(
INDENT_MARKED_FMT
, 
acc_Àvñ_«me
);

8825 
míu_«me
 = 
	`g_°rdup_¥ötf
(
INDENT_FMT
, 
acc_Àvñ_«me
);

8828 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
míu_«me
,

8829 
	`PURPLE_CALLBACK
(
sùe_buddy_míu_ac˚ss_Àvñ_cb
),

8830 
c⁄èöî
, 
NULL
);

8831 
	`g_‰ì
(
míu_«me
);

8832 
míu_ac˚ss_Àvñs
 = 
	`g_li°_¥ïíd
(míu_ac˚ss_Àvñs, 
a˘
);

8835 i‡(
exåa_míu
 && (
c⁄èöî_id
 >= 0)) {

8837 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(" --------------", 
NULL
, NULL, NULL);

8838 
míu_ac˚ss_Àvñs
 = 
	`g_li°_¥ïíd
(míu_ac˚ss_Àvñs, 
a˘
);

8840 i‡(!
is_group_ac˚ss
) {

8841 
c⁄èöî
 = 
	`g_√w0
(
sùe_c⁄èöî
, 1);

8842 
membî
 = 
	`g_√w0
(
sùe_c⁄èöî_membî
, 1);

8843 
c⁄èöî
->
id
 = -1;

8844 
c⁄èöî
->
membîs
 = 
	`g_¶i°_≠≥nd
(c⁄èöî->membîs, 
membî
);

8845 
membî
->
ty≥
 = 
	`g_°rdup
(
membî_ty≥
);

8846 
membî
->
vÆue
 = 
	`g_°rdup
(
membî_vÆue
);

8849 
míu_«me
 = 
	`g_°rdup_¥ötf
(
INDENT_FMT
, 
	`_
("Unspecify"));

8850 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
míu_«me
,

8851 
	`PURPLE_CALLBACK
(
sùe_buddy_míu_ac˚ss_Àvñ_cb
),

8852 
c⁄èöî
, 
NULL
);

8853 
	`g_‰ì
(
míu_«me
);

8854 
míu_ac˚ss_Àvñs
 = 
	`g_li°_¥ïíd
(míu_ac˚ss_Àvñs, 
a˘
);

8858 
míu_ac˚ss_Àvñs
 = 
	`g_li°_ªvî£
(menu_access_levels);

8859  
míu_ac˚ss_Àvñs
;

8860 
	}
}

8862 
GLi°
 *

8863 
	$sùe_gë_ac˚ss_groups_míu
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
)

8865 
GLi°
 *
míu_ac˚ss_groups
 = 
NULL
;

8866 
PuΩÀMíuA˘i⁄
 *
a˘
;

8867 
GSLi°
 *
ac˚ss_domaös
 = 
NULL
;

8868 
GSLi°
 *
íåy
;

8869 *
míu_«me
;

8870 *
domaö
;

8872 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
	`_
("People in my company"),

8873 
NULL
,

8874 
NULL
, 
	`sùe_gë_ac˚ss_Àvñs_míu
(
sùe_¥iv©e
, "ßmeE¡î¥i£", NULL, 
FALSE
));

8875 
míu_ac˚ss_groups
 = 
	`g_li°_¥ïíd
(míu_ac˚ss_groups, 
a˘
);

8878 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
	`_
("People in domains connected with my company"),

8879 
NULL
,

8880 
NULL
, 
	`sùe_gë_ac˚ss_Àvñs_míu
(
sùe_¥iv©e
, "„dî©ed", NULL, 
FALSE
));

8881 
míu_ac˚ss_groups
 = 
	`g_li°_¥ïíd
(míu_ac˚ss_groups, 
a˘
);

8883 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
	`_
("People inÖublic domains"),

8884 
NULL
,

8885 
NULL
, 
	`sùe_gë_ac˚ss_Àvñs_míu
(
sùe_¥iv©e
, "publicCloud", NULL, 
TRUE
));

8886 
míu_ac˚ss_groups
 = 
	`g_li°_¥ïíd
(míu_ac˚ss_groups, 
a˘
);

8888 
ac˚ss_domaös
 = 
	`sùe_gë_ac˚ss_domaös
(
sùe_¥iv©e
);

8889 
íåy
 = 
ac˚ss_domaös
;

8890 
íåy
) {

8891 
domaö
 = 
íåy
->
d©a
;

8893 
míu_«me
 = 
	`g_°rdup_¥ötf
(
	`_
("Pe›Àáà%s"), 
domaö
);

8894 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
míu_«me
,

8895 
NULL
,

8896 
NULL
, 
	`sùe_gë_ac˚ss_Àvñs_míu
(
sùe_¥iv©e
, "domaö", 
	`g_°rdup
(
domaö
), 
TRUE
));

8897 
míu_ac˚ss_groups
 = 
	`g_li°_¥ïíd
(míu_ac˚ss_groups, 
a˘
);

8898 
	`g_‰ì
(
míu_«me
);

8900 
íåy
 =É¡ry->
√xt
;

8905 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
("-------------------------------------------", 
NULL
, NULL, NULL);

8906 
míu_ac˚ss_groups
 = 
	`g_li°_¥ïíd
(míu_ac˚ss_groups, 
a˘
);

8908 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
	`_
("AddÇew domain..."),

8909 
	`PURPLE_CALLBACK
(
sùe_buddy_míu_ac˚ss_Àvñ_add_domaö_cb
),

8910 
NULL
, NULL);

8911 
míu_ac˚ss_groups
 = 
	`g_li°_¥ïíd
(míu_ac˚ss_groups, 
a˘
);

8913 
míu_ac˚ss_groups
 = 
	`g_li°_ªvî£
(menu_access_groups);

8915  
míu_ac˚ss_groups
;

8916 
	}
}

8918 
GLi°
 *

8919 
	$sùe_gë_ac˚ss_c⁄åﬁ_míu
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

8920 c⁄° * 
uri
)

8922 
GLi°
 *
míu_ac˚ss_Àvñs
 = 
NULL
;

8923 
GLi°
 *
míu_ac˚ss_groups
 = 
NULL
;

8924 *
míu_«me
;

8925 
PuΩÀMíuA˘i⁄
 *
a˘
;

8927 
míu_ac˚ss_Àvñs
 = 
	`sùe_gë_ac˚ss_Àvñs_míu
(
sùe_¥iv©e
, "u£r", 
	`sùe_gë_no_sù_uri
(
uri
), 
TRUE
);

8929 
míu_ac˚ss_groups
 = 
	`sùe_gë_ac˚ss_groups_míu
(
sùe_¥iv©e
);

8931 
míu_«me
 = 
	`g_°rdup_¥ötf
(
INDENT_FMT
, 
	`_
("Access groups"));

8932 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
míu_«me
,

8933 
NULL
,

8934 
NULL
, 
míu_ac˚ss_groups
);

8935 
	`g_‰ì
(
míu_«me
);

8936 
míu_ac˚ss_Àvñs
 = 
	`g_li°_≠≥nd
(míu_ac˚ss_Àvñs, 
a˘
);

8938 
míu_«me
 = 
	`g_°rdup_¥ötf
(
INDENT_FMT
, 
	`_
("Online help..."));

8939 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
míu_«me
,

8940 
	`PURPLE_CALLBACK
(
sùe_buddy_míu_ac˚ss_Àvñ_hñp_cb
),

8941 
NULL
, NULL);

8942 
	`g_‰ì
(
míu_«me
);

8943 
míu_ac˚ss_Àvñs
 = 
	`g_li°_≠≥nd
(míu_ac˚ss_Àvñs, 
a˘
);

8945  
míu_ac˚ss_Àvñs
;

8946 
	}
}

8949 
	$sùe_c⁄f_modify_lock
(
PuΩÀCh©
 *
ch©
, 
gboﬁón
 
locked
)

8951 
sùe_accou¡_d©a
 *
sù
 = 
PURPLE_CHAT_TO_SIPE_ACCOUNT_DATA
;

8952 
sù_£ssi⁄
 *
£ssi⁄
;

8954 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_ch©_by_tôÀ
(
sù
, (
gch¨
 *)
	`g_hash_èbÀ_lookup
(
ch©
->
comp⁄íts
, "channel"));

8955 
	`sùe_c⁄f_modify_c⁄„ªn˚_lock
(
sù
, 
£ssi⁄
, 
locked
);

8956 
	}
}

8959 
	$sùe_ch©_míu_u∆ock_cb
(
PuΩÀCh©
 *
ch©
)

8961 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_chat_menu_unlock_cb() called");

8962 
	`sùe_c⁄f_modify_lock
(
ch©
, 
FALSE
);

8963 
	}
}

8966 
	$sùe_ch©_míu_lock_cb
(
PuΩÀCh©
 *
ch©
)

8968 
	`SIPE_DEBUG_INFO_NOFORMAT
("sipe_chat_menu_lock_cb() called");

8969 
	`sùe_c⁄f_modify_lock
(
ch©
, 
TRUE
);

8970 
	}
}

8972 
GLi°
 *

8973 
	$sùe_ch©_míu
(
PuΩÀCh©
 *
ch©
)

8975 
PuΩÀMíuA˘i⁄
 *
a˘
;

8976 
PuΩÀC⁄vCh©BuddyFœgs
 
Êags_us
;

8977 
GLi°
 *
míu
 = 
NULL
;

8978 
sùe_accou¡_d©a
 *
sù
 = 
PURPLE_CHAT_TO_SIPE_ACCOUNT_DATA
;

8979 
sù_£ssi⁄
 *
£ssi⁄
;

8980 
gch¨
 *
£lf
;

8982 
£ssi⁄
 = 
	`sùe_£ssi⁄_föd_ch©_by_tôÀ
(
sù
, (
gch¨
 *)
	`g_hash_èbÀ_lookup
(
ch©
->
comp⁄íts
, "channel"));

8983 i‡(!
£ssi⁄
Ë 
NULL
;

8985 
£lf
 = 
	`sù_uri_£lf
(
sù
);

8986 
Êags_us
 = 
	`puΩÀ_c⁄v_ch©_u£r_gë_Êags
(
	`PURPLE_CONV_CHAT
(
£ssi⁄
->
c⁄v
), 
£lf
);

8988 i‡(
£ssi⁄
->
focus_uri


8989 && 
PURPLE_CBFLAGS_OP
 =(
Êags_us
 & PURPLE_CBFLAGS_OP))

8991 i‡(
£ssi⁄
->
locked
) {

8992 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
	`_
("Unlock"),

8993 
	`PURPLE_CALLBACK
(
sùe_ch©_míu_u∆ock_cb
),

8994 
NULL
, NULL);

8995 
míu
 = 
	`g_li°_¥ïíd
(míu, 
a˘
);

8997 
a˘
 = 
	`puΩÀ_míu_a˘i⁄_√w
(
	`_
("Lock"),

8998 
	`PURPLE_CALLBACK
(
sùe_ch©_míu_lock_cb
),

8999 
NULL
, NULL);

9000 
míu
 = 
	`g_li°_¥ïíd
(míu, 
a˘
);

9004 
míu
 = 
	`g_li°_ªvî£
(menu);

9006 
	`g_‰ì
(
£lf
);

9007  
míu
;

9008 
	}
}

9010 
gboﬁón


9011 
	$¥o˚ss_gë_öfo_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

9012 
sùmsg
 *
msg
, 
å™ß˘i⁄
 *
å™s
)

9014 
sùe_accou¡_d©a
 *
sù
 = 
SIPE_ACCOUNT_DATA_PRIVATE
;

9015 *
uri
 = 
å™s
->
∑ylﬂd
->
d©a
;

9017 
PuΩÀNŸifyU£rInfo
 *
öfo
;

9018 
PuΩÀBuddy
 *
pbuddy
 = 
NULL
;

9019 
sùe_buddy
 *
sbuddy
;

9020 c⁄° *
Æüs
 = 
NULL
;

9021 *
devi˚_«me
 = 
NULL
;

9022 *
£rvî_Æüs
 = 
NULL
;

9023 *
ph⁄e_numbî
 = 
NULL
;

9024 *
emaû
 = 
NULL
;

9025 c⁄° *
sôe
;

9026 *
fú°_«me
 = 
NULL
;

9027 *
œ°_«me
 = 
NULL
;

9029 i‡(!
sù
Ë 
FALSE
;

9031 
	`SIPE_DEBUG_INFO
("Fëchög %s'†u£∏öfÿf‹ %s", 
uri
, 
sù
->
u£∫ame
);

9033 
pbuddy
 = 
	`puΩÀ_föd_buddy
((
PuΩÀAccou¡
 *)
sù
->
accou¡
, 
uri
);

9034 
Æüs
 = 
	`puΩÀ_buddy_gë_loˇl_Æüs
(
pbuddy
);

9037 
	`sùe_›ti⁄s_ªque°
(
sùe_¥iv©e
, 
uri
);

9039 
sbuddy
 = 
	`g_hash_èbÀ_lookup
(
sùe_¥iv©e
->
buddõs
, 
uri
);

9040 i‡(
sbuddy
) {

9041 
devi˚_«me
 = 
sbuddy
->devi˚_«mê? 
	`g_°rdup
(sbuddy->devi˚_«meË: 
NULL
;

9044 
öfo
 = 
	`puΩÀ_nŸify_u£r_öfo_√w
();

9046 i‡(
msg
->
ª•⁄£
 != 200) {

9047 
	`SIPE_DEBUG_INFO
("¥o˚ss_gë_öfo_ª•⁄£: SERVICEÑe•⁄£ i†%d", 
msg
->
ª•⁄£
);

9049 
sùe_xml
 *
£¨chResu…s
;

9050 c⁄° 
sùe_xml
 *
mrow
;

9052 
	`SIPE_DEBUG_INFO
("¥o˚ss_gë_öfo_ª•⁄£: body:\n%s", 
msg
->
body
 ? msg->body : "");

9053 
£¨chResu…s
 = 
	`sùe_xml_∑r£
(
msg
->
body
, msg->
bodyÀn
);

9054 i‡(!
£¨chResu…s
) {

9055 
	`SIPE_DEBUG_INFO_NOFORMAT
("process_get_info_response:ÇoÖarseable searchResults");

9056 } i‡((
mrow
 = 
	`sùe_xml_chûd
(
£¨chResu…s
, "Body/Array/row"))) {

9057 c⁄° *
vÆue
;

9058 
£rvî_Æüs
 = 
	`g_°rdup
(
	`sùe_xml_©åibuã
(
mrow
, "displayName"));

9059 
emaû
 = 
	`g_°rdup
(
	`sùe_xml_©åibuã
(
mrow
, "email"));

9060 
ph⁄e_numbî
 = 
	`g_°rdup
(
	`sùe_xml_©åibuã
(
mrow
, "phone"));

9065 i‡(!
sù
->
ocs2007
) {

9066 *
ãl_uri
 = 
	`sù_to_ãl_uri
(
ph⁄e_numbî
);

9068 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
ALIAS_PROP
, 
£rvî_Æüs
);

9069 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
EMAIL_PROP
, 
emaû
);

9070 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
PHONE_PROP
, 
ãl_uri
);

9071 
	`sùe_upd©e_u£r_öfo
(
sùe_¥iv©e
, 
uri
, 
PHONE_DISPLAY_PROP
, 
ph⁄e_numbî
);

9072 
	`g_‰ì
(
ãl_uri
);

9075 i‡(
£rvî_Æüs
 && 
	`°æí
(server_alias) > 0) {

9076 
	`puΩÀ_nŸify_u£r_öfo_add_∑ú
(
öfo
, 
	`_
("Di•œyÇame"), 
£rvî_Æüs
);

9078 i‡((
vÆue
 = 
	`sùe_xml_©åibuã
(
mrow
, "tôÀ")Ë&& 
	`°æí
(value) > 0) {

9079 
	`puΩÀ_nŸify_u£r_öfo_add_∑ú
(
öfo
, 
	`_
("JobÅôÀ"), 
vÆue
);

9081 i‡((
vÆue
 = 
	`sùe_xml_©åibuã
(
mrow
, "offi˚")Ë&& 
	`°æí
(value) > 0) {

9082 
	`puΩÀ_nŸify_u£r_öfo_add_∑ú
(
öfo
, 
	`_
("Offi˚"), 
vÆue
);

9084 i‡(
ph⁄e_numbî
 && 
	`°æí
(phone_number) > 0) {

9085 
	`puΩÀ_nŸify_u£r_öfo_add_∑ú
(
öfo
, 
	`_
("Busöes†ph⁄e"), 
ph⁄e_numbî
);

9087 i‡((
vÆue
 = 
	`sùe_xml_©åibuã
(
mrow
, "com∑ny")Ë&& 
	`°æí
(value) > 0) {

9088 
	`puΩÀ_nŸify_u£r_öfo_add_∑ú
(
öfo
, 
	`_
("Com∑ny"), 
vÆue
);

9090 i‡((
vÆue
 = 
	`sùe_xml_©åibuã
(
mrow
, "côy")Ë&& 
	`°æí
(value) > 0) {

9091 
	`puΩÀ_nŸify_u£r_öfo_add_∑ú
(
öfo
, 
	`_
("Côy"), 
vÆue
);

9093 i‡((
vÆue
 = 
	`sùe_xml_©åibuã
(
mrow
, "°©e")Ë&& 
	`°æí
(value) > 0) {

9094 
	`puΩÀ_nŸify_u£r_öfo_add_∑ú
(
öfo
, 
	`_
("Sèã"), 
vÆue
);

9096 i‡((
vÆue
 = 
	`sùe_xml_©åibuã
(
mrow
, "cou¡ry")Ë&& 
	`°æí
(value) > 0) {

9097 
	`puΩÀ_nŸify_u£r_öfo_add_∑ú
(
öfo
, 
	`_
("Cou¡ry"), 
vÆue
);

9099 i‡(
emaû
 && 
	`°æí
(email) > 0) {

9100 
	`puΩÀ_nŸify_u£r_öfo_add_∑ú
(
öfo
, 
	`_
("Emaûáddªss"), 
emaû
);

9104 
	`sùe_xml_‰ì
(
£¨chResu…s
);

9107 
	`puΩÀ_nŸify_u£r_öfo_add_£˘i⁄_bªak
(
öfo
);

9109 i‡(
	`is_em±y
(
£rvî_Æüs
)) {

9110 
	`g_‰ì
(
£rvî_Æüs
);

9111 
£rvî_Æüs
 = 
	`g_°rdup
(
	`puΩÀ_buddy_gë_£rvî_Æüs
(
pbuddy
));

9112 i‡(
£rvî_Æüs
) {

9113 
	`puΩÀ_nŸify_u£r_öfo_add_∑ú
(
öfo
, 
	`_
("Di•œyÇame"), 
£rvî_Æüs
);

9118 i‡(
Æüs
 && !
	`sùe_°ªquÆ
◊lüs, 
£rvî_Æüs
))

9120 
	`puΩÀ_nŸify_u£r_öfo_add_∑ú
(
öfo
, 
	`_
("Alüs"), 
Æüs
);

9123 i‡(
	`is_em±y
(
emaû
)) {

9124 
	`g_‰ì
(
emaû
);

9125 
emaû
 = 
	`g_°rdup
(
	`puΩÀ_bli°_node_gë_°rög
(&
pbuddy
->
node
, 
EMAIL_PROP
));

9126 i‡(
emaû
) {

9127 
	`puΩÀ_nŸify_u£r_öfo_add_∑ú
(
öfo
, 
	`_
("Emaûáddªss"), 
emaû
);

9131 
sôe
 = 
	`puΩÀ_bli°_node_gë_°rög
(&
pbuddy
->
node
, 
SITE_PROP
);

9132 i‡(
sôe
) {

9133 
	`puΩÀ_nŸify_u£r_öfo_add_∑ú
(
öfo
, 
	`_
("Sôe"), 
sôe
);

9136 
	`sùe_gë_fú°_œ°_«mes
(
sùe_¥iv©e
, 
uri
, &
fú°_«me
, &
œ°_«me
);

9137 i‡(
fú°_«me
 && 
œ°_«me
) {

9138 *
lök
 = 
	`g_°rc⁄ˇt
("hâp://www.lökedö.com/pub/dú/", 
fú°_«me
, "/", 
œ°_«me
, 
NULL
);

9140 
	`puΩÀ_nŸify_u£r_öfo_add_∑ú
(
öfo
, 
	`_
("Föd o¿LökedIn"), 
lök
);

9141 
	`g_‰ì
(
lök
);

9143 
	`g_‰ì
(
fú°_«me
);

9144 
	`g_‰ì
(
œ°_«me
);

9146 i‡(
devi˚_«me
) {

9147 
	`puΩÀ_nŸify_u£r_öfo_add_∑ú
(
öfo
, 
	`_
("Devi˚"), 
devi˚_«me
);

9151 
	`puΩÀ_nŸify_u£röfo
(
sù
->
gc
,

9152 
uri
,

9153 
öfo
,

9154 
NULL
,

9155 
NULL
);

9157 
	`g_‰ì
(
ph⁄e_numbî
);

9158 
	`g_‰ì
(
£rvî_Æüs
);

9159 
	`g_‰ì
(
emaû
);

9160 
	`g_‰ì
(
devi˚_«me
);

9162  
TRUE
;

9163 
	}
}

9168 
	$sùe_gë_öfo
(
PuΩÀC⁄√˘i⁄
 *
gc
, c⁄° *
u£∫ame
)

9170 
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
 = 
PURPLE_GC_TO_SIPE_CORE_PRIVATE
;

9171 
gch¨
 *
domaö_uri
 = 
	`sù_uri_‰om_«me
(
sùe_¥iv©e
->
public
.
sù_domaö
);

9172 *
row
 = 
	`g_m¨kup_¥ötf_esˇ≥d
(
SIPE_SOAP_SEARCH_ROW
, "msRTCSIP-Prim¨yU£rAddªss", 
u£∫ame
);

9173 
gch¨
 *
body
 = 
	`g_°rdup_¥ötf
(
SIPE_SOAP_SEARCH_CONTACT
, 1, 
row
);

9174 
å™ß˘i⁄_∑ylﬂd
 *
∑ylﬂd
 = 
	`g_√w0
(transaction_payload, 1);

9176 
∑ylﬂd
->
de°roy
 = 
g_‰ì
;

9177 
∑ylﬂd
->
d©a
 = 
	`g_°rdup
(
u£∫ame
);

9179 
	`SIPE_DEBUG_INFO
("sùe_gë_c⁄è˘_d©a: body:\n%s", 
body
 ? body : "");

9180 
	`£nd_sﬂp_ªque°_wôh_cb
(
sùe_¥iv©e
, 
domaö_uri
, 
body
,

9181 
¥o˚ss_gë_öfo_ª•⁄£
, 
∑ylﬂd
);

9182 
	`g_‰ì
(
domaö_uri
);

9183 
	`g_‰ì
(
body
);

9184 
	`g_‰ì
(
row
);

9185 
	}
}

	@src/core/sipe.h

34 
	gsùmsg
;

35 
	g_PuΩÀAccou¡
;

36 
	g_PuΩÀC⁄√˘i⁄
;

37 
	g_PuΩÀGroup
;

38 
	gsù_£c_c⁄ãxt
;

39 
	gsùe_c‹e_¥iv©e
;

41 
	#SIPE_TYPING_RECV_TIMEOUT
 6

	)

42 
	#SIPE_TYPING_SEND_TIMEOUT
 4

	)

44 
	ssù_auth
 {

45 
guöt
 
	mty≥
;

46 
sù_£c_c⁄ãxt
 *
	mgsßpi_c⁄ãxt
;

47 
gch¨
 *
	mgsßpi_d©a
;

48 
gch¨
 *
	m›aque
;

49 
gch¨
 *
	mªÆm
;

50 
gch¨
 *
	mèrgë
;

51 
	mvîsi⁄
;

52 
	mnc
;

53 
	mªåõs
;

54 
	m¡lm_num
;

55 
	mexpúes
;

59 
	ssùe_publiˇti⁄
 {

60 
gch¨
 *
	mˇãg‹y
;

61 
guöt
 
	mö°™˚
;

62 
guöt
 
	mc⁄èöî
;

63 
guöt
 
	mvîsi⁄
;

65 
	mavaûabûôy
;

67 *
	mˇl_evít_hash
;

69 
gch¨
 *
	mnŸe
;

71 *
	mw‹kög_hours_xml_°r
;

72 *
	mfb_°¨t_°r
;

73 *
	m‰ì_busy_ba£64
;

77 
	ssùe_c⁄èöî
 {

78 
guöt
 
	mid
;

79 
guöt
 
	mvîsi⁄
;

80 
GSLi°
 *
	mmembîs
;

83 
	ssùe_c⁄èöî_membî
 {

85 
gch¨
 *
	mty≥
;

86 
gch¨
 *
	mvÆue
;

89 
	ssùe_accou¡_d©a
 {

91 
sùe_c‹e_public
 *
	mpublic
;

93 
sùe_c‹e_¥iv©e
 *
	m¥iv©e
;

95 
_PuΩÀC⁄√˘i⁄
 *
	mgc
;

96 
gch¨
 *
	mu£∫ame
;

97 
gch¨
 *
	mauthdomaö
;

98 
gch¨
 *
	mauthu£r
;

99 
gch¨
 *
	m∑ssw‹d
;

100 
gch¨
 *
	mïid
;

101 
gch¨
 *
	mfocus_Á˘‹y_uri
;

103 
GSLi°
 *
	mÆlow_evíts
;

104 
	mc£q
;

105 
	mªgi°î°©us
;

106 
sù_auth
 
	mªgi°ør
;

107 
sù_auth
 
	m¥oxy
;

108 
sù_c°a
 *
	mc°a
;

109 
gboﬁón
 
	mªªgi°î_£t
;

110 
gboﬁón
 
	mªauthítiˇã_£t
;

111 
gboﬁón
 
	msubs¸ibed
;

112 
gboﬁón
 
	msubs¸ibed_buddõs
;

113 
gboﬁón
 
	mac˚ss_Àvñ_£t
;

114 
gboﬁón
 
	möôül_°©e_published
;

115 
GSLi°
 *
	mour_publiˇti⁄_keys
;

116 
GHashTabÀ
 *
	mour_publiˇti⁄s
;

117 
GHashTabÀ
 *
	mu£r_°©e_publiˇti⁄s
;

118 
GHashTabÀ
 *
	msubs¸ùti⁄s
;

119 
	mc⁄è˘s_dñè
;

120 
	ma˛_dñè
;

121 
	m¥e£n˚_mëhod_vîsi⁄
;

122 
time_t
 
	mdo_nŸ_publish
[
SIPE_ACTIVITY_NUM_TYPES
];

123 
gch¨
 *
	m°©us
;

124 
gboﬁón
 
	mis_oof_nŸe
;

125 
gch¨
 *
	mnŸe
;

126 
time_t
 
	mnŸe_sö˚
;

127 
time_t
 
	midÀ_swôch
;

128 
gch¨
 *
	mc⁄è˘
;

129 
gboﬁón
 
	mocs2007
;

130 
gboﬁón
 
	mb©ched_suµ‹t
;

131 
GSLi°
 *
	mc⁄èöîs
;

132 
_PuΩÀAccou¡
 *
	maccou¡
;

133 
gch¨
 *
	mªgˇŒid
;

134 
GSLi°
 *
	m£ssi⁄s
;

135 
GSLi°
 *
	mgroups
;

136 
GHashTabÀ
 *
	mfûëøns„rs
;

137 
gboﬁón
 
	m¥o˚ssög_öput
;

138 
sùe_ˇÀnd¨
 *
	mˇl
;

139 
gch¨
 *
	memaû
;

149 
gch¨
 *
	mu£r_°©es
;

152 
	ssùe_auth_job
 {

153 
gch¨
 * 
	mwho
;

154 
sùe_accou¡_d©a
 * 
	msù
;

157 
	ssùe_group
 {

158 
gch¨
 *
	m«me
;

159 
	mid
;

160 
_PuΩÀGroup
 *
	mpuΩÀ_group
;

163 
	sgroup_u£r_c⁄ãxt
 {

164 
gch¨
 * 
	mgroup_«me
;

165 
gch¨
 * 
	mu£r_«me
;

168 
GSLi°
 * 
¶i°_ö£π_unique_s‹ãd
(GSLi° *
li°
, 
gpoöãr
 
d©a
, 
GCom∑ªFunc
 
func
);

179 
publish_ˇÀnd¨_°©us_£lf
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

180 *
unu£d
);

186 
£nd_¥e£n˚_sﬂp
(
sùe_accou¡_d©a
 *
sù
,

187 
gboﬁón
 
do_publish_ˇÀnd¨
);

208 
	gsù_£ssi⁄
;

209 
	gsù_dülog
;

210 
	gå™ß˘i⁄
;

213 
sùe_övôe
(
sùe_accou¡_d©a
 *
sù
, 
sù_£ssi⁄
 *
£ssi⁄
,

214 c⁄° 
gch¨
 *
who
, c⁄° gch¨ *
msg_body
, c⁄° gch¨ *
msg_c⁄ã¡_ty≥
,

215 c⁄° 
gch¨
 *
ª„ºed_by
, c⁄° 
gboﬁón
 
is_åiggîed
);

217 
sùe_make_sig«tuª
(
sùe_accou¡_d©a
 *
sù
,

218 
sùmsg
 *
msg
);

219 
gch¨
 *
auth_hódî
(
sùe_accou¡_d©a
 *
sù
,

220 
sù_auth
 *
auth
, 
sùmsg
 * 
msg
);

221 c⁄° 
gch¨
 *
sùe_gë_u£øgít
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
);

222 
¥o˚ss_öput_mesßge
(
sùe_accou¡_d©a
 *
sù
,

223 
sùmsg
 *
msg
);

224 
gboﬁón
 
¥o˚ss_ªgi°î_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

225 
sùmsg
 *
msg
,

226 
å™ß˘i⁄
 *
å™s
);

227 
gboﬁón
 
¥o˚ss_subs¸ibe_ª•⁄£
(
sùe_c‹e_¥iv©e
 *
sùe_¥iv©e
,

228 
sùmsg
 *
msg
,

229 
å™ß˘i⁄
 *
å™s
);

232 
sùe_övôe_to_ch©
(
sùe_accou¡_d©a
 *
sù
,

233 
sù_£ssi⁄
 *
£ssi⁄
,

234 c⁄° 
gch¨
 *
who
);

237 
sùe_¥e£¡_mesßge_undñivîed_îr
(
sùe_accou¡_d©a
 *
sù
,

238 
sù_£ssi⁄
 *
£ssi⁄
,

239 
sù_îr‹
,

240 
sù_w¨nög
,

241 c⁄° 
gch¨
 *
who
,

242 c⁄° 
gch¨
 *
mesßge
);

245 
sùe_¥e£¡_öfo
(
sùe_accou¡_d©a
 *
sù
,

246 
sù_£ssi⁄
 *
£ssi⁄
,

247 c⁄° 
gch¨
 *
mesßge
);

251 
sùe_¥o˚ss_≥ndög_övôe_queue
(
sùe_accou¡_d©a
 *
sù
,

252 
sù_£ssi⁄
 *
£ssi⁄
);

255 
sùe_im_¥o˚ss_queue
 (
sùe_accou¡_d©a
 * 
sù
, 
sù_£ssi⁄
 * 
£ssi⁄
);

260 
	#SIPE_INVITE_TEXT
 "ms-ãxt-f‹m©: %s; ch¨£t=UTF-8%s;ms-body=%s\r\n"

	)

262 
	#SIPE_SEND_TYPING
 \

266 "</KeybﬂrdA˘ivôy>"

	)

273 
	#SIPE_SEND_PRESENCE
 \

278 "</publish>"

	)

289 
	#SIPE_PUB_XML_DEVICE
 \

300 "</publiˇti⁄>"

	)

311 
	#SIPE_PUB_XML_STATE_MACHINE
 \

323 "</publiˇti⁄>"

	)

334 
	#SIPE_PUB_XML_STATE_USER
 \

346 "</publiˇti⁄>"

	)

352 
	#SIPE_PUB_XML_STATE_CALENDAR_AVAIL
 \

353 "<avaûabûôy>%d</avaûabûôy>"

	)

360 
	#SIPE_PUB_XML_STATE_CALENDAR_ACTIVITY
 \

361 "<a˘ivôyÅokí=\"%s\" %†%s></a˘ivôy>"

	)

382 
	#SIPE_PUB_XML_STATE_CALENDAR
 \

400 "</publiˇti⁄>"

	)

407 
	#SIPE_PUB_XML_STATE_CALENDAR_CLEAR
 \

409 "<publiˇti⁄ c©eg‹yName=\"°©e\" in°™˚=\"%u\" c⁄èöî=\"3\" vîsi⁄=\"%u\"ÉxpúeTy≥=\"ídpoöt\"Éxpúes=\"0\"/>"

	)

419 
	#SIPE_PUB_XML_PUBLICATION_CLEAR
 \

420 "<publiˇti⁄ c©eg‹yName=\"%s\" in°™˚=\"%u\" c⁄èöî=\"%u\" vîsi⁄=\"%u\"ÉxpúeTy≥=\"%s\"Éxpúes=\"0\"/>"

	)

432 
	#SIPE_PUB_XML_NOTE
 \

437 "</publiˇti⁄>"

	)

462 
	#SIPE_PUB_XML_WORKING_HOURS
 \

484 "</publiˇti⁄>"

	)

516 
	#SIPE_PUB_XML_FREE_BUSY
 \

540 "</publiˇti⁄>"

	)

543 
	#sùe_sﬂp
(
mëhod
, 
body
) \

546 "<m:" 
mëhod
 " xmlns:m=\"http://schemas.microsoft.com/winrtc/2002/11/sip\">" \

547 
body
 \

548 "</m:" 
mëhod
 ">" \

550 "</SOAP-ENV:Envñ›e>"

	)

552 
	#SIPE_SOAP_SET_CONTACT
 
	`sùe_sﬂp
("setContact", \

558 "<m:dñèNum>%d</m:dñèNum>")

	)

560 
	#SIPE_SOAP_DEL_CONTACT
 
	`sùe_sﬂp
("deleteContact", \

562 "<m:dñèNum>%d</m:dñèNum>")

	)

564 
	#SIPE_SOAP_ADD_GROUP
 
	`sùe_sﬂp
("addGroup", \

567 "<m:dñèNum>%d</m:dñèNum>")

	)

569 
	#SIPE_SOAP_MOD_GROUP
 
	`sùe_sﬂp
("modifyGroup", \

573 "<m:dñèNum>%d</m:dñèNum>")

	)

575 
	#SIPE_SOAP_DEL_GROUP
 
	`sùe_sﬂp
("deleteGroup", \

577 "<m:dñèNum>%d</m:dñèNum>")

	)

581 
	#SIPE_SOAP_ALLOW_DENY
 
	`sùe_sﬂp
("setACE", \

585 "<m:dñèNum>%d</m:dñèNum>")

	)

594 
	#SIPE_SOAP_SET_PRESENCE_CALENDAR
 \

595 "<ˇÀnd¨Infÿxm s=\"hâp://schemas.mi¸oso·.com/2002/09/sù/¥e£n˚\" maûboxId=\"%s\" sèπTime=\"%s\" gønuœrôy=\"PT15M\">%s</ˇÀnd¨Info>"

	)

601 
	#SIPE_SOAP_SET_PRESENCE_NOTE_XML
 "<nŸe>%s</nŸe>"

	)

605 
	#SIPE_SOAP_SET_PRESENCE_OOF_XML
 "<oof></oof>"

	)

614 
	#SIPE_SOAP_SET_PRESENCE_STATES
 \

617 "</°©es>"

	)

634 
	#SIPE_SOAP_SET_PRESENCE
 
	`sùe_sﬂp
("setPresence", \

649 "</m:¥e£¡ôy>")

	)

651 
	#SIPE_SOAP_SEARCH_CONTACT
 \

662 "</SOAP-ENV:Envñ›e>"

	)

664 
	#SIPE_SOAP_SEARCH_ROW
 "<m:row m:©åib=\"%s\" m:vÆue=\"%s\"/>"

	)

	@src/core/sipmsg.c

25 
	~<°dlib.h
>

26 
	~<°dio.h
>

27 
	~<°rög.h
>

28 
	~<time.h
>

30 
	~<glib.h
>

32 
	~"sùmsg.h
"

33 
	~"sùe-backíd.h
"

34 
	~"sùe-mime.h
"

35 
	~"sùe-utûs.h
"

37 
sùmsg
 *
	$sùmsg_∑r£_msg
(c⁄° 
gch¨
 *
msg
) {

38 c⁄° *
tmp
 = 
	`°r°r
(
msg
, "\r\n\r\n");

39 *
löe
;

40 
sùmsg
 *
smsg
;

42 if(!
tmp
Ë 
NULL
;

44 
löe
 = 
	`g_°∫dup
(
msg
, 
tmp
 - msg);

46 
smsg
 = 
	`sùmsg_∑r£_hódî
(
löe
);

47 
smsg
->
body
 = 
	`g_°rdup
(
tmp
 + 4);

49 
	`g_‰ì
(
löe
);

50  
smsg
;

51 
	}
}

53 
sùmsg
 *
	$sùmsg_∑r£_hódî
(c⁄° 
gch¨
 *
hódî
) {

54 
sùmsg
 *
msg
 = 
	`g_√w0
(sipmsg,1);

55 
gch¨
 **
löes
 = 
	`g_°r•lô
(
hódî
,"\r\n",0);

56 
gch¨
 **
∑πs
;

57 c⁄° 
gch¨
 *
c⁄ã¡Àngth
;

58 if(!
löes
[0]) {

59 
	`g_°r‰ìv
(
löes
);

60 
	`g_‰ì
(
msg
);

61  
NULL
;

63 
∑πs
 = 
	`g_°r•lô
(
löes
[0], " ", 3);

64 if(!
∑πs
[0] || !parts[1] || !parts[2]) {

65 
	`g_°r‰ìv
(
∑πs
);

66 
	`g_°r‰ìv
(
löes
);

67 
	`g_‰ì
(
msg
);

68  
NULL
;

70 if(
	`°r°r
(
∑πs
[0],"SIP") || strstr(parts[0],"HTTP")) {

71 
msg
->
mëhod
 = 
	`g_°rdup
(
∑πs
[2]);

72 
msg
->
ª•⁄£
 = 
	`°πﬁ
(
∑πs
[1],
NULL
,10);

74 
msg
->
mëhod
 = 
	`g_°rdup
(
∑πs
[0]);

75 
msg
->
èrgë
 = 
	`g_°rdup
(
∑πs
[1]);

76 
msg
->
ª•⁄£
 = 0;

78 
	`g_°r‰ìv
(
∑πs
);

79 i‡(
	`sùe_utûs_∑r£_löes
(&
msg
->
hódîs
, 
löes
 + 1, ":"Ë=
FALSE
) {

80 
	`g_°r‰ìv
(
löes
);

81 
	`sùmsg_‰ì
(
msg
);

82  
NULL
;

84 
	`g_°r‰ìv
(
löes
);

85 
c⁄ã¡Àngth
 = 
	`sùmsg_föd_hódî
(
msg
, "Content-Length");

86 i‡(
c⁄ã¡Àngth
) {

87 
msg
->
bodyÀn
 = 
	`°πﬁ
(
c⁄ã¡Àngth
,
NULL
,10);

89 
	`SIPE_DEBUG_FATAL_NOFORMAT
("sipmsg_parse_header(): Content-Length headerÇot found");

91 if(
msg
->
ª•⁄£
) {

92 c⁄° 
gch¨
 *
tmp
;

93 
	`g_‰ì
(
msg
->
mëhod
);

94 
tmp
 = 
	`sùmsg_föd_hódî
(
msg
, "CSeq");

95 if(!
tmp
) {

97 
msg
->
mëhod
 = 0;

99 
∑πs
 = 
	`g_°r•lô
(
tmp
, " ", 2);

100 
msg
->
mëhod
 = 
	`g_°rdup
(
∑πs
[1]);

101 
	`g_°r‰ìv
(
∑πs
);

104  
msg
;

105 
	}
}

107 
sùmsg
 *
	$sùmsg_c›y
(c⁄° 
sùmsg
 *
Ÿhî
) {

108 
sùmsg
 *
msg
 = 
	`g_√w0
(sipmsg, 1);

109 
GSLi°
 *
li°
;

111 
msg
->
ª•⁄£
 = 
Ÿhî
->response;

112 
msg
->
mëhod
 = 
	`g_°rdup
(
Ÿhî
->method);

113 
msg
->
èrgë
 = 
	`g_°rdup
(
Ÿhî
->target);

115 
li°
 = 
Ÿhî
->
hódîs
;

116 
li°
) {

117 
sù«mevÆ
 *
ñem
 = 
li°
->
d©a
;

118 
	`sùmsg_add_hódî_now
(
msg
, 
ñem
->
«me
,ÉÀm->
vÆue
);

119 
li°
 =Üi°->
√xt
;

122 
li°
 = 
Ÿhî
->
√w_hódîs
;

123 
li°
) {

124 
sù«mevÆ
 *
ñem
 = 
li°
->
d©a
;

125 
	`sùmsg_add_hódî
(
msg
, 
ñem
->
«me
,ÉÀm->
vÆue
);

126 
li°
 =Üi°->
√xt
;

129 
msg
->
bodyÀn
 = 
Ÿhî
->bodylen;

130 
msg
->
body
 = 
	`g_memdup
(
Ÿhî
->body, othî->
bodyÀn
);

131 
msg
->
sig«tuª
 = 
	`g_°rdup
(
Ÿhî
->signature);

132 
msg
->
ønd
 = 
	`g_°rdup
(
Ÿhî
->rand);

133 
msg
->
num
 = 
	`g_°rdup
(
Ÿhî
->num);

135  
msg
;

136 
	}
}

138 *
	$sùmsg_to_°rög
(c⁄° 
sùmsg
 *
msg
) {

139 
GSLi°
 *
cur
;

140 
GSåög
 *
out°r
 = 
	`g_°rög_√w
("");

141 
sù«mevÆ
 *
ñem
;

143 if(
msg
->
ª•⁄£
)

144 
	`g_°rög_≠≥nd_¥ötf
(
out°r
, "SIP/2.0 %d Unknown\r\n",

145 
msg
->
ª•⁄£
);

147 
	`g_°rög_≠≥nd_¥ötf
(
out°r
, "%s %s SIP/2.0\r\n",

148 
msg
->
mëhod
, msg->
èrgë
);

150 
cur
 = 
msg
->
hódîs
;

151 
cur
) {

152 
ñem
 = 
cur
->
d©a
;

158 
	`g_°rög_≠≥nd_¥ötf
(
out°r
, "%s: %s\r\n", 
ñem
->
«me
,

159 
ñem
->
vÆue
);

160 
cur
 = 
	`g_¶i°_√xt
(cur);

163 
	`g_°rög_≠≥nd_¥ötf
(
out°r
, "\r\n%s", 
msg
->
bodyÀn
 ? msg->
body
 : "");

165  
	`g_°rög_‰ì
(
out°r
, 
FALSE
);

166 
	}
}

171 
	$sùmsg_add_hódî_now_pos
(
sùmsg
 *
msg
, c⁄° 
gch¨
 *
«me
, c⁄° gch¨ *
vÆue
, 
pos
) {

172 
sù«mevÆ
 *
ñemít
 = 
	`g_√w0
(sipnameval,1);

175 i‡(!
vÆue
) {

176 
	`SIPE_DEBUG_ERROR
("sipmsg_add_header_now_pos: NULL value for %s (%d)",

177 
«me
, 
pos
);

178 
vÆue
 = "";

181 
ñemít
->
«me
 = 
	`g_°rdup
(name);

182 
ñemít
->
vÆue
 = 
	`g_°rdup
(value);

183 
msg
->
hódîs
 = 
	`g_¶i°_ö£π
(msg->hódîs, 
ñemít
,
pos
);

184 
	}
}

189 
	$sùmsg_add_hódî_now
(
sùmsg
 *
msg
, c⁄° 
gch¨
 *
«me
, c⁄° gch¨ *
vÆue
) {

190 
sù«mevÆ
 *
ñemít
 = 
	`g_√w0
(sipnameval,1);

193 i‡(!
vÆue
) {

194 
	`SIPE_DEBUG_ERROR
("sipmsg_add_header_now: NULL value for %s",

195 
«me
);

196 
vÆue
 = "";

199 
ñemít
->
«me
 = 
	`g_°rdup
(name);

200 
ñemít
->
vÆue
 = 
	`g_°rdup
(value);

201 
msg
->
hódîs
 = 
	`g_¶i°_≠≥nd
(msg->hódîs, 
ñemít
);

202 
	}
}

207 
	$sùmsg_add_hódî
(
sùmsg
 *
msg
, c⁄° 
gch¨
 *
«me
, c⁄° gch¨ *
vÆue
) {

208 
sù«mevÆ
 *
ñemít
 = 
	`g_√w0
(sipnameval,1);

211 i‡(!
vÆue
) {

212 
	`SIPE_DEBUG_ERROR
("sùmsg_add_hódî: NULL vÆuêf‹ %s", 
«me
);

213 
vÆue
 = "";

216 
ñemít
->
«me
 = 
	`g_°rdup
(name);

217 
ñemít
->
vÆue
 = 
	`g_°rdup
(value);

218 
msg
->
√w_hódîs
 = 
	`g_¶i°_≠≥nd
(msg->√w_hódîs, 
ñemít
);

219 
	}
}

224 
	$sùmsg_°rù_hódîs
(
sùmsg
 *
msg
, c⁄° 
gch¨
 *
kì≥rs
[]) {

225 
GSLi°
 *
íåy
;

226 
sù«mevÆ
 *
ñem
;

228 
íåy
 = 
msg
->
hódîs
;

229 
íåy
) {

230 
i
 = 0;

231 
gboﬁón
 
kì≥r
 = 
FALSE
;

233 
ñem
 = 
íåy
->
d©a
;

234 
kì≥rs
[
i
]) {

235 i‡(!
	`g_°rˇ£cmp
(
ñem
->
«me
, 
kì≥rs
[
i
])) {

236 
kì≥r
 = 
TRUE
;

239 
i
++;

242 i‡(!
kì≥r
) {

243 
GSLi°
 *
to_dñëe
 = 
íåy
;

244 
	`SIPE_DEBUG_INFO
("sùmsg_°rù_hódîs:Ñemovög %s", 
ñem
->
«me
);

245 
íåy
 = 
	`g_¶i°_√xt
(entry);

246 
msg
->
hódîs
 = 
	`g_¶i°_dñëe_lök
(msg->hódîs, 
to_dñëe
);

247 
	`g_‰ì
(
ñem
->
«me
);

248 
	`g_‰ì
(
ñem
->
vÆue
);

249 
	`g_‰ì
(
ñem
);

251 
íåy
 = 
	`g_¶i°_√xt
(entry);

254 
	}
}

259 
	$sùmsg_mîge_√w_hódîs
(
sùmsg
 *
msg
) {

260 
msg
->
√w_hódîs
) {

261 
msg
->
hódîs
 = 
	`g_¶i°_≠≥nd
(msg->hódîs, msg->
√w_hódîs
->
d©a
);

262 
msg
->
√w_hódîs
 = 
	`g_¶i°_ªmove
(msg->√w_hódîs, msg->√w_hódîs->
d©a
);

264 
	}
}

266 
	$sùmsg_‰ì
(
sùmsg
 *
msg
) {

267 
	`sùe_utûs_«mevÆ_‰ì
(
msg
->
hódîs
);

268 
	`sùe_utûs_«mevÆ_‰ì
(
msg
->
√w_hódîs
);

269 
	`g_‰ì
(
msg
->
sig«tuª
);

270 
	`g_‰ì
(
msg
->
ønd
);

271 
	`g_‰ì
(
msg
->
num
);

272 
	`g_‰ì
(
msg
->
mëhod
);

273 
	`g_‰ì
(
msg
->
èrgë
);

274 
	`g_‰ì
(
msg
->
body
);

275 
	`g_‰ì
(
msg
);

276 
	}
}

278 
	$sùmsg_ªmove_hódî_now
(
sùmsg
 *
msg
, c⁄° 
gch¨
 *
«me
) {

279 
sù«mevÆ
 *
ñem
;

280 
GSLi°
 *
tmp
 = 
msg
->
hódîs
;

281 
tmp
) {

282 
ñem
 = 
tmp
->
d©a
;

284 i‡(
	`sùe_°rˇ£_equÆ
(
ñem
->
«me
,Çame)) {

285 
msg
->
hódîs
 = 
	`g_¶i°_ªmove
(msg->hódîs, 
ñem
);

286 
	`g_‰ì
(
ñem
->
«me
);

287 
	`g_‰ì
(
ñem
->
vÆue
);

288 
	`g_‰ì
(
ñem
);

291 
tmp
 = 
	`g_¶i°_√xt
(tmp);

294 
	}
}

296 c⁄° 
gch¨
 *
	$sùmsg_föd_hódî
(c⁄° 
sùmsg
 *
msg
, c⁄° 
gch¨
 *
«me
) {

297  
	`sùe_utûs_«mevÆ_föd_ö°™˚
 (
msg
->
hódîs
, 
«me
, 0);

298 
	}
}

300 c⁄° 
gch¨
 *
	$sùmsg_föd_hódî_ö°™˚
(c⁄° 
sùmsg
 *
msg
, c⁄° 
gch¨
 *
«me
, 
which
) {

301  
	`sùe_utûs_«mevÆ_föd_ö°™˚
(
msg
->
hódîs
, 
«me
, 
which
);

302 
	}
}

304 
gch¨
 *
	$sùmsg_föd_∑π_of_hódî
(c⁄° *
hdr
, c⁄° * 
bef‹e
, c⁄° * 
a·î
, c⁄° * 
def
) {

305 c⁄° *
tmp
;

306 c⁄° *
tmp2
;

307 
gch¨
 *
ªs2
;

308 i‡(!
hdr
) {

309  
NULL
;

314 
tmp
 = 
bef‹e
 =
NULL
 ? 
hdr
 : 
	`°r°r
(hdr, before);

315 i‡(!
tmp
) {

317  (
gch¨
 *)
def
;

320 i‡(
bef‹e
 !
NULL
) {

321 
tmp
 +
	`°æí
(
bef‹e
);

325 i‡(
a·î
 !
NULL
 && (
tmp2
 = 
	`°r°r
(
tmp
,áfter))) {

326 
gch¨
 * 
ªs
 = 
	`g_°∫dup
(
tmp
, 
tmp2
 -Åmp);

328  
ªs
;

330 
ªs2
 = 
	`g_°rdup
(
tmp
);

332  
ªs2
;

333 
	}
}

349 
GSLi°
 *
	$sùmsg_∑r£_ídpoöts_hódî
(c⁄° 
gch¨
 *
hódî
)

351 
GSLi°
 *
li°
 = 
NULL
;

352 
gch¨
 **
∑πs
 = 
	`g_°r•lô
(
hódî
, ",", 0);

353 
gch¨
 *
∑π
;

354 
i
;

356 
i
 = 0; (
∑π
 = 
∑πs
[i]Ë!
NULL
; i++) {

358 
gch¨
 *
c⁄è˘
 = 
	`sùmsg_föd_∑π_of_hódî
(
∑π
, "<", ">", 
NULL
);

359 i‡(
c⁄è˘
) {

360 
sùídpoöt
 *
íd_poöt
 = 
	`g_√w
(sipendpoint, 1);

361 
íd_poöt
->
c⁄è˘
 = contact;

362 
íd_poöt
->
ïid
 = 
	`sùmsg_föd_∑π_of_hódî
(
∑π
, "ïid=", 
NULL
, NULL);

363 
li°
 = 
	`g_¶i°_≠≥nd
÷i°, 
íd_poöt
);

366 
	`g_°r‰ìv
(
∑πs
);

368 (
li°
);

369 
	}
}

379 
gch¨
 *
	$sùmsg_föd_auth_hódî
(
sùmsg
 *
msg
, c⁄° 
gch¨
 *
«me
) {

380 
GSLi°
 *
tmp
;

381 
sù«mevÆ
 *
ñem
;

382 
«me_Àn
 = 
	`°æí
(
«me
);

383 
tmp
 = 
msg
->
hódîs
;

384 
tmp
) {

385 
ñem
 = 
tmp
->
d©a
;

387 i‡(
ñem
 &&ÉÀm->
«me
 &&

388 (
	`sùe_°rˇ£_equÆ
(
ñem
->
«me
,"WWW-Authenticate") ||

389 
	`sùe_°rˇ£_equÆ
(
ñem
->
«me
,"Authentication-Info")) ) {

390 i‡(!
	`g_°∫ˇ£cmp
((
gch¨
 *)
ñem
->
vÆue
, 
«me
, 
«me_Àn
)) {

392  
ñem
->
vÆue
;

396 
tmp
 = 
	`g_¶i°_√xt
(tmp);

398 
	`SIPE_DEBUG_INFO
("auth hódî '%s'ÇŸ found.", 
«me
);

399  
NULL
;

400 
	}
}

402 
gch¨
 *
	$sùmsg_gë_x_mms_im_f‹m©
(
gch¨
 *
msgr
) {

403 
gch¨
 *
msgr2
;

404 
gsize
 
msgr_dec64_Àn
;

405 
guch¨
 *
msgr_dec64
;

406 
gch¨
 *
msgr_utf8
;

407 
gch¨
 **
löes
;

408 
gch¨
 **
∑πs
;

409 
gch¨
 *
x_mms_im_f‹m©
;

410 
gch¨
 *
tmp
;

412 i‡(!
msgr
Ë 
NULL
;

413 
msgr2
 = 
	`g_°rdup
(
msgr
);

414 
	`°æí
(
msgr2
) % 4 != 0) {

415 
gch¨
 *
tmp_msgr2
 = 
msgr2
;

416 
msgr2
 = 
	`g_°rdup_¥ötf
("%s=", msgr2);

417 
	`g_‰ì
(
tmp_msgr2
);

419 
msgr_dec64
 = 
	`g_ba£64_decode
(
msgr2
, &
msgr_dec64_Àn
);

420 
msgr_utf8
 = 
	`g_c⁄vît
((
gch¨
 *Ë
msgr_dec64
, 
msgr_dec64_Àn
, "UTF-8", "UTF-16LE", 
NULL
, NULL, NULL);

421 
	`g_‰ì
(
msgr_dec64
);

422 
	`g_‰ì
(
msgr2
);

423 
löes
 = 
	`g_°r•lô
(
msgr_utf8
,"\r\n\r\n",0);

424 
	`g_‰ì
(
msgr_utf8
);

426 
∑πs
 = 
	`g_°r•lô
(
löes
[0],"X-MMS-IM-Format:",0);

427 
x_mms_im_f‹m©
 = 
	`g_°rdup
(
∑πs
[1]);

428 
	`g_°r‰ìv
(
∑πs
);

429 
	`g_°r‰ìv
(
löes
);

430 
tmp
 = 
x_mms_im_f‹m©
;

431 i‡(
x_mms_im_f‹m©
) {

432 *
x_mms_im_f‹m©
==' ' || *x_mms_im_format=='\t') x_mms_im_format++;

434 
x_mms_im_f‹m©
 = 
	`g_°rdup
(x_mms_im_format);

435 
	`g_‰ì
(
tmp
);

436  
x_mms_im_f‹m©
;

437 
	}
}

439 
gch¨
 *
	$sùmsg_gë_msgr_°rög
(
gch¨
 *
x_mms_im_f‹m©
) {

440 
gch¨
 *
msgr_‹ig
;

441 
gsize
 
msgr_utf16_Àn
;

442 
gch¨
 *
msgr_utf16
;

443 
gch¨
 *
msgr_íc
;

444 
gch¨
 *
ªs
;

445 
Àn
;

447 i‡(!
x_mms_im_f‹m©
Ë 
NULL
;

448 
msgr_‹ig
 = 
	`g_°rdup_¥ötf
("X-MMS-IM-F‹m©: %s\r\n\r\n", 
x_mms_im_f‹m©
);

449 
msgr_utf16
 = 
	`g_c⁄vît
(
msgr_‹ig
, -1, "UTF-16LE", "UTF-8", 
NULL
, &
msgr_utf16_Àn
, NULL);

450 
	`g_‰ì
(
msgr_‹ig
);

451 
msgr_íc
 = 
	`g_ba£64_ícode
((
guch¨
 *Ë
msgr_utf16
, 
msgr_utf16_Àn
);

452 
	`g_‰ì
(
msgr_utf16
);

453 
Àn
 = 
	`°æí
(
msgr_íc
);

454 
msgr_íc
[
Àn
 - 1] == '=')Üen--;

455 
ªs
 = 
	`g_°∫dup
(
msgr_íc
, 
Àn
);

456 
	`g_‰ì
(
msgr_íc
);

457  
ªs
;

458 
	}
}

460 
gch¨
 *
	$sùmsg_≠∂y_x_mms_im_f‹m©
(c⁄° *
x_mms_im_f‹m©
, 
gch¨
 *
body
) {

461 *
¥e
, *
po°
;

462 
gch¨
 *
ªs
;

464 i‡(!
x_mms_im_f‹m©
) {

465  
body
 ? 
	`g_°rdup
(bodyË: 
NULL
;

467 
	`m¢_∑r£_f‹m©
(
x_mms_im_f‹m©
, &
¥e
, &
po°
);

468 
ªs
 = 
	`g_°rdup_¥ötf
("%s%s%s", 
¥e
 ?Öª : "", 
body
 ? body : "", 
po°
 ?Öost : "");

469 
	`g_‰ì
(
¥e
);

470 
	`g_‰ì
(
po°
);

471  
ªs
;

472 
	}
}

474 
	shtml_mesßge_d©a
 {

475 
gch¨
 *
	mms_ãxt_f‹m©
;

476 
gch¨
 *
	mbody
;

477 
gboﬁón
 
	m¥e„ºed
;

480 
	$gë_html_mesßge_mime_cb
(
gpoöãr
 
u£r_d©a
,

481 c⁄° 
GSLi°
 *
fõlds
,

482 c⁄° 
gch¨
 *
body
,

483 
gsize
 
Àngth
)

485 c⁄° 
gch¨
 *
ty≥
 = 
	`sùe_utûs_«mevÆ_föd
(
fõlds
, "Content-Type");

486 
html_mesßge_d©a
 *
d©a
 = 
u£r_d©a
;

488 i‡(!
d©a
->
¥e„ºed
) {

489 
gboﬁón
 
c›y
 = 
FALSE
;

492 i‡(
	`g_°r_has_¥efix
(
ty≥
, "text/html")) {

493 
c›y
 = 
TRUE
;

494 
d©a
->
¥e„ºed
 = 
TRUE
;

497 } i‡(
	`g_°r_has_¥efix
(
ty≥
, "text/plain")) {

498 
c›y
 = 
TRUE
;

501 i‡(
c›y
) {

502 
	`g_‰ì
(
d©a
->
ms_ãxt_f‹m©
);

503 
	`g_‰ì
(
d©a
->
body
);

504 
d©a
->
ms_ãxt_f‹m©
 = 
	`g_°rdup
(
ty≥
);

505 
d©a
->
body
 = 
	`g_°∫dup
(body, 
Àngth
);

508 
	}
}

511 
gch¨
 *
	$gë_html_mesßge
(c⁄° 
gch¨
 *
ms_ãxt_f‹m©_ö
, c⁄° gch¨ *
body_ö
)

513 
gch¨
 *
msgr
;

514 
gch¨
 *
ªs
;

515 
gch¨
 *
ms_ãxt_f‹m©
 = 
NULL
;

516 
gch¨
 *
body
 = 
NULL
;

518 i‡(
	`g_°r_has_¥efix
(
ms_ãxt_f‹m©_ö
, "multipart/related") ||

519 
	`g_°r_has_¥efix
(
ms_ãxt_f‹m©_ö
, "multipart/alternative")) {

520 
html_mesßge_d©a
 
d©a
 = { 
NULL
, NULL, 
FALSE
 };

522 
	`sùe_mime_∑πs_f‹óch
(
ms_ãxt_f‹m©_ö
, 
body_ö
,

523 
gë_html_mesßge_mime_cb
, &
d©a
);

525 
ms_ãxt_f‹m©
 = 
d©a
.ms_text_format;

526 
body
 = 
d©a
.body;

529 
ms_ãxt_f‹m©
 = 
	`g_°rdup
(
ms_ãxt_f‹m©_ö
);

530 
body
 = 
	`g_°rdup
(
body_ö
);

533 i‡(
body
) {

534 
ªs
 = 
body
;

536 
gch¨
 *
tmp
 = 
	`sùmsg_föd_∑π_of_hódî
(
ms_ãxt_f‹m©
, "ms-body=", 
NULL
, NULL);

537 
gsize
 
Àn
;

538 i‡(!
tmp
) {

539 
	`g_‰ì
(
ms_ãxt_f‹m©
);

540  
NULL
;

542 
ªs
 = (
gch¨
 *Ë
	`g_ba£64_decode
(
tmp
, &
Àn
);

543 
	`g_‰ì
(
tmp
);

544 i‡(!
ªs
) {

545 
	`g_‰ì
(
ms_ãxt_f‹m©
);

546  
NULL
;

550 i‡(!
	`g_°r_has_¥efix
(
ms_ãxt_f‹m©
, "text/html")) {

551 *
tmp
 = 
ªs
;

552 
ªs
 = 
	`g_m¨kup_esˇ≥_ãxt
(res, -1);

553 
	`g_‰ì
(
tmp
);

556 
msgr
 = 
	`sùmsg_föd_∑π_of_hódî
(
ms_ãxt_f‹m©
, "msgr=", ";", 
NULL
);

557 i‡(
msgr
) {

558 
gch¨
 *
x_mms_im_f‹m©
 = 
	`sùmsg_gë_x_mms_im_f‹m©
(
msgr
);

559 
gch¨
 *
tmp
 = 
ªs
;

560 
	`g_‰ì
(
msgr
);

561 
ªs
 = 
	`sùmsg_≠∂y_x_mms_im_f‹m©
(
x_mms_im_f‹m©
,Ñes);

562 
	`g_‰ì
(
tmp
);

563 
	`g_‰ì
(
x_mms_im_f‹m©
);

566 
	`g_‰ì
(
ms_ãxt_f‹m©
);

568  
ªs
;

569 
	}
}

580 
	#MSG_LEN
 2048

	)

581 
	#BUF_LEN
 
MSG_LEN


	)

584 
gch¨
 *
	$sùmsg_uri_u√sˇ≥
(c⁄° 
gch¨
 *
°rög
)

586 
gch¨
 *
u√sˇ≥d
, *
tmp
;

588 i‡(!
°rög
Ë(
NULL
);

590 #i‡
	`GLIB_CHECK_VERSION
(2,16,0)

591 
u√sˇ≥d
 = 
	`g_uri_u√sˇ≥_°rög
(
°rög
, 
NULL
);

595 
gsize
 
i
 = 0;

596 
gsize
 
Àn
 = 
	`°æí
(
°rög
);

598 
u√sˇ≥d
 = 
	`g_mÆloc
(
Àn
 + 1);

599 
Àn
-- > 0) {

600 
gch¨
 
c
 = *
°rög
++;

601 i‡((
Àn
 >2Ë&& (
c
 == '%')) {

602 
hex
[3];

603 
	`°∫˝y
(
hex
, 
°rög
, 2);

604 
hex
[2] = '\0';

605 
c
 = 
	`°πﬁ
(
hex
, 
NULL
, 16);

606 
°rög
 += 2;

607 
Àn
 -= 2;

609 
u√sˇ≥d
[
i
++] = 
c
;

611 
u√sˇ≥d
[
i
] = '\0';

615 i‡(!
	`g_utf8_vÆid©e
(
u√sˇ≥d
, -1, (c⁄° 
gch¨
 **)&
tmp
))

616 *
tmp
 = '\0';

618 (
u√sˇ≥d
);

619 
	}
}

622 
	$m¢_∑r£_f‹m©
(c⁄° *
mime
, **
¥e_ªt
, **
po°_ªt
)

624 *
cur
;

625 
GSåög
 *
¥e
 = 
	`g_°rög_√w
(
NULL
);

626 
GSåög
 *
po°
 = 
	`g_°rög_√w
(
NULL
);

627 
cﬁ‹s
[3];

629 i‡(
¥e_ªt
 !
NULL
) *pre_ret = NULL;

630 i‡(
po°_ªt
 !
NULL
) *post_ret = NULL;

632 
cur
 = 
	`°r°r
(
mime
, "FN=");

634 i‡(
cur
 && (*(cur = cur + 3) != ';'))

636 
¥e
 = 
	`g_°rög_≠≥nd
(pre, "<FONT FACE=\"");

638 *
cur
 && *cur != ';')

640 
¥e
 = 
	`g_°rög_≠≥nd_c
’ª, *
cur
);

641 
cur
++;

644 
¥e
 = 
	`g_°rög_≠≥nd
(pre, "\">");

645 
po°
 = 
	`g_°rög_¥ïíd
(post, "</FONT>");

648 
cur
 = 
	`°r°r
(
mime
, "EF=");

650 i‡(
cur
 && (*(cur = cur + 3) != ';'))

652 *
cur
 && *cur != ';')

654 
¥e
 = 
	`g_°rög_≠≥nd_c
(pre, '<');

655 
¥e
 = 
	`g_°rög_≠≥nd_c
’ª, *
cur
);

656 
¥e
 = 
	`g_°rög_≠≥nd_c
(pre, '>');

657 
po°
 = 
	`g_°rög_¥ïíd_c
(post, '>');

658 
po°
 = 
	`g_°rög_¥ïíd_c
’o°, *
cur
);

659 
po°
 = 
	`g_°rög_¥ïíd_c
(post, '/');

660 
po°
 = 
	`g_°rög_¥ïíd_c
(post, '<');

661 
cur
++;

665 
cur
 = 
	`°r°r
(
mime
, "CO=");

667 i‡(
cur
 && (*(cur = cur + 3) != ';'))

669 
i
;

671 
i
 = 
	`ssˇnf
(
cur
, "%02x%02x%02x;", &
cﬁ‹s
[0], &colors[1], &colors[2]);

673 i‡(
i
 > 0)

675 
èg
[64];

677 i‡(
i
 == 1)

679 
cﬁ‹s
[1] = 0;

680 
cﬁ‹s
[2] = 0;

682 i‡(
i
 == 2)

684 
ãmp
 = 
cﬁ‹s
[0];

686 
cﬁ‹s
[0] = colors[1];

687 
cﬁ‹s
[1] = 
ãmp
;

688 
cﬁ‹s
[2] = 0;

690 i‡(
i
 == 3)

692 
ãmp
 = 
cﬁ‹s
[2];

694 
cﬁ‹s
[2] = colors[0];

695 
cﬁ‹s
[0] = 
ãmp
;

701 
	`g_¢¥ötf
(
èg
, (tag),

703 ()
cﬁ‹s
[0], ()colors[1], ()colors[2]);

705 
¥e
 = 
	`g_°rög_≠≥nd
’ª, 
èg
);

706 
po°
 = 
	`g_°rög_¥ïíd
(post, "</FONT>");

710 
cur
 = 
	`°r°r
(
mime
, "RL=");

712 i‡(
cur
 && (*(cur = cur + 3) != ';'))

714 i‡(*
cur
 == '1')

717 
¥e
 = 
	`g_°rög_≠≥nd
(pre, "<SPAN style=\"direction:rtl;text-align:right;\">");

718 
po°
 = 
	`g_°rög_¥ïíd
(post, "</SPAN>");

722 
cur
 = 
	`sùmsg_uri_u√sˇ≥
(
¥e
->
°r
);

723 
	`g_°rög_‰ì
(
¥e
, 
TRUE
);

725 i‡(
¥e_ªt
 !
NULL
)

726 *
¥e_ªt
 = 
cur
;

728 
	`g_‰ì
(
cur
);

730 
cur
 = 
	`sùmsg_uri_u√sˇ≥
(
po°
->
°r
);

731 
	`g_°rög_‰ì
(
po°
, 
TRUE
);

733 i‡(
po°_ªt
 !
NULL
)

734 *
po°_ªt
 = 
cur
;

736 
	`g_‰ì
(
cur
);

737 
	}
}

740 
	$ícode_•a˚s
(c⁄° *
°r
)

742 
buf
[
BUF_LEN
];

743 c⁄° *
c
;

744 *
d
;

746 
	`g_ªtu∫_vÆ_if_Áû
(
°r
 !
NULL
, NULL);

748 
c
 = 
°r
, 
d
 = 
buf
; *c != '\0'; c++)

750 i‡(*
c
 == ' ')

752 *
d
++ = '%';

753 *
d
++ = '2';

754 *
d
++ = '0';

757 *
d
++ = *
c
;

759 *
d
 = '\0';

761  
buf
;

762 
	}
}

765 
	$m¢_imp‹t_html
(c⁄° *
html
, **
©åibuãs
, **
mesßge
)

767 
Àn
, 
ªtcou¡
 = 0;

768 c⁄° *
c
;

769 *
msg
;

770 *
f⁄tÁ˚
 = 
NULL
;

771 
f⁄ãf„˘
[4];

772 
f⁄tcﬁ‹
[7];

773 
dúe˘i⁄
 = '0';

775 
gboﬁón
 
has_bﬁd
 = 
FALSE
;

776 
gboﬁón
 
has_ôÆic
 = 
FALSE
;

777 
gboﬁón
 
has_undîlöe
 = 
FALSE
;

778 
gboﬁón
 
has_°rikëhrough
 = 
FALSE
;

780 
	`g_ªtu∫_if_Áû
(
html
 !
NULL
);

781 
	`g_ªtu∫_if_Áû
(
©åibuãs
 !
NULL
);

782 
	`g_ªtu∫_if_Áû
(
mesßge
 !
NULL
);

784 
Àn
 = 
	`°æí
(
html
);

785 
msg
 = 
	`g_mÆloc0
(
Àn
 + 1);

787 
	`mem£t
(
f⁄tcﬁ‹
, 0, (fontcolor));

788 
	`°rˇt
(
f⁄tcﬁ‹
, "0");

789 
	`mem£t
(
f⁄ãf„˘
, 0, (fonteffect));

791 
c
 = 
html
; *c != '\0';)

793 i‡(*
c
 == '<')

795 i‡(!
	`g_ascii_°∫ˇ£cmp
(
c
 + 1, "br>", 3))

797 
msg
[
ªtcou¡
++] = '\r';

798 
msg
[
ªtcou¡
++] = '\n';

799 
c
 += 4;

801 i‡(!
	`g_ascii_°∫ˇ£cmp
(
c
 + 1, "i>", 2))

803 i‡(!
has_ôÆic
)

805 
	`°rˇt
(
f⁄ãf„˘
, "I");

806 
has_ôÆic
 = 
TRUE
;

808 
c
 += 3;

810 i‡(!
	`g_ascii_°∫ˇ£cmp
(
c
 + 1, "b>", 2))

812 i‡(!
has_bﬁd
)

814 
	`°rˇt
(
f⁄ãf„˘
, "B");

815 
has_bﬁd
 = 
TRUE
;

817 
c
 += 3;

819 i‡(!
	`g_ascii_°∫ˇ£cmp
(
c
 + 1, "u>", 2))

821 i‡(!
has_undîlöe
)

823 
	`°rˇt
(
f⁄ãf„˘
, "U");

824 
has_undîlöe
 = 
TRUE
;

826 
c
 += 3;

828 i‡(!
	`g_ascii_°∫ˇ£cmp
(
c
 + 1, "s>", 2))

830 i‡(!
has_°rikëhrough
)

832 
	`°rˇt
(
f⁄ãf„˘
, "S");

833 
has_°rikëhrough
 = 
TRUE
;

835 
c
 += 3;

837 i‡(!
	`g_ascii_°∫ˇ£cmp
(
c
 + 1, "a href=\"", 8))

839 
c
 += 9;

841 i‡(!
	`g_ascii_°∫ˇ£cmp
(
c
, "mailto:", 7))

842 
c
 += 7;

844 (*
c
 !'\0'Ë&& 
	`g_ascii_°∫ˇ£cmp
(c, "\">", 2))

845 
msg
[
ªtcou¡
++] = *
c
++;

847 i‡(*
c
 != '\0')

848 
c
 += 2;

851 (*
c
 !'\0'Ë&& 
	`g_ascii_°∫ˇ£cmp
(c, "</a>", 4))

852 
c
++;

854 i‡(*
c
 != '\0')

855 
c
 += 4;

857 i‡(!
	`g_ascii_°∫ˇ£cmp
(
c
 + 1, "span", 4))

860 
c
 += 5;

862 *
c
 != '\0' && *c != '>')

864 *
c
 == ' ')

865 
c
++;

866 i‡(!
	`g_ascii_°∫ˇ£cmp
(
c
, "dir=\"rtl\"", 9))

868 
c
 += 9;

869 
dúe˘i⁄
 = '1';

871 i‡(!
	`g_ascii_°∫ˇ£cmp
(
c
, "style=\"", 7))

874 
©å_Àn
 = 0;

875 
c
 += 7;

876 *(
c
 + 
©å_Àn
) != '\0' && *(c +áttr_len) != '"')

877 
©å_Àn
++;

878 i‡(*(
c
 + 
©å_Àn
) == '"')

880 *
css_©åibuãs
;

881 *
©å_dú
;

882 
css_©åibuãs
 = 
	`g_°∫dup
(
c
, 
©å_Àn
);

883 
©å_dú
 = 
	`sùe_backíd_m¨kup_css_¥›îty
(
css_©åibuãs
, "direction");

884 
	`g_‰ì
(
css_©åibuãs
);

885 i‡(
©å_dú
 && (!
	`g_ascii_°∫ˇ£cmp
(attr_dir, "RTL", 3)))

886 
dúe˘i⁄
 = '1';

887 
	`g_‰ì
(
©å_dú
);

893 
c
++;

896 i‡(*
c
 == '>')

897 
c
++;

899 i‡(!
	`g_ascii_°∫ˇ£cmp
(
c
 + 1, "font", 4))

901 
c
 += 5;

903 (*
c
 !'\0'Ë&& !
	`g_ascii_°∫ˇ£cmp
(c, " ", 1))

904 
c
++;

906 i‡(!
	`g_ascii_°∫ˇ£cmp
(
c
, "color=\"#", 7))

908 
c
 += 8;

910 
f⁄tcﬁ‹
[0] = *(
c
 + 4);

911 
f⁄tcﬁ‹
[1] = *(
c
 + 5);

912 
f⁄tcﬁ‹
[2] = *(
c
 + 2);

913 
f⁄tcﬁ‹
[3] = *(
c
 + 3);

914 
f⁄tcﬁ‹
[4] = *
c
;

915 
f⁄tcﬁ‹
[5] = *(
c
 + 1);

917 
c
 += 8;

919 i‡(!
	`g_ascii_°∫ˇ£cmp
(
c
, "face=\"", 6))

921 c⁄° *
íd
 = 
NULL
;

922 c⁄° *
comma
 = 
NULL
;

923 
«mñí
 = 0;

925 
c
 += 6;

926 
íd
 = 
	`°rchr
(
c
, '\"');

927 
comma
 = 
	`°rchr
(
c
, ',');

929 i‡(
comma
 =
NULL
 || comm®> 
íd
)

930 
«mñí
 = ()(
íd
 - 
c
);

932 
«mñí
 = ()(
comma
 - 
c
);

934 
	`g_‰ì
(
f⁄tÁ˚
);

935 
f⁄tÁ˚
 = 
	`g_°∫dup
(
c
, 
«mñí
);

936 
c
 = 
íd
 + 2;

941 (*
c
 !'\0'Ë&& 
	`g_ascii_°∫ˇ£cmp
(c, "\">", 2))

942 
c
++;

944 i‡(*
c
 != '\0')

945 
c
 += 2;

950 (*
c
 != '\0') && (*c != '>'))

951 
c
++;

952 i‡(*
c
 != '\0')

953 
c
++;

956 i‡(*
c
 == '&')

958 i‡(!
	`g_ascii_°∫ˇ£cmp
(
c
, "&lt;", 4))

960 
msg
[
ªtcou¡
++] = '<';

961 
c
 += 4;

963 i‡(!
	`g_ascii_°∫ˇ£cmp
(
c
, "&gt;", 4))

965 
msg
[
ªtcou¡
++] = '>';

966 
c
 += 4;

968 i‡(!
	`g_ascii_°∫ˇ£cmp
(
c
, "&nbsp;", 6))

970 
msg
[
ªtcou¡
++] = ' ';

971 
c
 += 6;

973 i‡(!
	`g_ascii_°∫ˇ£cmp
(
c
, "&quot;", 6))

975 
msg
[
ªtcou¡
++] = '"';

976 
c
 += 6;

978 i‡(!
	`g_ascii_°∫ˇ£cmp
(
c
, "&amp;", 5))

980 
msg
[
ªtcou¡
++] = '&';

981 
c
 += 5;

983 i‡(!
	`g_ascii_°∫ˇ£cmp
(
c
, "&apos;", 6))

985 
msg
[
ªtcou¡
++] = '\'';

986 
c
 += 6;

989 
msg
[
ªtcou¡
++] = *
c
++;

992 
msg
[
ªtcou¡
++] = *
c
++;

995 i‡(
f⁄tÁ˚
 =
NULL
)

996 
f⁄tÁ˚
 = 
	`g_°rdup
("MS Sans Serif");

998 *
©åibuãs
 = 
	`g_°rdup_¥ötf
("FN=%s; EF=%s; CO=%s; PF=0; RL=%c",

999 
	`ícode_•a˚s
(
f⁄tÁ˚
),

1000 
f⁄ãf„˘
, 
f⁄tcﬁ‹
, 
dúe˘i⁄
);

1001 *
mesßge
 = 
msg
;

1003 
	`g_‰ì
(
f⁄tÁ˚
);

1004 
	}
}

	@src/core/sipmsg.h

31 
	ssùmsg
 {

32 
	mª•⁄£
;

33 
gch¨
 *
	mmëhod
;

34 
gch¨
 *
	mèrgë
;

35 
GSLi°
 *
	mhódîs
;

36 
GSLi°
 *
	m√w_hódîs
;

37 
	mbodyÀn
;

38 
gch¨
 *
	mbody
;

39 
gch¨
 *
	msig«tuª
;

40 
gch¨
 *
	mønd
;

41 
gch¨
 *
	mnum
;

44 
	ssùídpoöt
 {

45 
gch¨
 *
	mc⁄è˘
;

46 
gch¨
 *
	mïid
;

50 
sùmsg
 *
sùmsg_∑r£_msg
(c⁄° 
gch¨
 *
msg
);

51 
sùmsg
 *
sùmsg_∑r£_hódî
(c⁄° 
gch¨
 *
hódî
);

52 
sùmsg
 *
sùmsg_c›y
(c⁄° sùmsg *
Ÿhî
);

53 
sùmsg_add_hódî_now
(
sùmsg
 *
msg
, c⁄° 
gch¨
 *
«me
, c⁄° gch¨ *
vÆue
);

54 
sùmsg_add_hódî
(
sùmsg
 *
msg
, c⁄° 
gch¨
 *
«me
, c⁄° gch¨ *
vÆue
);

55 
sùmsg_add_hódî_now_pos
(
sùmsg
 *
msg
, c⁄° 
gch¨
 *
«me
, c⁄° gch¨ *
vÆue
, 
pos
);

56 
sùmsg_°rù_hódîs
(
sùmsg
 *
msg
, c⁄° 
gch¨
 *
kì≥rs
[]);

57 
sùmsg_mîge_√w_hódîs
(
sùmsg
 *
msg
);

58 
sùmsg_‰ì
(
sùmsg
 *
msg
);

59 
GSLi°
 *
sùmsg_∑r£_ídpoöts_hódî
(c⁄° 
gch¨
 *
hódî
);

60 c⁄° 
gch¨
 *
sùmsg_föd_hódî
(c⁄° 
sùmsg
 *
msg
, c⁄° gch¨ *
«me
);

61 c⁄° 
gch¨
 *
sùmsg_föd_hódî_ö°™˚
(c⁄° 
sùmsg
 *
msg
, c⁄° gch¨ *
«me
, 
which
);

62 
gch¨
 *
sùmsg_föd_∑π_of_hódî
(c⁄° *
hdr
, c⁄° * 
bef‹e
, c⁄° * 
a·î
, c⁄° * 
def
);

63 
gch¨
 *
sùmsg_föd_auth_hódî
(
sùmsg
 *
msg
, c⁄° gch¨ *
«me
);

64 
sùmsg_ªmove_hódî_now
(
sùmsg
 *
msg
, c⁄° 
gch¨
 *
«me
);

65 *
sùmsg_to_°rög
(c⁄° 
sùmsg
 *
msg
);

76 
gch¨
 *
gë_html_mesßge
(c⁄° gch¨ *
ms_ãxt_f‹m©
, c⁄° gch¨ *
body
);

85 
gch¨
 *
sùmsg_gë_x_mms_im_f‹m©
(gch¨ *
msgr
);

91 
gch¨
 *
sùmsg_gë_msgr_°rög
(gch¨ *
x_mms_im_f‹m©
);

96 
gch¨
 *
sùmsg_≠∂y_x_mms_im_f‹m©
(c⁄° *
x_mms_im_f‹m©
, gch¨ *
body
);

98 
	#sùe_∑r£_html
 
m¢_imp‹t_html


	)

108 
sùe_∑r£_html
(c⁄° *
html
, **
©åibuãs
, **
mesßge
);

110 
m¢_∑r£_f‹m©
(c⁄° *
mime
, **
¥e_ªt
, **
po°_ªt
);

111 
m¢_imp‹t_html
(c⁄° *
html
, **
©åibuãs
, **
mesßge
);

	@src/core/uuid.c

19 
	~<°dio.h
>

20 
	~<°rög.h
>

22 
	~<glib.h
>

23 
	~<glib/g¥ötf.h
>

25 
	~"sùe-dige°.h
"

26 
	~"uuid.h
"

28 c⁄° *
	gïid_ns_uuid
 = "fcacfb03-8a73-46ef-91b1-e5ebeeaba4fe";

38 #ifde‡
_WIN32


39 #¥agm®
∑ck
(
push
, 1)

42 
guöt32
 
	mtime_low
;

43 
guöt16
 
	mtime_mid
;

44 
guöt16
 
	mtime_hi_™d_vîsi⁄
;

45 
guöt8
 
	m˛ock_£q_hi_™d_ª£rved
;

46 
guöt8
 
	m˛ock_£q_low
;

47 
guöt8
 
	mnode
[6];

48 } 
	tuuid_t
;

49 #ifde‡
_WIN32


50 #¥agm®
∑ck
(
p›
)

53 
	#UUID_OFFSET_TO_LAST_SEGMENT
 24

	)

55 
	$ªadUUID
(c⁄° *
°rög
, 
uuid_t
 *
uuid
)

57 
i
;

59 
tmp1
, 
tmp2
;

61 
	`ssˇnf
(
°rög
, "%08x-%04hx-%04hx-%02hx%02hx-", &
uuid
->
time_low


62 , &
uuid
->
time_mid
, &uuid->
time_hi_™d_vîsi⁄


63 , &
tmp1
, &
tmp2
);

64 
uuid
->
˛ock_£q_hi_™d_ª£rved
 = 
tmp1
;

65 
uuid
->
˛ock_£q_low
 = 
tmp2
;

67 
i
=0;i<6;i++)

69 
	`ssˇnf
(&
°rög
[
UUID_OFFSET_TO_LAST_SEGMENT
+
i
*2], "%02hx", &
tmp1
);

70 
uuid
->
node
[
i
] = 
tmp1
;

72 
	}
}

74 
	$¥ötUUID
(
uuid_t
 *
uuid
, *
°rög
)

76 
i
;

77 
size_t
 
pos
;

78 
	`•rötf
(
°rög
, "%08x-%04x-%04x-%02x%02x-", 
uuid
->
time_low


79 , 
uuid
->
time_mid
, uuid->
time_hi_™d_vîsi⁄


80 , 
uuid
->
˛ock_£q_hi_™d_ª£rved


81 , 
uuid
->
˛ock_£q_low


83 
pos
 = 
	`°æí
(
°rög
);

84 
i
=0;i<6;i++)

86 
pos
 +
	`•rötf
(&
°rög
[pos], "%02x", 
uuid
->
node
[
i
]);

88 
	}
}

90 
	$¸óãUUID‰omHash
(
uuid_t
 *
uuid
, c⁄° *
hash
)

92 
	`mem˝y
(
uuid
, 
hash
, (
uuid_t
));

93 
uuid
->
time_hi_™d_vîsi⁄
 &
	`GUINT16_TO_LE
(0x0FFF);

94 
uuid
->
time_hi_™d_vîsi⁄
 |
	`GUINT16_TO_LE
(0x5000);

95 
uuid
->
˛ock_£q_hi_™d_ª£rved
 &= 0x3F;

96 
uuid
->
˛ock_£q_hi_™d_ª£rved
 |= 0x80;

97 
	}
}

99 *
	$gíî©eUUID‰omEPID
(c⁄° 
gch¨
 *
ïid
)

101 
uuid_t
 
ªsu…
;

102 
buf
[512];

103 
guch¨
 
dige°
[
SIPE_DIGEST_SHA1_LENGTH
];

105 
	`ªadUUID
(
ïid_ns_uuid
, &
ªsu…
);

107 
ªsu…
.
time_low
 = 
	`GUINT32_FROM_LE
(result.time_low);

108 
ªsu…
.
time_mid
 = 
	`GUINT16_FROM_LE
(result.time_mid);

109 
ªsu…
.
time_hi_™d_vîsi⁄
 = 
	`GUINT16_FROM_LE
(result.time_hi_and_version);

111 
	`mem˝y
(
buf
, &
ªsu…
, (
uuid_t
));

112 
	`°r˝y
(&
buf
[(
uuid_t
)], 
ïid
);

114 
	`sùe_dige°_sha1
((
guch¨
 *)
buf
, 
	`°æí
(buf), 
dige°
);

115 
	`¸óãUUID‰omHash
(&
ªsu…
, 
dige°
);

117 
ªsu…
.
time_low
 = 
	`GUINT32_TO_LE
(result.time_low);

118 
ªsu…
.
time_mid
 = 
	`GUINT16_TO_LE
(result.time_mid);

119 
ªsu…
.
time_hi_™d_vîsi⁄
 = 
	`GUINT16_TO_LE
(result.time_hi_and_version);

121 
	`¥ötUUID
(&
ªsu…
, 
buf
);

122  
	`g_°rdup
(
buf
);

123 
	}
}

134 *
	$sùe_gë_ïid
(c⁄° *
£lf_sù_uri
,

135 c⁄° *
ho°«me
,

136 c⁄° *
ù_addªss
)

139 
	#SIPE_EPID_HASH_START
 14

	)

140 
	#SIPE_EPID_HASH_END
 
SIPE_DIGEST_SHA1_LENGTH


	)

141 
	#SIPE_EPID_LENGTH
 (2 * (
SIPE_EPID_HASH_END
 - 
SIPE_EPID_HASH_START
 + 1))

	)

143 
i
,
j
;

144 
out
[
SIPE_EPID_LENGTH
 + 1];

145 *
buf
 = 
	`g_°rdup_¥ötf
("%s:%s:%s", 
£lf_sù_uri
, 
ho°«me
, 
ù_addªss
);

146 
guch¨
 
hash
[
SIPE_DIGEST_SHA1_LENGTH
];

148 
	`sùe_dige°_sha1
((
guch¨
 *Ë
buf
, 
	`°æí
(buf), 
hash
);

149 
i
 = 
SIPE_EPID_HASH_START
, 
j
 = 0;

150 
i
 < 
SIPE_EPID_HASH_END
;

151 
i
++, 
j
 += 2) {

152 
	`g_•rötf
(&
out
[
j
], "%02x", 
hash
[
i
]);

154 
out
[
SIPE_EPID_LENGTH
] = 0;

156 
	`g_‰ì
(
buf
);

157  
	`g_°rdup
(
out
);

158 
	}
}

	@src/core/uuid.h

26 *
gíî©eUUID‰omEPID
(c⁄° 
gch¨
 *
ïid
);

29 *
sùe_gë_ïid
(c⁄° *
£lf_sù_uri
,

30 c⁄° *
ho°«me
,

31 c⁄° *
ù_addªss
);

	@src/miranda/miranda-backend.cpp

1 
	~<°dio.h
>

2 
	~<glib.h
>

3 
	~<wödows.h
>

4 
	~<¥o˚ss.h
>

6 
	~"sùe-mú™da.h
"

8 
	~<√w∂ugö≠i.h
>

9 
	~<m_sy°em.h
>

10 
	~<m_d©aba£.h
>

12 
	~"sùe-comm⁄.h
"

13 
	~"sùe-backíd.h
"

16 
	$sùe_backíd_debug
(
sùe_debug_Àvñ
 
Àvñ
,

17 c⁄° 
gch¨
 *
f‹m©
,

18 ...Ë
	$G_GNUC_PRINTF
(2, 3)

20 
va_li°
 
va
;

21 
szText
[32768];

22 
FILE
 *
fh
;

24 
	`va_°¨t
(
va
,
f‹m©
);

25 
	`v¢¥ötf
(
szText
,(szText),
f‹m©
,
va
);

26 
	`va_íd
(
va
);

28 *
°r
 = 
	`DBGëSåög
–
NULL
, 
SIPSIMPLE_PROTOCOL_NAME
, "debuglog");

29 i‡(!
°r
)

30 
°r
 = 
	`mú_°rdup
("c:/sipsimple.log");

32 i‡(!
	`f›í_s
(&
fh
, 
°r
, "a")) {

33 
	`Ârötf
(
fh
, "<[%d]> %s", 
	`_gëpid
(), 
szText
);

34 
	`f˛o£
(
fh
);

36 
	`mú_‰ì
(
°r
);

37 
	}
}

39 "C" c⁄° 
gch¨
 *

40 
	$sùe_backíd_√tw‹k_ù_addªss
()

43 
	}
}

	@src/miranda/sipe-miranda.cpp

1 
	~<glib.h
>

2 
	~"sùe-mú™da.h
"

3 
	~"sùe-comm⁄.h
"

4 
	~"sùe-c‹e.h
"

6 #¥agm®
w¨nög
(
dißbÀ
 : 4996)

7 #¥agm®
w¨nög
(
dißbÀ
 : 4101)

9 
HINSTANCE
 
	ghIn°
;

10 
PLUGINLINK
* 
	g∂ugöLök
;

11 
MM_INTERFACE
 
	gmmi
;

16 
PLUGININFOEX
 
	g∂ugöInfo
 = {

17 (
PLUGININFOEX
),

19 
PLUGIN_MAKE_VERSION
(9,12,19,12),

25 
UNICODE_AWARE
,

27 #i‡
deföed
–
_UNICODE
 )

34 "C" 
PLUGININFOEX
 
__de˛•ec
(
dŒexp‹t
Ë*
	$Mú™daPlugöInfoEx
(
DWORD
 
mú™daVîsi⁄
)

38 i‡(
mú™daVîsi⁄
 < 
	`PLUGIN_MAKE_VERSION
(0, 8, 0, 29))

40 
	`MesßgeBoxA
–
NULL
, "SIP/SimpleÖlugin cannot beÜoaded. ItÑequires Miranda IM 0.8.0.29 orÜater.", "SIP/Simple Plugin",

41 
MB_OK
|
MB_ICONWARNING
|
MB_SETFOREGROUND
|
MB_TOPMOST
 );

42  
NULL
;

45  &
∂ugöInfo
;

46 
	}
}

48 c⁄° 
MUUID
 
öãrÁ˚s
[] = {
MIID_PROTOCOL
, 
MIID_LAST
};

49 "C" 
	$__de˛•ec
(
dŒexp‹t
Ëc⁄° 
MUUID
* 
	$Mú™daPlugöI¡îÁ˚s
()

51  
öãrÁ˚s
;

52 
	}
}

54 "C" 
BOOL
 
WINAPI
 
	$DŒMaö
(
HINSTANCE
 
hö°DLL
,
DWORD
 
fdwRós⁄
,
LPVOID
 
ÕvRe£rved
)

56 
hIn°
 = 
hö°DLL
;

57  
TRUE
;

58 
	}
}

62 
PROTO_INTERFACE
* 
	$sùsim∂ePrŸoInô
–c⁄° * 
pszPrŸoName
, c⁄° 
TCHAR
* 
tszU£rName
 )

64  
√w
 
	`CSùSim∂ePrŸo
–
pszPrŸoName
, 
tszU£rName
 );

65 
	}
}

67 
	$sùsim∂ePrŸoUnöô
–
PROTO_INTERFACE
* 
µro
 )

69 
	`dñëe
 ( 
CSùSim∂ePrŸo
* )
µro
;

71 
	}
}

73 
	$OnModuÀsLﬂded
–
WPARAM
, 
LPARAM
 )

76 
	}
}

78 "C" 
	$__de˛•ec
(
dŒexp‹t
Ë
	$Lﬂd
(
PLUGINLINK
 *
lök
)

80 
∂ugöLök
 = 
lök
;

82 
	`sùe_c‹e_öô
();

83 
	`mú_gëMMI
–&
mmi
 );

86 
PROTOCOLDESCRIPTOR
 
pd
 = {0};

87 
pd
.
cbSize
 = (pd);

88 
pd
.
szName
 = 
SIPSIMPLE_PROTOCOL_NAME
;

89 
pd
.
ty≥
 = 
PROTOTYPE_PROTOCOL
;

90 
pd
.
‚Inô
 = 
sùsim∂ePrŸoInô
;

91 
pd
.
‚Unöô
 = 
sùsim∂ePrŸoUnöô
;

92 
	`CÆlSîvi˚
(
MS_PROTO_REGISTERMODULE
, 0, (
LPARAM
)&
pd
);

95 
	}
}

97 "C" 
	$__de˛•ec
(
dŒexp‹t
Ë
	$U∆ﬂd
()

100 
	}
}

105 
CSùSim∂ePrŸo
::
	$CSùSim∂ePrŸo
–c⁄° * 
aPrŸoName
, c⁄° 
TCHAR
* 
aU£rName
 )

107 
m_szModuÀName
 = 
	`mú_°rdup
(
aPrŸoName
);

108 
m_tszU£rName
 = 
	`mú_t°rdup
(
aU£rName
);

109 
m_szPrŸoName
 = 
	`mú_°rdup
(
aPrŸoName
);

111 
	}
}

113 
CSùSim∂ePrŸo
::~
	$CSùSim∂ePrŸo
()

115 
	}
}

117 
HANDLE
 
CSùSim∂ePrŸo
::
	$AddToLi°
–
Êags
, 
PROTOSEARCHRESULT
* 
p§
 )

119  
NULL
;

120 
	}
}

122 
HANDLE
 
CSùSim∂ePrŸo
::
	$AddToLi°ByEvít
–
Êags
, 
iC⁄è˘
, 
HANDLE
 
hDbEvít
 )

124  
NULL
;

125 
	}
}

127 
CSùSim∂ePrŸo
::
	$Auth‹ize
–
HANDLE
 
hC⁄è˘
 )

130 
	}
}

132 
CSùSim∂ePrŸo
::
	$AuthDíy
–
HANDLE
 
hC⁄è˘
, c⁄° * 
szRós⁄
 )

135 
	}
}

137 
CSùSim∂ePrŸo
::
	$AuthRecv
–
HANDLE
 
hC⁄è˘
, 
PROTORECVEVENT
* )

140 
	}
}

142 
CSùSim∂ePrŸo
::
	$AuthReque°
–
HANDLE
 
hC⁄è˘
, c⁄° * 
szMesßge
 )

145 
	}
}

147 
HANDLE
 
CSùSim∂ePrŸo
::
	$Ch™geInfo
–
iInfoTy≥
, * 
pInfoD©a
 )

149  
NULL
;

150 
	}
}

152 
HANDLE
 
CSùSim∂ePrŸo
::
	$FûeAŒow
–
HANDLE
 
hC⁄è˘
, HANDLE 
hTøns„r
, c⁄° * 
szP©h
 )

154  
NULL
;

155 
	}
}

157 
CSùSim∂ePrŸo
::
	$FûeC™˚l
–
HANDLE
 
hC⁄è˘
, HANDLE 
hTøns„r
 )

160 
	}
}

162 
CSùSim∂ePrŸo
::
	$FûeDíy
–
HANDLE
 
hC⁄è˘
, HANDLE 
hTøns„r
, c⁄° * 
szRós⁄
 )

165 
	}
}

167 
CSùSim∂ePrŸo
::
	$FûeResume
–
HANDLE
 
hTøns„r
, * 
a˘i⁄
, c⁄° ** 
szFûíame
 )

170 
	}
}

172 
DWORD_PTR
 
CSùSim∂ePrŸo
::
	$GëC≠s
–
ty≥
, 
HANDLE
 
hC⁄è˘
 )

174 
ty≥
) {

175 
PFLAGNUM_1
:

176  
PF1_IM
 | 
PF1_CHAT
 | 
PF1_USERIDISEMAIL
 | 
PF1_SEARCHBYNAME


177 | 
PF1_AUTHREQ
 | 
PF1_SERVERCLIST
 | 
PF1_ADDSEARCHRES
;

179 
PFLAGNUM_2
:

180  
PF2_ONLINE
 | 
PF2_INVISIBLE
 | 
PF2_SHORTAWAY
 | 
PF2_LONGAWAY
 | 
PF2_LIGHTDND
 | 
PF2_HEAVYDND


181 | 
PF2_OUTTOLUNCH
 | 
PF2_ONTHEPHONE
;

183 
PFLAGNUM_3
:

186 
PFLAGNUM_4
:

187  
PF4_NOCUSTOMAUTH
 | 
PF4_IMSENDUTF
 | 
PF4_SUPPORTTYPING
;

189 
PFLAGNUM_5
:

192 
PFLAG_UNIQUEIDSETTING
:

193  (
DWORD_PTR
Ë
SIP_UNIQUEID
;

200 
	}
}

202 
HICON
 
CSùSim∂ePrŸo
::
	$GëIc⁄
–
ic⁄Index
 )

204  
NULL
;

205 
	}
}

207 
CSùSim∂ePrŸo
::
	$GëInfo
–
HANDLE
 
hC⁄è˘
, 
öfoTy≥
 )

210 
	}
}

212 
HANDLE
 
CSùSim∂ePrŸo
::
	$SórchBasic
–c⁄° * 
id
 )

214  
NULL
;

215 
	}
}

217 
HANDLE
 
CSùSim∂ePrŸo
::
	$SórchByEmaû
–c⁄° * 
emaû
 )

219  
NULL
;

220 
	}
}

222 
HANDLE
 
CSùSim∂ePrŸo
::
	$SórchByName
(c⁄° *
nick
, c⁄° *
fú°Name
, c⁄° *
œ°Name
)

224  
NULL
;

225 
	}
}

227 
HWND
 
CSùSim∂ePrŸo
::
	$SórchAdv™˚d
–
HWND
 
ow√r
 )

229  
NULL
;

230 
	}
}

232 
HWND
 
CSùSim∂ePrŸo
::
	$Cª©eExãndedSórchUI
–
HWND
 
ow√r
 )

234  
NULL
;

235 
	}
}

237 
CSùSim∂ePrŸo
::
	$RecvC⁄è˘s
–
HANDLE
 
hC⁄è˘
, 
PROTORECVEVENT
* )

240 
	}
}

242 
CSùSim∂ePrŸo
::
	$RecvFûe
–
HANDLE
 
hC⁄è˘
, 
PROTORECVFILE
* )

245 
	}
}

247 
CSùSim∂ePrŸo
::
	$RecvMsg
(
HANDLE
 
hC⁄è˘
, 
PROTORECVEVENT
* 
¥e
)

250 
	}
}

252 
CSùSim∂ePrŸo
::
	$RecvUæ
–
HANDLE
 
hC⁄è˘
, 
PROTORECVEVENT
* )

255 
	}
}

257 
CSùSim∂ePrŸo
::
	$SídC⁄è˘s
–
HANDLE
 
hC⁄è˘
, 
Êags
, 
nC⁄è˘s
, HANDLE* 
hC⁄è˘sLi°
 )

260 
	}
}

262 
HANDLE
 
CSùSim∂ePrŸo
::
	$SídFûe
–
HANDLE
 
hC⁄è˘
, c⁄° * 
szDes¸ùti⁄
, ** 
µszFûes
 )

265 
	}
}

267 
CSùSim∂ePrŸo
::
	$SídMsg
–
HANDLE
 
hC⁄è˘
, 
Êags
, c⁄° * 
msg
 )

270 
	}
}

272 
CSùSim∂ePrŸo
::
	$SídUæ
–
HANDLE
 
hC⁄è˘
, 
Êags
, c⁄° * 
uæ
 )

275 
	}
}

277 
CSùSim∂ePrŸo
::
	$SëAµ¨ítMode
–
HANDLE
 
hC⁄è˘
, 
mode
 )

280 
	}
}

282 
CSùSim∂ePrŸo
::
	$SëSètus
–
iNewSètus
 )

285 
	}
}

287 
HANDLE
 
CSùSim∂ePrŸo
::
	$GëAwayMsg
–
HANDLE
 
hC⁄è˘
 )

289  
NULL
;

290 
	}
}

292 
CSùSim∂ePrŸo
::
	$RecvAwayMsg
–
HANDLE
 
hC⁄è˘
, 
mode
, 
PROTORECVEVENT
* 
evt
 )

295 
	}
}

297 
CSùSim∂ePrŸo
::
	$SídAwayMsg
–
HANDLE
 
hC⁄è˘
, HANDLE 
hPro˚ss
, c⁄° * 
msg
 )

300 
	}
}

302 
CSùSim∂ePrŸo
::
	$SëAwayMsg
–
m_iSètus
, c⁄° * 
msg
 )

305 
	}
}

307 
CSùSim∂ePrŸo
::
	$U£rIsTypög
–
HANDLE
 
hC⁄è˘
, 
ty≥
 )

310 
	}
}

312 
CSùSim∂ePrŸo
::
	$OnEvít
–
PROTOEVENTTYPE
 
evítTy≥
, 
WPARAM
 
wP¨am
, 
LPARAM
 
lP¨am
 )

315 
	}
}

	@src/miranda/sipe-miranda.h

1 #i‚de‡
_SIPSIMPLE_PROTO_H_


2 
	#_SIPSIMPLE_PROTO_H_


	)

4 
	#MIRANDA_VER
 0x0800

	)

6 
	~<wödows.h
>

8 
	~<√w∂ugö≠i.h
>

9 
	~<m_¥Ÿomod.h
>

10 
	~<m_¥Ÿosvc.h
>

11 
	~<m_¥Ÿoöt.h
>

12 
	~<m_œng∑ck.h
>

13 
	~<m_√éib.h
>

15 #¥agm®
w¨nög
(
dißbÀ
 : 4996)

16 
	#__MIRANDA_COMPATIBLE__


	)

17 
	#SIPSIMPLE_PROTOCOL_NAME
 
	`LPGEN
("SIP/SIMPLE")

	)

18 
	#SIP_UNIQUEID
 "sù_s¸ì¬ame"

	)

20 #i‚de‡
IDC_STATIC


21 
	#IDC_STATIC
 (-1)

	)

24 
	gCSùSim∂ePrŸo
 : 
public
 
PROTO_INTERFACE


27 
CSùSim∂ePrŸo
–c⁄° *, c⁄° 
TCHAR
* );

28 ~
CSùSim∂ePrŸo
();

34 
vútuÆ
 
HANDLE
 
__cde˛
 
AddToLi°
–
Êags
, 
PROTOSEARCHRESULT
* 
p§
 );

35 
vútuÆ
 
HANDLE
 
__cde˛
 
AddToLi°ByEvít
–
Êags
, 
iC⁄è˘
, HANDLE 
hDbEvít
 );

37 
vútuÆ
 
__cde˛
 
Auth‹ize
–
HANDLE
 
hC⁄è˘
 );

38 
vútuÆ
 
__cde˛
 
AuthDíy
–
HANDLE
 
hC⁄è˘
, c⁄° * 
szRós⁄
 );

39 
vútuÆ
 
__cde˛
 
AuthRecv
–
HANDLE
 
hC⁄è˘
, 
PROTORECVEVENT
* );

40 
vútuÆ
 
__cde˛
 
AuthReque°
–
HANDLE
 
hC⁄è˘
, c⁄° * 
szMesßge
 );

42 
vútuÆ
 
HANDLE
 
__cde˛
 
Ch™geInfo
–
iInfoTy≥
, * 
pInfoD©a
 );

44 
vútuÆ
 
HANDLE
 
__cde˛
 
FûeAŒow
–HANDLE 
hC⁄è˘
, HANDLE 
hTøns„r
, c⁄° * 
szP©h
 );

45 
vútuÆ
 
__cde˛
 
FûeC™˚l
–
HANDLE
 
hC⁄è˘
, HANDLE 
hTøns„r
 );

46 
vútuÆ
 
__cde˛
 
FûeDíy
–
HANDLE
 
hC⁄è˘
, HANDLE 
hTøns„r
, c⁄° * 
szRós⁄
 );

47 
vútuÆ
 
__cde˛
 
FûeResume
–
HANDLE
 
hTøns„r
, * 
a˘i⁄
, c⁄° ** 
szFûíame
 );

49 
vútuÆ
 
DWORD_PTR
 
__cde˛
 
GëC≠s
–
ty≥
, 
HANDLE
 
hC⁄è˘
 = 
NULL
 );

50 
vútuÆ
 
HICON
 
__cde˛
 
GëIc⁄
–
ic⁄Index
 );

51 
vútuÆ
 
__cde˛
 
GëInfo
–
HANDLE
 
hC⁄è˘
, 
öfoTy≥
 );

53 
vútuÆ
 
HANDLE
 
__cde˛
 
SórchBasic
–c⁄° * 
id
 );

54 
vútuÆ
 
HANDLE
 
__cde˛
 
SórchByEmaû
–c⁄° * 
emaû
 );

55 
vútuÆ
 
HANDLE
 
__cde˛
 
SórchByName
(c⁄° *
nick
, c⁄° *
fú°Name
, c⁄° *
œ°Name
);

56 
vútuÆ
 
HWND
 
__cde˛
 
SórchAdv™˚d
–HWND 
ow√r
 );

57 
vútuÆ
 
HWND
 
__cde˛
 
Cª©eExãndedSórchUI
–HWND 
ow√r
 );

59 
vútuÆ
 
__cde˛
 
RecvC⁄è˘s
–
HANDLE
 
hC⁄è˘
, 
PROTORECVEVENT
* );

60 
vútuÆ
 
__cde˛
 
RecvFûe
–
HANDLE
 
hC⁄è˘
, 
PROTORECVFILE
* );

61 
vútuÆ
 
__cde˛
 
RecvMsg
–
HANDLE
 
hC⁄è˘
, 
PROTORECVEVENT
* );

62 
vútuÆ
 
__cde˛
 
RecvUæ
–
HANDLE
 
hC⁄è˘
, 
PROTORECVEVENT
* );

64 
vútuÆ
 
__cde˛
 
SídC⁄è˘s
–
HANDLE
 
hC⁄è˘
, 
Êags
, 
nC⁄è˘s
, HANDLE* 
hC⁄è˘sLi°
 );

65 
vútuÆ
 
HANDLE
 
__cde˛
 
SídFûe
–HANDLE 
hC⁄è˘
, c⁄° * 
szDes¸ùti⁄
, ** 
µszFûes
 );

66 
vútuÆ
 
__cde˛
 
SídMsg
–
HANDLE
 
hC⁄è˘
, 
Êags
, c⁄° * 
msg
 );

67 
vútuÆ
 
__cde˛
 
SídUæ
–
HANDLE
 
hC⁄è˘
, 
Êags
, c⁄° * 
uæ
 );

69 
vútuÆ
 
__cde˛
 
SëAµ¨ítMode
–
HANDLE
 
hC⁄è˘
, 
mode
 );

70 
vútuÆ
 
__cde˛
 
SëSètus
–
iNewSètus
 );

72 
vútuÆ
 
HANDLE
 
__cde˛
 
GëAwayMsg
–HANDLE 
hC⁄è˘
 );

73 
vútuÆ
 
__cde˛
 
RecvAwayMsg
–
HANDLE
 
hC⁄è˘
, 
mode
, 
PROTORECVEVENT
* 
evt
 );

74 
vútuÆ
 
__cde˛
 
SídAwayMsg
–
HANDLE
 
hC⁄è˘
, HANDLE 
hPro˚ss
, c⁄° * 
msg
 );

75 
vútuÆ
 
__cde˛
 
SëAwayMsg
–
m_iSètus
, c⁄° * 
msg
 );

77 
vútuÆ
 
__cde˛
 
U£rIsTypög
–
HANDLE
 
hC⁄è˘
, 
ty≥
 );

79 
vútuÆ
 
__cde˛
 
OnEvít
–
PROTOEVENTTYPE
 
evítTy≥
, 
WPARAM
 
wP¨am
, 
LPARAM
 
lP¨am
 );

	@src/purple/purple-connection.c

23 
	~"glib.h
"

25 
	~"c⁄√˘i⁄.h
"

27 
	~"sùe-backíd.h
"

28 
	~"sùe-c‹e.h
"

30 
	~"puΩÀ-¥iv©e.h
"

32 c⁄° 
guöt
 
	gm≠
[
SIPE_CONNECTION_ERROR_LAST
] = {

33 
PURPLE_CONNECTION_ERROR_NETWORK_ERROR
,

34 
PURPLE_CONNECTION_ERROR_INVALID_USERNAME
,

35 
PURPLE_CONNECTION_ERROR_INVALID_SETTINGS
,

36 
PURPLE_CONNECTION_ERROR_AUTHENTICATION_FAILED
,

37 
PURPLE_CONNECTION_ERROR_AUTHENTICATION_IMPOSSIBLE
,

40 
	$sùe_backíd_c⁄√˘i⁄_îr‹
(
sùe_c‹e_public
 *
sùe_public
,

41 
sùe_c⁄√˘i⁄_îr‹
 
îr‹
,

42 c⁄° 
gch¨
 *
msg
)

44 
	`puΩÀ_c⁄√˘i⁄_îr‹_ªas⁄
(
sùe_public
->
backíd_¥iv©e
->
gc
,

45 
m≠
[
îr‹
],

46 
msg
);

47 
	}
}

	@src/purple/purple-crypt.c

23 
	~"glib.h
"

24 
	~"cùhî.h
"

26 
	~"sùe-¸y±.h
"

28 
	$sùe_¸y±_des
(c⁄° 
guch¨
 *
key
,

29 c⁄° 
guch¨
 *
∂aöãxt
, 
gsize
 
∂aöãxt_Àngth
,

30 
guch¨
 *
í¸y±ed_ãxt
)

32 
gsize
 
dummy
;

33 
PuΩÀCùhîC⁄ãxt
 *
c⁄ãxt
 = 
	`puΩÀ_cùhî_c⁄ãxt_√w_by_«me
("des", 
NULL
);

34 
	`puΩÀ_cùhî_c⁄ãxt_£t_key
(
c⁄ãxt
, 
key
);

35 
	`puΩÀ_cùhî_c⁄ãxt_í¸y±
(
c⁄ãxt
, 
∂aöãxt
, 
∂aöãxt_Àngth
, 
í¸y±ed_ãxt
, &
dummy
);

36 
	`puΩÀ_cùhî_c⁄ãxt_de°roy
(
c⁄ãxt
);

37 
	}
}

39 
	$sùe_¸y±_rc4
(c⁄° 
guch¨
 *
key
, 
gsize
 
key_Àngth
,

40 c⁄° 
guch¨
 *
∂aöãxt
, 
gsize
 
∂aöãxt_Àngth
,

41 
guch¨
 *
í¸y±ed_ãxt
)

43 
gsize
 
dummy
;

44 
PuΩÀCùhîC⁄ãxt
 *
c⁄ãxt
 = 
	`puΩÀ_cùhî_c⁄ãxt_√w_by_«me
("rc4", 
NULL
);

45 
	`puΩÀ_cùhî_c⁄ãxt_£t_›ti⁄
(
c⁄ãxt
, "key_Àn", (
gpoöãr
)
key_Àngth
);

46 
	`puΩÀ_cùhî_c⁄ãxt_£t_key
(
c⁄ãxt
, 
key
);

47 
	`puΩÀ_cùhî_c⁄ãxt_í¸y±
(
c⁄ãxt
, 
∂aöãxt
, 
∂aöãxt_Àngth
, 
í¸y±ed_ãxt
, &
dummy
);

48 
	`puΩÀ_cùhî_c⁄ãxt_de°roy
(
c⁄ãxt
);

49 
	}
}

52 
gpoöãr
 
	$sùe_¸y±_·_°¨t
(c⁄° 
guch¨
 *
key
)

54 
PuΩÀCùhîC⁄ãxt
 *
c⁄ãxt
 = 
	`puΩÀ_cùhî_c⁄ãxt_√w_by_«me
("rc4", 
NULL
);

56 
	`puΩÀ_cùhî_c⁄ãxt_£t_›ti⁄
(
c⁄ãxt
, "key_Àn", (
gpoöãr
)16);

57 
	`puΩÀ_cùhî_c⁄ãxt_£t_key
(
c⁄ãxt
, 
key
);

58 (
c⁄ãxt
);

59 
	}
}

61 
	$sùe_¸y±_·_°ªam
(
gpoöãr
 
c⁄ãxt
,

62 c⁄° 
guch¨
 *
ö
, 
gsize
 
Àngth
,

63 
guch¨
 *
out
)

65 
	`puΩÀ_cùhî_c⁄ãxt_í¸y±
(
c⁄ãxt
, 
ö
, 
Àngth
, 
out
, 
NULL
);

66 
	}
}

68 
	$sùe_¸y±_·_de°roy
(
gpoöãr
 
c⁄ãxt
)

70 
	`puΩÀ_cùhî_c⁄ãxt_de°roy
(
c⁄ãxt
);

71 
	}
}

	@src/purple/purple-debug.c

23 
	~<°d¨g.h
>

25 
	~"glib.h
"

26 
	~"debug.h
"

28 
	~"sùe-backíd.h
"

30 
	$sùe_backíd_debug
(
sùe_debug_Àvñ
 
Àvñ
,

31 c⁄° 
gch¨
 *
f‹m©
,

34 
va_li°
 
≠
;

36 
	`va_°¨t
(
≠
, 
f‹m©
);

38 i‡(
	`puΩÀ_debug_is_íabÀd
()) {

41 
gch¨
 *
msg
 = 
	`g_°rdup_v¥ötf
(
f‹m©
, 
≠
);

43 
Àvñ
) {

44 
SIPE_DEBUG_LEVEL_INFO
:

45 
	`puΩÀ_debug_öfo
("sùe", "%s\n", 
msg
);

47 
SIPE_DEBUG_LEVEL_WARNING
:

48 
	`puΩÀ_debug_w¨nög
("sùe", "%s\n", 
msg
);

50 
SIPE_DEBUG_LEVEL_ERROR
:

51 
	`puΩÀ_debug_îr‹
("sùe", "%s\n", 
msg
);

53 
SIPE_DEBUG_LEVEL_FATAL
:

54 
	`puΩÀ_debug_Áèl
("sùe", "%s\n", 
msg
);

57 
	`g_‰ì
(
msg
);

60 
	`va_íd
(
≠
);

61 
	}
}

	@src/purple/purple-digest.c

23 
	~"glib.h
"

24 
	~"cùhî.h
"

26 
	~"sùe-dige°.h
"

28 
	$sùe_dige°_hmac_md5
(c⁄° 
guch¨
 *
key
, 
gsize
 
key_Àngth
,

29 c⁄° 
guch¨
 *
d©a
, 
gsize
 
d©a_Àngth
,

30 
guch¨
 *
dige°
)

32 
PuΩÀCùhîC⁄ãxt
 *
c⁄ãxt
 = 
	`puΩÀ_cùhî_c⁄ãxt_√w_by_«me
("hmac", 
NULL
);

33 
	`puΩÀ_cùhî_c⁄ãxt_£t_›ti⁄
(
c⁄ãxt
, "hash", "md5");

34 
	`puΩÀ_cùhî_c⁄ãxt_£t_key_wôh_Àn
(
c⁄ãxt
, 
key
, 
key_Àngth
);

35 
	`puΩÀ_cùhî_c⁄ãxt_≠≥nd
(
c⁄ãxt
, 
d©a
, 
d©a_Àngth
);

36 
	`puΩÀ_cùhî_c⁄ãxt_dige°
(
c⁄ãxt
, 
SIPE_DIGEST_HMAC_MD5_LENGTH
, 
dige°
, 
NULL
);

37 
	`puΩÀ_cùhî_c⁄ãxt_de°roy
(
c⁄ãxt
);

38 
	}
}

40 
	$puΩÀ_dige°
(c⁄° 
gch¨
 *
Æg‹ôhm
,

41 c⁄° 
guch¨
 *
d©a
, 
gsize
 
d©a_Àngth
,

42 
guch¨
 *
dige°
, 
gsize
 
dige°_Àngth
)

44 
PuΩÀCùhîC⁄ãxt
 *
˘x
 = 
	`puΩÀ_cùhî_c⁄ãxt_√w_by_«me
(
Æg‹ôhm
, 
NULL
);

45 
	`puΩÀ_cùhî_c⁄ãxt_≠≥nd
(
˘x
, 
d©a
, 
d©a_Àngth
);

46 
	`puΩÀ_cùhî_c⁄ãxt_dige°
(
˘x
, 
dige°_Àngth
, 
dige°
, 
NULL
);

47 
	`puΩÀ_cùhî_c⁄ãxt_de°roy
(
˘x
);

48 
	}
}

50 
	$sùe_dige°_md4
(c⁄° 
guch¨
 *
d©a
, 
gsize
 
Àngth
, guch¨ *
dige°
)

52 
	`puΩÀ_dige°
("md4", 
d©a
, 
Àngth
, 
dige°
, 
SIPE_DIGEST_MD4_LENGTH
);

53 
	}
}

55 
	$sùe_dige°_md5
(c⁄° 
guch¨
 *
d©a
, 
gsize
 
Àngth
, guch¨ *
dige°
)

57 
	`puΩÀ_dige°
("md5", 
d©a
, 
Àngth
, 
dige°
, 
SIPE_DIGEST_MD5_LENGTH
);

58 
	}
}

60 
	$sùe_dige°_sha1
(c⁄° 
guch¨
 *
d©a
, 
gsize
 
Àngth
, guch¨ *
dige°
)

62 
	`puΩÀ_dige°
("sha1", 
d©a
, 
Àngth
, 
dige°
, 
SIPE_DIGEST_SHA1_LENGTH
);

63 
	}
}

66 
gpoöãr
 
	$sùe_dige°_·_°¨t
(c⁄° 
guch¨
 *
sha1_dige°
)

68 
PuΩÀCùhîC⁄ãxt
 *
c⁄ãxt
 = 
	`puΩÀ_cùhî_c⁄ãxt_√w_by_«me
("hmac", 
NULL
);

69 
	`puΩÀ_cùhî_c⁄ãxt_£t_›ti⁄
(
c⁄ãxt
, "hash", "sha1");

71 
	`puΩÀ_cùhî_c⁄ãxt_£t_key_wôh_Àn
(
c⁄ãxt
, 
sha1_dige°
, 16);

72 (
c⁄ãxt
);

73 
	}
}

75 
	$sùe_dige°_·_upd©e
(
gpoöãr
 
c⁄ãxt
, c⁄° 
guch¨
 *
d©a
, 
gsize
 
Àngth
)

77 
	`puΩÀ_cùhî_c⁄ãxt_≠≥nd
(
c⁄ãxt
, 
d©a
, 
Àngth
);

78 
	}
}

80 
	$sùe_dige°_·_íd
(
gpoöãr
 
c⁄ãxt
, 
guch¨
 *
dige°
)

82 
	`puΩÀ_cùhî_c⁄ãxt_dige°
(
c⁄ãxt
, 
SIPE_DIGEST_FILETRANSFER_LENGTH
, 
dige°
, 
NULL
);

83 
	}
}

85 
	$sùe_dige°_·_de°roy
(
gpoöãr
 
c⁄ãxt
)

87 
	`puΩÀ_cùhî_c⁄ãxt_de°roy
(
c⁄ãxt
);

88 
	}
}

	@src/purple/purple-dnsquery.c

23 
	~"glib.h
"

25 
	~"dns§v.h
"

27 
	~"sùe-backíd.h
"

28 
	~"sùe-c‹e.h
"

30 
	~"puΩÀ-¥iv©e.h
"

32 
	$dns_§v_ª•⁄£
(
PuΩÀSrvRe•⁄£
 *
ª•
,

33 
ªsu…s
,

34 
gpoöãr
 
d©a
)

36 
sùe_backíd_¥iv©e
 *
puΩÀ_¥iv©e
 = 
d©a
;

39 
puΩÀ_¥iv©e
->
dns_quîy
 = 
NULL
;

42 i‡(
ªsu…s
) {

43 
	`sùe_c‹e_dns_ªsﬁved
(
puΩÀ_¥iv©e
->
public
,

44 
ª•
->
ho°«me
,

45 
ª•
->
p‹t
);

46 
	`g_‰ì
(
ª•
);

48 
	`sùe_c‹e_dns_ªsﬁve_Áûuª
(
puΩÀ_¥iv©e
->
public
);

50 
	}
}

52 
	$sùe_backíd_dns_quîy
(
sùe_c‹e_public
 *
sùe_public
,

53 c⁄° 
gch¨
 *
¥Ÿocﬁ
,

54 c⁄° 
gch¨
 *
å™•‹t
,

55 c⁄° 
gch¨
 *
domaö
)

57 
sùe_backíd_¥iv©e
 *
puΩÀ_¥iv©e
 = 
sùe_public
->
backíd_¥iv©e
;

60 
puΩÀ_¥iv©e
->
dns_quîy
 = 
	`puΩÀ_§v_ªsﬁve
(
¥Ÿocﬁ
,

61 
å™•‹t
,

62 
domaö
,

63 
dns_§v_ª•⁄£
,

64 
puΩÀ_¥iv©e
);

65 
	}
}

	@src/purple/purple-markup.c

23 
	~"glib.h
"

24 
	~"utû.h
"

26 
	~"sùe-backíd.h
"

28 
gch¨
 *
	$sùe_backíd_m¨kup_css_¥›îty
(c⁄° 
gch¨
 *
°yÀ
,

29 c⁄° 
gch¨
 *
›ti⁄
)

31  
	`puΩÀ_m¨kup_gë_css_¥›îty
(
°yÀ
, 
›ti⁄
);

32 
	}
}

34 
gch¨
 *
	$sùe_backíd_m¨kup_°rù_html
(c⁄° 
gch¨
 *
html
)

36  
	`puΩÀ_m¨kup_°rù_html
(
html
);

37 
	}
}

	@src/purple/purple-media.c

23 #ifde‡
HAVE_CONFIG_H


24 
	~"c⁄fig.h
"

27 
	~"glib.h
"

28 
	~<°rög.h
>

30 
	~"sùe-comm⁄.h
"

32 
	~"medüm™agî.h
"

33 
	~"ªque°.h
"

34 
	~"agít.h
"

36 
	~"sùe-backíd.h
"

37 
	~"sùe-c‹e.h
"

38 
	~"sùe-medü.h
"

40 
	~"puΩÀ-¥iv©e.h
"

42 
	s_sùe_puΩÀ_medü
 {

43 
PuΩÀMedü
 *
	mm
;

45 
gboﬁón
 
	mö_ªcursi⁄
;

46 } 
	tsùe_puΩÀ_medü
;

48 
PuΩÀMedüSessi⁄Ty≥
 
sùe_medü_to_puΩÀ
(
SùeMedüTy≥
 
ty≥
);

49 
PuΩÀMedüC™did©eTy≥
 
sùe_ˇndid©e_ty≥_to_puΩÀ
(
SùeC™did©eTy≥
 
ty≥
);

50 
PuΩÀMedüNëw‹kPrŸocﬁ
 
sùe_√tw‹k_¥Ÿocﬁ_to_puΩÀ
(
SùeNëw‹kPrŸocﬁ
 
¥Ÿo
);

51 
SùeNëw‹kPrŸocﬁ
 
puΩÀ_√tw‹k_¥Ÿocﬁ_to_sùe
(
PuΩÀMedüNëw‹kPrŸocﬁ
 
¥Ÿo
);

54 
	$⁄_ˇndid©es_¥ï¨ed_cb
(
SIPE_UNUSED_PARAMETER
 
PuΩÀMedü
 *
medü
,

55 
SIPE_UNUSED_PARAMETER
 
gch¨
 *
£ssi⁄id
,

56 
SIPE_UNUSED_PARAMETER
 
gch¨
 *
∑πicù™t
,

57 
sùe_medü_ˇŒ
 *
ˇŒ
)

59 i‡(
ˇŒ
->
ˇndid©es_¥ï¨ed_cb
)

60 
ˇŒ
->
	`ˇndid©es_¥ï¨ed_cb
(call);

61 
	}
}

64 
	$⁄_°©e_ch™ged_cb
(
SIPE_UNUSED_PARAMETER
 
PuΩÀMedü
 *
medü
,

65 
PuΩÀMedüSèã
 
°©e
,

66 
gch¨
 *
£ssi⁄id
,

67 
gch¨
 *
∑πicù™t
,

68 
sùe_medü_ˇŒ
 *
ˇŒ
)

70 
	`¥ötf
("sùe_medü_°©e_ch™ged_cb: %d %†%s\n", 
°©e
, 
£ssi⁄id
, 
∑πicù™t
);

71 i‡(
°©e
 =
PURPLE_MEDIA_STATE_CONNECTED
 && 
ˇŒ
->
medü_c⁄√˘ed_cb
)

72 
ˇŒ
->
	`medü_c⁄√˘ed_cb
(call);

73 
	}
}

76 
	$⁄_°ªam_öfo_cb
(
SIPE_UNUSED_PARAMETER
 
PuΩÀMedü
 *
medü
,

77 
PuΩÀMedüInfoTy≥
 
ty≥
,

78 
SIPE_UNUSED_PARAMETER
 
gch¨
 *
£ssi⁄id
,

79 
SIPE_UNUSED_PARAMETER
 
gch¨
 *
∑πicù™t
,

80 
gboﬁón
 
loˇl
, 
sùe_medü_ˇŒ
 *
ˇŒ
)

82 
sùe_puΩÀ_medü
 *
m
 = 
ˇŒ
->
medü
;

83 i‡(
m
->
ö_ªcursi⁄
) {

84 
m
->
ö_ªcursi⁄
 = 
FALSE
;

88 i‡(
ty≥
 =
PURPLE_MEDIA_INFO_ACCEPT
 && 
ˇŒ
->
ˇŒ_ac˚±_cb
)

89 
ˇŒ
->
	`ˇŒ_ac˚±_cb
(ˇŒ, 
loˇl
);

90 i‡(
ty≥
 =
PURPLE_MEDIA_INFO_REJECT
 && 
ˇŒ
->
ˇŒ_ªje˘_cb
)

91 
ˇŒ
->
	`ˇŒ_ªje˘_cb
(ˇŒ, 
loˇl
);

92 i‡(
ty≥
 =
PURPLE_MEDIA_INFO_HOLD
 && 
ˇŒ
->
ˇŒ_hﬁd_cb
) {

93 
ˇŒ
->
	`ˇŒ_hﬁd_cb
(ˇŒ, 
loˇl
, 
TRUE
);

94 i‡(!
loˇl
) {

95 
m
->
ö_ªcursi⁄
 = 
TRUE
;

96 
	`puΩÀ_medü_°ªam_öfo
(
m
->m, 
PURPLE_MEDIA_INFO_HOLD
, 
NULL
, NULL, 
TRUE
);

98 } i‡(
ty≥
 =
PURPLE_MEDIA_INFO_UNHOLD
 && 
ˇŒ
->
ˇŒ_hﬁd_cb
) {

99 
ˇŒ
->
	`ˇŒ_hﬁd_cb
(ˇŒ, 
loˇl
, 
FALSE
);

100 
m
->
ö_ªcursi⁄
 = 
TRUE
;

101 i‡(!
ˇŒ
->
loˇl_⁄_hﬁd
 && !ˇŒ->
ªmŸe_⁄_hﬁd
) {

102 
	`puΩÀ_medü_°ªam_öfo
(
m
->m, 
PURPLE_MEDIA_INFO_UNHOLD
, 
NULL
, NULL, 
TRUE
);

106 
	`puΩÀ_medü_°ªam_öfo
(
m
->m, 
PURPLE_MEDIA_INFO_HOLD
, 
NULL
, NULL, 
TRUE
);

108 } i‡(
ty≥
 =
PURPLE_MEDIA_INFO_HANGUP
 && 
ˇŒ
->
ˇŒ_h™gup_cb
)

109 
ˇŒ
->
	`ˇŒ_h™gup_cb
(ˇŒ, 
loˇl
);

110 
	}
}

112 
sùe_medü
 *

113 
	$sùe_backíd_medü_√w
(
sùe_c‹e_public
 *
sùe_public
,

114 
sùe_medü_ˇŒ
 *
ˇŒ
,

115 c⁄° 
gch¨
 *
∑πicù™t
,

116 
gboﬁón
 
öôüt‹
)

118 
i
 = 1;

119 
sùe_puΩÀ_medü
 *
m
 = 
	`g_√w0
(sipe_purple_media, 1);

120 
sùe_backíd_¥iv©e
 *
puΩÀ_¥iv©e
 = 
sùe_public
->
backíd_¥iv©e
;

121 
PuΩÀMedüM™agî
 *
m™agî
 = 
	`puΩÀ_medü_m™agî_gë
();

123 
m
->m = 
	`puΩÀ_medü_m™agî_¸óã_medü
(
m™agî
,

124 
puΩÀ_¥iv©e
->
accou¡
,

126 
∑πicù™t
, 
öôüt‹
);

128 if((
i
%2) == 0)

130 
	`¥ötf
("\n\nCONNECTING SIGNALS i:%d\n\n",
i
);

131 
	`g_sig«l_c⁄√˘
(
	`G_OBJECT
(
m
->m), "candidates-prepared",

132 
	`G_CALLBACK
(
⁄_ˇndid©es_¥ï¨ed_cb
), 
ˇŒ
);

133 
	`g_sig«l_c⁄√˘
(
	`G_OBJECT
(
m
->m), "stream-info",

134 
	`G_CALLBACK
(
⁄_°ªam_öfo_cb
), 
ˇŒ
);

135 
	`g_sig«l_c⁄√˘
(
	`G_OBJECT
(
m
->m), "state-changed",

136 
	`G_CALLBACK
(
⁄_°©e_ch™ged_cb
), 
ˇŒ
);

138 
i
++;

140  (
sùe_medü
 *)
m
;

141 
	}
}

144 
	$sùe_backíd_medü_‰ì
(
sùe_medü
 *
medü
)

146 
sùe_puΩÀ_medü
 *
m
 = (sùe_puΩÀ_medü *)
medü
;

147 
	`puΩÀ_medü_m™agî_ªmove_medü
(
	`puΩÀ_medü_m™agî_gë
(), 
m
->m);

148 
	`g_‰ì
(
m
);

149 
	}
}

151 
gboﬁón


152 
	$sùe_backíd_medü_add_°ªam
(
sùe_medü
 *
medü
, c⁄° 
gch¨
* 
∑πicù™t
, c⁄° gch¨* 
£ss_id
,

153 
SùeMedüTy≥
 
ty≥
, 
gboﬁón
 
u£_ni˚
,

154 
gboﬁón
 
öôüt‹
)

156 
sùe_puΩÀ_medü
 *
m
 = (sùe_puΩÀ_medü *)
medü
;

157 
PuΩÀMedüSessi⁄Ty≥
 
¥∂_ty≥
 = 
	`sùe_medü_to_puΩÀ
(
ty≥
);

158 
GP¨amëî
 *
∑øms
 = 
NULL
;

159 
guöt
 
∑øms_˙t
 = 0;

160 
gch¨
 *
å™smôãr
;

162 i‡(
u£_ni˚
) {

163 
å™smôãr
 = "nice";

164 
∑øms_˙t
 = 2;

166 
∑øms
 = 
	`g_√w0
(
GP¨amëî
, 
∑øms_˙t
);

167 
∑øms
[0].
«me
 = "controlling-mode";

168 
	`g_vÆue_öô
(&
∑øms
[0].
vÆue
, 
G_TYPE_BOOLEAN
);

169 
	`g_vÆue_£t_boﬁón
(&
∑øms
[0].
vÆue
, 
öôüt‹
);

170 
∑øms
[1].
«me
 = "compatibility-mode";

171 
	`g_vÆue_öô
(&
∑øms
[1].
vÆue
, 
G_TYPE_UINT
);

180 #ifde‡
NICE_HAS_COMPATIBILITY


181 
	`g_vÆue_£t_uöt
(&
∑øms
[1].
vÆue
, 
NICE_COMPATIBILITY_OC2007R2
);

184 
å™smôãr
 = "rawudp";

187 
	`¥ötf
("\nADDING STREAM FOR:%s\n",
£ss_id
);

188  
	`puΩÀ_medü_add_°ªam
(
m
->m, 
£ss_id
, 
∑πicù™t
, 
¥∂_ty≥
,

189 
öôüt‹
, 
å™smôãr
, 
∑øms_˙t
, 
∑øms
);

190 
	}
}

193 
	$sùe_backíd_medü_add_ªmŸe_ˇndid©es
(
sùe_medü
 *
medü
, 
gch¨
* 
∑πicù™t
, 
GLi°
 *
ˇndid©es
)

195 
sùe_puΩÀ_medü
 *
m
 = (sùe_puΩÀ_medü *)
medü
;

196 
	`puΩÀ_medü_add_ªmŸe_ˇndid©es
(
m
->m, "sùe-voi˚", 
∑πicù™t
, 
ˇndid©es
);

197 
	}
}

200 
	$sùe_backíd_medü_add_video_ªmŸe_ˇndid©es
(
sùe_medü
 *
medü
, 
gch¨
* 
∑πicù™t
, 
GLi°
 *
ˇndid©es
)

202 
sùe_puΩÀ_medü
 *
m
 = (sùe_puΩÀ_medü *)
medü
;

203 
	`puΩÀ_medü_add_ªmŸe_ˇndid©es
(
m
->m, "sùe-video", 
∑πicù™t
, 
ˇndid©es
);

204 
	}
}

206 
gboﬁón
 
	$sùe_backíd_medü_is_öôüt‹
(
sùe_medü
 *
medü
, 
gch¨
 *
∑πicù™t
)

208 
sùe_puΩÀ_medü
 *
m
 = (sùe_puΩÀ_medü *)
medü
;

209  
	`puΩÀ_medü_is_öôüt‹
(
m
->m, "sùe-voi˚", 
∑πicù™t
);

210 
	}
}

212 
sùe_codec
 *

213 
	$sùe_backíd_codec_√w
(
id
, c⁄° *
«me
, 
guöt
 
˛ock_øã
, 
SùeMedüTy≥
 
ty≥
)

215 
	`¥ötf
("\nMedüÅy≥:%d\n",
	`sùe_medü_to_puΩÀ
(
ty≥
));

216  (
sùe_codec
 *)
	`puΩÀ_medü_codec_√w
(
id
, 
«me
, 
	`sùe_medü_to_puΩÀ
(
ty≥
), 
˛ock_øã
);

217 
	}
}

220 
	$sùe_backíd_codec_‰ì
(
sùe_codec
 *
codec
)

222 i‡(
codec
)

223 
	`g_obje˘_uƒef
(
codec
);

224 
	}
}

227 
	$sùe_backíd_codec_gë_id
(
sùe_codec
 *
codec
)

229  
	`puΩÀ_medü_codec_gë_id
((
PuΩÀMedüCodec
 *)
codec
);

230 
	}
}

232 
gch¨
 *

233 
	$sùe_backíd_codec_gë_«me
(
sùe_codec
 *
codec
)

235  
	`puΩÀ_medü_codec_gë_ícodög_«me
((
PuΩÀMedüCodec
 *)
codec
);

236 
	}
}

238 
guöt


239 
	$sùe_backíd_codec_gë_˛ock_øã
(
sùe_codec
 *
codec
)

241  
	`puΩÀ_medü_codec_gë_˛ock_øã
((
PuΩÀMedüCodec
 *)
codec
);

242 
	}
}

245 
	$sùe_backíd_codec_add_›ti⁄Æ_∑ømëî
(
sùe_codec
 *
codec
, c⁄° 
gch¨
 *
«me
, c⁄° gch¨ *
vÆue
)

247 
	`puΩÀ_medü_codec_add_›ti⁄Æ_∑ømëî
((
PuΩÀMedüCodec
 *)
codec
, 
«me
, 
vÆue
);

248 
	}
}

250 
GLi°
 *

251 
	$sùe_backíd_codec_gë_›ti⁄Æ_∑ømëîs
(
sùe_codec
 *
codec
)

253  
	`puΩÀ_medü_codec_gë_›ti⁄Æ_∑ømëîs
((
PuΩÀMedüCodec
 *)
codec
);

254 
	}
}

256 
gboﬁón


257 
	$sùe_backíd_£t_ªmŸe_codecs
(
sùe_medü_ˇŒ
* 
ˇŒ
, 
gch¨
* 
∑πicù™t
)

259 
sùe_puΩÀ_medü
 *
m
 = (sùe_puΩÀ_medü *)
ˇŒ
->
medü
;

260 
GLi°
 *
codecs
 = 
ˇŒ
->
ªmŸe_codecs
;

262 
	`¥ötf
("\n\nSETTING VOICE REMOTE CODECS\n\n");

263  
	`puΩÀ_medü_£t_ªmŸe_codecs
(
m
->m, "sùe-voi˚", 
∑πicù™t
, 
codecs
);

264 
	}
}

266 
gboﬁón


267 
	$sùe_backíd_£t_video_ªmŸe_codecs
(
sùe_medü_ˇŒ
* 
ˇŒ
, 
gch¨
* 
∑πicù™t
)

269 
sùe_puΩÀ_medü
 *
vm
 = (sùe_puΩÀ_medü *)
ˇŒ
->
video_medü
;

270 
GLi°
 *
video_codecs
 = 
ˇŒ
->
ªmŸe_video_codecs
;

272 
	`¥ötf
("\n\nSETTING VIDEO REMOTE CODECS\n\n");

273  
	`puΩÀ_medü_£t_ªmŸe_codecs
(
vm
->
m
, "sùe-video", 
∑πicù™t
, 
video_codecs
);

274 
	}
}

276 
gboﬁón


277 
	$sùe_backíd_£t_£nd_codec
(
sùe_medü_ˇŒ
* 
ˇŒ
)

279 
sùe_puΩÀ_medü
 *
m
 = (sùe_puΩÀ_medü *)
ˇŒ
->
medü
;

280 
GLi°
 *
codecs
 = 
	`sùe_backíd_gë_loˇl_codecs
(
ˇŒ
);

281 
PuΩÀMedüCodec
 *
£t_codec
 = 
NULL
;

282 
a
;

284 
	`¥ötf
("\n\nSETTING SET_CODEC\n\n");

285 
codecs
) {

286 
sùe_codec
 *
c
 = 
codecs
->
d©a
;

287 
gch¨
 *
«me
 = 
	`sùe_backíd_codec_gë_«me
(
c
);

288 
a
 = 
	`°rcmp
(
«me
,"PCMU");

289 if(
a
 == 0)

291 
	`¥ötf
("\nCODEC NAME:%s\n",
«me
);

292 
£t_codec
 = (
PuΩÀMedüCodec
 *)
c
;

296 
	`g_‰ì
(
«me
);

297 
codecs
 = codecs->
√xt
;

299 if(
£t_codec
 =
NULL
)

301 
	`¥ötf
("\nSET CODEC IS NULL\n");

305 
	`¥ötf
("\nSET CODEC NOT NULL\n");

307  
	`puΩÀ_medü_£t_£nd_codec
(
m
->m, "sùe-voi˚", 
£t_codec
);

308 
	}
}

309 
gboﬁón


310 
	$sùe_backíd_£t_video_£nd_codec
(
sùe_medü_ˇŒ
* 
ˇŒ
)

312 
sùe_puΩÀ_medü
 *
m
 = (sùe_puΩÀ_medü *)
ˇŒ
->
video_medü
;

313 
GLi°
 *
codecs
 = 
	`sùe_backíd_gë_video_codecs
(
ˇŒ
);

314 
PuΩÀMedüCodec
 *
£t_codec
 = 
NULL
;

315 
a
;

317 
	`¥ötf
("\n\nSETTING SET_CODEC\n\n");

318 
codecs
) {

319 
sùe_codec
 *
c
 = 
codecs
->
d©a
;

320 
gch¨
 *
«me
 = 
	`sùe_backíd_codec_gë_«me
(
c
);

321 
a
 = 
	`°rcmp
(
«me
,"H263");

322 if(
a
 == 0)

324 
	`¥ötf
("\nCODEC NAME:%s\n",
«me
);

325 
£t_codec
 = (
PuΩÀMedüCodec
 *)
c
;

329 
	`g_‰ì
(
«me
);

330 
codecs
 = codecs->
√xt
;

332 if(
£t_codec
 =
NULL
)

334 
	`¥ötf
("\nSET CODEC IS NULL\n");

338 
	`¥ötf
("\nSET CODEC NOT NULL\n");

340  
	`puΩÀ_medü_£t_£nd_codec
(
m
->m, "sùe-video", 
£t_codec
);

341 
	}
}

343 
GLi°
*

344 
	$sùe_backíd_gë_loˇl_codecs
(
sùe_medü_ˇŒ
* 
ˇŒ
)

346 
sùe_puΩÀ_medü
 *
m
 = (sùe_puΩÀ_medü *)
ˇŒ
->
medü
;

347  
	`puΩÀ_medü_gë_codecs
(
m
->m, "sipe-voice");

348 
	}
}

350 
GLi°
*

351 
	$sùe_backíd_gë_video_codecs
(
sùe_medü_ˇŒ
* 
ˇŒ
)

353 
sùe_puΩÀ_medü
 *
m
 = (sùe_puΩÀ_medü *)
ˇŒ
->
video_medü
;

354  
	`puΩÀ_medü_gë_codecs
(
m
->m, "sipe-video");

355 
	}
}

357 
sùe_ˇndid©e
 *

358 
	$sùe_backíd_ˇndid©e_√w
(c⁄° 
gch¨
 *
found©i⁄
, 
SùeComp⁄ítTy≥
 
comp⁄ít
,

359 
SùeC™did©eTy≥
 
ty≥
, 
SùeNëw‹kPrŸocﬁ
 
¥Ÿo
,

360 c⁄° 
gch¨
 *
ù
, 
guöt
 
p‹t
)

362  (
sùe_ˇndid©e
 *)
	`puΩÀ_medü_ˇndid©e_√w
(

363 
found©i⁄
,

364 
comp⁄ít
,

365 
	`sùe_ˇndid©e_ty≥_to_puΩÀ
(
ty≥
),

366 
	`sùe_√tw‹k_¥Ÿocﬁ_to_puΩÀ
(
¥Ÿo
),

367 
ù
,

368 
p‹t
);

369 
	}
}

372 
	$sùe_backíd_ˇndid©e_‰ì
(
sùe_ˇndid©e
 *
ˇndid©e
)

374 i‡(
ˇndid©e
)

375 
	`g_obje˘_uƒef
(
ˇndid©e
);

376 
	}
}

378 
gch¨
 *

379 
	$sùe_backíd_ˇndid©e_gë_u£∫ame
(
sùe_ˇndid©e
 *
ˇndid©e
)

381  
	`puΩÀ_medü_ˇndid©e_gë_u£∫ame
((
PuΩÀMedüC™did©e
*)
ˇndid©e
);

382 
	}
}

384 
gch¨
 *

385 
	$sùe_backíd_ˇndid©e_gë_∑ssw‹d
(
sùe_ˇndid©e
 *
ˇndid©e
)

387  
	`puΩÀ_medü_ˇndid©e_gë_∑ssw‹d
((
PuΩÀMedüC™did©e
*)
ˇndid©e
);

388 
	}
}

390 
gch¨
 *

391 
	$sùe_backíd_ˇndid©e_gë_found©i⁄
(
sùe_ˇndid©e
 *
ˇndid©e
)

393  
	`puΩÀ_medü_ˇndid©e_gë_found©i⁄
((
PuΩÀMedüC™did©e
*)
ˇndid©e
);

394 
	}
}

396 
gch¨
 *

397 
	$sùe_backíd_ˇndid©e_gë_ù
(
sùe_ˇndid©e
 *
ˇndid©e
)

399  
	`puΩÀ_medü_ˇndid©e_gë_ù
((
PuΩÀMedüC™did©e
*)
ˇndid©e
);

400 
	}
}

402 
guöt


403 
	$sùe_backíd_ˇndid©e_gë_p‹t
(
sùe_ˇndid©e
 *
ˇndid©e
)

405  
	`puΩÀ_medü_ˇndid©e_gë_p‹t
((
PuΩÀMedüC™did©e
*)
ˇndid©e
);

406 
	}
}

408 
guöt32


409 
	$sùe_backíd_ˇndid©e_gë_¥i‹ôy
(
sùe_ˇndid©e
 *
ˇndid©e
)

411  
	`puΩÀ_medü_ˇndid©e_gë_¥i‹ôy
((
PuΩÀMedüC™did©e
*)
ˇndid©e
);

412 
	}
}

415 
	$sùe_backíd_ˇndid©e_£t_¥i‹ôy
(
sùe_ˇndid©e
 *
ˇndid©e
, 
guöt32
 
¥i‹ôy
)

417 
	`g_obje˘_£t
(
ˇndid©e
, "¥i‹ôy", 
¥i‹ôy
, 
NULL
);

418 
	}
}

420 
SùeComp⁄ítTy≥


421 
	$sùe_backíd_ˇndid©e_gë_comp⁄ít_ty≥
(
sùe_ˇndid©e
 *
ˇndid©e
)

423  
	`puΩÀ_medü_ˇndid©e_gë_comp⁄ít_id
((
PuΩÀMedüC™did©e
*)
ˇndid©e
);

424 
	}
}

426 
SùeC™did©eTy≥


427 
	$sùe_backíd_ˇndid©e_gë_ty≥
(
sùe_ˇndid©e
 *
ˇndid©e
)

429  
	`puΩÀ_medü_ˇndid©e_gë_ˇndid©e_ty≥
((
PuΩÀMedüC™did©e
*)
ˇndid©e
);

430 
	}
}

432 
SùeNëw‹kPrŸocﬁ


433 
	$sùe_backíd_ˇndid©e_gë_¥Ÿocﬁ
(
sùe_ˇndid©e
 *
ˇndid©e
)

435 
PuΩÀMedüNëw‹kPrŸocﬁ
 
¥Ÿo
 =

436 
	`puΩÀ_medü_ˇndid©e_gë_¥Ÿocﬁ
((
PuΩÀMedüC™did©e
*)
ˇndid©e
);

437  
	`puΩÀ_√tw‹k_¥Ÿocﬁ_to_sùe
(
¥Ÿo
);

438 
	}
}

441 
	$sùe_backíd_ˇndid©e_£t_u£∫ame_™d_pwd
(
sùe_ˇndid©e
 *
ˇndid©e
,

442 c⁄° 
gch¨
 *
u£∫ame
,

443 c⁄° 
gch¨
 *
∑ssw‹d
)

445 
	`g_obje˘_£t
(
ˇndid©e
, "u£∫ame", 
u£∫ame
, "∑ssw‹d", 
∑ssw‹d
, 
NULL
);

446 
	}
}

448 
GLi°
*

449 
	$sùe_backíd_gë_loˇl_ˇndid©es
(
sùe_medü_ˇŒ
* 
ˇŒ
, 
gch¨
* 
∑πicù™t
)

451 
sùe_puΩÀ_medü
 *
m
 = (sùe_puΩÀ_medü *)
ˇŒ
->
medü
;

452  
	`puΩÀ_medü_gë_loˇl_ˇndid©es
(
m
->m, "sùe-voi˚", 
∑πicù™t
);

453 
	}
}

455 
GLi°
*

456 
	$sùe_backíd_gë_video_ˇndid©es
(
sùe_medü_ˇŒ
* 
ˇŒ
, 
gch¨
* 
∑πicù™t
)

458 
sùe_puΩÀ_medü
 *
m
 = (sùe_puΩÀ_medü *)
ˇŒ
->
video_medü
;

459  
	`puΩÀ_medü_gë_loˇl_ˇndid©es
(
m
->m, "sùe-video", 
∑πicù™t
);

460 
	}
}

463 
	$sùe_backíd_medü_hﬁd
(
sùe_medü
* 
medü
, 
gboﬁón
 
loˇl
)

465 
sùe_puΩÀ_medü
 *
m
 = (sùe_puΩÀ_medü *)
medü
;

466 
	`puΩÀ_medü_°ªam_öfo
(
m
->m, 
PURPLE_MEDIA_INFO_HOLD
, 
NULL
, NULL, 
loˇl
);

467 
	}
}

470 
	$sùe_backíd_medü_unhﬁd
(
sùe_medü
* 
medü
, 
gboﬁón
 
loˇl
)

472 
sùe_puΩÀ_medü
 *
m
 = (sùe_puΩÀ_medü *)
medü
;

473 
	`puΩÀ_medü_°ªam_öfo
(
m
->m, 
PURPLE_MEDIA_INFO_UNHOLD
, 
NULL
, NULL, 
loˇl
);

474 
	}
}

477 
	$sùe_backíd_medü_h™gup
(
sùe_medü
* 
medü
, 
gboﬁón
 
loˇl
)

479 
sùe_puΩÀ_medü
 *
m
 = (sùe_puΩÀ_medü *)
medü
;

480 
	`puΩÀ_medü_°ªam_öfo
(
m
->m, 
PURPLE_MEDIA_INFO_HANGUP
, 
NULL
, NULL, 
loˇl
);

481 
	}
}

484 
	$sùe_backíd_medü_ªje˘
(
sùe_medü
* 
medü
, 
gboﬁón
 
loˇl
)

486 
sùe_puΩÀ_medü
 *
m
 = (sùe_puΩÀ_medü *)
medü
;

487 
	`puΩÀ_medü_°ªam_öfo
(
m
->m, 
PURPLE_MEDIA_INFO_REJECT
, 
NULL
, NULL, 
loˇl
);

488 
	}
}

490 
PuΩÀMedüSessi⁄Ty≥
 
	$sùe_medü_to_puΩÀ
(
SùeMedüTy≥
 
ty≥
)

492 
ty≥
) {

493 
SIPE_MEDIA_AUDIO
:  
PURPLE_MEDIA_AUDIO
;

494 
SIPE_MEDIA_VIDEO
:  
PURPLE_MEDIA_VIDEO
;

495 :  
PURPLE_MEDIA_NONE
;

497 
	}
}

508 
PuΩÀMedüC™did©eTy≥


509 
	$sùe_ˇndid©e_ty≥_to_puΩÀ
(
SùeC™did©eTy≥
 
ty≥
)

511 
ty≥
) {

512 
SIPE_CANDIDATE_TYPE_HOST
:  
PURPLE_MEDIA_CANDIDATE_TYPE_HOST
;

513 
SIPE_CANDIDATE_TYPE_RELAY
:  
PURPLE_MEDIA_CANDIDATE_TYPE_RELAY
;

514 
SIPE_CANDIDATE_TYPE_SRFLX
:  
PURPLE_MEDIA_CANDIDATE_TYPE_SRFLX
;

515 :  
PURPLE_MEDIA_CANDIDATE_TYPE_HOST
;

517 
	}
}

519 
PuΩÀMedüNëw‹kPrŸocﬁ


520 
	$sùe_√tw‹k_¥Ÿocﬁ_to_puΩÀ
(
SùeNëw‹kPrŸocﬁ
 
¥Ÿo
)

522 
¥Ÿo
) {

523 
SIPE_NETWORK_PROTOCOL_TCP
:  
PURPLE_MEDIA_NETWORK_PROTOCOL_TCP
;

524 
SIPE_NETWORK_PROTOCOL_UDP
:  
PURPLE_MEDIA_NETWORK_PROTOCOL_UDP
;

525 :  
PURPLE_MEDIA_NETWORK_PROTOCOL_TCP
;

527 
	}
}

529 
SùeNëw‹kPrŸocﬁ


530 
	$puΩÀ_√tw‹k_¥Ÿocﬁ_to_sùe
(
PuΩÀMedüNëw‹kPrŸocﬁ
 
¥Ÿo
)

532 
¥Ÿo
) {

533 
PURPLE_MEDIA_NETWORK_PROTOCOL_TCP
:  
SIPE_NETWORK_PROTOCOL_TCP
;

534 
PURPLE_MEDIA_NETWORK_PROTOCOL_UDP
:  
SIPE_NETWORK_PROTOCOL_UDP
;

535 :  
SIPE_NETWORK_PROTOCOL_UDP
;

537 
	}
}

	@src/purple/purple-mime.c

23 
	~"glib.h
"

25 
	~"mime.h
"

27 
	~"sùe-mime.h
"

28 
	~"sùe-c‹e.h
"

31 
GSLi°
 * 
	$mime_fõlds_to_«mevÆ
(
PuΩÀMimeP¨t
* 
∑π
)

33 
GLi°
 *
keys
 = 
	`puΩÀ_mime_∑π_gë_fõlds
(
∑π
);

34 
GSLi°
 *
fõlds
 = 
NULL
;

36 
keys
) {

37 c⁄° *
key
 = 
keys
->
d©a
;

38 c⁄° *
vÆue
 = 
	`puΩÀ_mime_∑π_gë_fõld
(
∑π
, 
key
);

40 
fõlds
 = 
	`sùe_utûs_«mevÆ_add
(fõlds, 
key
, 
vÆue
);

42 
keys
 = keys->
√xt
;

45  
fõlds
;

46 
	}
}

48 
	$sùe_mime_∑πs_f‹óch
(c⁄° 
gch¨
 *
ty≥
,

49 c⁄° 
gch¨
 *
body
,

50 
sùe_mime_∑πs_cb
 
ˇŒback
,

51 
gpoöãr
 
u£r_d©a
)

53 
gch¨
 *
doc
 = 
	`g_°rdup_¥ötf
("C⁄ã¡-Ty≥: %s\r\n\r\n%s", 
ty≥
, 
body
);

54 
PuΩÀMimeDocumít
 *
mime
 = 
	`puΩÀ_mime_documít_∑r£
(
doc
);

56 i‡(
mime
) {

57 
GLi°
* 
∑πs
 = 
	`puΩÀ_mime_documít_gë_∑πs
(
mime
);

59 
∑πs
) {

60 c⁄° 
gch¨
 *
c⁄ã¡_ty≥
 = 
	`puΩÀ_mime_∑π_gë_fõld
(
∑πs
->
d©a
,

62 i‡(
c⁄ã¡_ty≥
) {

63 c⁄° 
gch¨
 *
c⁄ã¡
 = 
	`puΩÀ_mime_∑π_gë_d©a
(
∑πs
->
d©a
);

64 
gsize
 
Àngth
 = 
	`puΩÀ_mime_∑π_gë_Àngth
(
∑πs
->
d©a
);

65 
GSLi°
 *
fõlds
 = 
	`mime_fõlds_to_«mevÆ
(
∑πs
->
d©a
);

67 (*
ˇŒback
)(
u£r_d©a
, 
fõlds
, 
c⁄ã¡
, 
Àngth
);

69 
	`sùe_utûs_«mevÆ_‰ì
(
fõlds
);

71 
∑πs
 =Ö¨ts->
√xt
;

73 
	`puΩÀ_mime_documít_‰ì
(
mime
);

75 
	`g_‰ì
(
doc
);

76 
	}
}

	@src/purple/purple-network.c

23 
	~"glib.h
"

24 
	~"√tw‹k.h
"

26 
	~"sùe-backíd.h
"

28 c⁄° 
gch¨
 *
	$sùe_backíd_√tw‹k_ù_addªss
()

30  
	`puΩÀ_√tw‹k_gë_my_ù
(-1);

31 
	}
}

	@src/purple/purple-plugin.c

23 #ifde‡
HAVE_CONFIG_H


24 
	~"c⁄fig.h
"

27 
	~<°rög.h
>

28 
	~<time.h
>

30 
	~<glib.h
>

32 
	~"sùe-comm⁄.h
"

35 #i‚de‡
PURPLE_PLUGINS


36 
	#PURPLE_PLUGINS


	)

39 
	~"accou¡›t.h
"

40 
	~"bli°.h
"

41 
	~"c⁄√˘i⁄.h
"

42 
	~"c‹e.h
"

43 
	~"dns§v.h
"

44 #ifde‡
HAVE_VV


45 
	~"medü.h
"

47 
	~"¥∂.h
"

48 
	~"∂ugö.h
"

49 
	~"ªque°.h
"

50 
	~"°©us.h
"

51 
	~"vîsi⁄.h
"

53 
	~"puΩÀ-¥iv©e.h
"

55 
	~"sùe-backíd.h
"

56 
	~"sùe-c‹e.h
"

57 
	~"sùe-∆s.h
"

59 
	~"c‹e-dïuΩÀ.h
"

62 #i‡!
PURPLE_VERSION_CHECK
(2,5,0)

63 
	#PURPLE_CONNECTION_ALLOW_CUSTOM_SMILEY
 0x0100

	)

67 
	#PURPLE_BUDDY_TO_SIPE_CORE_PUBLIC
 ((
sùe_c‹e_public
 *Ë
buddy
->
accou¡
->
gc
->
¥Ÿo_d©a
)

	)

70 
	#SIPE_STATUS_ATTR_ID_MESSAGE
 "mesßge"

	)

73 c⁄° 
gch¨
 * c⁄° 
	ga˘ivôy_to_puΩÀ
[
SIPE_ACTIVITY_NUM_TYPES
] = {

90 
GHashTabÀ
 *
	gpuΩÀ_to_a˘ivôy
 = 
NULL
;

91 
	#PURPLE_STATUS_TO_ACTIVITY
(
x
) \

92 
	`GPOINTER_TO_UINT
(
	`g_hash_èbÀ_lookup
(
puΩÀ_to_a˘ivôy
, (
x
)))

	)

94 
	$puΩÀ_a˘ivôy_öô
()

96 
sùe_a˘ivôy
 
ödex
 = 
SIPE_ACTIVITY_UNSET
;

97 
puΩÀ_to_a˘ivôy
 = 
	`g_hash_èbÀ_√w
(
g_°r_hash
, 
g_°r_equÆ
);

98 
ödex
 < 
SIPE_ACTIVITY_NUM_TYPES
) {

99 
	`g_hash_èbÀ_ö£π
(
puΩÀ_to_a˘ivôy
,

100 (
gpoöãr
Ë
a˘ivôy_to_puΩÀ
[
ödex
],

101 
	`GUINT_TO_POINTER
(
ödex
));

102 
ödex
++;

104 
	}
}

106 
gch¨
 *
	$sùe_backíd_vîsi⁄
()

108 (
	`g_°rdup_¥ötf
("PuΩÀ/%s", 
	`puΩÀ_c‹e_gë_vîsi⁄
()));

109 
	}
}

111 
	$puΩÀ_a˘ivôy_de°roy
()

113 
	`g_hash_èbÀ_de°roy
(
puΩÀ_to_a˘ivôy
);

114 
puΩÀ_to_a˘ivôy
 = 
NULL
;

115 
	}
}

118 c⁄° *
	$sùe_li°_ic⁄
(
SIPE_UNUSED_PARAMETER
 
PuΩÀAccou¡
 *
a
,

119 
SIPE_UNUSED_PARAMETER
 
PuΩÀBuddy
 *
b
)

122 
	}
}

124 
gch¨
 *
	$sùe_°©us_ãxt
(
PuΩÀBuddy
 *
buddy
)

126 c⁄° 
PuΩÀSètus
 *
°©us
 = 
	`puΩÀ_¥e£n˚_gë_a˘ive_°©us
(
	`puΩÀ_buddy_gë_¥e£n˚
(
buddy
));

127  
	`sùe_c‹e_buddy_°©us
(
PURPLE_BUDDY_TO_SIPE_CORE_PUBLIC
,

128 
buddy
->
«me
,

129 
	`PURPLE_STATUS_TO_ACTIVITY
(
	`puΩÀ_°©us_gë_id
(
°©us
)),

130 
	`puΩÀ_°©us_gë_«me
(
°©us
));

131 
	}
}

133 
	$sùe_toﬁtù_ãxt
(
PuΩÀBuddy
 *
buddy
,

134 
PuΩÀNŸifyU£rInfo
 *
u£r_öfo
,

135 
SIPE_UNUSED_PARAMETER
 
gboﬁón
 
fuŒ
)

137 c⁄° 
PuΩÀPª£n˚
 *
¥e£n˚
 = 
	`puΩÀ_buddy_gë_¥e£n˚
(
buddy
);

138 
GSLi°
 *
öfo
 = 
	`sùe_c‹e_buddy_öfo
(
PURPLE_BUDDY_TO_SIPE_CORE_PUBLIC
,

139 
buddy
->
«me
,

140 
	`puΩÀ_°©us_gë_«me
(
	`puΩÀ_¥e£n˚_gë_a˘ive_°©us
(
¥e£n˚
)),

141 
	`puΩÀ_¥e£n˚_is_⁄löe
(
¥e£n˚
));

143 
öfo
) {

144 
sùe_buddy_öfo
 *
sbi
 = 
öfo
->
d©a
;

145 
	`puΩÀ_nŸify_u£r_öfo_add_∑ú
(
u£r_öfo
,

146 
sbi
->
œbñ
, sbi->
ãxt
);

147 
	`g_‰ì
(
sbi
->
ãxt
);

148 
	`g_‰ì
(
sbi
);

149 
öfo
 = 
	`g_¶i°_dñëe_lök
(info, info);

151 
	}
}

153 
GLi°
 *
	$sùe_°©us_ty≥s
(
SIPE_UNUSED_PARAMETER
 
PuΩÀAccou¡
 *
acc
)

155 
PuΩÀSètusTy≥
 *
ty≥
;

156 
GLi°
 *
ty≥s
 = 
NULL
;

160 
	#SIPE_ADD_STATUS
(
¥im
,
id
,
«me
,
u£r
Ë
ty≥
 = 
	`puΩÀ_°©us_ty≥_√w_wôh_©ås
( \

161 
¥im
, 
id
, 
«me
, \

162 
TRUE
, 
u£r
, 
FALSE
, \

163 
SIPE_STATUS_ATTR_ID_MESSAGE
, 
	`_
("Mesßge"), 
	`puΩÀ_vÆue_√w
(
PURPLE_TYPE_STRING
), \

164 
NULL
); \

165 
ty≥s
 = 
	`g_li°_≠≥nd
—y≥s, 
ty≥
);

	)

168 
	`SIPE_ADD_STATUS
(
PURPLE_STATUS_AVAILABLE
,

169 
NULL
,

170 
NULL
,

171 
TRUE
);

174 
	`SIPE_ADD_STATUS
(
PURPLE_STATUS_UNAVAILABLE
,

175 
a˘ivôy_to_puΩÀ
[
SIPE_ACTIVITY_BUSY
],

176 
	`_
("Busy"),

177 
TRUE
);

180 
	`SIPE_ADD_STATUS
(
PURPLE_STATUS_UNAVAILABLE
,

181 
a˘ivôy_to_puΩÀ
[
SIPE_ACTIVITY_DND
],

182 
NULL
,

183 
TRUE
);

190 
	`SIPE_ADD_STATUS
(
PURPLE_STATUS_AWAY
,

191 
NULL
,

192 
NULL
,

193 
TRUE
);

196 
	`SIPE_ADD_STATUS
(
PURPLE_STATUS_AWAY
,

197 
a˘ivôy_to_puΩÀ
[
SIPE_ACTIVITY_BRB
],

198 
	`_
("BeÑight back"),

199 
TRUE
);

202 
	`SIPE_ADD_STATUS
(
PURPLE_STATUS_INVISIBLE
,

203 
NULL
,

204 
NULL
,

205 
TRUE
);

208 
ty≥
 = 
	`puΩÀ_°©us_ty≥_√w
(
PURPLE_STATUS_OFFLINE
,

209 
NULL
,

210 
NULL
,

211 
TRUE
);

212 
ty≥s
 = 
	`g_li°_≠≥nd
—y≥s, 
ty≥
);

214  
ty≥s
;

215 
	}
}

217 
GLi°
 *
	$sùe_bli°_node_míu
(
PuΩÀBli°Node
 *
node
)

219 if(
	`PURPLE_BLIST_NODE_IS_BUDDY
(
node
)) {

220  
	`sùe_buddy_míu
((
PuΩÀBuddy
 *Ë
node
);

221 } if(
	`PURPLE_BLIST_NODE_IS_CHAT
(
node
)) {

222  
	`sùe_ch©_míu
((
PuΩÀCh©
 *)
node
);

224  
NULL
;

226 
	}
}

228 
	$sùe_logö
(
PuΩÀAccou¡
 *
accou¡
)

230 
PuΩÀC⁄√˘i⁄
 *
gc
 = 
	`puΩÀ_accou¡_gë_c⁄√˘i⁄
(
accou¡
);

231 c⁄° 
gch¨
 *
u£∫ame
 = 
	`puΩÀ_accou¡_gë_u£∫ame
(
accou¡
);

232 c⁄° 
gch¨
 *
emaû
 = 
	`puΩÀ_accou¡_gë_°rög
(
accou¡
, "emaû", 
NULL
);

233 c⁄° 
gch¨
 *
emaû_uæ
 = 
	`puΩÀ_accou¡_gë_°rög
(
accou¡
, "emaû_uæ", 
NULL
);

234 c⁄° 
gch¨
 *
å™•‹t
 = 
	`puΩÀ_accou¡_gë_°rög
(
accou¡
, "transport", "auto");

235 
sùe_c‹e_public
 *
sùe_public
;

236 
gch¨
 **
u£∫ame_•lô
;

237 
gch¨
 *
logö_domaö
 = 
NULL
;

238 
gch¨
 *
logö_accou¡
 = 
NULL
;

239 c⁄° 
gch¨
 *
îrmsg
;

240 
guöt
 
ty≥
;

241 
sùe_backíd_¥iv©e
 *
puΩÀ_¥iv©e
;

244 
	`SIPE_DEBUG_INFO
("sùe_logö: u£∫amê'%s'", 
u£∫ame
);

245 
u£∫ame_•lô
 = 
	`g_°r•lô
(
u£∫ame
, ",", 2);

248 i‡(
u£∫ame_•lô
[1] && 
	`°æí
(username_split[1])) {

249 
gch¨
 **
domaö_u£r
 = 
	`g_°r•lô
(
u£∫ame_•lô
[1], "\\", 2);

250 
gboﬁón
 
has_domaö
 = 
domaö_u£r
[1] !
NULL
;

251 
	`SIPE_DEBUG_INFO
("sùe_logö:Üogö '%s'", 
u£∫ame_•lô
[1]);

252 
logö_domaö
 = 
has_domaö
 ? 
	`g_°rdup
(
domaö_u£r
[0]Ë: 
NULL
;

253 
logö_accou¡
 = 
	`g_°rdup
(
domaö_u£r
[
has_domaö
 ? 1 : 0]);

254 
	`SIPE_DEBUG_INFO
("sipe_login:áuth domain '%s' user '%s'",

255 
logö_domaö
 ?Üogin_domain : "",

256 
logö_accou¡
);

257 
	`g_°r‰ìv
(
domaö_u£r
);

260 
sùe_public
 = 
	`sùe_c‹e_Æloˇã
(
u£∫ame_•lô
[0],

261 
logö_domaö
, 
logö_accou¡
,

262 
	`puΩÀ_c⁄√˘i⁄_gë_∑ssw‹d
(
gc
),

263 
emaû
,

264 
emaû_uæ
,

265 &
îrmsg
);

266 
	`g_‰ì
(
logö_domaö
);

267 
	`g_‰ì
(
logö_accou¡
);

268 
	`g_°r‰ìv
(
u£∫ame_•lô
);

270 i‡(!
sùe_public
) {

271 
	`puΩÀ_c⁄√˘i⁄_îr‹_ªas⁄
(
gc
,

272 
PURPLE_CONNECTION_ERROR_INVALID_USERNAME
,

273 
îrmsg
);

277 
sùe_public
->
backíd_¥iv©e
 = 
puΩÀ_¥iv©e
 = 
	`g_√w0
(
sùe_backíd_¥iv©e
, 1);

278 
puΩÀ_¥iv©e
->
public
 = 
sùe_public
;

279 
puΩÀ_¥iv©e
->
gc
 = gc;

280 
puΩÀ_¥iv©e
->
accou¡
 =áccount;

282 #ifde‡
HAVE_LIBKRB5


283 i‡(
	`puΩÀ_accou¡_gë_boﬁ
(
accou¡
, "krb5", 
FALSE
))

284 
	`SIPE_CORE_FLAG_SET
(
KRB5
);

288 i‡(
	`puΩÀ_accou¡_gë_boﬁ
(
accou¡
, "sso", 
TRUE
))

289 
	`SIPE_CORE_FLAG_SET
(
SSO
);

291 
gc
->
¥Ÿo_d©a
 = 
sùe_public
;

292 
	`sùe_puΩÀ_£tup
(
sùe_public
, 
gc
);

293 
gc
->
Êags
 |
PURPLE_CONNECTION_HTML
 | 
PURPLE_CONNECTION_FORMATTING_WBFO
 | 
PURPLE_CONNECTION_NO_BGCOLOR
 |

294 
PURPLE_CONNECTION_NO_FONTSIZE
 | 
PURPLE_CONNECTION_NO_URLDESC
 | 
PURPLE_CONNECTION_ALLOW_CUSTOM_SMILEY
;

295 
	`puΩÀ_c⁄√˘i⁄_£t_di•œy_«me
(
gc
, 
sùe_public
->
sù_«me
);

296 
	`puΩÀ_c⁄√˘i⁄_upd©e_¥ogªss
(
gc
, 
	`_
("Connecting"), 1, 2);

298 
u£∫ame_•lô
 = 
	`g_°r•lô
(
	`puΩÀ_accou¡_gë_°rög
(
accou¡
, "server", ""), ":", 2);

299 i‡(
	`sùe_°ªquÆ
(
å™•‹t
, "auto")) {

300 
ty≥
 = (
u£∫ame_•lô
[0] =
NULL
) ?

301 
SIPE_TRANSPORT_AUTO
 : 
SIPE_TRANSPORT_TLS
;

302 } i‡(
	`sùe_°ªquÆ
(
å™•‹t
, "tls")) {

303 
ty≥
 = 
SIPE_TRANSPORT_TLS
;

305 
ty≥
 = 
SIPE_TRANSPORT_TCP
;

307 
	`sùe_c‹e_å™•‹t_sù_c⁄√˘
(
sùe_public
,

308 
ty≥
,

309 
u£∫ame_•lô
[0],

310 
u£∫ame_•lô
[1]);

311 
	`g_°r‰ìv
(
u£∫ame_•lô
);

312 
	}
}

314 
	$sùe_˛o£
(
PuΩÀC⁄√˘i⁄
 *
gc
)

316 
sùe_c‹e_public
 *
sùe_public
 = 
PURPLE_GC_TO_SIPE_CORE_PUBLIC
;

318 i‡(
sùe_public
) {

319 
sùe_backíd_¥iv©e
 *
puΩÀ_¥iv©e
 = 
sùe_public
->
backíd_¥iv©e
;

321 
	`sùe_c‹e_dóŒoˇã
(
sùe_public
);

323 i‡(
puΩÀ_¥iv©e
->
dns_quîy
)

324 
	`puΩÀ_§v_ˇn˚l
(
puΩÀ_¥iv©e
->
dns_quîy
);

325 
	`g_‰ì
(
puΩÀ_¥iv©e
);

326 
gc
->
¥Ÿo_d©a
 = 
NULL
;

328 
	}
}

330 
	$sùe_add_≥rmô
(
PuΩÀC⁄√˘i⁄
 *
gc
, c⁄° *
«me
)

332 
	`sùe_c‹e_c⁄è˘_Ælow_díy
(
PURPLE_GC_TO_SIPE_CORE_PUBLIC
, 
«me
, 
TRUE
);

333 
	}
}

335 
	$sùe_add_díy
(
PuΩÀC⁄√˘i⁄
 *
gc
, c⁄° *
«me
)

337 
	`sùe_c‹e_c⁄è˘_Ælow_díy
(
PURPLE_GC_TO_SIPE_CORE_PUBLIC
, 
«me
, 
FALSE
);

338 
	}
}

340 
	$sùe_ch©_övôe
(
PuΩÀC⁄√˘i⁄
 *
gc
, 
id
,

341 
SIPE_UNUSED_PARAMETER
 c⁄° *
mesßge
,

342 c⁄° *
«me
)

344 
	`sùe_c‹e_ch©_¸óã
(
PURPLE_GC_TO_SIPE_CORE_PUBLIC
, 
id
, 
«me
);

345 
	}
}

347 
	$sùe_kìp_Æive
(
PuΩÀC⁄√˘i⁄
 *
gc
)

349 
sùe_c‹e_public
 *
sùe_public
 = 
PURPLE_GC_TO_SIPE_CORE_PUBLIC
;

350 
sùe_backíd_¥iv©e
 *
puΩÀ_¥iv©e
 = 
sùe_public
->
backíd_¥iv©e
;

351 
time_t
 
now
 = 
	`time
(
NULL
);

353 i‡((
sùe_public
->
kì∑live_timeout
 > 0) &&

354 ((
guöt
Ë(
now
 - 
puΩÀ_¥iv©e
->
œ°_kì∑live
Ë>
sùe_public
->
kì∑live_timeout
) &&

355 ((
guöt
Ë(
now
 - 
gc
->
œ°_ª˚ived
Ë>
sùe_public
->
kì∑live_timeout
)

357 
	`sùe_c‹e_å™•‹t_sù_kì∑live
(
sùe_public
);

358 
puΩÀ_¥iv©e
->
œ°_kì∑live
 = 
now
;

360 
	}
}

362 
	$sùe_Æüs_buddy
(
PuΩÀC⁄√˘i⁄
 *
gc
, c⁄° *
«me
,

363 
SIPE_UNUSED_PARAMETER
 c⁄° *
Æüs
)

365 
	`sùe_c‹e_group_£t_u£r
(
PURPLE_GC_TO_SIPE_CORE_PUBLIC
, 
«me
);

366 
	}
}

368 #i‡
PURPLE_VERSION_CHECK
(2,5,0)

369 
GHashTabÀ
 *

370 
	$sùe_gë_accou¡_ãxt_èbÀ
(
SIPE_UNUSED_PARAMETER
 
PuΩÀAccou¡
 *
accou¡
)

372 
GHashTabÀ
 *
èbÀ
;

373 
èbÀ
 = 
	`g_hash_èbÀ_√w
(
g_°r_hash
, 
g_°r_equÆ
);

374 
	`g_hash_èbÀ_ö£π
(
èbÀ
, "logö_œbñ", (
gpoöãr
)
	`_
("user@company.com"));

375  
èbÀ
;

376 
	}
}

378 #i‡
PURPLE_VERSION_CHECK
(2,6,0)

379 #ifde‡
HAVE_VV


380 
gboﬁón
 
	$sùe_öôüã_medü
(
PuΩÀAccou¡
 *
accou¡
, c⁄° *
who
,

381 
SIPE_UNUSED_PARAMETER
 
PuΩÀMedüSessi⁄Ty≥
 
ty≥
)

383 
	`sùe_c‹e_medü_öôüã_ˇŒ
(
PURPLE_ACCOUNT_TO_SIPE_CORE_PUBLIC
, 
who
);

384  
TRUE
;

385 
	}
}

387 
PuΩÀMedüC≠s
 
	$sùe_gë_medü_ˇps
(
SIPE_UNUSED_PARAMETER
 
PuΩÀAccou¡
 *
accou¡
,

388 
SIPE_UNUSED_PARAMETER
 c⁄° *
who
)

390  
PURPLE_MEDIA_CAPS_AUDIO_VIDEO
;

391 
	}
}

396 
PuΩÀPlugöPrŸocﬁInfo
 
	g¥∂_öfo
 =

398 
OPT_PROTO_CHAT_TOPIC
,

399 
NULL
,

400 
NULL
,

401 
NO_BUDDY_ICONS
,

402 
sùe_li°_ic⁄
,

403 
NULL
,

404 
sùe_°©us_ãxt
,

405 
sùe_toﬁtù_ãxt
,

406 
sùe_°©us_ty≥s
,

407 
sùe_bli°_node_míu
,

408 
NULL
,

409 
NULL
,

410 
sùe_logö
,

411 
sùe_˛o£
,

412 
sùe_im_£nd
,

413 
NULL
,

414 
sùe_£nd_typög
,

415 
sùe_gë_öfo
,

416 
sùe_£t_°©us
,

417 
sùe_£t_idÀ
,

418 
NULL
,

419 
sùe_add_buddy
,

420 
NULL
,

421 
sùe_ªmove_buddy
,

422 
NULL
,

423 
sùe_add_≥rmô
,

424 
sùe_add_díy
,

425 
sùe_add_díy
,

426 
sùe_add_≥rmô
,

427 
NULL
,

428 
NULL
,

429 
NULL
,

430 
NULL
,

431 
sùe_ch©_övôe
,

432 
sùe_ch©_Àave
,

433 
NULL
,

434 
sùe_ch©_£nd
,

435 
sùe_kìp_Æive
,

436 
NULL
,

437 
NULL
,

438 
NULL
,

439 
sùe_Æüs_buddy
,

440 
sùe_group_buddy
,

441 
sùe_ª«me_group
,

442 
NULL
,

443 
sùe_c⁄vo_˛o£d
,

444 
puΩÀ_n‹mÆize_noˇ£
,

445 
NULL
,

446 
sùe_ªmove_group
,

447 
NULL
,

448 
NULL
,

449 
NULL
,

450 
NULL
,

451 
NULL
,

452 
NULL
,

453 
NULL
,

454 
sùe_·_£nd_fûe
,

455 
sùe_·_√w_x„r
,

456 
NULL
,

457 
NULL
,

458 
NULL
,

459 
NULL
,

460 
NULL
,

461 
NULL
,

462 
NULL
,

463 #i‡!
PURPLE_VERSION_CHECK
(2,5,0)

467 (
PuΩÀPlugöPrŸocﬁInfo
),

468 #i‡
PURPLE_VERSION_CHECK
(2,5,0)

469 
sùe_gë_accou¡_ãxt_èbÀ
,

470 #i‡
PURPLE_VERSION_CHECK
(2,6,0)

471 #ifde‡
HAVE_VV


472 
sùe_öôüã_medü
,

473 
sùe_gë_medü_ˇps
,

475 
NULL
,

476 
NULL
,

478 #i‡
PURPLE_VERSION_CHECK
(2,7,0)

479 
NULL
,

486 
gboﬁón
 
	$sùe_∂ugö_lﬂd
(
SIPE_UNUSED_PARAMETER
 
PuΩÀPlugö
 *
∂ugö
)

488  
TRUE
;

489 
	}
}

491 
gboﬁón
 
	$sùe_∂ugö_u∆ﬂd
(
SIPE_UNUSED_PARAMETER
 
PuΩÀPlugö
 *
∂ugö
)

493  
TRUE
;

494 
	}
}

496 
	$sùe_∂ugö_de°roy
(
SIPE_UNUSED_PARAMETER
 
PuΩÀPlugö
 *
∂ugö
)

498 
GLi°
 *
íåy
;

500 
	`puΩÀ_a˘ivôy_de°roy
();

501 
	`sùe_c‹e_de°roy
();

503 
íåy
 = 
¥∂_öfo
.
¥Ÿocﬁ_›ti⁄s
;

504 
íåy
) {

505 
	`puΩÀ_accou¡_›ti⁄_de°roy
(
íåy
->
d©a
);

506 
íåy
 = 
	`g_li°_dñëe_lök
(entry,Éntry);

508 
¥∂_öfo
.
¥Ÿocﬁ_›ti⁄s
 = 
NULL
;

510 
íåy
 = 
¥∂_öfo
.
u£r_•lôs
;

511 
íåy
) {

512 
	`puΩÀ_accou¡_u£r_•lô_de°roy
(
íåy
->
d©a
);

513 
íåy
 = 
	`g_li°_dñëe_lök
(entry,Éntry);

515 
¥∂_öfo
.
u£r_•lôs
 = 
NULL
;

516 
	}
}

518 
	$sùe_show_about_∂ugö
(
PuΩÀPlugöA˘i⁄
 *
a˘i⁄
)

520 
gch¨
 *
tmp
 = 
	`sùe_c‹e_about
();

521 
	`puΩÀ_nŸify_f‹m©ãd
((
PuΩÀC⁄√˘i⁄
 *Ë
a˘i⁄
->
c⁄ãxt
,

522 
NULL
, " ", NULL, 
tmp
, NULL, NULL);

523 
	`g_‰ì
(
tmp
);

524 
	}
}

526 
	$sùe_show_föd_c⁄è˘
(
PuΩÀPlugöA˘i⁄
 *
a˘i⁄
)

528 
PuΩÀC⁄√˘i⁄
 *
gc
 = (PuΩÀC⁄√˘i⁄ *Ë
a˘i⁄
->
c⁄ãxt
;

529 
PuΩÀReque°Fõlds
 *
fõlds
;

530 
PuΩÀReque°FõldGroup
 *
group
;

531 
PuΩÀReque°Fõld
 *
fõld
;

533 
fõlds
 = 
	`puΩÀ_ªque°_fõlds_√w
();

534 
group
 = 
	`puΩÀ_ªque°_fõld_group_√w
(
NULL
);

535 
	`puΩÀ_ªque°_fõlds_add_group
(
fõlds
, 
group
);

537 
fõld
 = 
	`puΩÀ_ªque°_fõld_°rög_√w
("givíName", 
	`_
("Fú°Çame"), 
NULL
, 
FALSE
);

538 
	`puΩÀ_ªque°_fõld_group_add_fõld
(
group
, 
fõld
);

539 
fõld
 = 
	`puΩÀ_ªque°_fõld_°rög_√w
("¢", 
	`_
("La°Çame"), 
NULL
, 
FALSE
);

540 
	`puΩÀ_ªque°_fõld_group_add_fõld
(
group
, 
fõld
);

541 
fõld
 = 
	`puΩÀ_ªque°_fõld_°rög_√w
("com∑ny", 
	`_
("Com∑ny"), 
NULL
, 
FALSE
);

542 
	`puΩÀ_ªque°_fõld_group_add_fõld
(
group
, 
fõld
);

543 
fõld
 = 
	`puΩÀ_ªque°_fõld_°rög_√w
("c", 
	`_
("Cou¡ry"), 
NULL
, 
FALSE
);

544 
	`puΩÀ_ªque°_fõld_group_add_fõld
(
group
, 
fõld
);

546 
	`puΩÀ_ªque°_fõlds
(
gc
,

547 
	`_
("Search"),

548 
	`_
("Search forá contact"),

549 
	`_
("EnterÅhe information forÅheÖerson you wishÅo find. Empty fields will be ignored."),

550 
fõlds
,

551 
	`_
("_Sórch"), 
	`G_CALLBACK
(
sùe_£¨ch_c⁄è˘_wôh_cb
),

552 
	`_
("_C™˚l"), 
NULL
,

553 
	`puΩÀ_c⁄√˘i⁄_gë_accou¡
(
gc
), 
NULL
, NULL, gc);

554 
	}
}

556 
	$sùe_ªpublish_ˇÀnd¨
(
PuΩÀPlugöA˘i⁄
 *
a˘i⁄
)

558 
PuΩÀC⁄√˘i⁄
 *
gc
 = (PuΩÀC⁄√˘i⁄ *Ë
a˘i⁄
->
c⁄ãxt
;

559 
	`sùe_c‹e_upd©e_ˇÀnd¨
(
PURPLE_GC_TO_SIPE_CORE_PUBLIC
);

560 
	}
}

562 
	$sùe_ª£t_°©us
(
PuΩÀPlugöA˘i⁄
 *
a˘i⁄
)

564 
PuΩÀC⁄√˘i⁄
 *
gc
 = (PuΩÀC⁄√˘i⁄ *Ë
a˘i⁄
->
c⁄ãxt
;

565 
	`sùe_c‹e_ª£t_°©us
(
PURPLE_GC_TO_SIPE_CORE_PUBLIC
);

566 
	}
}

568 
GLi°
 *
	$sùe_a˘i⁄s
(
SIPE_UNUSED_PARAMETER
 
PuΩÀPlugö
 *
∂ugö
,

569 
SIPE_UNUSED_PARAMETER
 
gpoöãr
 
c⁄ãxt
)

571 
GLi°
 *
míu
 = 
NULL
;

572 
PuΩÀPlugöA˘i⁄
 *
a˘
;

574 
a˘
 = 
	`puΩÀ_∂ugö_a˘i⁄_√w
(
	`_
("AbouàSIPEÖlugö..."), 
sùe_show_about_∂ugö
);

575 
míu
 = 
	`g_li°_¥ïíd
(míu, 
a˘
);

577 
a˘
 = 
	`puΩÀ_∂ugö_a˘i⁄_√w
(
	`_
("C⁄è˘ sórch..."), 
sùe_show_föd_c⁄è˘
);

578 
míu
 = 
	`g_li°_¥ïíd
(míu, 
a˘
);

580 
a˘
 = 
	`puΩÀ_∂ugö_a˘i⁄_√w
(
	`_
("Rïublish CÆíd¨"), 
sùe_ªpublish_ˇÀnd¨
);

581 
míu
 = 
	`g_li°_¥ïíd
(míu, 
a˘
);

583 
a˘
 = 
	`puΩÀ_∂ugö_a˘i⁄_√w
(
	`_
("Re£à°©us"), 
sùe_ª£t_°©us
);

584 
míu
 = 
	`g_li°_¥ïíd
(míu, 
a˘
);

586  
	`g_li°_ªvî£
(
míu
);

587 
	}
}

589 
PuΩÀPlugöInfo
 
	göfo
 = {

590 
PURPLE_PLUGIN_MAGIC
,

591 
PURPLE_MAJOR_VERSION
,

592 
PURPLE_MINOR_VERSION
,

593 
PURPLE_PLUGIN_PROTOCOL
,

594 
NULL
,

596 
NULL
,

597 
PURPLE_PRIORITY_DEFAULT
,

600 
PACKAGE_VERSION
,

608 
PACKAGE_URL
,

609 
sùe_∂ugö_lﬂd
,

610 
sùe_∂ugö_u∆ﬂd
,

611 
sùe_∂ugö_de°roy
,

612 
NULL
,

613 &
¥∂_öfo
,

614 
NULL
,

615 
sùe_a˘i⁄s
,

616 
NULL
,

617 
NULL
,

618 
NULL
,

619 
NULL


622 
	$öô_∂ugö
(
PuΩÀPlugö
 *
∂ugö
)

624 
PuΩÀAccou¡U£rS∂ô
 *
•lô
;

625 
PuΩÀAccou¡O±i⁄
 *
›ti⁄
;

628 
	`sùe_c‹e_öô
();

629 
	`puΩÀ_a˘ivôy_öô
();

631 
	`puΩÀ_∂ugö_ªgi°î
(
∂ugö
);

640 
•lô
 = 
	`puΩÀ_accou¡_u£r_•lô_√w
(
	`_
("Logö\¿ u£∏ o∏ DOMAIN\\u£∏ or\¿ u£r@com∑ny.com"), 
NULL
, ',');

641 
	`puΩÀ_accou¡_u£r_•lô_£t_ªvî£
(
•lô
, 
FALSE
);

642 
¥∂_öfo
.
u£r_•lôs
 = 
	`g_li°_≠≥nd
’Ωl_öfo.u£r_•lôs, 
•lô
);

644 
›ti⁄
 = 
	`puΩÀ_accou¡_›ti⁄_°rög_√w
(
	`_
("Server[:Port]\n(leaveÉmpty foráuto-discovery)"), "server", "");

645 
¥∂_öfo
.
¥Ÿocﬁ_›ti⁄s
 = 
	`g_li°_≠≥nd
’Ωl_öfo.¥Ÿocﬁ_›ti⁄s, 
›ti⁄
);

647 
›ti⁄
 = 
	`puΩÀ_accou¡_›ti⁄_li°_√w
(
	`_
("C⁄√˘i⁄Åy≥"), "å™•‹t", 
NULL
);

648 
	`puΩÀ_accou¡_›ti⁄_add_li°_ôem
(
›ti⁄
, 
	`_
("Auto"), "auto");

649 
	`puΩÀ_accou¡_›ti⁄_add_li°_ôem
(
›ti⁄
, 
	`_
("SSL/TLS"), "tls");

650 
	`puΩÀ_accou¡_›ti⁄_add_li°_ôem
(
›ti⁄
, 
	`_
("TCP"), "tcp");

651 
¥∂_öfo
.
¥Ÿocﬁ_›ti⁄s
 = 
	`g_li°_≠≥nd
’Ωl_öfo.¥Ÿocﬁ_›ti⁄s, 
›ti⁄
);

656 
›ti⁄
 = 
	`puΩÀ_accou¡_›ti⁄_°rög_√w
(
	`_
("User Agent"), "useragent", "");

657 
¥∂_öfo
.
¥Ÿocﬁ_›ti⁄s
 = 
	`g_li°_≠≥nd
’Ωl_öfo.¥Ÿocﬁ_›ti⁄s, 
›ti⁄
);

659 #ifde‡
HAVE_LIBKRB5


660 
›ti⁄
 = 
	`puΩÀ_accou¡_›ti⁄_boﬁ_√w
(
	`_
("U£ Kîbîos"), "krb5", 
FALSE
);

661 
¥∂_öfo
.
¥Ÿocﬁ_›ti⁄s
 = 
	`g_li°_≠≥nd
’Ωl_öfo.¥Ÿocﬁ_›ti⁄s, 
›ti⁄
);

667 
›ti⁄
 = 
	`puΩÀ_accou¡_›ti⁄_boﬁ_√w
(
	`_
("U£ SögÀ Sign-On"), "sso", 
TRUE
);

668 
¥∂_öfo
.
¥Ÿocﬁ_›ti⁄s
 = 
	`g_li°_≠≥nd
’Ωl_öfo.¥Ÿocﬁ_›ti⁄s, 
›ti⁄
);

674 
›ti⁄
 = 
	`puΩÀ_accou¡_›ti⁄_°rög_√w
(
	`_
("Email services URL\n(leaveÉmpty foráuto-discovery)"), "email_url", "");

675 
¥∂_öfo
.
¥Ÿocﬁ_›ti⁄s
 = 
	`g_li°_≠≥nd
’Ωl_öfo.¥Ÿocﬁ_›ti⁄s, 
›ti⁄
);

677 
›ti⁄
 = 
	`puΩÀ_accou¡_›ti⁄_°rög_√w
(
	`_
("Emailáddress\n(if different from Username)"), "email", "");

678 
¥∂_öfo
.
¥Ÿocﬁ_›ti⁄s
 = 
	`g_li°_≠≥nd
’Ωl_öfo.¥Ÿocﬁ_›ti⁄s, 
›ti⁄
);

683 
›ti⁄
 = 
	`puΩÀ_accou¡_›ti⁄_°rög_√w
(
	`_
("EmailÜogin\n(if different from Login)"), "email_login", "");

684 
¥∂_öfo
.
¥Ÿocﬁ_›ti⁄s
 = 
	`g_li°_≠≥nd
’Ωl_öfo.¥Ÿocﬁ_›ti⁄s, 
›ti⁄
);

686 
›ti⁄
 = 
	`puΩÀ_accou¡_›ti⁄_°rög_√w
(
	`_
("EmailÖassword\n(if different from Password)"), "email_password", "");

687 
	`puΩÀ_accou¡_›ti⁄_£t_masked
(
›ti⁄
, 
TRUE
);

688 
¥∂_öfo
.
¥Ÿocﬁ_›ti⁄s
 = 
	`g_li°_≠≥nd
’Ωl_öfo.¥Ÿocﬁ_›ti⁄s, 
›ti⁄
);

689 
	}
}

692 
PURPLE_INIT_PLUGIN
(
sùe
, 
öô_∂ugö
, 
öfo
);

	@src/purple/purple-private.h

24 
	gsùe_c‹e_public
;

25 
	g_PuΩÀAccou¡
;

26 
	g_PuΩÀC⁄√˘i⁄
;

27 
	g_PuΩÀSrvQuîyD©a
;

29 
	ssùe_backíd_¥iv©e
 {

30 
sùe_c‹e_public
 *
	mpublic
;

31 
_PuΩÀC⁄√˘i⁄
 *
	mgc
;

32 
_PuΩÀAccou¡
 *
	maccou¡
;

33 
_PuΩÀSrvQuîyD©a
 *
	mdns_quîy
;

34 
time_t
 
	mœ°_kì∑live
;

38 
	#PURPLE_ACCOUNT_TO_SIPE_CORE_PUBLIC
 ((
sùe_c‹e_public
 *Ë
accou¡
->
gc
->
¥Ÿo_d©a
)

	)

39 
	#PURPLE_GC_TO_SIPE_CORE_PUBLIC
 ((
sùe_c‹e_public
 *Ë
gc
->
¥Ÿo_d©a
)

	)

	@src/purple/purple-schedule.c

23 
	~<glib.h
>

25 
	~"evíéo›.h
"

27 
	~"sùe-comm⁄.h
"

28 
	~"sùe-backíd.h
"

29 
	~"sùe-c‹e.h
"

31 
	spuΩÀ_scheduÀ
 {

32 
gpoöãr
 
	mc‹e_d©a
;

33 
guöt
 
	mtimeout_h™dÀr
;

36 
gboﬁón
 
	$puΩÀ_timeout_execuã
(
gpoöãr
 
d©a
)

38 
gpoöãr
 
c‹e_d©a
 = ((
puΩÀ_scheduÀ
 *Ë
d©a
)->core_data;

39 
	`g_‰ì
(
d©a
);

40 
	`sùe_c‹e_scheduÀ_execuã
(
c‹e_d©a
);

41 (
FALSE
);

42 
	}
}

44 
gpoöãr
 
	$sùe_backíd_scheduÀ_£c⁄ds
(
SIPE_UNUSED_PARAMETER
 
sùe_c‹e_public
 *
sùe_public
,

45 
guöt
 
timeout
,

46 
gpoöãr
 
d©a
)

48 
puΩÀ_scheduÀ
 *
scheduÀ
 = 
	`g_mÆloc
((purple_schedule));

49 
scheduÀ
->
c‹e_d©a
 = 
d©a
;

50 
scheduÀ
->
timeout_h™dÀr
 = 
	`puΩÀ_timeout_add_£c⁄ds
(
timeout
,

51 
puΩÀ_timeout_execuã
,

52 
scheduÀ
);

53 (
scheduÀ
);

54 
	}
}

56 
gpoöãr
 
	$sùe_backíd_scheduÀ_m£c⁄ds
(
SIPE_UNUSED_PARAMETER
 
sùe_c‹e_public
 *
sùe_public
,

57 
guöt
 
timeout
,

58 
gpoöãr
 
d©a
)

60 
puΩÀ_scheduÀ
 *
scheduÀ
 = 
	`g_mÆloc
((purple_schedule));

61 
scheduÀ
->
c‹e_d©a
 = 
d©a
;

62 
scheduÀ
->
timeout_h™dÀr
 = 
	`puΩÀ_timeout_add
(
timeout
,

63 
puΩÀ_timeout_execuã
,

64 
scheduÀ
);

65 (
scheduÀ
);

66 
	}
}

68 
	$sùe_backíd_scheduÀ_ˇn˚l
(
SIPE_UNUSED_PARAMETER
 
sùe_c‹e_public
 *
sùe_public
,

69 
gpoöãr
 
d©a
)

71 
puΩÀ_scheduÀ
 *
scheduÀ
 = 
d©a
;

72 
	`puΩÀ_timeout_ªmove
(
scheduÀ
->
timeout_h™dÀr
);

73 
	`g_‰ì
(
scheduÀ
);

74 
	}
}

	@src/purple/purple-setting.c

23 
	~<glib.h
>

25 
	~"accou¡.h
"

26 
	~"c⁄√˘i⁄.h
"

28 
	~"sùe-backíd.h
"

29 
	~"sùe-c‹e.h
"

31 
	~"puΩÀ-¥iv©e.h
"

41 c⁄° 
gch¨
 * c⁄° 
	g£âög_«me
[
SIPE_SETTING_LAST
] = {

48 c⁄° 
gch¨
 *
	$sùe_backíd_£âög
(
sùe_c‹e_public
 *
sùe_public
,

49 
sùe_£âög
 
ty≥
)

51 (
	`puΩÀ_accou¡_gë_°rög
(
	`puΩÀ_c⁄√˘i⁄_gë_accou¡
(
sùe_public
->
backíd_¥iv©e
->
gc
),

52 
£âög_«me
[
ty≥
], 
NULL
));

53 
	}
}

	@src/purple/purple-transport.c

23 #ifde‡
HAVE_CONFIG_H


24 
	~"c⁄fig.h
"

27 
	~<î∫o.h
>

28 
	~<°rög.h
>

29 
	~<time.h
>

30 
	~<uni°d.h
>

32 
	~<glib.h
>

34 
	~"sùe-comm⁄.h
"

36 
	~"cúcbuf„r.h
"

37 
	~"c⁄√˘i⁄.h
"

38 
	~"evíéo›.h
"

39 
	~"√tw‹k.h
"

40 
	~"¥oxy.h
"

41 
	~"s¶c⁄n.h
"

43 
	~"puΩÀ-¥iv©e.h
"

45 
	~"sùe-backíd.h
"

46 
	~"sùe-c‹e.h
"

47 
	~"sùe-∆s.h
"

49 
	ssùe_å™•‹t_puΩÀ
 {

51 
sùe_å™•‹t_c⁄√˘i⁄
 
	mpublic
;

54 
å™•‹t_c⁄√˘ed_cb
 *
	mc⁄√˘ed
;

55 
å™•‹t_öput_cb
 *
	möput
;

56 
å™•‹t_îr‹_cb
 *
	mîr‹
;

57 
PuΩÀC⁄√˘i⁄
 *
	mgc
;

58 
PuΩÀS¶C⁄√˘i⁄
 *
	mgsc
;

59 
PuΩÀCúcBuf„r
 *
	må™smô_buf„r
;

60 
guöt
 
	må™smô_h™dÀr
;

61 
guöt
 
	mª˚ive_h™dÀr
;

62 
	msockë
;

65 
	#PURPLE_TRANSPORT
 ((
sùe_å™•‹t_puΩÀ
 *Ë
c⁄n
)

	)

66 
	#SIPE_TRANSPORT_CONNECTION
 ((
sùe_å™•‹t_c⁄√˘i⁄
 *Ë
å™•‹t
)

	)

68 
	#BUFFER_SIZE_INCREMENT
 4096

	)

77 
	$å™•‹t_comm⁄_öput
(
sùe_å™•‹t_puΩÀ
 *
å™•‹t
)

79 
sùe_å™•‹t_c⁄√˘i⁄
 *
c⁄n
 = 
SIPE_TRANSPORT_CONNECTION
;

80 
gssize
 
ªadÀn
, 
Àn
;

81 
gboﬁón
 
fú°ªad
 = 
TRUE
;

86 i‡(
c⁄n
->
buf„r_Àngth
 < c⁄n->
buf„r_u£d
 + 
BUFFER_SIZE_INCREMENT
) {

87 
c⁄n
->
buf„r_Àngth
 +
BUFFER_SIZE_INCREMENT
;

88 
c⁄n
->
buf„r
 = 
	`g_ªÆloc
(c⁄n->buf„r, c⁄n->
buf„r_Àngth
);

89 
	`SIPE_DEBUG_INFO
("å™•‹t_öput_comm⁄:Çew buf„∏Àngth %" 
G_GSIZE_FORMAT
,

90 
c⁄n
->
buf„r_Àngth
);

95 
ªadÀn
 = 
c⁄n
->
buf„r_Àngth
 - c⁄n->
buf„r_u£d
 - 1;

96 
Àn
 = 
å™•‹t
->
gsc
 ?

97 (
gssize
Ë
	`puΩÀ_s¶_ªad
(
å™•‹t
->
gsc
,

98 
c⁄n
->
buf„r
 + c⁄n->
buf„r_u£d
,

99 
ªadÀn
) :

100 
	`ªad
(
å™•‹t
->
sockë
,

101 
c⁄n
->
buf„r
 + c⁄n->
buf„r_u£d
,

102 
ªadÀn
);

104 i‡(
Àn
 < 0 && 
î∫o
 =
EAGAIN
) {

107 } i‡(
Àn
 < 0) {

108 
	`SIPE_DEBUG_ERROR_NOFORMAT
("ReadÉrror");

109 
å™•‹t
->
	`îr‹
(
SIPE_TRANSPORT_CONNECTION
, 
	`_
("ReadÉrror"));

111 } i‡(
fú°ªad
 && (
Àn
 == 0)) {

112 
	`SIPE_DEBUG_ERROR_NOFORMAT
("Server has disconnected");

113 
å™•‹t
->
	`îr‹
(
SIPE_TRANSPORT_CONNECTION
, 
	`_
("Server has disconnected"));

117 
c⁄n
->
buf„r_u£d
 +
Àn
;

118 
fú°ªad
 = 
FALSE
;

121 } 
Àn
 =
ªadÀn
);

123 
c⁄n
->
buf„r
[c⁄n->
buf„r_u£d
] = '\0';

124 
å™•‹t
->
	`öput
(
c⁄n
);

125 
	}
}

127 
	$å™•‹t_s¶_öput
(
gpoöãr
 
d©a
,

128 
PuΩÀS¶C⁄√˘i⁄
 *
gsc
,

129 
SIPE_UNUSED_PARAMETER
 
PuΩÀI≈utC⁄dôi⁄
 
c⁄d
)

131 
sùe_å™•‹t_puΩÀ
 *
å™•‹t
 = 
d©a
;

134 i‡(!
	`PURPLE_CONNECTION_IS_VALID
(
å™•‹t
->
gc
)) {

135 
	`puΩÀ_s¶_˛o£
(
gsc
);

136 
å™•‹t
->
gsc
 = 
NULL
;

139 
	`å™•‹t_comm⁄_öput
(
å™•‹t
);

140 
	}
}

142 
	$å™•‹t_t˝_öput
(
gpoöãr
 
d©a
,

143 
göt
 
sour˚
,

144 
SIPE_UNUSED_PARAMETER
 
PuΩÀI≈utC⁄dôi⁄
 
c⁄d
)

146 
sùe_å™•‹t_puΩÀ
 *
å™•‹t
 = 
d©a
;

149 i‡(!
	`PURPLE_CONNECTION_IS_VALID
(
å™•‹t
->
gc
)) {

150 
	`˛o£
(
sour˚
);

151 
å™•‹t
->
sockë
 = -1;

154 
	`å™•‹t_comm⁄_öput
(
å™•‹t
);

155 
	}
}

157 
	$å™•‹t_s¶_c⁄√˘_Áûuª
(
SIPE_UNUSED_PARAMETER
 
PuΩÀS¶C⁄√˘i⁄
 *
gsc
,

158 
PuΩÀS¶Eº‹Ty≥
 
îr‹
,

159 
gpoöãr
 
d©a
)

161 
sùe_å™•‹t_puΩÀ
 *
å™•‹t
 = 
d©a
;

165 i‡(!
	`PURPLE_CONNECTION_IS_VALID
(
å™•‹t
->
gc
))

168 
å™•‹t
->
sockë
 = -1;

169 
å™•‹t
->
gsc
 = 
NULL
;

170 
å™•‹t
->
	`îr‹
(
SIPE_TRANSPORT_CONNECTION
,

171 
	`puΩÀ_s¶_°ªº‹
(
îr‹
));

172 
	}
}

174 
	$å™•‹t_comm⁄_c⁄√˘ed
(
sùe_å™•‹t_puΩÀ
 *
å™•‹t
,

175 
PuΩÀS¶C⁄√˘i⁄
 *
gsc
,

176 
fd
)

178 i‡(!
	`PURPLE_CONNECTION_IS_VALID
(
å™•‹t
->
gc
))

180 i‡(
gsc
) {

181 
	`puΩÀ_s¶_˛o£
(
gsc
);

182 } i‡(
fd
 >= 0) {

183 
	`˛o£
(
fd
);

188 i‡(
fd
 < 0) {

189 
å™•‹t
->
	`îr‹
(
SIPE_TRANSPORT_CONNECTION
,

190 
	`_
("CouldÇot connect"));

194 
å™•‹t
->
sockë
 = 
fd
;

195 
å™•‹t
->
public
.
˛õ¡_p‹t
 = 
	`puΩÀ_√tw‹k_gë_p‹t_‰om_fd
(
fd
);

197 i‡(
gsc
) {

198 
å™•‹t
->
gsc
 = gsc;

199 
	`puΩÀ_s¶_öput_add
(
gsc
, 
å™•‹t_s¶_öput
, 
å™•‹t
);

201 
å™•‹t
->
ª˚ive_h™dÀr
 = 
	`puΩÀ_öput_add
(
fd
,

202 
PURPLE_INPUT_READ
,

203 
å™•‹t_t˝_öput
,

204 
å™•‹t
);

207 
å™•‹t
->
	`c⁄√˘ed
(
SIPE_TRANSPORT_CONNECTION
);

208 
	}
}

210 
	$å™•‹t_s¶_c⁄√˘ed
(
gpoöãr
 
d©a
,

211 
PuΩÀS¶C⁄√˘i⁄
 *
gsc
,

212 
SIPE_UNUSED_PARAMETER
 
PuΩÀI≈utC⁄dôi⁄
 
c⁄d
)

214 
	`å™•‹t_comm⁄_c⁄√˘ed
(
d©a
, 
gsc
, gs¯? gsc->
fd
 : -1);

215 
	}
}

217 
	$å™•‹t_t˝_c⁄√˘ed
(
gpoöãr
 
d©a
,

218 
göt
 
sour˚
,

219 
SIPE_UNUSED_PARAMETER
 c⁄° 
gch¨
 *
îr‹_mesßge
)

221 
	`å™•‹t_comm⁄_c⁄√˘ed
(
d©a
, 
NULL
, 
sour˚
);

222 
	}
}

224 
sùe_å™•‹t_c⁄√˘i⁄
 *

225 
	$sùe_backíd_å™•‹t_c⁄√˘
(
sùe_c‹e_public
 *
sùe_public
,

226 c⁄° 
sùe_c⁄√˘_£tup
 *
£tup
)

228 
sùe_å™•‹t_puΩÀ
 *
å™•‹t
 = 
	`g_√w0
(sipe_transport_purple, 1);

229 
sùe_backíd_¥iv©e
 *
puΩÀ_¥iv©e
 = 
sùe_public
->
backíd_¥iv©e
;

230 
PuΩÀC⁄√˘i⁄
 *
gc
 = 
puΩÀ_¥iv©e
->gc;

231 
PuΩÀAccou¡
 *
accou¡
 = 
	`puΩÀ_c⁄√˘i⁄_gë_accou¡
(
gc
);

233 
	`SIPE_DEBUG_INFO
("transport_connect - hostname: %sÖort: %d",

234 
£tup
->
£rvî_«me
, sëup->
£rvî_p‹t
);

236 
å™•‹t
->
public
.
ty≥
 = 
£tup
->type;

237 
å™•‹t
->
public
.
u£r_d©a
 = 
£tup
->user_data;

238 
å™•‹t
->
c⁄√˘ed
 = 
£tup
->connected;

239 
å™•‹t
->
öput
 = 
£tup
->input;

240 
å™•‹t
->
îr‹
 = 
£tup
->error;

241 
å™•‹t
->
gc
 = gc;

242 
å™•‹t
->
å™smô_buf„r
 = 
	`puΩÀ_cúc_buf„r_√w
(0);

244 i‡(
£tup
->
ty≥
 =
SIPE_TRANSPORT_TLS
) {

246 
	`SIPE_DEBUG_INFO_NOFORMAT
("using SSL");

248 i‡(
	`puΩÀ_s¶_c⁄√˘
(
accou¡
,

249 
£tup
->
£rvî_«me
,

250 
£tup
->
£rvî_p‹t
,

251 
å™•‹t_s¶_c⁄√˘ed
,

252 
å™•‹t_s¶_c⁄√˘_Áûuª
,

253 
å™•‹t
Ë=
NULL
) {

254 
£tup
->
	`îr‹
(
SIPE_TRANSPORT_CONNECTION
,

255 
	`_
("CouldÇot create SSL context"));

256 
	`g_‰ì
(
å™•‹t
);

257 (
NULL
);

259 } i‡(
£tup
->
ty≥
 =
SIPE_TRANSPORT_TCP
) {

261 
	`SIPE_DEBUG_INFO_NOFORMAT
("using TCP");

263 i‡(
	`puΩÀ_¥oxy_c⁄√˘
(
gc
, 
accou¡
,

264 
£tup
->
£rvî_«me
,

265 
£tup
->
£rvî_p‹t
,

266 
å™•‹t_t˝_c⁄√˘ed
,

267 
å™•‹t
Ë=
NULL
) {

268 
£tup
->
	`îr‹
(
SIPE_TRANSPORT_CONNECTION
,

269 
	`_
("CouldÇot create socket"));

270 
	`g_‰ì
(
å™•‹t
);

271 (
NULL
);

274 
£tup
->
	`îr‹
(
SIPE_TRANSPORT_CONNECTION
,

276 
	`g_‰ì
(
å™•‹t
);

277 (
NULL
);

280 (
SIPE_TRANSPORT_CONNECTION
);

281 
	}
}

283 
	$sùe_backíd_å™•‹t_disc⁄√˘
(
sùe_å™•‹t_c⁄√˘i⁄
 *
c⁄n
)

285 
sùe_å™•‹t_puΩÀ
 *
å™•‹t
 = 
PURPLE_TRANSPORT
;

287 i‡(!
å™•‹t
) ;

289 i‡(
å™•‹t
->
gsc
) {

290 
	`puΩÀ_s¶_˛o£
(
å™•‹t
->
gsc
);

291 } i‡(
å™•‹t
->
sockë
 > 0) {

292 
	`˛o£
(
å™•‹t
->
sockë
);

295 i‡(
å™•‹t
->
å™smô_h™dÀr
)

296 
	`puΩÀ_öput_ªmove
(
å™•‹t
->
å™smô_h™dÀr
);

297 i‡(
å™•‹t
->
ª˚ive_h™dÀr
)

298 
	`puΩÀ_öput_ªmove
(
å™•‹t
->
ª˚ive_h™dÀr
);

300 i‡(
å™•‹t
->
å™smô_buf„r
)

301 
	`puΩÀ_cúc_buf„r_de°roy
(
å™•‹t
->
å™smô_buf„r
);

302 
	`g_‰ì
(
å™•‹t
->
public
.
buf„r
);

304 
	`g_‰ì
(
å™•‹t
);

305 
	}
}

307 
	$å™•‹t_ˇnwrôe_cb
(
gpoöãr
 
d©a
,

308 
SIPE_UNUSED_PARAMETER
 
göt
 
sour˚
,

309 
SIPE_UNUSED_PARAMETER
 
PuΩÀI≈utC⁄dôi⁄
 
c⁄d
)

311 
sùe_å™•‹t_puΩÀ
 *
å™•‹t
 = 
d©a
;

312 
gsize
 
max_wrôe
;

314 
max_wrôe
 = 
	`puΩÀ_cúc_buf„r_gë_max_ªad
(
å™•‹t
->
å™smô_buf„r
);

315 i‡(
max_wrôe
 > 0) {

316 
gssize
 
wrôãn
 = 
å™•‹t
->
gsc
 ?

317 (
gssize
Ë
	`puΩÀ_s¶_wrôe
(
å™•‹t
->
gsc
,

318 
å™•‹t
->
å™smô_buf„r
->
ouçå
,

319 
max_wrôe
) :

320 
	`wrôe
(
å™•‹t
->
sockë
,

321 
å™•‹t
->
å™smô_buf„r
->
ouçå
,

322 
max_wrôe
);

324 i‡(
wrôãn
 < 0 && 
î∫o
 =
EAGAIN
) {

326 } i‡(
wrôãn
 <= 0) {

327 
	`SIPE_DEBUG_INFO_NOFORMAT
("transport_canwrite_cb: written <= 0,Éxiting");

328 
å™•‹t
->
	`îr‹
(
SIPE_TRANSPORT_CONNECTION
,

329 
	`_
("WriteÉrror"));

333 
	`puΩÀ_cúc_buf„r_m¨k_ªad
(
å™•‹t
->
å™smô_buf„r
,

334 
wrôãn
);

338 
	`puΩÀ_öput_ªmove
(
å™•‹t
->
å™smô_h™dÀr
);

339 
å™•‹t
->
å™smô_h™dÀr
 = 0;

341 
	}
}

343 
	$sùe_backíd_å™•‹t_mesßge
(
sùe_å™•‹t_c⁄√˘i⁄
 *
c⁄n
,

344 c⁄° 
gch¨
 *
buf„r
)

346 
sùe_å™•‹t_puΩÀ
 *
å™•‹t
 = 
PURPLE_TRANSPORT
;

347 
time_t
 
cuºtime
 = 
	`time
(
NULL
);

348 *
tmp
;

350 
	`SIPE_DEBUG_INFO
("sending - %s######\n%s######",

351 
	`˘ime
(&
cuºtime
), 
tmp
 = 
	`fix_√wlöes
(
buf„r
));

352 
	`g_‰ì
(
tmp
);

355 
	`puΩÀ_cúc_buf„r_≠≥nd
(
å™•‹t
->
å™smô_buf„r
,

356 
buf„r
, 
	`°æí
(buffer));

359 i‡(!
å™•‹t
->
å™smô_h™dÀr
) {

360 
å™•‹t
->
å™smô_h™dÀr
 = 
	`puΩÀ_öput_add
—øn•‹t->
sockë
,

361 
PURPLE_INPUT_WRITE
,

362 
å™•‹t_ˇnwrôe_cb
,

363 
å™•‹t
);

365 
	}
}

	@src/purple/tests-load.c

23 
	~<°dlib.h
>

24 
	~<°dio.h
>

26 
	~<gmoduÀ.h
>

29 
	$maö
(
¨gc
, *
¨gv
[])

31 
rc
 = 1;

33 (Ë
¨gc
;

34 (Ë
¨gv
;

37 i‡(
	`g_moduÀ_suµ‹ãd
()) {

38 
gch¨
 *
«me
 = 
	`g_moduÀ_buûd_∑th
(".libs", "sipe");

39 
GModuÀ
 *
moduÀ
 = 
	`g_moduÀ_›í
(
«me
, 
G_MODULE_BIND_LOCAL
);

40 i‡(
moduÀ
) {

41 
	`g_moduÀ_˛o£
(
moduÀ
);

43 
	`¥ötf
("pluginÜoaded OK\n");

44 
rc
 = 0;

46 
	`Ârötf
(
°dîr
, "pluginÜoadedÉrror: %s\n",

47 
	`g_moduÀ_îr‹
());

49 
	`g_‰ì
(
«me
);

51 (
rc
);

52 
	}
}

	@src/purple/tests.c

31 
	~<glib.h
>

33 
	~"cùhî.h
"

34 
	~"debug.h
"

35 
	~"sig«ls.h
"

37 
gboﬁón
 
sù_£c_¡lm_ã°s
();

39 
	$maö
()

42 
	`puΩÀ_sig«ls_öô
();

43 
	`puΩÀ_debug_öô
();

44 
	`puΩÀ_debug_£t_íabÀd
(
TRUE
);

45 
	`puΩÀ_cùhîs_öô
();

48 (
	`sù_£c_¡lm_ã°s
() ? 0 : 1);

49 
	}
}

	@/usr/include/arpa/inet.h

19 #i‚de‡
_ARPA_INET_H


20 
	#_ARPA_INET_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<√töë/ö.h
>

26 #i‚de‡
__sockÀn_t_deföed


27 
__sockÀn_t
 
	tsockÀn_t
;

28 
	#__sockÀn_t_deföed


	)

31 
__BEGIN_DECLS


35 
ö_addr_t
 
	$öë_addr
 (
__c⁄°
 *
__˝
Ë
__THROW
;

38 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

42 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

43 
__THROW
;

46 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

50 
ö_addr_t
 
	$öë_√tw‹k
 (
__c⁄°
 *
__˝
Ë
__THROW
;

54 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

59 
	$öë_±⁄
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

60 *
__ª°ri˘
 
__buf
Ë
__THROW
;

65 
__c⁄°
 *
	$öë_¡›
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

66 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

67 
__THROW
;

71 #ifde‡
__USE_MISC


74 
	$öë_©⁄
 (
__c⁄°
 *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

78 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

83 *
	$öë_√t_¡›
 (
__af
, 
__c⁄°
 *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, 
__c⁄°
 *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (
__c⁄°
 *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, 
__c⁄°
 *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #ifde‡
__USE_XOPEN


38 
	~<sys/°©.h
>

41 #ifdef 
__USE_MISC


42 #i‚de‡
R_OK


45 
	#R_OK
 4

	)

46 
	#W_OK
 2

	)

47 
	#X_OK
 1

	)

48 
	#F_OK
 0

	)

53 #ifde‡
__USE_XOPEN


54 
	#SEEK_SET
 0

	)

55 
	#SEEK_CUR
 1

	)

56 
	#SEEK_END
 2

	)

59 #ifde‡
__USE_ATFILE


60 
	#AT_FDCWD
 -100

	)

63 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

64 
	#AT_REMOVEDIR
 0x200

	)

66 
	#AT_SYMLINK_FOLLOW
 0x400

	)

67 
	#AT_EACCESS
 0x200

	)

76 
f˙é
 (
__fd
, 
__cmd
, ...);

84 #i‚de‡
__USE_FILE_OFFSET64


85 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

87 #ifde‡
__REDIRECT


88 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

89 
	`__n⁄nuŒ
 ((1));

91 
	#›í
 
›í64


	)

94 #ifde‡
__USE_LARGEFILE64


95 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

98 #ifde‡
__USE_ATFILE


108 #i‚de‡
__USE_FILE_OFFSET64


109 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

110 
	`__n⁄nuŒ
 ((2));

112 #ifde‡
__REDIRECT


113 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

114 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

116 
	#›í©
 
›í©64


	)

120 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

121 
	`__n⁄nuŒ
 ((2));

129 #i‚de‡
__USE_FILE_OFFSET64


130 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

132 #ifde‡
__REDIRECT


133 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

134 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

136 
	#¸ót
 
¸ót64


	)

139 #ifde‡
__USE_LARGEFILE64


140 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

143 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

144 && !
deföed
 
__USE_POSIX
))

153 
	#F_ULOCK
 0

	)

154 
	#F_LOCK
 1

	)

155 
	#F_TLOCK
 2

	)

156 
	#F_TEST
 3

	)

158 #i‚de‡
__USE_FILE_OFFSET64


159 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

161 #ifde‡
__REDIRECT


162 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

164 
	#lockf
 
lockf64


	)

167 #ifde‡
__USE_LARGEFILE64


168 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

172 #ifde‡
__USE_XOPEN2K


175 #i‚de‡
__USE_FILE_OFFSET64


176 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

177 
__advi£
Ë
__THROW
;

179 #ifde‡
__REDIRECT_NTH


180 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

181 
__off64_t
 
__Àn
, 
__advi£
),

182 
posix_Ádvi£64
);

184 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

187 #ifde‡
__USE_LARGEFILE64


188 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

189 
__advi£
Ë
__THROW
;

197 #i‚de‡
__USE_FILE_OFFSET64


198 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

200 #ifde‡
__REDIRECT


201 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

202 
__off64_t
 
__Àn
),

203 
posix_ÁŒoˇã64
);

205 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

208 #ifde‡
__USE_LARGEFILE64


209 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

215 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

216 && 
deföed
 
__va_¨g_∑ck_Àn


217 
	~<bôs/f˙é2.h
>

220 
__END_DECLS


	@/usr/include/gssapi/gssapi.h

2 
	~<°döt.h
>

3 
	~<öây≥s.h
>

29 #i‚de‡
_GSSAPI_H_


30 
	#_GSSAPI_H_


	)

36 #i‡
deföed
(
__MACH__
Ë&& deföed(
__APPLE__
)

37 
	~<T¨gëC⁄dôi⁄Æs.h
>

38 #i‡
TARGET_RT_MAC_CFM


43 #ifde‡
__˝lu•lus


47 #i‡
TARGET_OS_MAC


48 #¥agm®
∑ck
(
push
,2)

51 #i‡
deföed
(
_MSDOS
Ë|| deföed(
_WIN32
)

52 
	~<wö-mac.h
>

55 #i‚de‡
KRB5_CALLCONV


56 
	#KRB5_CALLCONV


	)

57 
	#KRB5_CALLCONV_C


	)

63 
	~<°ddef.h
>

68 
	~<sys/ty≥s.h
>

78 
gss_«me_°ru˘
;

79 
gss_«me_°ru˘
 * 
	tgss_«me_t
;

81 
gss_¸ed_id_°ru˘
;

82 
gss_¸ed_id_°ru˘
 * 
	tgss_¸ed_id_t
;

84 
gss_˘x_id_°ru˘
;

85 
gss_˘x_id_°ru˘
 * 
	tgss_˘x_id_t
;

91 
uöt32_t
 
	tgss_uöt32
;

92 
öt32_t
 
	tgss_öt32
;

94 #ifde‡ 
OM_STRING


99 
OM_obje˘_idítifõr
 
	tgss_OID_desc
, *
	tgss_OID
;

104 
gss_uöt32
 
	tOM_uöt32
;

106 
	sgss_OID_desc_°ru˘
 {

107 
OM_uöt32
 
Àngth
;

108 *
ñemíts
;

109 } 
	tgss_OID_desc
, *
	tgss_OID
;

112 
	sgss_OID_£t_desc_°ru˘
 {

113 
size_t
 
cou¡
;

114 
gss_OID
 
ñemíts
;

115 } 
	tgss_OID_£t_desc
, *
	tgss_OID_£t
;

117 
	sgss_buf„r_desc_°ru˘
 {

118 
size_t
 
Àngth
;

119 *
vÆue
;

120 } 
	tgss_buf„r_desc
, *
	tgss_buf„r_t
;

122 
	sgss_ch™√l_bödögs_°ru˘
 {

123 
OM_uöt32
 
öôüt‹_addπy≥
;

124 
gss_buf„r_desc
 
öôüt‹_addªss
;

125 
OM_uöt32
 
ac˚±‹_addπy≥
;

126 
gss_buf„r_desc
 
ac˚±‹_addªss
;

127 
gss_buf„r_desc
 
≠∂iˇti⁄_d©a
;

128 } *
	tgss_ch™√l_bödögs_t
;

134 
OM_uöt32
 
	tgss_q›_t
;

135 
	tgss_¸ed_ußge_t
;

140 
	#GSS_C_DELEG_FLAG
 1

	)

141 
	#GSS_C_MUTUAL_FLAG
 2

	)

142 
	#GSS_C_REPLAY_FLAG
 4

	)

143 
	#GSS_C_SEQUENCE_FLAG
 8

	)

144 
	#GSS_C_CONF_FLAG
 16

	)

145 
	#GSS_C_INTEG_FLAG
 32

	)

146 
	#GSS_C_ANON_FLAG
 64

	)

147 
	#GSS_C_PROT_READY_FLAG
 128

	)

148 
	#GSS_C_TRANS_FLAG
 256

	)

149 
	#GSS_C_DELEG_POLICY_FLAG
 32768

	)

154 
	#GSS_C_BOTH
 0

	)

155 
	#GSS_C_INITIATE
 1

	)

156 
	#GSS_C_ACCEPT
 2

	)

161 
	#GSS_C_GSS_CODE
 1

	)

162 
	#GSS_C_MECH_CODE
 2

	)

167 
	#GSS_C_AF_UNSPEC
 0

	)

168 
	#GSS_C_AF_LOCAL
 1

	)

169 
	#GSS_C_AF_INET
 2

	)

170 
	#GSS_C_AF_IMPLINK
 3

	)

171 
	#GSS_C_AF_PUP
 4

	)

172 
	#GSS_C_AF_CHAOS
 5

	)

173 
	#GSS_C_AF_NS
 6

	)

174 
	#GSS_C_AF_NBS
 7

	)

175 
	#GSS_C_AF_ECMA
 8

	)

176 
	#GSS_C_AF_DATAKIT
 9

	)

177 
	#GSS_C_AF_CCITT
 10

	)

178 
	#GSS_C_AF_SNA
 11

	)

179 
	#GSS_C_AF_DEC√t
 12

	)

180 
	#GSS_C_AF_DLI
 13

	)

181 
	#GSS_C_AF_LAT
 14

	)

182 
	#GSS_C_AF_HYLINK
 15

	)

183 
	#GSS_C_AF_APPLETALK
 16

	)

184 
	#GSS_C_AF_BSC
 17

	)

185 
	#GSS_C_AF_DSS
 18

	)

186 
	#GSS_C_AF_OSI
 19

	)

187 
	#GSS_C_AF_NETBIOS
 20

	)

188 
	#GSS_C_AF_X25
 21

	)

190 
	#GSS_C_AF_NULLADDR
 255

	)

195 
	#GSS_C_NO_NAME
 ((
gss_«me_t
Ë0)

	)

196 
	#GSS_C_NO_BUFFER
 ((
gss_buf„r_t
Ë0)

	)

197 
	#GSS_C_NO_OID
 ((
gss_OID
Ë0)

	)

198 
	#GSS_C_NO_OID_SET
 ((
gss_OID_£t
Ë0)

	)

199 
	#GSS_C_NO_CONTEXT
 ((
gss_˘x_id_t
Ë0)

	)

200 
	#GSS_C_NO_CREDENTIAL
 ((
gss_¸ed_id_t
Ë0)

	)

201 
	#GSS_C_NO_CHANNEL_BINDINGS
 ((
gss_ch™√l_bödögs_t
Ë0)

	)

202 
	#GSS_C_EMPTY_BUFFER
 {0, 
NULL
}

	)

208 
	#GSS_C_NULL_OID
 
GSS_C_NO_OID


	)

209 
	#GSS_C_NULL_OID_SET
 
GSS_C_NO_OID_SET


	)

219 
	#GSS_C_QOP_DEFAULT
 0

	)

225 
	#GSS_C_INDEFINITE
 ((
OM_uöt32
Ë0xfffffffful)

	)

230 
	#GSS_S_COMPLETE
 0

	)

235 
	#GSS_C_CALLING_ERROR_OFFSET
 24

	)

236 
	#GSS_C_ROUTINE_ERROR_OFFSET
 16

	)

237 
	#GSS_C_SUPPLEMENTARY_OFFSET
 0

	)

238 
	#GSS_C_CALLING_ERROR_MASK
 ((
OM_uöt32
Ë0377ul)

	)

239 
	#GSS_C_ROUTINE_ERROR_MASK
 ((
OM_uöt32
Ë0377ul)

	)

240 
	#GSS_C_SUPPLEMENTARY_MASK
 ((
OM_uöt32
Ë0177777ul)

	)

247 
	#GSS_CALLING_ERROR
(
x
) \

248 ((
x
Ë& (
GSS_C_CALLING_ERROR_MASK
 << 
GSS_C_CALLING_ERROR_OFFSET
))

	)

249 
	#GSS_ROUTINE_ERROR
(
x
) \

250 ((
x
Ë& (
GSS_C_ROUTINE_ERROR_MASK
 << 
GSS_C_ROUTINE_ERROR_OFFSET
))

	)

251 
	#GSS_SUPPLEMENTARY_INFO
(
x
) \

252 ((
x
Ë& (
GSS_C_SUPPLEMENTARY_MASK
 << 
GSS_C_SUPPLEMENTARY_OFFSET
))

	)

253 
	#GSS_ERROR
(
x
) \

254 ((
x
Ë& ((
GSS_C_CALLING_ERROR_MASK
 << 
GSS_C_CALLING_ERROR_OFFSET
) | \

255 (
GSS_C_ROUTINE_ERROR_MASK
 << 
GSS_C_ROUTINE_ERROR_OFFSET
)))

	)

264 
	#GSS_S_CALL_INACCESSIBLE_READ
 \

265 (((
OM_uöt32
Ë1ulË<< 
GSS_C_CALLING_ERROR_OFFSET
)

	)

266 
	#GSS_S_CALL_INACCESSIBLE_WRITE
 \

267 (((
OM_uöt32
Ë2ulË<< 
GSS_C_CALLING_ERROR_OFFSET
)

	)

268 
	#GSS_S_CALL_BAD_STRUCTURE
 \

269 (((
OM_uöt32
Ë3ulË<< 
GSS_C_CALLING_ERROR_OFFSET
)

	)

274 
	#GSS_S_BAD_MECH
 (((
OM_uöt32
Ë1ulË<< 
GSS_C_ROUTINE_ERROR_OFFSET
)

	)

275 
	#GSS_S_BAD_NAME
 (((
OM_uöt32
Ë2ulË<< 
GSS_C_ROUTINE_ERROR_OFFSET
)

	)

276 
	#GSS_S_BAD_NAMETYPE
 (((
OM_uöt32
Ë3ulË<< 
GSS_C_ROUTINE_ERROR_OFFSET
)

	)

277 
	#GSS_S_BAD_BINDINGS
 (((
OM_uöt32
Ë4ulË<< 
GSS_C_ROUTINE_ERROR_OFFSET
)

	)

278 
	#GSS_S_BAD_STATUS
 (((
OM_uöt32
Ë5ulË<< 
GSS_C_ROUTINE_ERROR_OFFSET
)

	)

279 
	#GSS_S_BAD_SIG
 (((
OM_uöt32
Ë6ulË<< 
GSS_C_ROUTINE_ERROR_OFFSET
)

	)

280 
	#GSS_S_NO_CRED
 (((
OM_uöt32
Ë7ulË<< 
GSS_C_ROUTINE_ERROR_OFFSET
)

	)

281 
	#GSS_S_NO_CONTEXT
 (((
OM_uöt32
Ë8ulË<< 
GSS_C_ROUTINE_ERROR_OFFSET
)

	)

282 
	#GSS_S_DEFECTIVE_TOKEN
 (((
OM_uöt32
Ë9ulË<< 
GSS_C_ROUTINE_ERROR_OFFSET
)

	)

283 
	#GSS_S_DEFECTIVE_CREDENTIAL
 \

284 (((
OM_uöt32
Ë10ulË<< 
GSS_C_ROUTINE_ERROR_OFFSET
)

	)

285 
	#GSS_S_CREDENTIALS_EXPIRED
 \

286 (((
OM_uöt32
Ë11ulË<< 
GSS_C_ROUTINE_ERROR_OFFSET
)

	)

287 
	#GSS_S_CONTEXT_EXPIRED
 \

288 (((
OM_uöt32
Ë12ulË<< 
GSS_C_ROUTINE_ERROR_OFFSET
)

	)

289 
	#GSS_S_FAILURE
 (((
OM_uöt32
Ë13ulË<< 
GSS_C_ROUTINE_ERROR_OFFSET
)

	)

290 
	#GSS_S_BAD_QOP
 (((
OM_uöt32
Ë14ulË<< 
GSS_C_ROUTINE_ERROR_OFFSET
)

	)

291 
	#GSS_S_UNAUTHORIZED
 (((
OM_uöt32
Ë15ulË<< 
GSS_C_ROUTINE_ERROR_OFFSET
)

	)

292 
	#GSS_S_UNAVAILABLE
 (((
OM_uöt32
Ë16ulË<< 
GSS_C_ROUTINE_ERROR_OFFSET
)

	)

293 
	#GSS_S_DUPLICATE_ELEMENT
 \

294 (((
OM_uöt32
Ë17ulË<< 
GSS_C_ROUTINE_ERROR_OFFSET
)

	)

295 
	#GSS_S_NAME_NOT_MN
 \

296 (((
OM_uöt32
Ë18ulË<< 
GSS_C_ROUTINE_ERROR_OFFSET
)

	)

301 
	#GSS_S_CONTINUE_NEEDED
 (1 << (
GSS_C_SUPPLEMENTARY_OFFSET
 + 0))

	)

302 
	#GSS_S_DUPLICATE_TOKEN
 (1 << (
GSS_C_SUPPLEMENTARY_OFFSET
 + 1))

	)

303 
	#GSS_S_OLD_TOKEN
 (1 << (
GSS_C_SUPPLEMENTARY_OFFSET
 + 2))

	)

304 
	#GSS_S_UNSEQ_TOKEN
 (1 << (
GSS_C_SUPPLEMENTARY_OFFSET
 + 3))

	)

305 
	#GSS_S_GAP_TOKEN
 (1 << (
GSS_C_SUPPLEMENTARY_OFFSET
 + 4))

	)

312 #i‡
deföed
 (
_WIN32
Ë&& deföed (
_MSC_VER
)

313 #ifde‡
GSS_DLL_FILE


314 
	#GSS_DLLIMP
 
	`__de˛•ec
(
dŒexp‹t
)

	)

316 
	#GSS_DLLIMP
 
	`__de˛•ec
(
dŒimp‹t
)

	)

319 
	#GSS_DLLIMP


	)

333 
GSS_DLLIMP
 
gss_OID
 
GSS_C_NT_USER_NAME
;

345 
GSS_DLLIMP
 
gss_OID
 
GSS_C_NT_MACHINE_UID_NAME
;

357 
GSS_DLLIMP
 
gss_OID
 
GSS_C_NT_STRING_UID_NAME
;

376 
GSS_DLLIMP
 
gss_OID
 
GSS_C_NT_HOSTBASED_SERVICE_X
;

389 
GSS_DLLIMP
 
gss_OID
 
GSS_C_NT_HOSTBASED_SERVICE
;

401 
GSS_DLLIMP
 
gss_OID
 
GSS_C_NT_ANONYMOUS
;

414 
GSS_DLLIMP
 
gss_OID
 
GSS_C_NT_EXPORT_NAME
;

418 
OM_uöt32
 
KRB5_CALLCONV


419 
gss_acquúe_¸ed
(

420 
OM_uöt32
 *,

421 
gss_«me_t
,

422 
OM_uöt32
,

423 
gss_OID_£t
,

424 
gss_¸ed_ußge_t
,

425 
gss_¸ed_id_t
 *,

426 
gss_OID_£t
 *,

427 
OM_uöt32
 *);

429 
OM_uöt32
 
KRB5_CALLCONV


430 
gss_ªÀa£_¸ed
(

431 
OM_uöt32
 *,

432 
gss_¸ed_id_t
 *);

434 
OM_uöt32
 
KRB5_CALLCONV


435 
gss_öô_£c_c⁄ãxt
(

436 
OM_uöt32
 *,

437 
gss_¸ed_id_t
,

438 
gss_˘x_id_t
 *,

439 
gss_«me_t
,

440 
gss_OID
,

441 
OM_uöt32
,

442 
OM_uöt32
,

443 
gss_ch™√l_bödögs_t
,

444 
gss_buf„r_t
,

445 
gss_OID
 *,

446 
gss_buf„r_t
,

447 
OM_uöt32
 *,

448 
OM_uöt32
 *);

450 
OM_uöt32
 
KRB5_CALLCONV


451 
gss_ac˚±_£c_c⁄ãxt
(

452 
OM_uöt32
 *,

453 
gss_˘x_id_t
 *,

454 
gss_¸ed_id_t
,

455 
gss_buf„r_t
,

456 
gss_ch™√l_bödögs_t
,

457 
gss_«me_t
 *,

458 
gss_OID
 *,

459 
gss_buf„r_t
,

460 
OM_uöt32
 *,

461 
OM_uöt32
 *,

462 
gss_¸ed_id_t
 *);

464 
OM_uöt32
 
KRB5_CALLCONV


465 
gss_¥o˚ss_c⁄ãxt_tokí
(

466 
OM_uöt32
 *,

467 
gss_˘x_id_t
,

468 
gss_buf„r_t
);

471 
OM_uöt32
 
KRB5_CALLCONV


472 
gss_dñëe_£c_c⁄ãxt
(

473 
OM_uöt32
 *,

474 
gss_˘x_id_t
 *,

475 
gss_buf„r_t
);

478 
OM_uöt32
 
KRB5_CALLCONV


479 
gss_c⁄ãxt_time
(

480 
OM_uöt32
 *,

481 
gss_˘x_id_t
,

482 
OM_uöt32
 *);

486 
OM_uöt32
 
KRB5_CALLCONV


487 
gss_gë_mic
(

488 
OM_uöt32
 *,

489 
gss_˘x_id_t
,

490 
gss_q›_t
,

491 
gss_buf„r_t
,

492 
gss_buf„r_t
);

496 
OM_uöt32
 
KRB5_CALLCONV


497 
gss_vîify_mic
(
OM_uöt32
 *,

498 
gss_˘x_id_t
,

499 
gss_buf„r_t
,

500 
gss_buf„r_t
,

501 
gss_q›_t
 *

505 
OM_uöt32
 
KRB5_CALLCONV


506 
gss_wøp
(

507 
OM_uöt32
 *,

508 
gss_˘x_id_t
,

510 
gss_q›_t
,

511 
gss_buf„r_t
,

513 
gss_buf„r_t
);

517 
OM_uöt32
 
KRB5_CALLCONV


518 
gss_unwøp
(

519 
OM_uöt32
 *,

520 
gss_˘x_id_t
,

521 
gss_buf„r_t
,

522 
gss_buf„r_t
,

524 
gss_q›_t
 *);

527 
OM_uöt32
 
KRB5_CALLCONV


528 
gss_di•œy_°©us
(

529 
OM_uöt32
 *,

530 
OM_uöt32
,

532 
gss_OID
,

533 
OM_uöt32
 *,

534 
gss_buf„r_t
);

537 
OM_uöt32
 
KRB5_CALLCONV


538 
gss_ödiˇã_mechs
(

539 
OM_uöt32
 *,

540 
gss_OID_£t
 *);

543 
OM_uöt32
 
KRB5_CALLCONV


544 
gss_com∑ª_«me
(

545 
OM_uöt32
 *,

546 
gss_«me_t
,

547 
gss_«me_t
,

551 
OM_uöt32
 
KRB5_CALLCONV


552 
gss_di•œy_«me
(

553 
OM_uöt32
 *,

554 
gss_«me_t
,

555 
gss_buf„r_t
,

556 
gss_OID
 *);

559 
OM_uöt32
 
KRB5_CALLCONV


560 
gss_imp‹t_«me
(

561 
OM_uöt32
 *,

562 
gss_buf„r_t
,

563 
gss_OID
,

564 
gss_«me_t
 *);

566 
OM_uöt32
 
KRB5_CALLCONV


567 
gss_ªÀa£_«me
(

568 
OM_uöt32
 *,

569 
gss_«me_t
 *);

571 
OM_uöt32
 
KRB5_CALLCONV


572 
gss_ªÀa£_buf„r
(

573 
OM_uöt32
 *,

574 
gss_buf„r_t
);

576 
OM_uöt32
 
KRB5_CALLCONV


577 
gss_ªÀa£_oid_£t
(

578 
OM_uöt32
 *,

579 
gss_OID_£t
 *);

581 
OM_uöt32
 
KRB5_CALLCONV


582 
gss_öquúe_¸ed
(

583 
OM_uöt32
 *,

584 
gss_¸ed_id_t
,

585 
gss_«me_t
 *,

586 
OM_uöt32
 *,

587 
gss_¸ed_ußge_t
 *,

588 
gss_OID_£t
 *);

591 
OM_uöt32
 
KRB5_CALLCONV


592 
gss_öquúe_c⁄ãxt
(

593 
OM_uöt32
 *,

594 
gss_˘x_id_t
,

595 
gss_«me_t
 *,

596 
gss_«me_t
 *,

597 
OM_uöt32
 *,

598 
gss_OID
 *,

599 
OM_uöt32
 *,

604 
OM_uöt32
 
KRB5_CALLCONV


605 
gss_wøp_size_limô
(

606 
OM_uöt32
 *,

607 
gss_˘x_id_t
,

609 
gss_q›_t
,

610 
OM_uöt32
,

611 
OM_uöt32
 *);

614 
OM_uöt32
 
KRB5_CALLCONV


615 
gss_imp‹t_«me_obje˘
(

616 
OM_uöt32
 *,

618 
gss_OID
,

619 
gss_«me_t
 *);

622 
OM_uöt32
 
KRB5_CALLCONV


623 
gss_exp‹t_«me_obje˘
(

624 
OM_uöt32
 *,

625 
gss_«me_t
,

626 
gss_OID
,

630 
OM_uöt32
 
KRB5_CALLCONV


631 
gss_add_¸ed
(

632 
OM_uöt32
 *,

633 
gss_¸ed_id_t
,

634 
gss_«me_t
,

635 
gss_OID
,

636 
gss_¸ed_ußge_t
,

637 
OM_uöt32
,

638 
OM_uöt32
,

639 
gss_¸ed_id_t
 *,

640 
gss_OID_£t
 *,

641 
OM_uöt32
 *,

642 
OM_uöt32
 *);

645 
OM_uöt32
 
KRB5_CALLCONV


646 
gss_öquúe_¸ed_by_mech
(

647 
OM_uöt32
 *,

648 
gss_¸ed_id_t
,

649 
gss_OID
,

650 
gss_«me_t
 *,

651 
OM_uöt32
 *,

652 
OM_uöt32
 *,

653 
gss_¸ed_ußge_t
 *);

656 
OM_uöt32
 
KRB5_CALLCONV


657 
gss_exp‹t_£c_c⁄ãxt
(

658 
OM_uöt32
 *,

659 
gss_˘x_id_t
 *,

660 
gss_buf„r_t
);

663 
OM_uöt32
 
KRB5_CALLCONV


664 
gss_imp‹t_£c_c⁄ãxt
(

665 
OM_uöt32
 *,

666 
gss_buf„r_t
,

667 
gss_˘x_id_t
 *);

670 
OM_uöt32
 
KRB5_CALLCONV


671 
gss_ªÀa£_oid
(

672 
OM_uöt32
 *,

673 
gss_OID
 *);

676 
OM_uöt32
 
KRB5_CALLCONV


677 
gss_¸óã_em±y_oid_£t
(

678 
OM_uöt32
 *,

679 
gss_OID_£t
 *);

682 
OM_uöt32
 
KRB5_CALLCONV


683 
gss_add_oid_£t_membî
(

684 
OM_uöt32
 *,

685 
gss_OID
,

686 
gss_OID_£t
 *);

689 
OM_uöt32
 
KRB5_CALLCONV


690 
gss_ã°_oid_£t_membî
(

691 
OM_uöt32
 *,

692 
gss_OID
,

693 
gss_OID_£t
,

697 
OM_uöt32
 
KRB5_CALLCONV


698 
gss_°r_to_oid
(

699 
OM_uöt32
 *,

700 
gss_buf„r_t
,

701 
gss_OID
 *);

704 
OM_uöt32
 
KRB5_CALLCONV


705 
gss_oid_to_°r
(

706 
OM_uöt32
 *,

707 
gss_OID
,

708 
gss_buf„r_t
);

711 
OM_uöt32
 
KRB5_CALLCONV


712 
gss_öquúe_«mes_f‹_mech
(

713 
OM_uöt32
 *,

714 
gss_OID
,

715 
gss_OID_£t
 *);

718 
OM_uöt32
 
KRB5_CALLCONV


719 
gss_öquúe_mechs_f‹_«me
(

720 
OM_uöt32
 *,

721 c⁄° 
gss_«me_t
,

722 
gss_OID_£t
 *);

731 
OM_uöt32
 
KRB5_CALLCONV


732 
gss_sign
(

733 
OM_uöt32
 *,

734 
gss_˘x_id_t
,

736 
gss_buf„r_t
,

737 
gss_buf„r_t
);

739 
OM_uöt32
 
KRB5_CALLCONV


740 
gss_vîify
(

741 
OM_uöt32
 *,

742 
gss_˘x_id_t
,

743 
gss_buf„r_t
,

744 
gss_buf„r_t
,

747 
OM_uöt32
 
KRB5_CALLCONV


748 
gss_£Æ
(

749 
OM_uöt32
 *,

750 
gss_˘x_id_t
,

753 
gss_buf„r_t
,

755 
gss_buf„r_t
);

757 
OM_uöt32
 
KRB5_CALLCONV


758 
gss_un£Æ
(

759 
OM_uöt32
 *,

760 
gss_˘x_id_t
,

761 
gss_buf„r_t
,

762 
gss_buf„r_t
,

767 
OM_uöt32
 
KRB5_CALLCONV


768 
gss_exp‹t_«me
(

769 
OM_uöt32
 *,

770 c⁄° 
gss_«me_t
,

771 
gss_buf„r_t
);

774 
OM_uöt32
 
KRB5_CALLCONV


775 
gss_du∂iˇã_«me
(

776 
OM_uöt32
 *,

777 c⁄° 
gss_«me_t
,

778 
gss_«me_t
 *);

781 
OM_uöt32
 
KRB5_CALLCONV


782 
gss_ˇn⁄iˇlize_«me
(

783 
OM_uöt32
 *,

784 c⁄° 
gss_«me_t
,

785 c⁄° 
gss_OID
,

786 
gss_«me_t
 *);

788 #i‡
TARGET_OS_MAC


789 #¥agm®
∑ck
(
p›
)

792 #ifde‡
__˝lu•lus


798 
	#GSS_CALLING_ERROR_FIELD
(
x
) \

799 (((
x
Ë>> 
GSS_C_CALLING_ERROR_OFFSET
Ë& 
GSS_C_CALLING_ERROR_MASK
)

	)

800 
	#GSS_ROUTINE_ERROR_FIELD
(
x
) \

801 (((
x
Ë>> 
GSS_C_ROUTINE_ERROR_OFFSET
Ë& 
GSS_C_ROUTINE_ERROR_MASK
)

	)

802 
	#GSS_SUPPLEMENTARY_INFO_FIELD
(
x
) \

803 (((
x
Ë>> 
GSS_C_SUPPLEMENTARY_OFFSET
Ë& 
GSS_C_SUPPLEMENTARY_MASK
)

	)

806 
	#GSS_S_CRED_UNAVAIL
 
GSS_S_FAILURE


	)

	@/usr/include/gssapi/gssapi_krb5.h

2 
	~<°döt.h
>

27 #i‚de‡
_GSSAPI_KRB5_H_


28 
	#_GSSAPI_KRB5_H_


	)

30 
	~<gsßpi/gsßpi.h
>

31 
	~<gsßpi/gsßpi_ext.h
>

32 
	~<krb5.h
>

35 #ifde‡
__˝lu•lus


42 
GSS_DLLIMP
 c⁄° 
gss_OID_desc
 * c⁄° 
GSS_KRB5_NT_PRINCIPAL_NAME
;

49 
	#GSS_KRB5_NT_HOSTBASED_SERVICE_NAME
 
GSS_C_NT_HOSTBASED_SERVICE


	)

58 
	#GSS_KRB5_NT_USER_NAME
 
GSS_C_NT_USER_NAME


	)

65 
	#GSS_KRB5_NT_MACHINE_UID_NAME
 
GSS_C_NT_MACHINE_UID_NAME


	)

72 
	#GSS_KRB5_NT_STRING_UID_NAME
 
GSS_C_NT_STRING_UID_NAME


	)

78 
GSS_DLLIMP
 c⁄° 
gss_OID_desc
 * c⁄° 
gss_mech_krb5
;

79 
GSS_DLLIMP
 c⁄° 
gss_OID_desc
 * c⁄° 
gss_mech_krb5_ﬁd
;

80 
GSS_DLLIMP
 c⁄° 
gss_OID_desc
 * c⁄° 
gss_mech_krb5_wr⁄g
;

81 
GSS_DLLIMP
 c⁄° 
gss_OID_£t_desc
 * c⁄° 
gss_mech_£t_krb5
;

82 
GSS_DLLIMP
 c⁄° 
gss_OID_£t_desc
 * c⁄° 
gss_mech_£t_krb5_ﬁd
;

83 
GSS_DLLIMP
 c⁄° 
gss_OID_£t_desc
 * c⁄° 
gss_mech_£t_krb5_bŸh
;

85 
GSS_DLLIMP
 c⁄° 
gss_OID_desc
 * c⁄° 
gss_¡_krb5_«me
;

86 
GSS_DLLIMP
 c⁄° 
gss_OID_desc
 * c⁄° 
gss_¡_krb5_¥öcùÆ
;

88 
GSS_DLLIMP
 c⁄° 
gss_OID_desc
 
krb5_gss_oid_¨øy
[];

90 
	#gss_krb5_¡_gíîÆ_«me
 
gss_¡_krb5_«me


	)

91 
	#gss_krb5_¡_¥öcùÆ
 
gss_¡_krb5_¥öcùÆ


	)

92 
	#gss_krb5_¡_£rvi˚_«me
 
gss_¡_£rvi˚_«me


	)

93 
	#gss_krb5_¡_u£r_«me
 
gss_¡_u£r_«me


	)

94 
	#gss_krb5_¡_machöe_uid_«me
 
gss_¡_machöe_uid_«me


	)

95 
	#gss_krb5_¡_°rög_uid_«me
 
gss_¡_°rög_uid_«me


	)

98 #i‡
deföed
(
_WIN32
)

99 
	t__öt64
 
	tgss_uöt64
;

101 
	~<öây≥s.h
>

102 
uöt64_t
 
	tgss_uöt64
;

106 
	sgss_krb5_lucid_key
 {

107 
OM_uöt32
 
	gty≥
;

108 
OM_uöt32
 
	gÀngth
;

109 * 
	gd©a
;

110 } 
	tgss_krb5_lucid_key_t
;

112 
	sgss_krb5_rfc1964_keyd©a
 {

113 
OM_uöt32
 
	gsign_Æg
;

114 
OM_uöt32
 
	g£Æ_Æg
;

115 
gss_krb5_lucid_key_t
 
	g˘x_key
;

118 } 
	tgss_krb5_rfc1964_keyd©a_t
;

120 
	sgss_krb5_cfx_keyd©a
 {

121 
OM_uöt32
 
	ghave_ac˚±‹_subkey
;

124 
gss_krb5_lucid_key_t
 
	g˘x_key
;

127 
gss_krb5_lucid_key_t
 
	gac˚±‹_subkey
;

130 } 
	tgss_krb5_cfx_keyd©a_t
;

132 
	sgss_krb5_lucid_c⁄ãxt_v1
 {

133 
OM_uöt32
 
	gvîsi⁄
;

135 
OM_uöt32
 
	göôüã
;

136 
OM_uöt32
 
	gídtime
;

137 
gss_uöt64
 
	g£nd_£q
;

138 
gss_uöt64
 
	gªcv_£q
;

139 
OM_uöt32
 
	g¥Ÿocﬁ
;

147 
gss_krb5_rfc1964_keyd©a_t
 
	grfc1964_kd
;

148 
gss_krb5_cfx_keyd©a_t
 
	gcfx_kd
;

149 } 
	tgss_krb5_lucid_c⁄ãxt_v1_t
;

155 
	sgss_krb5_lucid_c⁄ãxt_vîsi⁄
 {

156 
OM_uöt32
 
	gvîsi⁄
;

157 } 
	tgss_krb5_lucid_c⁄ãxt_vîsi⁄_t
;

163 
	#gsskrb5_ªgi°î_ac˚±‹_idítôy
 
krb5_gss_ªgi°î_ac˚±‹_idítôy


	)

165 
OM_uöt32
 
KRB5_CALLCONV
 
krb5_gss_ªgi°î_ac˚±‹_idítôy
(const *);

167 
OM_uöt32
 
KRB5_CALLCONV
 
gss_krb5_gë_tkt_Êags
(

168 
OM_uöt32
 *
mö‹_°©us
,

169 
gss_˘x_id_t
 
c⁄ãxt_h™dÀ
,

170 
krb5_Êags
 *
tickë_Êags
);

172 
OM_uöt32
 
KRB5_CALLCONV
 
gss_krb5_c›y_cˇche
(

173 
OM_uöt32
 *
mö‹_°©us
,

174 
gss_¸ed_id_t
 
¸ed_h™dÀ
,

175 
krb5_cˇche
 
out_cˇche
);

177 
OM_uöt32
 
KRB5_CALLCONV
 
gss_krb5_cˇche_«me
(

178 
OM_uöt32
 *
mö‹_°©us
, c⁄° *
«me
,

179 c⁄° **
out_«me
);

204 
OM_uöt32
 
KRB5_CALLCONV


205 
gss_krb5_£t_ÆlowabÀ_í˘y≥s
(
OM_uöt32
 *
mö‹_°©us
,

206 
gss_¸ed_id_t
 
¸ed
,

207 
OM_uöt32
 
num_kty≥s
,

208 
krb5_í˘y≥
 *
kty≥s
);

258 
OM_uöt32
 
KRB5_CALLCONV


259 
gss_krb5_exp‹t_lucid_£c_c⁄ãxt
(
OM_uöt32
 *
mö‹_°©us
,

260 
gss_˘x_id_t
 *
c⁄ãxt_h™dÀ
,

261 
OM_uöt32
 
vîsi⁄
,

262 **
k˘x
);

268 
OM_uöt32
 
KRB5_CALLCONV


269 
gss_krb5_‰ì_lucid_£c_c⁄ãxt
(
OM_uöt32
 *
mö‹_°©us
,

270 *
k˘x
);

273 
OM_uöt32
 
KRB5_CALLCONV


274 
gsskrb5_exåa˘_authz_d©a_‰om_£c_c⁄ãxt
(
OM_uöt32
 *
mö‹_°©us
,

275 c⁄° 
gss_˘x_id_t
 
c⁄ãxt_h™dÀ
,

276 
ad_ty≥
,

277 
gss_buf„r_t
 
ad_d©a
);

279 
OM_uöt32
 
KRB5_CALLCONV


280 
gss_krb5_£t_¸ed_rˇche
(
OM_uöt32
 *
mö‹_°©us
,

281 
gss_¸ed_id_t
 
¸ed
,

282 
krb5_rˇche
 
rˇche
);

284 
OM_uöt32
 
KRB5_CALLCONV


285 
gsskrb5_exåa˘_authtime_‰om_£c_c⁄ãxt
(
OM_uöt32
 *, 
gss_˘x_id_t
, 
krb5_time°amp
 *);

287 #ifde‡
__˝lu•lus


	@/usr/include/krb5.h

7 
	~<krb5/krb5.h
>

	@/usr/include/langinfo.h

20 #i‚de‡
_LANGINFO_H


21 
	#_LANGINFO_H
 1

	)

24 
	~<∆_ty≥s.h
>

26 
	~<bôs/loˇÀ.h
>

29 
	g__BEGIN_DECLS


35 
	#_NL_ITEM
(
ˇãg‹y
, 
ödex
Ë(((ˇãg‹yË<< 16Ë| (ödex))

	)

38 
	#_NL_ITEM_CATEGORY
(
ôem
Ë((Ë(ôemË>> 16)

	)

39 
	#_NL_ITEM_INDEX
(
ôem
Ë((Ë(ôemË& 0xffff)

	)

47 
	mABDAY_1
 = 
_NL_ITEM
 (
__LC_TIME
, 0),

48 
	#ABDAY_1
 
ABDAY_1


	)

49 
	mABDAY_2
,

50 
	#ABDAY_2
 
ABDAY_2


	)

51 
	mABDAY_3
,

52 
	#ABDAY_3
 
ABDAY_3


	)

53 
	mABDAY_4
,

54 
	#ABDAY_4
 
ABDAY_4


	)

55 
	mABDAY_5
,

56 
	#ABDAY_5
 
ABDAY_5


	)

57 
	mABDAY_6
,

58 
	#ABDAY_6
 
ABDAY_6


	)

59 
	mABDAY_7
,

60 
	#ABDAY_7
 
ABDAY_7


	)

63 
	mDAY_1
,

64 
	#DAY_1
 
DAY_1


	)

65 
	mDAY_2
,

66 
	#DAY_2
 
DAY_2


	)

67 
	mDAY_3
,

68 
	#DAY_3
 
DAY_3


	)

69 
	mDAY_4
,

70 
	#DAY_4
 
DAY_4


	)

71 
	mDAY_5
,

72 
	#DAY_5
 
DAY_5


	)

73 
	mDAY_6
,

74 
	#DAY_6
 
DAY_6


	)

75 
	mDAY_7
,

76 
	#DAY_7
 
DAY_7


	)

79 
	mABMON_1
,

80 
	#ABMON_1
 
ABMON_1


	)

81 
	mABMON_2
,

82 
	#ABMON_2
 
ABMON_2


	)

83 
	mABMON_3
,

84 
	#ABMON_3
 
ABMON_3


	)

85 
	mABMON_4
,

86 
	#ABMON_4
 
ABMON_4


	)

87 
	mABMON_5
,

88 
	#ABMON_5
 
ABMON_5


	)

89 
	mABMON_6
,

90 
	#ABMON_6
 
ABMON_6


	)

91 
	mABMON_7
,

92 
	#ABMON_7
 
ABMON_7


	)

93 
	mABMON_8
,

94 
	#ABMON_8
 
ABMON_8


	)

95 
	mABMON_9
,

96 
	#ABMON_9
 
ABMON_9


	)

97 
	mABMON_10
,

98 
	#ABMON_10
 
ABMON_10


	)

99 
	mABMON_11
,

100 
	#ABMON_11
 
ABMON_11


	)

101 
	mABMON_12
,

102 
	#ABMON_12
 
ABMON_12


	)

105 
	mMON_1
,

106 
	#MON_1
 
MON_1


	)

107 
	mMON_2
,

108 
	#MON_2
 
MON_2


	)

109 
	mMON_3
,

110 
	#MON_3
 
MON_3


	)

111 
	mMON_4
,

112 
	#MON_4
 
MON_4


	)

113 
	mMON_5
,

114 
	#MON_5
 
MON_5


	)

115 
	mMON_6
,

116 
	#MON_6
 
MON_6


	)

117 
	mMON_7
,

118 
	#MON_7
 
MON_7


	)

119 
	mMON_8
,

120 
	#MON_8
 
MON_8


	)

121 
	mMON_9
,

122 
	#MON_9
 
MON_9


	)

123 
	mMON_10
,

124 
	#MON_10
 
MON_10


	)

125 
	mMON_11
,

126 
	#MON_11
 
MON_11


	)

127 
	mMON_12
,

128 
	#MON_12
 
MON_12


	)

130 
	mAM_STR
,

131 
	#AM_STR
 
AM_STR


	)

132 
	mPM_STR
,

133 
	#PM_STR
 
PM_STR


	)

135 
	mD_T_FMT
,

136 
	#D_T_FMT
 
D_T_FMT


	)

137 
	mD_FMT
,

138 
	#D_FMT
 
D_FMT


	)

139 
	mT_FMT
,

140 
	#T_FMT
 
T_FMT


	)

141 
	mT_FMT_AMPM
,

142 
	#T_FMT_AMPM
 
T_FMT_AMPM


	)

144 
	mERA
,

145 
	#ERA
 
ERA


	)

146 
	m__ERA_YEAR
,

147 #ifde‡
__USE_GNU


148 
	#ERA_YEAR
 
__ERA_YEAR


	)

150 
	mERA_D_FMT
,

151 
	#ERA_D_FMT
 
ERA_D_FMT


	)

152 
	mALT_DIGITS
,

153 
	#ALT_DIGITS
 
ALT_DIGITS


	)

154 
	mERA_D_T_FMT
,

155 
	#ERA_D_T_FMT
 
ERA_D_T_FMT


	)

156 
	mERA_T_FMT
,

157 
	#ERA_T_FMT
 
ERA_T_FMT


	)

159 
	m_NL_TIME_ERA_NUM_ENTRIES
,

160 
	m_NL_TIME_ERA_ENTRIES
,

162 
	m_NL_WABDAY_1
,

163 
	m_NL_WABDAY_2
,

164 
	m_NL_WABDAY_3
,

165 
	m_NL_WABDAY_4
,

166 
	m_NL_WABDAY_5
,

167 
	m_NL_WABDAY_6
,

168 
	m_NL_WABDAY_7
,

171 
	m_NL_WDAY_1
,

172 
	m_NL_WDAY_2
,

173 
	m_NL_WDAY_3
,

174 
	m_NL_WDAY_4
,

175 
	m_NL_WDAY_5
,

176 
	m_NL_WDAY_6
,

177 
	m_NL_WDAY_7
,

180 
	m_NL_WABMON_1
,

181 
	m_NL_WABMON_2
,

182 
	m_NL_WABMON_3
,

183 
	m_NL_WABMON_4
,

184 
	m_NL_WABMON_5
,

185 
	m_NL_WABMON_6
,

186 
	m_NL_WABMON_7
,

187 
	m_NL_WABMON_8
,

188 
	m_NL_WABMON_9
,

189 
	m_NL_WABMON_10
,

190 
	m_NL_WABMON_11
,

191 
	m_NL_WABMON_12
,

194 
	m_NL_WMON_1
,

195 
	m_NL_WMON_2
,

196 
	m_NL_WMON_3
,

197 
	m_NL_WMON_4
,

198 
	m_NL_WMON_5
,

199 
	m_NL_WMON_6
,

200 
	m_NL_WMON_7
,

201 
	m_NL_WMON_8
,

202 
	m_NL_WMON_9
,

203 
	m_NL_WMON_10
,

204 
	m_NL_WMON_11
,

205 
	m_NL_WMON_12
,

207 
	m_NL_WAM_STR
,

208 
	m_NL_WPM_STR
,

210 
	m_NL_WD_T_FMT
,

211 
	m_NL_WD_FMT
,

212 
	m_NL_WT_FMT
,

213 
	m_NL_WT_FMT_AMPM
,

215 
	m_NL_WERA_YEAR
,

216 
	m_NL_WERA_D_FMT
,

217 
	m_NL_WALT_DIGITS
,

218 
	m_NL_WERA_D_T_FMT
,

219 
	m_NL_WERA_T_FMT
,

221 
	m_NL_TIME_WEEK_NDAYS
,

222 
	m_NL_TIME_WEEK_1STDAY
,

223 
	m_NL_TIME_WEEK_1STWEEK
,

224 
	m_NL_TIME_FIRST_WEEKDAY
,

225 
	m_NL_TIME_FIRST_WORKDAY
,

226 
	m_NL_TIME_CAL_DIRECTION
,

227 
	m_NL_TIME_TIMEZONE
,

229 
	m_DATE_FMT
,

230 
	#_DATE_FMT
 
_DATE_FMT


	)

231 
	m_NL_W_DATE_FMT
,

233 
	m_NL_TIME_CODESET
,

235 
	m_NL_NUM_LC_TIME
,

240 
	m_NL_COLLATE_NRULES
 = 
_NL_ITEM
 (
__LC_COLLATE
, 0),

241 
	m_NL_COLLATE_RULESETS
,

242 
	m_NL_COLLATE_TABLEMB
,

243 
	m_NL_COLLATE_WEIGHTMB
,

244 
	m_NL_COLLATE_EXTRAMB
,

245 
	m_NL_COLLATE_INDIRECTMB
,

246 
	m_NL_COLLATE_GAP1
,

247 
	m_NL_COLLATE_GAP2
,

248 
	m_NL_COLLATE_GAP3
,

249 
	m_NL_COLLATE_TABLEWC
,

250 
	m_NL_COLLATE_WEIGHTWC
,

251 
	m_NL_COLLATE_EXTRAWC
,

252 
	m_NL_COLLATE_INDIRECTWC
,

253 
	m_NL_COLLATE_SYMB_HASH_SIZEMB
,

254 
	m_NL_COLLATE_SYMB_TABLEMB
,

255 
	m_NL_COLLATE_SYMB_EXTRAMB
,

256 
	m_NL_COLLATE_COLLSEQMB
,

257 
	m_NL_COLLATE_COLLSEQWC
,

258 
	m_NL_COLLATE_CODESET
,

259 
	m_NL_NUM_LC_COLLATE
,

264 
	m_NL_CTYPE_CLASS
 = 
_NL_ITEM
 (
__LC_CTYPE
, 0),

265 
	m_NL_CTYPE_TOUPPER
,

266 
	m_NL_CTYPE_GAP1
,

267 
	m_NL_CTYPE_TOLOWER
,

268 
	m_NL_CTYPE_GAP2
,

269 
	m_NL_CTYPE_CLASS32
,

270 
	m_NL_CTYPE_GAP3
,

271 
	m_NL_CTYPE_GAP4
,

272 
	m_NL_CTYPE_GAP5
,

273 
	m_NL_CTYPE_GAP6
,

274 
	m_NL_CTYPE_CLASS_NAMES
,

275 
	m_NL_CTYPE_MAP_NAMES
,

276 
	m_NL_CTYPE_WIDTH
,

277 
	m_NL_CTYPE_MB_CUR_MAX
,

278 
	m_NL_CTYPE_CODESET_NAME
,

279 
	mCODESET
 = 
_NL_CTYPE_CODESET_NAME
,

280 
	#CODESET
 
CODESET


	)

281 
	m_NL_CTYPE_TOUPPER32
,

282 
	m_NL_CTYPE_TOLOWER32
,

283 
	m_NL_CTYPE_CLASS_OFFSET
,

284 
	m_NL_CTYPE_MAP_OFFSET
,

285 
	m_NL_CTYPE_INDIGITS_MB_LEN
,

286 
	m_NL_CTYPE_INDIGITS0_MB
,

287 
	m_NL_CTYPE_INDIGITS1_MB
,

288 
	m_NL_CTYPE_INDIGITS2_MB
,

289 
	m_NL_CTYPE_INDIGITS3_MB
,

290 
	m_NL_CTYPE_INDIGITS4_MB
,

291 
	m_NL_CTYPE_INDIGITS5_MB
,

292 
	m_NL_CTYPE_INDIGITS6_MB
,

293 
	m_NL_CTYPE_INDIGITS7_MB
,

294 
	m_NL_CTYPE_INDIGITS8_MB
,

295 
	m_NL_CTYPE_INDIGITS9_MB
,

296 
	m_NL_CTYPE_INDIGITS_WC_LEN
,

297 
	m_NL_CTYPE_INDIGITS0_WC
,

298 
	m_NL_CTYPE_INDIGITS1_WC
,

299 
	m_NL_CTYPE_INDIGITS2_WC
,

300 
	m_NL_CTYPE_INDIGITS3_WC
,

301 
	m_NL_CTYPE_INDIGITS4_WC
,

302 
	m_NL_CTYPE_INDIGITS5_WC
,

303 
	m_NL_CTYPE_INDIGITS6_WC
,

304 
	m_NL_CTYPE_INDIGITS7_WC
,

305 
	m_NL_CTYPE_INDIGITS8_WC
,

306 
	m_NL_CTYPE_INDIGITS9_WC
,

307 
	m_NL_CTYPE_OUTDIGIT0_MB
,

308 
	m_NL_CTYPE_OUTDIGIT1_MB
,

309 
	m_NL_CTYPE_OUTDIGIT2_MB
,

310 
	m_NL_CTYPE_OUTDIGIT3_MB
,

311 
	m_NL_CTYPE_OUTDIGIT4_MB
,

312 
	m_NL_CTYPE_OUTDIGIT5_MB
,

313 
	m_NL_CTYPE_OUTDIGIT6_MB
,

314 
	m_NL_CTYPE_OUTDIGIT7_MB
,

315 
	m_NL_CTYPE_OUTDIGIT8_MB
,

316 
	m_NL_CTYPE_OUTDIGIT9_MB
,

317 
	m_NL_CTYPE_OUTDIGIT0_WC
,

318 
	m_NL_CTYPE_OUTDIGIT1_WC
,

319 
	m_NL_CTYPE_OUTDIGIT2_WC
,

320 
	m_NL_CTYPE_OUTDIGIT3_WC
,

321 
	m_NL_CTYPE_OUTDIGIT4_WC
,

322 
	m_NL_CTYPE_OUTDIGIT5_WC
,

323 
	m_NL_CTYPE_OUTDIGIT6_WC
,

324 
	m_NL_CTYPE_OUTDIGIT7_WC
,

325 
	m_NL_CTYPE_OUTDIGIT8_WC
,

326 
	m_NL_CTYPE_OUTDIGIT9_WC
,

327 
	m_NL_CTYPE_TRANSLIT_TAB_SIZE
,

328 
	m_NL_CTYPE_TRANSLIT_FROM_IDX
,

329 
	m_NL_CTYPE_TRANSLIT_FROM_TBL
,

330 
	m_NL_CTYPE_TRANSLIT_TO_IDX
,

331 
	m_NL_CTYPE_TRANSLIT_TO_TBL
,

332 
	m_NL_CTYPE_TRANSLIT_DEFAULT_MISSING_LEN
,

333 
	m_NL_CTYPE_TRANSLIT_DEFAULT_MISSING
,

334 
	m_NL_CTYPE_TRANSLIT_IGNORE_LEN
,

335 
	m_NL_CTYPE_TRANSLIT_IGNORE
,

336 
	m_NL_CTYPE_MAP_TO_NONASCII
,

337 
	m_NL_CTYPE_EXTRA_MAP_1
,

338 
	m_NL_CTYPE_EXTRA_MAP_2
,

339 
	m_NL_CTYPE_EXTRA_MAP_3
,

340 
	m_NL_CTYPE_EXTRA_MAP_4
,

341 
	m_NL_CTYPE_EXTRA_MAP_5
,

342 
	m_NL_CTYPE_EXTRA_MAP_6
,

343 
	m_NL_CTYPE_EXTRA_MAP_7
,

344 
	m_NL_CTYPE_EXTRA_MAP_8
,

345 
	m_NL_CTYPE_EXTRA_MAP_9
,

346 
	m_NL_CTYPE_EXTRA_MAP_10
,

347 
	m_NL_CTYPE_EXTRA_MAP_11
,

348 
	m_NL_CTYPE_EXTRA_MAP_12
,

349 
	m_NL_CTYPE_EXTRA_MAP_13
,

350 
	m_NL_CTYPE_EXTRA_MAP_14
,

351 
	m_NL_NUM_LC_CTYPE
,

356 
	m__INT_CURR_SYMBOL
 = 
_NL_ITEM
 (
__LC_MONETARY
, 0),

357 #ifde‡
__USE_GNU


358 
	#INT_CURR_SYMBOL
 
__INT_CURR_SYMBOL


	)

360 
	m__CURRENCY_SYMBOL
,

361 #ifde‡
__USE_GNU


362 
	#CURRENCY_SYMBOL
 
__CURRENCY_SYMBOL


	)

364 
	m__MON_DECIMAL_POINT
,

365 #ifde‡
__USE_GNU


366 
	#MON_DECIMAL_POINT
 
__MON_DECIMAL_POINT


	)

368 
	m__MON_THOUSANDS_SEP
,

369 #ifde‡
__USE_GNU


370 
	#MON_THOUSANDS_SEP
 
__MON_THOUSANDS_SEP


	)

372 
	m__MON_GROUPING
,

373 #ifde‡
__USE_GNU


374 
	#MON_GROUPING
 
__MON_GROUPING


	)

376 
	m__POSITIVE_SIGN
,

377 #ifde‡
__USE_GNU


378 
	#POSITIVE_SIGN
 
__POSITIVE_SIGN


	)

380 
	m__NEGATIVE_SIGN
,

381 #ifde‡
__USE_GNU


382 
	#NEGATIVE_SIGN
 
__NEGATIVE_SIGN


	)

384 
	m__INT_FRAC_DIGITS
,

385 #ifde‡
__USE_GNU


386 
	#INT_FRAC_DIGITS
 
__INT_FRAC_DIGITS


	)

388 
	m__FRAC_DIGITS
,

389 #ifde‡
__USE_GNU


390 
	#FRAC_DIGITS
 
__FRAC_DIGITS


	)

392 
	m__P_CS_PRECEDES
,

393 #ifde‡
__USE_GNU


394 
	#P_CS_PRECEDES
 
__P_CS_PRECEDES


	)

396 
	m__P_SEP_BY_SPACE
,

397 #ifde‡
__USE_GNU


398 
	#P_SEP_BY_SPACE
 
__P_SEP_BY_SPACE


	)

400 
	m__N_CS_PRECEDES
,

401 #ifde‡
__USE_GNU


402 
	#N_CS_PRECEDES
 
__N_CS_PRECEDES


	)

404 
	m__N_SEP_BY_SPACE
,

405 #ifde‡
__USE_GNU


406 
	#N_SEP_BY_SPACE
 
__N_SEP_BY_SPACE


	)

408 
	m__P_SIGN_POSN
,

409 #ifde‡
__USE_GNU


410 
	#P_SIGN_POSN
 
__P_SIGN_POSN


	)

412 
	m__N_SIGN_POSN
,

413 #ifde‡
__USE_GNU


414 
	#N_SIGN_POSN
 
__N_SIGN_POSN


	)

416 
	m_NL_MONETARY_CRNCYSTR
,

417 
	#CRNCYSTR
 
_NL_MONETARY_CRNCYSTR


	)

418 
	m__INT_P_CS_PRECEDES
,

419 #ifde‡
__USE_GNU


420 
	#INT_P_CS_PRECEDES
 
__INT_P_CS_PRECEDES


	)

422 
	m__INT_P_SEP_BY_SPACE
,

423 #ifde‡
__USE_GNU


424 
	#INT_P_SEP_BY_SPACE
 
__INT_P_SEP_BY_SPACE


	)

426 
	m__INT_N_CS_PRECEDES
,

427 #ifde‡
__USE_GNU


428 
	#INT_N_CS_PRECEDES
 
__INT_N_CS_PRECEDES


	)

430 
	m__INT_N_SEP_BY_SPACE
,

431 #ifde‡
__USE_GNU


432 
	#INT_N_SEP_BY_SPACE
 
__INT_N_SEP_BY_SPACE


	)

434 
	m__INT_P_SIGN_POSN
,

435 #ifde‡
__USE_GNU


436 
	#INT_P_SIGN_POSN
 
__INT_P_SIGN_POSN


	)

438 
	m__INT_N_SIGN_POSN
,

439 #ifde‡
__USE_GNU


440 
	#INT_N_SIGN_POSN
 
__INT_N_SIGN_POSN


	)

442 
	m_NL_MONETARY_DUO_INT_CURR_SYMBOL
,

443 
	m_NL_MONETARY_DUO_CURRENCY_SYMBOL
,

444 
	m_NL_MONETARY_DUO_INT_FRAC_DIGITS
,

445 
	m_NL_MONETARY_DUO_FRAC_DIGITS
,

446 
	m_NL_MONETARY_DUO_P_CS_PRECEDES
,

447 
	m_NL_MONETARY_DUO_P_SEP_BY_SPACE
,

448 
	m_NL_MONETARY_DUO_N_CS_PRECEDES
,

449 
	m_NL_MONETARY_DUO_N_SEP_BY_SPACE
,

450 
	m_NL_MONETARY_DUO_INT_P_CS_PRECEDES
,

451 
	m_NL_MONETARY_DUO_INT_P_SEP_BY_SPACE
,

452 
	m_NL_MONETARY_DUO_INT_N_CS_PRECEDES
,

453 
	m_NL_MONETARY_DUO_INT_N_SEP_BY_SPACE
,

454 
	m_NL_MONETARY_DUO_P_SIGN_POSN
,

455 
	m_NL_MONETARY_DUO_N_SIGN_POSN
,

456 
	m_NL_MONETARY_DUO_INT_P_SIGN_POSN
,

457 
	m_NL_MONETARY_DUO_INT_N_SIGN_POSN
,

458 
	m_NL_MONETARY_UNO_VALID_FROM
,

459 
	m_NL_MONETARY_UNO_VALID_TO
,

460 
	m_NL_MONETARY_DUO_VALID_FROM
,

461 
	m_NL_MONETARY_DUO_VALID_TO
,

462 
	m_NL_MONETARY_CONVERSION_RATE
,

463 
	m_NL_MONETARY_DECIMAL_POINT_WC
,

464 
	m_NL_MONETARY_THOUSANDS_SEP_WC
,

465 
	m_NL_MONETARY_CODESET
,

466 
	m_NL_NUM_LC_MONETARY
,

470 
	m__DECIMAL_POINT
 = 
_NL_ITEM
 (
__LC_NUMERIC
, 0),

471 #ifde‡
__USE_GNU


472 
	#DECIMAL_POINT
 
__DECIMAL_POINT


	)

474 
	mRADIXCHAR
 = 
__DECIMAL_POINT
,

475 
	#RADIXCHAR
 
RADIXCHAR


	)

476 
	m__THOUSANDS_SEP
,

477 #ifde‡
__USE_GNU


478 
	#THOUSANDS_SEP
 
__THOUSANDS_SEP


	)

480 
	mTHOUSEP
 = 
__THOUSANDS_SEP
,

481 
	#THOUSEP
 
THOUSEP


	)

482 
	m__GROUPING
,

483 #ifde‡
__USE_GNU


484 
	#GROUPING
 
__GROUPING


	)

486 
	m_NL_NUMERIC_DECIMAL_POINT_WC
,

487 
	m_NL_NUMERIC_THOUSANDS_SEP_WC
,

488 
	m_NL_NUMERIC_CODESET
,

489 
	m_NL_NUM_LC_NUMERIC
,

491 
	m__YESEXPR
 = 
_NL_ITEM
 (
__LC_MESSAGES
, 0),

492 
	#YESEXPR
 
__YESEXPR


	)

493 
	m__NOEXPR
,

494 
	#NOEXPR
 
__NOEXPR


	)

495 
	m__YESSTR
,

496 #i‡
deföed
 
__USE_GNU
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

497 
	#YESSTR
 
__YESSTR


	)

499 
	m__NOSTR
,

500 #i‡
deföed
 
__USE_GNU
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

501 
	#NOSTR
 
__NOSTR


	)

503 
	m_NL_MESSAGES_CODESET
,

504 
	m_NL_NUM_LC_MESSAGES
,

506 
	m_NL_PAPER_HEIGHT
 = 
_NL_ITEM
 (
__LC_PAPER
, 0),

507 
	m_NL_PAPER_WIDTH
,

508 
	m_NL_PAPER_CODESET
,

509 
	m_NL_NUM_LC_PAPER
,

511 
	m_NL_NAME_NAME_FMT
 = 
_NL_ITEM
 (
__LC_NAME
, 0),

512 
	m_NL_NAME_NAME_GEN
,

513 
	m_NL_NAME_NAME_MR
,

514 
	m_NL_NAME_NAME_MRS
,

515 
	m_NL_NAME_NAME_MISS
,

516 
	m_NL_NAME_NAME_MS
,

517 
	m_NL_NAME_CODESET
,

518 
	m_NL_NUM_LC_NAME
,

520 
	m_NL_ADDRESS_POSTAL_FMT
 = 
_NL_ITEM
 (
__LC_ADDRESS
, 0),

521 
	m_NL_ADDRESS_COUNTRY_NAME
,

522 
	m_NL_ADDRESS_COUNTRY_POST
,

523 
	m_NL_ADDRESS_COUNTRY_AB2
,

524 
	m_NL_ADDRESS_COUNTRY_AB3
,

525 
	m_NL_ADDRESS_COUNTRY_CAR
,

526 
	m_NL_ADDRESS_COUNTRY_NUM
,

527 
	m_NL_ADDRESS_COUNTRY_ISBN
,

528 
	m_NL_ADDRESS_LANG_NAME
,

529 
	m_NL_ADDRESS_LANG_AB
,

530 
	m_NL_ADDRESS_LANG_TERM
,

531 
	m_NL_ADDRESS_LANG_LIB
,

532 
	m_NL_ADDRESS_CODESET
,

533 
	m_NL_NUM_LC_ADDRESS
,

535 
	m_NL_TELEPHONE_TEL_INT_FMT
 = 
_NL_ITEM
 (
__LC_TELEPHONE
, 0),

536 
	m_NL_TELEPHONE_TEL_DOM_FMT
,

537 
	m_NL_TELEPHONE_INT_SELECT
,

538 
	m_NL_TELEPHONE_INT_PREFIX
,

539 
	m_NL_TELEPHONE_CODESET
,

540 
	m_NL_NUM_LC_TELEPHONE
,

542 
	m_NL_MEASUREMENT_MEASUREMENT
 = 
_NL_ITEM
 (
__LC_MEASUREMENT
, 0),

543 
	m_NL_MEASUREMENT_CODESET
,

544 
	m_NL_NUM_LC_MEASUREMENT
,

546 
	m_NL_IDENTIFICATION_TITLE
 = 
_NL_ITEM
 (
__LC_IDENTIFICATION
, 0),

547 
	m_NL_IDENTIFICATION_SOURCE
,

548 
	m_NL_IDENTIFICATION_ADDRESS
,

549 
	m_NL_IDENTIFICATION_CONTACT
,

550 
	m_NL_IDENTIFICATION_EMAIL
,

551 
	m_NL_IDENTIFICATION_TEL
,

552 
	m_NL_IDENTIFICATION_FAX
,

553 
	m_NL_IDENTIFICATION_LANGUAGE
,

554 
	m_NL_IDENTIFICATION_TERRITORY
,

555 
	m_NL_IDENTIFICATION_AUDIENCE
,

556 
	m_NL_IDENTIFICATION_APPLICATION
,

557 
	m_NL_IDENTIFICATION_ABBREVIATION
,

558 
	m_NL_IDENTIFICATION_REVISION
,

559 
	m_NL_IDENTIFICATION_DATE
,

560 
	m_NL_IDENTIFICATION_CATEGORY
,

561 
	m_NL_IDENTIFICATION_CODESET
,

562 
	m_NL_NUM_LC_IDENTIFICATION
,

565 
	m_NL_NUM


570 
	#_NL_LOCALE_NAME
(
ˇãg‹y
Ë
	`_NL_ITEM
 ((ˇãg‹y), -1)

	)

571 #ifde‡
__USE_GNU


572 
	#NL_LOCALE_NAME
(
ˇãg‹y
Ë
	`_NL_LOCALE_NAME
 (ˇãg‹y)

	)

582 *
	$∆_œngöfo
 (
∆_ôem
 
__ôem
Ë
__THROW
;

585 #ifdef 
__USE_XOPEN2K


590 
	~<xloˇÀ.h
>

593 *
	`∆_œngöfo_l
 (
∆_ôem
 
__ôem
, 
__loˇÀ_t
 
__l
);

596 
__END_DECLS


	@/usr/include/net/if.h

20 #i‚de‡
_NET_IF_H


21 
	#_NET_IF_H
 1

	)

23 
	~<„©uªs.h
>

25 #ifde‡
__USE_MISC


26 
	~<sys/ty≥s.h
>

27 
	~<sys/sockë.h
>

32 
	#IF_NAMESIZE
 16

	)

34 
	sif_«meödex


36 
	mif_ödex
;

37 *
	mif_«me
;

41 #ifde‡
__USE_MISC


45 
	mIFF_UP
 = 0x1,

46 
	#IFF_UP
 
IFF_UP


	)

47 
	mIFF_BROADCAST
 = 0x2,

48 
	#IFF_BROADCAST
 
IFF_BROADCAST


	)

49 
	mIFF_DEBUG
 = 0x4,

50 
	#IFF_DEBUG
 
IFF_DEBUG


	)

51 
	mIFF_LOOPBACK
 = 0x8,

52 
	#IFF_LOOPBACK
 
IFF_LOOPBACK


	)

53 
	mIFF_POINTOPOINT
 = 0x10,

54 
	#IFF_POINTOPOINT
 
IFF_POINTOPOINT


	)

55 
	mIFF_NOTRAILERS
 = 0x20,

56 
	#IFF_NOTRAILERS
 
IFF_NOTRAILERS


	)

57 
	mIFF_RUNNING
 = 0x40,

58 
	#IFF_RUNNING
 
IFF_RUNNING


	)

59 
	mIFF_NOARP
 = 0x80,

60 
	#IFF_NOARP
 
IFF_NOARP


	)

61 
	mIFF_PROMISC
 = 0x100,

62 
	#IFF_PROMISC
 
IFF_PROMISC


	)

65 
	mIFF_ALLMULTI
 = 0x200,

66 
	#IFF_ALLMULTI
 
IFF_ALLMULTI


	)

68 
	mIFF_MASTER
 = 0x400,

69 
	#IFF_MASTER
 
IFF_MASTER


	)

70 
	mIFF_SLAVE
 = 0x800,

71 
	#IFF_SLAVE
 
IFF_SLAVE


	)

73 
	mIFF_MULTICAST
 = 0x1000,

74 
	#IFF_MULTICAST
 
IFF_MULTICAST


	)

76 
	mIFF_PORTSEL
 = 0x2000,

77 
	#IFF_PORTSEL
 
IFF_PORTSEL


	)

78 
	mIFF_AUTOMEDIA
 = 0x4000,

79 
	#IFF_AUTOMEDIA
 
IFF_AUTOMEDIA


	)

80 
	mIFF_DYNAMIC
 = 0x8000

81 
	#IFF_DYNAMIC
 
IFF_DYNAMIC


	)

89 
	siÁddr


91 
sockaddr
 
	miÁ_addr
;

94 
sockaddr
 
	mifu_brﬂdaddr
;

95 
sockaddr
 
	mifu_d°addr
;

96 } 
	miÁ_ifu
;

97 
iÁ˚
 *
	miÁ_iÂ
;

98 
iÁddr
 *
	miÁ_√xt
;

101 
	#iÁ_brﬂdaddr
 
iÁ_ifu
.
ifu_brﬂdaddr


	)

102 
	#iÁ_d°addr
 
iÁ_ifu
.
ifu_d°addr


	)

112 
	sifm≠


114 
	mmem_°¨t
;

115 
	mmem_íd
;

116 
	mba£_addr
;

117 
	múq
;

118 
	mdma
;

119 
	mp‹t
;

127 
	si‰eq


129 
	#IFHWADDRLEN
 6

	)

130 
	#IFNAMSIZ
 
IF_NAMESIZE


	)

133 
	mi‰n_«me
[
IFNAMSIZ
];

134 } 
	mi‰_i‰n
;

138 
sockaddr
 
	mi‰u_addr
;

139 
sockaddr
 
	mi‰u_d°addr
;

140 
sockaddr
 
	mi‰u_brﬂdaddr
;

141 
sockaddr
 
	mi‰u_√tmask
;

142 
sockaddr
 
	mi‰u_hwaddr
;

143 
	mi‰u_Êags
;

144 
	mi‰u_ivÆue
;

145 
	mi‰u_mtu
;

146 
ifm≠
 
	mi‰u_m≠
;

147 
	mi‰u_¶ave
[
IFNAMSIZ
];

148 
	mi‰u_√w«me
[
IFNAMSIZ
];

149 
__ˇddr_t
 
	mi‰u_d©a
;

150 } 
	mi‰_i‰u
;

152 
	#i‰_«me
 
i‰_i‰n
.
i‰n_«me


	)

153 
	#i‰_hwaddr
 
i‰_i‰u
.
i‰u_hwaddr


	)

154 
	#i‰_addr
 
i‰_i‰u
.
i‰u_addr


	)

155 
	#i‰_d°addr
 
i‰_i‰u
.
i‰u_d°addr


	)

156 
	#i‰_brﬂdaddr
 
i‰_i‰u
.
i‰u_brﬂdaddr


	)

157 
	#i‰_√tmask
 
i‰_i‰u
.
i‰u_√tmask


	)

158 
	#i‰_Êags
 
i‰_i‰u
.
i‰u_Êags


	)

159 
	#i‰_mëric
 
i‰_i‰u
.
i‰u_ivÆue


	)

160 
	#i‰_mtu
 
i‰_i‰u
.
i‰u_mtu


	)

161 
	#i‰_m≠
 
i‰_i‰u
.
i‰u_m≠


	)

162 
	#i‰_¶ave
 
i‰_i‰u
.
i‰u_¶ave


	)

163 
	#i‰_d©a
 
i‰_i‰u
.
i‰u_d©a


	)

164 
	#i‰_ifödex
 
i‰_i‰u
.
i‰u_ivÆue


	)

165 
	#i‰_b™dwidth
 
i‰_i‰u
.
i‰u_ivÆue


	)

166 
	#i‰_qÀn
 
i‰_i‰u
.
i‰u_ivÆue


	)

167 
	#i‰_√w«me
 
i‰_i‰u
.
i‰u_√w«me


	)

168 
	#_IOT_i‰eq
 
	`_IOT
(
	`_IOTS
(),
IFNAMSIZ
,_IOTS(),16,0,0)

	)

169 
	#_IOT_i‰eq_sh‹t
 
	`_IOT
(
	`_IOTS
(),
IFNAMSIZ
,_IOTS(),1,0,0)

	)

170 
	#_IOT_i‰eq_öt
 
	`_IOT
(
	`_IOTS
(),
IFNAMSIZ
,_IOTS(),1,0,0)

	)

177 
	sifc⁄f


179 
	mifc_Àn
;

182 
__ˇddr_t
 
	mifcu_buf
;

183 
i‰eq
 *
	mifcu_ªq
;

184 } 
	mifc_ifcu
;

186 
	#ifc_buf
 
ifc_ifcu
.
ifcu_buf


	)

187 
	#ifc_ªq
 
ifc_ifcu
.
ifcu_ªq


	)

188 
	#_IOT_ifc⁄f
 
	`_IOT
(
	`_IOTS
(
ifc⁄f
),1,0,0,0,0Ë

	)

191 
__BEGIN_DECLS


194 
	$if_«mëoödex
 (
__c⁄°
 *
__i‚ame
Ë
__THROW
;

195 *
	$if_ödext⁄ame
 (
__ifödex
, *
__i‚ame
Ë
__THROW
;

198 
if_«meödex
 *
	$if_«meödex
 (Ë
__THROW
;

201 
	$if_‰ì«meödex
 (
if_«meödex
 *
__±r
Ë
__THROW
;

203 
__END_DECLS


	@/usr/include/netinet/in.h

20 #i‚def 
_NETINET_IN_H


21 
	#_NETINET_IN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<bôs/ty≥s.h
>

29 
__BEGIN_DECLS


34 
	mIPPROTO_IP
 = 0,

35 
	#IPPROTO_IP
 
IPPROTO_IP


	)

36 
	mIPPROTO_HOPOPTS
 = 0,

37 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

38 
	mIPPROTO_ICMP
 = 1,

39 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

40 
	mIPPROTO_IGMP
 = 2,

41 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

42 
	mIPPROTO_IPIP
 = 4,

43 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

44 
	mIPPROTO_TCP
 = 6,

45 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

46 
	mIPPROTO_EGP
 = 8,

47 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

48 
	mIPPROTO_PUP
 = 12,

49 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

50 
	mIPPROTO_UDP
 = 17,

51 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

52 
	mIPPROTO_IDP
 = 22,

53 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

54 
	mIPPROTO_TP
 = 29,

55 
	#IPPROTO_TP
 
IPPROTO_TP


	)

56 
	mIPPROTO_DCCP
 = 33,

57 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

58 
	mIPPROTO_IPV6
 = 41,

59 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

60 
	mIPPROTO_ROUTING
 = 43,

61 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

62 
	mIPPROTO_FRAGMENT
 = 44,

63 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

64 
	mIPPROTO_RSVP
 = 46,

65 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

66 
	mIPPROTO_GRE
 = 47,

67 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

68 
	mIPPROTO_ESP
 = 50,

69 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

70 
	mIPPROTO_AH
 = 51,

71 
	#IPPROTO_AH
 
IPPROTO_AH


	)

72 
	mIPPROTO_ICMPV6
 = 58,

73 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

74 
	mIPPROTO_NONE
 = 59,

75 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

76 
	mIPPROTO_DSTOPTS
 = 60,

77 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

78 
	mIPPROTO_MTP
 = 92,

79 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

80 
	mIPPROTO_ENCAP
 = 98,

81 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

82 
	mIPPROTO_PIM
 = 103,

83 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

84 
	mIPPROTO_COMP
 = 108,

85 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

86 
	mIPPROTO_SCTP
 = 132,

87 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

88 
	mIPPROTO_UDPLITE
 = 136,

89 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


97 
uöt16_t
 
	tö_p‹t_t
;

102 
	mIPPORT_ECHO
 = 7,

103 
	mIPPORT_DISCARD
 = 9,

104 
	mIPPORT_SYSTAT
 = 11,

105 
	mIPPORT_DAYTIME
 = 13,

106 
	mIPPORT_NETSTAT
 = 15,

107 
	mIPPORT_FTP
 = 21,

108 
	mIPPORT_TELNET
 = 23,

109 
	mIPPORT_SMTP
 = 25,

110 
	mIPPORT_TIMESERVER
 = 37,

111 
	mIPPORT_NAMESERVER
 = 42,

112 
	mIPPORT_WHOIS
 = 43,

113 
	mIPPORT_MTP
 = 57,

115 
	mIPPORT_TFTP
 = 69,

116 
	mIPPORT_RJE
 = 77,

117 
	mIPPORT_FINGER
 = 79,

118 
	mIPPORT_TTYLINK
 = 87,

119 
	mIPPORT_SUPDUP
 = 95,

122 
	mIPPORT_EXECSERVER
 = 512,

123 
	mIPPORT_LOGINSERVER
 = 513,

124 
	mIPPORT_CMDSERVER
 = 514,

125 
	mIPPORT_EFSSERVER
 = 520,

128 
	mIPPORT_BIFFUDP
 = 512,

129 
	mIPPORT_WHOSERVER
 = 513,

130 
	mIPPORT_ROUTESERVER
 = 520,

133 
	mIPPORT_RESERVED
 = 1024,

136 
	mIPPORT_USERRESERVED
 = 5000

141 
uöt32_t
 
	tö_addr_t
;

142 
	sö_addr


144 
ö_addr_t
 
	ms_addr
;

153 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

154 
	#IN_CLASSA_NET
 0xff000000

	)

155 
	#IN_CLASSA_NSHIFT
 24

	)

156 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

157 
	#IN_CLASSA_MAX
 128

	)

159 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

160 
	#IN_CLASSB_NET
 0xffff0000

	)

161 
	#IN_CLASSB_NSHIFT
 16

	)

162 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

163 
	#IN_CLASSB_MAX
 65536

	)

165 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

166 
	#IN_CLASSC_NET
 0xffffff00

	)

167 
	#IN_CLASSC_NSHIFT
 8

	)

168 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

170 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

171 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

173 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

174 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

177 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

179 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

181 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

184 
	#IN_LOOPBACKNET
 127

	)

186 #i‚de‡
INADDR_LOOPBACK


187 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

191 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

192 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

193 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

194 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

198 
	sö6_addr


202 
uöt8_t
 
	m__u6_addr8
[16];

203 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


204 
uöt16_t
 
	m__u6_addr16
[8];

205 
uöt32_t
 
	m__u6_addr32
[4];

207 } 
	m__ö6_u
;

208 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

209 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


210 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

211 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

215 c⁄° 
ö6_addr
 
ö6addr_™y
;

216 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

217 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

218 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

220 
	#INET_ADDRSTRLEN
 16

	)

221 
	#INET6_ADDRSTRLEN
 46

	)

225 
	ssockaddr_ö


227 
__SOCKADDR_COMMON
 (
sö_
);

228 
ö_p‹t_t
 
	msö_p‹t
;

229 
ö_addr
 
	msö_addr
;

232 
	msö_zîo
[ (
sockaddr
) -

233 
__SOCKADDR_COMMON_SIZE
 -

234  (
ö_p‹t_t
) -

235  (
ö_addr
)];

239 
	ssockaddr_ö6


241 
__SOCKADDR_COMMON
 (
sö6_
);

242 
ö_p‹t_t
 
	msö6_p‹t
;

243 
uöt32_t
 
	msö6_Êowöfo
;

244 
ö6_addr
 
	msö6_addr
;

245 
uöt32_t
 
	msö6_sc›e_id
;

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


251 
	sù_mªq


254 
ö_addr
 
	mimr_mu…üddr
;

257 
ö_addr
 
	mimr_öãrÁ˚
;

260 
	sù_mªq_sour˚


263 
ö_addr
 
	mimr_mu…üddr
;

266 
ö_addr
 
	mimr_öãrÁ˚
;

269 
ö_addr
 
	mimr_sour˚addr
;

275 
	sùv6_mªq


278 
ö6_addr
 
	mùv6mr_mu…üddr
;

281 
	mùv6mr_öãrÁ˚
;

285 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


287 
	sgroup_ªq


290 
uöt32_t
 
	mgr_öãrÁ˚
;

293 
sockaddr_°‹age
 
	mgr_group
;

296 
	sgroup_sour˚_ªq


299 
uöt32_t
 
	mg§_öãrÁ˚
;

302 
sockaddr_°‹age
 
	mg§_group
;

305 
sockaddr_°‹age
 
	mg§_sour˚
;

310 
	sù_msfûãr


313 
ö_addr
 
	mimsf_mu…üddr
;

316 
ö_addr
 
	mimsf_öãrÁ˚
;

319 
uöt32_t
 
	mimsf_fmode
;

322 
uöt32_t
 
	mimsf_num§c
;

324 
ö_addr
 
	mimsf_¶i°
[1];

327 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

328 -  (
ö_addr
) \

329 + (
num§c
Ë*  (
ö_addr
))

	)

331 
	sgroup_fûãr


334 
uöt32_t
 
	mgf_öãrÁ˚
;

337 
sockaddr_°‹age
 
	mgf_group
;

340 
uöt32_t
 
	mgf_fmode
;

343 
uöt32_t
 
	mgf_num§c
;

345 
sockaddr_°‹age
 
	mgf_¶i°
[1];

348 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

349 -  (
sockaddr_°‹age
) \

350 + ((
num§c
) \

351 *  (
sockaddr_°‹age
)))

	)

356 
	~<bôs/ö.h
>

365 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

366 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

367 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

368 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

369 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

370 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

371 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

373 
	~<ídün.h
>

376 
	~<bôs/byãsw≠.h
>

378 #ifde‡
__OPTIMIZE__


382 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


385 
	#¡ohl
(
x
Ë(x)

	)

386 
	#¡ohs
(
x
Ë(x)

	)

387 
	#ht⁄l
(
x
Ë(x)

	)

388 
	#ht⁄s
(
x
Ë(x)

	)

390 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


391 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

392 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

393 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

394 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

399 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

400 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

401 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

402 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

403 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

405 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

406 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

407 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

408 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

409 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

411 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

413 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

414 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

415 =
	`ht⁄l
 (0x„800000))

	)

417 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

418 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

419 =
	`ht⁄l
 (0x„c00000))

	)

421 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

422 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

423 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

424 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

426 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

427 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

428 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

429 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

430 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

432 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

433 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

434 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

435 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

436 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

438 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


440 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

443 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

444 
__THROW
;

448 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

449 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

450 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

452 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

453 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

454 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

456 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

457 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

458 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

460 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

461 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

462 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

464 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

465 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

466 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

469 #ifde‡
__USE_GNU


471 
	sö6_pktöfo


473 
ö6_addr
 
ùi6_addr
;

474 
ùi6_ifödex
;

478 
	sù6_mtuöfo


480 
sockaddr_ö6
 
ù6m_addr
;

481 
uöt32_t
 
ù6m_mtu
;

486 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

487 
__THROW
 
__©åibuã_dïªˇãd__
;

488 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

489 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

490 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

491 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

492 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

493 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

494 
__mu…x
, 
__∂usy
)

495 
__THROW
 
__©åibuã_dïªˇãd__
;

496 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

497 
uöt8_t
 **
__çåp
)

498 
__THROW
 
__©åibuã_dïªˇãd__
;

499 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

500 
uöt8_t
 **
__çåp
, 
__ty≥
)

501 
__THROW
 
__©åibuã_dïªˇãd__
;

505 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

506 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

507 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

508 **
__d©abuÂ
Ë
__THROW
;

509 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

510 
__THROW
;

511 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

512 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

513 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

514 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

515 **
__d©abuÂ
Ë
__THROW
;

516 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

517 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

518 **
__d©abuÂ
Ë
__THROW
;

519 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

520 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

524 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

525 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

526 
__£gmíts
Ë
__THROW
;

527 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

528 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

529 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

530 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

531 
__THROW
;

537 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

538 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

539 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

540 
__THROW
;

543 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

544 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

545 
uöt32_t
 
__num§c
,

546 
__c⁄°
 
ö_addr
 *
__¶i°
)

547 
__THROW
;

551 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

552 
__c⁄°
 
sockaddr
 *
__group
,

553 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

554 
uöt32_t
 *
__num§c
,

555 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

558 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

559 
__c⁄°
 
sockaddr
 *
__group
,

560 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

561 
uöt32_t
 
__num§c
,

562 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

565 
__END_DECLS


	@/usr/include/nss.h

22 #i‚de‡
_NSS_H


23 
	#_NSS_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<°döt.h
>

29 
__BEGIN_DECLS


32 
	enss_°©us


34 
	mNSS_STATUS_TRYAGAIN
 = -2,

35 
	mNSS_STATUS_UNAVAIL
,

36 
	mNSS_STATUS_NOTFOUND
,

37 
	mNSS_STATUS_SUCCESS
,

38 
	mNSS_STATUS_RETURN


43 
	sgaih_addπu∂e


45 
gaih_addπu∂e
 *
	m√xt
;

46 *
	m«me
;

47 
	mÁmûy
;

48 
uöt32_t
 
	maddr
[4];

49 
uöt32_t
 
	msc›eid
;

59 
	$__nss_c⁄figuª_lookup
 (
__c⁄°
 *
__db«me
,

60 
__c⁄°
 *
__°rög
Ë
__THROW
;

62 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #ifde‡
__USE_XOPEN


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

89 
__BEGIN_NAMESPACE_STD


90 #i‚de‡
__USE_FILE_OFFSET64


91 
_G_Âos_t
 
	tÂos_t
;

93 
_G_Âos64_t
 
	tÂos_t
;

95 
__END_NAMESPACE_STD


96 #ifde‡
__USE_LARGEFILE64


97 
_G_Âos64_t
 
	tÂos64_t
;

101 
	#_IOFBF
 0

	)

102 
	#_IOLBF
 1

	)

103 
	#_IONBF
 2

	)

107 #i‚de‡
BUFSIZ


108 
	#BUFSIZ
 
_IO_BUFSIZ


	)

114 #i‚de‡
EOF


115 
	#EOF
 (-1)

	)

121 
	#SEEK_SET
 0

	)

122 
	#SEEK_CUR
 1

	)

123 
	#SEEK_END
 2

	)

126 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


128 
	#P_tmpdú
 "/tmp"

	)

141 
	~<bôs/°dio_lim.h
>

145 
_IO_FILE
 *
°dö
;

146 
_IO_FILE
 *
°dout
;

147 
_IO_FILE
 *
°dîr
;

149 
	#°dö
 
°dö


	)

150 
	#°dout
 
°dout


	)

151 
	#°dîr
 
°dîr


	)

153 
__BEGIN_NAMESPACE_STD


155 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

157 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

158 
__END_NAMESPACE_STD


160 #ifde‡
__USE_ATFILE


162 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

163 
__c⁄°
 *
__√w
Ë
__THROW
;

166 
__BEGIN_NAMESPACE_STD


171 #i‚de‡
__USE_FILE_OFFSET64


172 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

174 #ifde‡
__REDIRECT


175 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

177 
	#tmpfûe
 
tmpfûe64


	)

181 #ifde‡
__USE_LARGEFILE64


182 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

186 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

187 
__END_NAMESPACE_STD


189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

209 
__BEGIN_NAMESPACE_STD


214 
	`f˛o£
 (
FILE
 *
__°ªam
);

219 
	`fÊush
 (
FILE
 *
__°ªam
);

220 
__END_NAMESPACE_STD


222 #ifde‡
__USE_MISC


229 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

232 #ifde‡
__USE_GNU


239 
	`f˛o£Æl
 ();

243 
__BEGIN_NAMESPACE_STD


244 #i‚de‡
__USE_FILE_OFFSET64


249 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

250 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

255 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

256 
__c⁄°
 *
__ª°ri˘
 
__modes
,

257 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

259 #ifde‡
__REDIRECT


260 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

261 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

262 
__wur
;

263 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

264 
__c⁄°
 *
__ª°ri˘
 
__modes
,

265 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

266 
__wur
;

268 
	#f›í
 
f›í64


	)

269 
	#‰e›í
 
‰e›í64


	)

272 
__END_NAMESPACE_STD


273 #ifde‡
__USE_LARGEFILE64


274 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

275 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

276 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

277 
__c⁄°
 *
__ª°ri˘
 
__modes
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifdef 
__USE_POSIX


283 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

286 #ifdef 
__USE_GNU


289 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

290 
__c⁄°
 *
__ª°ri˘
 
__modes
,

291 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

294 #ifde‡
__USE_XOPEN2K8


296 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

297 
__THROW
 
__wur
;

302 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

306 
__BEGIN_NAMESPACE_STD


309 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

313 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

314 
__modes
, 
size_t
 
__n
Ë
__THROW
;

315 
__END_NAMESPACE_STD


317 #ifdef 
__USE_BSD


320 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

321 
size_t
 
__size
Ë
__THROW
;

324 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

328 
__BEGIN_NAMESPACE_STD


333 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

334 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

339 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

341 
	$•rötf
 (*
__ª°ri˘
 
__s
,

342 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

348 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

349 
_G_va_li°
 
__¨g
);

354 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

356 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

357 
_G_va_li°
 
__¨g
Ë
__THROW
;

358 
__END_NAMESPACE_STD


360 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


361 
__BEGIN_NAMESPACE_C99


363 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

364 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

365 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

367 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

368 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

369 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

370 
__END_NAMESPACE_C99


373 #ifde‡
__USE_GNU


376 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

377 
_G_va_li°
 
__¨g
)

378 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

379 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

380 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

381 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

382 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

383 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

384 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

387 #ifde‡
__USE_XOPEN2K8


394 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

395 
_G_va_li°
 
__¨g
)

396 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

397 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

398 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

402 
__BEGIN_NAMESPACE_STD


407 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

408 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

413 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

415 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

416 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

418 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

419 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

420 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

421 #ifde‡
__REDIRECT


425 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

427 
__isoc99_fsˇnf
Ë
__wur
;

428 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

429 
__isoc99_sˇnf
Ë
__wur
;

430 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

431 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

432 
__isoc99_ssˇnf
Ë
__THROW
;

434 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

435 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

436 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

438 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

439 
	#fsˇnf
 
__isoc99_fsˇnf


	)

440 
	#sˇnf
 
__isoc99_sˇnf


	)

441 
	#ssˇnf
 
__isoc99_ssˇnf


	)

445 
__END_NAMESPACE_STD


447 #ifdef 
__USE_ISOC99


448 
__BEGIN_NAMESPACE_C99


453 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

454 
_G_va_li°
 
__¨g
)

455 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

461 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

462 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

465 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

466 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

467 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

469 #i‡!
deföed
 
__USE_GNU
 \

470 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

471 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

472 #ifde‡
__REDIRECT


476 
	`__REDIRECT
 (
vfsˇnf
,

477 (
FILE
 *
__ª°ri˘
 
__s
,

478 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

479 
__isoc99_vfsˇnf
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

482 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

483 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

484 
	`__REDIRECT
 (
vssˇnf
,

485 (
__c⁄°
 *
__ª°ri˘
 
__s
,

486 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

487 
__isoc99_vssˇnf
)

488 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

490 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

491 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

492 
_G_va_li°
 
__¨g
Ë
__wur
;

493 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

494 
_G_va_li°
 
__¨g
Ë
__wur
;

495 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

496 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

497 
_G_va_li°
 
__¨g
Ë
__THROW
;

498 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

499 
	#vsˇnf
 
__isoc99_vsˇnf


	)

500 
	#vssˇnf
 
__isoc99_vssˇnf


	)

504 
__END_NAMESPACE_C99


508 
__BEGIN_NAMESPACE_STD


513 
	`fgëc
 (
FILE
 *
__°ªam
);

514 
	`gëc
 (
FILE
 *
__°ªam
);

520 
	`gëch¨
 ();

521 
__END_NAMESPACE_STD


525 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

527 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


532 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

533 
	`gëch¨_u∆ocked
 ();

536 #ifde‡
__USE_MISC


543 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

547 
__BEGIN_NAMESPACE_STD


555 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

556 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

562 
	`putch¨
 (
__c
);

563 
__END_NAMESPACE_STD


567 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

569 #ifde‡
__USE_MISC


576 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

579 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


584 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

585 
	`putch¨_u∆ocked
 (
__c
);

589 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

590 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

592 
	`gëw
 (
FILE
 *
__°ªam
);

595 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

599 
__BEGIN_NAMESPACE_STD


604 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

605 
__wur
;

612 *
	$gës
 (*
__s
Ë
__wur
;

613 
__END_NAMESPACE_STD


615 #ifde‡
__USE_GNU


622 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

623 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

627 #ifdef 
__USE_XOPEN2K8


638 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

639 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

640 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

641 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

642 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

643 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

652 
size_t
 *
__ª°ri˘
 
__n
,

653 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

657 
__BEGIN_NAMESPACE_STD


662 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

668 
	`puts
 (
__c⁄°
 *
__s
);

675 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

682 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

683 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

688 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

689 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

690 
__END_NAMESPACE_STD


692 #ifde‡
__USE_GNU


699 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

700 
FILE
 *
__ª°ri˘
 
__°ªam
);

703 #ifde‡
__USE_MISC


710 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

711 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

717 
__BEGIN_NAMESPACE_STD


722 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

727 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

732 
	`ªwöd
 (
FILE
 *
__°ªam
);

733 
__END_NAMESPACE_STD


740 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


741 #i‚de‡
__USE_FILE_OFFSET64


746 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

751 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

753 #ifde‡
__REDIRECT


754 
	`__REDIRECT
 (
f£eko
,

755 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

756 
f£eko64
);

757 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

759 
	#f£eko
 
f£eko64


	)

760 
	#·ñlo
 
·ñlo64


	)

765 
__BEGIN_NAMESPACE_STD


766 #i‚de‡
__USE_FILE_OFFSET64


771 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

776 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

778 #ifde‡
__REDIRECT


779 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

780 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

781 
	`__REDIRECT
 (
f£ços
,

782 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

784 
	#fgëpos
 
fgëpos64


	)

785 
	#f£ços
 
f£ços64


	)

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_LARGEFILE64


791 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

792 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

793 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

794 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

797 
__BEGIN_NAMESPACE_STD


799 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

801 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

803 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

804 
__END_NAMESPACE_STD


806 #ifde‡
__USE_MISC


808 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

809 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

810 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

814 
__BEGIN_NAMESPACE_STD


819 
	`≥º‹
 (
__c⁄°
 *
__s
);

820 
__END_NAMESPACE_STD


826 
	~<bôs/sys_îæi°.h
>

829 #ifdef 
__USE_POSIX


831 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 #ifde‡
__USE_MISC


836 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

840 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

841 
deföed
 
__USE_MISC
)

846 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

852 
	`p˛o£
 (
FILE
 *
__°ªam
);

856 #ifdef 
__USE_POSIX


858 *
	$˘îmid
 (*
__s
Ë
__THROW
;

862 #ifde‡
__USE_XOPEN


864 *
	`cu£rid
 (*
__s
);

868 #ifdef 
__USE_GNU


869 
ob°ack
;

872 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

873 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

874 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

875 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

876 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

877 
_G_va_li°
 
__¨gs
)

878 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

882 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


886 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

890 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

893 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

896 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


900 
	#__√ed_gë›t


	)

901 
	~<gë›t.h
>

906 #ifde‡
__USE_EXTERN_INLINES


907 
	~<bôs/°dio.h
>

909 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


910 
	~<bôs/°dio2.h
>

912 #ifde‡
__LDBL_COMPAT


913 
	~<bôs/°dio-ldbl.h
>

916 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
(
	`__WAIT_INT
(°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
(
	`__WAIT_INT
(°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
(
	`__WAIT_INT
(°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
(
	`__WAIT_INT
(°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
(
	`__WAIT_INT
(°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
(
	`__WAIT_INT
(°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
(
	`__WAIT_INT
(°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


502 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

505 #ifde‡
__USE_XOPEN2K


507 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 
__BEGIN_NAMESPACE_STD


513 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

517 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

519 #ifde‡
__USE_GNU


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #ifde‡
__USE_GNU


551 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

553 
__END_NAMESPACE_STD


555 #ifde‡
__USE_ISOC99


556 
__BEGIN_NAMESPACE_C99


559 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

560 
__END_NAMESPACE_C99


564 
__BEGIN_NAMESPACE_STD


566 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

567 
__END_NAMESPACE_STD


571 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


604 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

614 #i‚de‡
__USE_FILE_OFFSET64


615 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__REDIRECT


618 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

619 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 
	#mk°emp
 
mk°emp64


	)

624 #ifde‡
__USE_LARGEFILE64


625 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

629 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


635 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

638 #ifde‡
__USE_GNU


645 #i‚de‡
__USE_FILE_OFFSET64


646 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 #ifde‡
__REDIRECT


649 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

650 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

652 
	#mko°emp
 
mko°emp64


	)

655 #ifde‡
__USE_LARGEFILE64


656 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

661 
__BEGIN_NAMESPACE_STD


666 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

667 
__END_NAMESPACE_STD


670 #ifdef 
__USE_GNU


673 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

674 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

677 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


683 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

684 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

689 #i‚de‡
__COMPAR_FN_T


690 
	#__COMPAR_FN_T


	)

691 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

693 #ifdef 
__USE_GNU


694 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

697 #ifde‡
__USE_GNU


698 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

701 
__BEGIN_NAMESPACE_STD


704 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

705 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

706 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

710 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

711 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

712 #ifde‡
__USE_GNU


713 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

714 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

715 
	`__n⁄nuŒ
 ((1, 4));

720 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

721 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

722 
__END_NAMESPACE_STD


724 #ifde‡
__USE_ISOC99


725 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

726 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

730 
__BEGIN_NAMESPACE_STD


734 
div_t
 
	$div
 (
__numî
, 
__díom
)

735 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

736 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

737 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

738 
__END_NAMESPACE_STD


740 #ifde‡
__USE_ISOC99


741 
__BEGIN_NAMESPACE_C99


742 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

743 
__díom
)

744 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

745 
__END_NAMESPACE_C99


749 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


756 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

757 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

762 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

763 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

768 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

769 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

772 #ifde‡
__USE_MISC


774 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

775 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

776 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

777 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

778 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

779 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

780 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

781 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

786 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

787 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

788 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

789 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

790 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

791 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

793 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

794 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

795 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

796 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

797 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

798 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

799 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

800 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

805 
__BEGIN_NAMESPACE_STD


808 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

811 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

812 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

815 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

819 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

820 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

822 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

823 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

824 
__THROW
;

825 
__END_NAMESPACE_STD


828 #ifde‡
__USE_SVID


833 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

837 #ifde‡
__USE_XOPEN_EXTENDED


844 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

845 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

846 **
__ª°ri˘
 
__vÆuï
)

847 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

851 #ifde‡
__USE_XOPEN


853 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_XOPEN2K


861 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

864 #ifde‡
__USE_XOPEN


869 
	$gø¡±
 (
__fd
Ë
__THROW
;

873 
	$u∆ock±
 (
__fd
Ë
__THROW
;

878 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

881 #ifde‡
__USE_GNU


885 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

886 
__THROW
 
	`__n⁄nuŒ
 ((2));

889 
	`gë±
 ();

892 #ifde‡
__USE_BSD


896 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

897 
__THROW
 
	`__n⁄nuŒ
 ((1));

902 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


903 
	~<bôs/°dlib.h
>

905 #ifde‡
__LDBL_COMPAT


906 
	~<bôs/°dlib-ldbl.h
>

910 #unde‡
__√ed_mÆloc_™d_ˇŒoc


912 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

37 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

41 
__BEGIN_NAMESPACE_STD


43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

44 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

45 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

49 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 
__END_NAMESPACE_STD


55 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


56 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
__c
, 
size_t
 
__n
)

58 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

62 
__BEGIN_NAMESPACE_STD


64 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

67 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

68 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

71 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


74 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

76 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

79 #ifde‡
__OPTIMIZE__


80 
__exã∫_Æways_ölöe
 *

81 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


83  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

86 
__exã∫_Æways_ölöe
 
__c⁄°
 *

87 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


89  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

92 
	}
}

94 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

95 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

97 
__END_NAMESPACE_STD


99 #ifde‡
__USE_GNU


102 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


103 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

105 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

108 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

113 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


114 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

116 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

119 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

120 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

125 
__BEGIN_NAMESPACE_STD


127 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

130 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

131 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

132 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

135 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

138 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

139 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

142 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

143 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

145 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

149 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

150 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

152 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

153 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((2));

155 
__END_NAMESPACE_STD


157 #ifde‡
__USE_XOPEN2K8


161 
	~<xloˇÀ.h
>

164 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

165 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

167 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

168 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

171 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


173 *
	$°rdup
 (
__c⁄°
 *
__s
)

174 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

180 #i‡
deföed
 
__USE_XOPEN2K8


181 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

182 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

185 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


187 
	#°rdu∑
(
s
) \

188 (
__exãnsi⁄__
 \

190 
__c⁄°
 *
__ﬁd
 = (
s
); \

191 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

192 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

193 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

194 
	}
}))

	)

197 
	#°∫du∑
(
s
, 
n
) \

198 (
__exãnsi⁄__
 \

200 
__c⁄°
 *
__ﬁd
 = (
s
); \

201 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

202 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

203 
__√w
[
__Àn
] = '\0'; \

204 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

205 }))

	)

208 
	g__BEGIN_NAMESPACE_STD


210 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


213 *
°rchr
 (*
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

215 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 #ifde‡
__OPTIMIZE__


219 
__exã∫_Æways_ölöe
 *

220 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


222  
__buûtö_°rchr
 (
__s
, 
__c
);

225 
__exã∫_Æways_ölöe
 
__c⁄°
 *

226 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


228  
__buûtö_°rchr
 (
__s
, 
__c
);

233 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

234 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


240 *
	`°ºchr
 (*
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

242 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 #ifde‡
__OPTIMIZE__


246 
__exã∫_Æways_ölöe
 *

247 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


249  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

252 
__exã∫_Æways_ölöe
 
__c⁄°
 *

253 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


255  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

258 
	}
}

260 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

261 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

263 
__END_NAMESPACE_STD


265 #ifde‡
__USE_GNU


268 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


269 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

271 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

275 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

279 
__BEGIN_NAMESPACE_STD


282 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

283 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

286 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


292 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

294 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 #ifde‡
__OPTIMIZE__


298 
__exã∫_Æways_ölöe
 *

299 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


301  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

304 
__exã∫_Æways_ölöe
 
__c⁄°
 *

305 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


307  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

310 
	}
}

312 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

313 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

316 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


319 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

321 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

322 
__c⁄°
 *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

325 #ifde‡
__OPTIMIZE__


326 
__exã∫_Æways_ölöe
 *

327 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


329  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

332 
__exã∫_Æways_ölöe
 
__c⁄°
 *

333 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


335  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

338 
	}
}

340 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

347 
__THROW
 
	`__n⁄nuŒ
 ((2));

348 
__END_NAMESPACE_STD


352 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

353 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

354 **
__ª°ri˘
 
__ßve_±r
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

356 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


357 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

358 **
__ª°ri˘
 
__ßve_±r
)

359 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

362 #ifde‡
__USE_GNU


364 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


365 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

367 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

368 
__c⁄°
 *
__√edÀ
)

369 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

371 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

372 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

376 #ifde‡
__USE_GNU


380 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

381 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

386 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

387 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

389 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

390 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

395 
__BEGIN_NAMESPACE_STD


397 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

399 
__END_NAMESPACE_STD


401 #ifdef 
__USE_XOPEN2K8


404 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

405 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

409 
__BEGIN_NAMESPACE_STD


411 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

412 
__END_NAMESPACE_STD


413 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


421 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


424 #ifde‡
__REDIRECT_NTH


425 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

426 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

427 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

429 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

430 
__THROW
 
	`__n⁄nuŒ
 ((2));

431 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

436 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

437 
__THROW
 
	`__n⁄nuŒ
 ((2));

441 #ifde‡
__USE_XOPEN2K8


443 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

449 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

451 #ifde‡
__USE_BSD


453 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

454 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

457 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

460 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

461 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

464 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


467 *
	`ödex
 (*
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

472 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


473 
__exã∫_Æways_ölöe
 *

474 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


476  
	`__buûtö_ödex
 (
__s
, 
__c
);

479 
__exã∫_Æways_ölöe
 
__c⁄°
 *

480 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


482  
	`__buûtö_ödex
 (
__s
, 
__c
);

485 
	}
}

487 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

488 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

492 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


495 *
	`rödex
 (*
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

500 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


501 
__exã∫_Æways_ölöe
 *

502 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


504  
	`__buûtö_rödex
 (
__s
, 
__c
);

507 
__exã∫_Æways_ölöe
 
__c⁄°
 *

508 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


510  
	`__buûtö_rödex
 (
__s
, 
__c
);

513 
	}
}

515 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

516 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

521 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifdef 
__USE_GNU


526 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifde‡
__GNUC__


528 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

529 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/sys/ioctl.h

19 #i‚def 
_SYS_IOCTL_H


20 
	#_SYS_IOCTL_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


27 
	~<bôs/io˘ls.h
>

30 
	~<bôs/io˘l-ty≥s.h
>

37 
	~<sys/âydeÁu…s.h
>

42 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

44 
__END_DECLS


	@/usr/include/sys/socket.h

21 #i‚def 
_SYS_SOCKET_H


22 
	#_SYS_SOCKET_H
 1

	)

24 
	~<„©uªs.h
>

26 
	g__BEGIN_DECLS


28 
	~<sys/uio.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

31 #ifde‡
__USE_GNU


33 
	~<bôs/sig£t.h
>

40 
	~<bôs/sockë.h
>

42 #ifde‡
__USE_BSD


45 
	sosockaddr


47 
	mß_Ámûy
;

48 
	mß_d©a
[14];

56 
	mSHUT_RD
 = 0,

57 
	#SHUT_RD
 
SHUT_RD


	)

58 
	mSHUT_WR
,

59 
	#SHUT_WR
 
SHUT_WR


	)

60 
	mSHUT_RDWR


61 
	#SHUT_RDWR
 
SHUT_RDWR


	)

70 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


71 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

72 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

76 
	#__SOCKADDR_ALLTYPES
 \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

88 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

89 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

91 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

92 uni⁄ { 
	m__SOCKADDR_ALLTYPES


93 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

94 #unde‡
__SOCKADDR_ONETYPE


95 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

96 uni⁄ { 
	m__SOCKADDR_ALLTYPES


97 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

98 #unde‡
__SOCKADDR_ONETYPE


105 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

111 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

112 
__fds
[2]Ë
__THROW
;

115 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

116 
__THROW
;

119 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

120 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

129 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

133 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

134 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

141 
ssize_t
 
	`£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
);

148 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

155 
ssize_t
 
	`£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

156 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

157 
sockÀn_t
 
__addr_Àn
);

166 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

167 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

168 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

176 
ssize_t
 
	`£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
,

177 
__Êags
);

184 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

190 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

191 *
__ª°ri˘
 
__›tvÆ
,

192 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

197 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

198 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

204 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

214 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

215 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

217 #ifde‡
__USE_GNU


222 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

223 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

232 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

235 #ifde‡
__USE_XOPEN2K


237 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

241 #ifde‡
__USE_MISC


245 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


251 
	~<bôs/sockë2.h
>

254 
__END_DECLS


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


34 
	#_POSIX_VERSION
 200809L

	)

40 
	#_POSIX2_VERSION
 200809L

	)

44 
	#_POSIX2_C_BIND
 200809L

	)

48 
	#_POSIX2_C_DEV
 200809L

	)

52 
	#_POSIX2_SW_DEV
 200809L

	)

56 
	#_POSIX2_LOCALEDEF
 200809L

	)

59 #ifde‡
__USE_XOPEN2K8


60 
	#_XOPEN_VERSION
 700

	)

61 #ñi‡
deföed
 
__USE_XOPEN2K


62 
	#_XOPEN_VERSION
 600

	)

63 #ñi‡
deföed
 
__USE_UNIX98


64 
	#_XOPEN_VERSION
 500

	)

66 
	#_XOPEN_VERSION
 4

	)

70 
	#_XOPEN_XCU_VERSION
 4

	)

73 
	#_XOPEN_XPG2
 1

	)

74 
	#_XOPEN_XPG3
 1

	)

75 
	#_XOPEN_XPG4
 1

	)

78 
	#_XOPEN_UNIX
 1

	)

81 
	#_XOPEN_CRYPT
 1

	)

85 
	#_XOPEN_ENH_I18N
 1

	)

88 
	#_XOPEN_LEGACY
 1

	)

175 
	~<bôs/posix_›t.h
>

178 #ifde‡
__USE_UNIX98


179 
	~<bôs/ívú⁄míts.h
>

183 
	#STDIN_FILENO
 0

	)

184 
	#STDOUT_FILENO
 1

	)

185 
	#STDERR_FILENO
 2

	)

190 
	~<bôs/ty≥s.h
>

192 #i‚def 
__ssize_t_deföed


193 
__ssize_t
 
	tssize_t
;

194 
	#__ssize_t_deföed


	)

197 
	#__√ed_size_t


	)

198 
	#__√ed_NULL


	)

199 
	~<°ddef.h
>

201 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


204 #i‚de‡
__gid_t_deföed


205 
__gid_t
 
	tgid_t
;

206 
	#__gid_t_deföed


	)

209 #i‚de‡
__uid_t_deföed


210 
__uid_t
 
	tuid_t
;

211 
	#__uid_t_deföed


	)

214 #i‚de‡
__off_t_deföed


215 #i‚de‡
__USE_FILE_OFFSET64


216 
__off_t
 
	toff_t
;

218 
__off64_t
 
	toff_t
;

220 
	#__off_t_deföed


	)

222 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


223 
__off64_t
 
	toff64_t
;

224 
	#__off64_t_deföed


	)

227 #i‚de‡
__u£c⁄ds_t_deföed


228 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

229 
	#__u£c⁄ds_t_deföed


	)

232 #i‚de‡
__pid_t_deföed


233 
__pid_t
 
	tpid_t
;

234 
	#__pid_t_deföed


	)

238 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


239 #i‚de‡
__öçå_t_deföed


240 
__öçå_t
 
	töçå_t
;

241 
	#__öçå_t_deföed


	)

245 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


246 #i‚de‡
__sockÀn_t_deföed


247 
__sockÀn_t
 
	tsockÀn_t
;

248 
	#__sockÀn_t_deföed


	)

254 
	#R_OK
 4

	)

255 
	#W_OK
 2

	)

256 
	#X_OK
 1

	)

257 
	#F_OK
 0

	)

260 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

262 #ifde‡
__USE_GNU


265 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1));

269 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

270 
__THROW
 
	`__n⁄nuŒ
 ((1));

273 #ifde‡
__USE_ATFILE


277 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

278 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

283 #i‚def 
_STDIO_H


284 
	#SEEK_SET
 0

	)

285 
	#SEEK_CUR
 1

	)

286 
	#SEEK_END
 2

	)

289 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


291 
	#L_SET
 
SEEK_SET


	)

292 
	#L_INCR
 
SEEK_CUR


	)

293 
	#L_XTND
 
SEEK_END


	)

302 #i‚de‡
__USE_FILE_OFFSET64


303 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

305 #ifde‡
__REDIRECT_NTH


306 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

307 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

308 
l£ek64
);

310 
	#l£ek
 
l£ek64


	)

313 #ifde‡
__USE_LARGEFILE64


314 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

315 
__THROW
;

322 
	`˛o£
 (
__fd
);

329 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

335 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

337 #ifde‡
__USE_UNIX98


338 #i‚de‡
__USE_FILE_OFFSET64


345 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

346 
__off_t
 
__off£t
Ë
__wur
;

353 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

354 
__off_t
 
__off£t
Ë
__wur
;

356 #ifde‡
__REDIRECT


357 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

358 
__off64_t
 
__off£t
),

359 
¥ód64
Ë
__wur
;

360 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

361 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

362 
pwrôe64
Ë
__wur
;

364 
	#¥ód
 
¥ód64


	)

365 
	#pwrôe
 
pwrôe64


	)

369 #ifde‡
__USE_LARGEFILE64


373 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

374 
__off64_t
 
__off£t
Ë
__wur
;

377 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

378 
__off64_t
 
__off£t
Ë
__wur
;

386 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

388 #ifde‡
__USE_GNU


391 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

401 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

413 
	`¶ìp
 (
__£c⁄ds
);

415 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


420 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

421 
__THROW
;

428 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

437 
	`∑u£
 ();

441 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

442 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

444 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


446 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

451 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

452 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

456 #ifde‡
__USE_ATFILE


459 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

460 
__gid_t
 
__group
, 
__Êag
)

461 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

465 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

467 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


469 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

479 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

481 #ifdef 
__USE_GNU


485 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

488 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


492 *
	$gëwd
 (*
__buf
)

493 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

498 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

501 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

503 #ifde‡
__USE_GNU


506 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

510 **
__ívú⁄
;

511 #ifde‡
__USE_GNU


512 **
ívú⁄
;

518 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

519 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #ifde‡
__USE_XOPEN2K8


524 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

525 
__THROW
;

530 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

531 
__THROW
 
	`__n⁄nuŒ
 ((1));

535 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

541 
__THROW
 
	`__n⁄nuŒ
 ((1));

545 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

546 
__THROW
 
	`__n⁄nuŒ
 ((1));

551 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

552 
__THROW
 
	`__n⁄nuŒ
 ((1));

555 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


557 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

562 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

568 
	~<bôs/c⁄‚ame.h
>

571 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1));

575 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

578 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

580 #ifdef 
__USE_POSIX2


582 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

587 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

590 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

594 #i‚de‡
__FAVOR_BSD


595 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

597 #ifde‡
__REDIRECT_NTH


598 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

600 
	#gëpgΩ
 
__gëpgid


	)

605 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

606 #ifde‡
__USE_XOPEN_EXTENDED


607 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

614 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

616 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


627 #i‚de‡
__FAVOR_BSD


631 
	$£çgΩ
 (Ë
__THROW
;

636 #ifde‡
__REDIRECT_NTH


637 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

639 
	#£çgΩ
 
£çgid


	)

648 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

650 #ifde‡
__USE_XOPEN_EXTENDED


652 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

656 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

659 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

662 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

665 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

670 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

672 #ifdef 
__USE_GNU


674 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

681 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

683 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


686 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

689 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


691 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

698 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

700 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


703 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

706 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


708 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

711 #ifde‡
__USE_GNU


714 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

715 
__THROW
;

719 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

720 
__THROW
;

724 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

725 
__THROW
;

729 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

730 
__THROW
;

737 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

739 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


744 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

750 *
	$ây«me
 (
__fd
Ë
__THROW
;

754 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

755 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

759 
	$ißây
 (
__fd
Ë
__THROW
;

761 #i‡
deföed
 
__USE_BSD
 \

762 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

765 
	$ây¶Ÿ
 (Ë
__THROW
;

770 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

771 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

773 #ifde‡
__USE_ATFILE


776 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

777 
__c⁄°
 *
__to
, 
__Êags
)

778 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

781 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


783 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

784 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

789 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

790 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

794 #ifde‡
__USE_ATFILE


796 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

797 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

800 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

801 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

802 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

806 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #ifde‡
__USE_ATFILE


810 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

811 
__THROW
 
	`__n⁄nuŒ
 ((2));

815 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

819 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

822 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

829 *
	`gëlogö
 ();

830 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


837 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

840 #ifdef 
__USE_BSD


842 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

846 #ifdef 
__USE_POSIX2


850 
	#__√ed_gë›t


	)

851 
	~<gë›t.h
>

855 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


859 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

863 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

866 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

867 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

871 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

877 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

879 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

880 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

886 
	$vh™gup
 (Ë
__THROW
;

889 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

897 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

898 
size_t
 
__off£t
, 
__sˇÀ
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1));

905 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

909 *
	$gëu£rshñl
 (Ë
__THROW
;

910 
	$ídu£rshñl
 (Ë
__THROW
;

911 
	$£tu£rshñl
 (Ë
__THROW
;

917 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

921 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

924 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

928 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

932 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


937 
	`fsync
 (
__fd
);

941 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


944 
	`gëho°id
 ();

947 
	$sync
 (Ë
__THROW
;

952 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

957 
	$gëdèbÀsize
 (Ë
__THROW
;

961 #i‚de‡
__USE_FILE_OFFSET64


962 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

963 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

965 #ifde‡
__REDIRECT_NTH


966 
	`__REDIRECT_NTH
 (
åunˇã
,

967 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

968 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

970 
	#åunˇã
 
åunˇã64


	)

973 #ifde‡
__USE_LARGEFILE64


974 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

975 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

980 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


983 #i‚de‡
__USE_FILE_OFFSET64


984 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

986 #ifde‡
__REDIRECT_NTH


987 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

988 
·runˇã64
Ë
__wur
;

990 
	#·runˇã
 
·runˇã64


	)

993 #ifde‡
__USE_LARGEFILE64


994 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1000 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1004 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1010 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1014 #ifde‡
__USE_MISC


1025 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1030 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1042 
	#F_ULOCK
 0

	)

1043 
	#F_LOCK
 1

	)

1044 
	#F_TLOCK
 2

	)

1045 
	#F_TEST
 3

	)

1047 #i‚de‡
__USE_FILE_OFFSET64


1048 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1050 #ifde‡
__REDIRECT


1051 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1052 
lockf64
Ë
__wur
;

1054 
	#lockf
 
lockf64


	)

1057 #ifde‡
__USE_LARGEFILE64


1058 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1063 #ifde‡
__USE_GNU


1068 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1069 (
__exãnsi⁄__
 \

1070 ({ 
__ªsu…
; \

1071 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1072 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1073 
__ªsu…
; 
	}
}))

	)

1076 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1079 
fd©async
 (
__fûdes
);

1085 #ifdef 
__USE_XOPEN


1087 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1088 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1092 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1099 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1100 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1106 #ifde‡
__USE_XOPEN


1108 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1113 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1114 
	~<bôs/uni°d.h
>

1117 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT
,

531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
__ASSEMBLER__


43 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

45 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


47 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

52 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


56 
	#EDOM
 33

	)

57 
	#EILSEQ
 84

	)

58 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

20 #i‚def 
_FCNTL_H


24 
	~<sys/ty≥s.h
>

25 
	~<bôs/w‹dsize.h
>

26 #ifde‡
__USE_GNU


27 
	~<bôs/uio.h
>

33 
	#O_ACCMODE
 0003

	)

34 
	#O_RDONLY
 00

	)

35 
	#O_WRONLY
 01

	)

36 
	#O_RDWR
 02

	)

37 
	#O_CREAT
 0100

	)

38 
	#O_EXCL
 0200

	)

39 
	#O_NOCTTY
 0400

	)

40 
	#O_TRUNC
 01000

	)

41 
	#O_APPEND
 02000

	)

42 
	#O_NONBLOCK
 04000

	)

43 
	#O_NDELAY
 
O_NONBLOCK


	)

44 
	#O_SYNC
 010000

	)

45 
	#O_FSYNC
 
O_SYNC


	)

46 
	#O_ASYNC
 020000

	)

48 #ifde‡
__USE_GNU


49 
	#O_DIRECT
 040000

	)

50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_NOATIME
 01000000

	)

53 
	#O_CLOEXEC
 02000000

	)

59 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


60 
	#O_DSYNC
 
O_SYNC


	)

61 
	#O_RSYNC
 
O_SYNC


	)

64 #ifde‡
__USE_LARGEFILE64


65 #i‡
__WORDSIZE
 == 64

66 
	#O_LARGEFILE
 0

	)

68 
	#O_LARGEFILE
 0100000

	)

73 
	#F_DUPFD
 0

	)

74 
	#F_GETFD
 1

	)

75 
	#F_SETFD
 2

	)

76 
	#F_GETFL
 3

	)

77 
	#F_SETFL
 4

	)

78 #i‡
__WORDSIZE
 == 64

79 
	#F_GETLK
 5

	)

80 
	#F_SETLK
 6

	)

81 
	#F_SETLKW
 7

	)

83 
	#F_GETLK64
 5

	)

84 
	#F_SETLK64
 6

	)

85 
	#F_SETLKW64
 7

	)

87 #i‚de‡
__USE_FILE_OFFSET64


88 
	#F_GETLK
 5

	)

89 
	#F_SETLK
 6

	)

90 
	#F_SETLKW
 7

	)

92 
	#F_GETLK
 
F_GETLK64


	)

93 
	#F_SETLK
 
F_SETLK64


	)

94 
	#F_SETLKW
 
F_SETLKW64


	)

96 
	#F_GETLK64
 12

	)

97 
	#F_SETLK64
 13

	)

98 
	#F_SETLKW64
 14

	)

101 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


102 
	#F_SETOWN
 8

	)

103 
	#F_GETOWN
 9

	)

106 #ifde‡
__USE_GNU


107 
	#F_SETSIG
 10

	)

108 
	#F_GETSIG
 11

	)

111 #ifde‡
__USE_GNU


112 
	#F_SETLEASE
 1024

	)

113 
	#F_GETLEASE
 1025

	)

114 
	#F_NOTIFY
 1026

	)

115 
	#F_DUPFD_CLOEXEC
 1030

	)

120 
	#FD_CLOEXEC
 1

	)

123 
	#F_RDLCK
 0

	)

124 
	#F_WRLCK
 1

	)

125 
	#F_UNLCK
 2

	)

128 
	#F_EXLCK
 4

	)

129 
	#F_SHLCK
 8

	)

131 #ifde‡
__USE_BSD


133 
	#LOCK_SH
 1

	)

134 
	#LOCK_EX
 2

	)

135 
	#LOCK_NB
 4

	)

137 
	#LOCK_UN
 8

	)

140 #ifde‡
__USE_GNU


141 
	#LOCK_MAND
 32

	)

142 
	#LOCK_READ
 64

	)

143 
	#LOCK_WRITE
 128

	)

144 
	#LOCK_RW
 192

	)

147 #ifde‡
__USE_GNU


149 
	#DN_ACCESS
 0x00000001

	)

150 
	#DN_MODIFY
 0x00000002

	)

151 
	#DN_CREATE
 0x00000004

	)

152 
	#DN_DELETE
 0x00000008

	)

153 
	#DN_RENAME
 0x00000010

	)

154 
	#DN_ATTRIB
 0x00000020

	)

155 
	#DN_MULTISHOT
 0x80000000

	)

158 
	sÊock


160 
	ml_ty≥
;

161 
	ml_whí˚
;

162 #i‚de‡
__USE_FILE_OFFSET64


163 
__off_t
 
	ml_°¨t
;

164 
__off_t
 
	ml_Àn
;

166 
__off64_t
 
	ml_°¨t
;

167 
__off64_t
 
	ml_Àn
;

169 
__pid_t
 
	ml_pid
;

172 #ifde‡
__USE_LARGEFILE64


173 
	sÊock64


175 
	ml_ty≥
;

176 
	ml_whí˚
;

177 
__off64_t
 
	ml_°¨t
;

178 
__off64_t
 
	ml_Àn
;

179 
__pid_t
 
	ml_pid
;

185 #ifdef 
__USE_BSD


186 
	#FAPPEND
 
O_APPEND


	)

187 
	#FFSYNC
 
O_FSYNC


	)

188 
	#FASYNC
 
O_ASYNC


	)

189 
	#FNONBLOCK
 
O_NONBLOCK


	)

190 
	#FNDELAY
 
O_NDELAY


	)

194 #ifde‡
__USE_XOPEN2K


195 
	#POSIX_FADV_NORMAL
 0

	)

196 
	#POSIX_FADV_RANDOM
 1

	)

197 
	#POSIX_FADV_SEQUENTIAL
 2

	)

198 
	#POSIX_FADV_WILLNEED
 3

	)

199 
	#POSIX_FADV_DONTNEED
 4

	)

200 
	#POSIX_FADV_NOREUSE
 5

	)

204 #ifde‡
__USE_GNU


206 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

209 
	#SYNC_FILE_RANGE_WRITE
 2

	)

212 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

217 
	#SPLICE_F_MOVE
 1

	)

218 
	#SPLICE_F_NONBLOCK
 2

	)

221 
	#SPLICE_F_MORE
 4

	)

222 
	#SPLICE_F_GIFT
 8

	)

225 
	g__BEGIN_DECLS


227 #ifde‡
__USE_GNU


230 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

231 
__THROW
;

235 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__‰om
, __off64_à
__to
,

236 
__Êags
);

240 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

241 
size_t
 
__cou¡
, 
__Êags
);

244 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

245 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

246 
__Êags
);

249 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

250 
__Êags
);

253 #i‚de‡
__USE_FILE_OFFSET64


254 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

256 #ifde‡
__REDIRECT


257 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off_t
 
__off£t
,

258 
__off_t
 
__Àn
),

259 
ÁŒoˇã64
);

261 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

264 #ifde‡
__USE_LARGEFILE64


265 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

266 
__off64_t
 
__Àn
);

270 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/in.h

21 #i‚de‡
_NETINET_IN_H


28 
	#IP_OPTIONS
 4

	)

29 
	#IP_HDRINCL
 3

	)

30 
	#IP_TOS
 1

	)

31 
	#IP_TTL
 2

	)

32 
	#IP_RECVOPTS
 6

	)

34 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

35 
	#IP_RETOPTS
 7

	)

36 
	#IP_MULTICAST_IF
 32

	)

37 
	#IP_MULTICAST_TTL
 33

	)

38 
	#IP_MULTICAST_LOOP
 34

	)

39 
	#IP_ADD_MEMBERSHIP
 35

	)

40 
	#IP_DROP_MEMBERSHIP
 36

	)

41 
	#IP_UNBLOCK_SOURCE
 37

	)

42 
	#IP_BLOCK_SOURCE
 38

	)

43 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

44 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

45 
	#IP_MSFILTER
 41

	)

46 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


47 
	#MCAST_JOIN_GROUP
 42

	)

48 
	#MCAST_BLOCK_SOURCE
 43

	)

49 
	#MCAST_UNBLOCK_SOURCE
 44

	)

50 
	#MCAST_LEAVE_GROUP
 45

	)

51 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

52 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

53 
	#MCAST_MSFILTER
 48

	)

55 
	#MCAST_EXCLUDE
 0

	)

56 
	#MCAST_INCLUDE
 1

	)

59 
	#IP_ROUTER_ALERT
 5

	)

60 
	#IP_PKTINFO
 8

	)

61 
	#IP_PKTOPTIONS
 9

	)

62 
	#IP_PMTUDISC
 10

	)

63 
	#IP_MTU_DISCOVER
 10

	)

64 
	#IP_RECVERR
 11

	)

65 
	#IP_RECVTTL
 12

	)

66 
	#IP_RECVTOS
 13

	)

70 
	#IP_PMTUDISC_DONT
 0

	)

71 
	#IP_PMTUDISC_WANT
 1

	)

72 
	#IP_PMTUDISC_DO
 2

	)

73 
	#IP_PMTUDISC_PROBE
 3

	)

76 
	#SOL_IP
 0

	)

78 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

79 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

80 
	#IP_MAX_MEMBERSHIPS
 20

	)

82 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


86 
	sù_›ts


88 
ö_addr
 
	mù_d°
;

89 
	mù_›ts
[40];

93 
	sù_mªqn


95 
ö_addr
 
	mimr_mu…üddr
;

96 
ö_addr
 
	mimr_addªss
;

97 
	mimr_ifödex
;

101 
	sö_pktöfo


103 
	mùi_ifödex
;

104 
ö_addr
 
	mùi_•ec_d°
;

105 
ö_addr
 
	mùi_addr
;

112 
	#IPV6_ADDRFORM
 1

	)

113 
	#IPV6_2292PKTINFO
 2

	)

114 
	#IPV6_2292HOPOPTS
 3

	)

115 
	#IPV6_2292DSTOPTS
 4

	)

116 
	#IPV6_2292RTHDR
 5

	)

117 
	#IPV6_2292PKTOPTIONS
 6

	)

118 
	#IPV6_CHECKSUM
 7

	)

119 
	#IPV6_2292HOPLIMIT
 8

	)

121 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

123 
	#IPV6_NEXTHOP
 9

	)

124 
	#IPV6_AUTHHDR
 10

	)

125 
	#IPV6_UNICAST_HOPS
 16

	)

126 
	#IPV6_MULTICAST_IF
 17

	)

127 
	#IPV6_MULTICAST_HOPS
 18

	)

128 
	#IPV6_MULTICAST_LOOP
 19

	)

129 
	#IPV6_JOIN_GROUP
 20

	)

130 
	#IPV6_LEAVE_GROUP
 21

	)

131 
	#IPV6_ROUTER_ALERT
 22

	)

132 
	#IPV6_MTU_DISCOVER
 23

	)

133 
	#IPV6_MTU
 24

	)

134 
	#IPV6_RECVERR
 25

	)

135 
	#IPV6_V6ONLY
 26

	)

136 
	#IPV6_JOIN_ANYCAST
 27

	)

137 
	#IPV6_LEAVE_ANYCAST
 28

	)

138 
	#IPV6_IPSEC_POLICY
 34

	)

139 
	#IPV6_XFRM_POLICY
 35

	)

141 
	#IPV6_RECVPKTINFO
 49

	)

142 
	#IPV6_PKTINFO
 50

	)

143 
	#IPV6_RECVHOPLIMIT
 51

	)

144 
	#IPV6_HOPLIMIT
 52

	)

145 
	#IPV6_RECVHOPOPTS
 53

	)

146 
	#IPV6_HOPOPTS
 54

	)

147 
	#IPV6_RTHDRDSTOPTS
 55

	)

148 
	#IPV6_RECVRTHDR
 56

	)

149 
	#IPV6_RTHDR
 57

	)

150 
	#IPV6_RECVDSTOPTS
 58

	)

151 
	#IPV6_DSTOPTS
 59

	)

153 
	#IPV6_RECVTCLASS
 66

	)

154 
	#IPV6_TCLASS
 67

	)

157 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

158 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

159 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

160 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

163 
	#IPV6_PMTUDISC_DONT
 0

	)

164 
	#IPV6_PMTUDISC_WANT
 1

	)

165 
	#IPV6_PMTUDISC_DO
 2

	)

166 
	#IPV6_PMTUDISC_PROBE
 3

	)

169 
	#SOL_IPV6
 41

	)

170 
	#SOL_ICMPV6
 58

	)

173 
	#IPV6_RTHDR_LOOSE
 0

	)

174 
	#IPV6_RTHDR_STRICT
 1

	)

176 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/ioctl-types.h

20 #i‚de‡
_SYS_IOCTL_H


25 
	~<asm/io˘ls.h
>

28 
	swösize


30 
	mws_row
;

31 
	mws_cﬁ
;

32 
	mws_xpixñ
;

33 
	mws_ypixñ
;

36 
	#NCC
 8

	)

37 
	sãrmio


39 
	mc_iÊag
;

40 
	mc_oÊag
;

41 
	mc_cÊag
;

42 
	mc_lÊag
;

43 
	mc_löe
;

44 
	mc_cc
[
NCC
];

48 
	#TIOCM_LE
 0x001

	)

49 
	#TIOCM_DTR
 0x002

	)

50 
	#TIOCM_RTS
 0x004

	)

51 
	#TIOCM_ST
 0x008

	)

52 
	#TIOCM_SR
 0x010

	)

53 
	#TIOCM_CTS
 0x020

	)

54 
	#TIOCM_CAR
 0x040

	)

55 
	#TIOCM_RNG
 0x080

	)

56 
	#TIOCM_DSR
 0x100

	)

57 
	#TIOCM_CD
 
TIOCM_CAR


	)

58 
	#TIOCM_RI
 
TIOCM_RNG


	)

63 
	#N_TTY
 0

	)

64 
	#N_SLIP
 1

	)

65 
	#N_MOUSE
 2

	)

66 
	#N_PPP
 3

	)

67 
	#N_STRIP
 4

	)

68 
	#N_AX25
 5

	)

69 
	#N_X25
 6

	)

70 
	#N_6PACK
 7

	)

71 
	#N_MASC
 8

	)

72 
	#N_R3964
 9

	)

73 
	#N_PROFIBUS_FDL
 10

	)

74 
	#N_IRDA
 11

	)

75 
	#N_SMSBLOCK
 12

	)

76 
	#N_HDLC
 13

	)

77 
	#N_SYNC_PPP
 14

	)

78 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	#SIOCADDRT
 0x890B

	)

28 
	#SIOCDELRT
 0x890C

	)

29 
	#SIOCRTMSG
 0x890D

	)

32 
	#SIOCGIFNAME
 0x8910

	)

33 
	#SIOCSIFLINK
 0x8911

	)

34 
	#SIOCGIFCONF
 0x8912

	)

35 
	#SIOCGIFFLAGS
 0x8913

	)

36 
	#SIOCSIFFLAGS
 0x8914

	)

37 
	#SIOCGIFADDR
 0x8915

	)

38 
	#SIOCSIFADDR
 0x8916

	)

39 
	#SIOCGIFDSTADDR
 0x8917

	)

40 
	#SIOCSIFDSTADDR
 0x8918

	)

41 
	#SIOCGIFBRDADDR
 0x8919

	)

42 
	#SIOCSIFBRDADDR
 0x891®

	)

43 
	#SIOCGIFNETMASK
 0x891b

	)

44 
	#SIOCSIFNETMASK
 0x891¯

	)

45 
	#SIOCGIFMETRIC
 0x891d

	)

46 
	#SIOCSIFMETRIC
 0x891ê

	)

47 
	#SIOCGIFMEM
 0x891‡

	)

48 
	#SIOCSIFMEM
 0x8920

	)

49 
	#SIOCGIFMTU
 0x8921

	)

50 
	#SIOCSIFMTU
 0x8922

	)

51 
	#SIOCSIFNAME
 0x8923

	)

52 
	#SIOCSIFHWADDR
 0x8924

	)

53 
	#SIOCGIFENCAP
 0x8925

	)

54 
	#SIOCSIFENCAP
 0x8926

	)

55 
	#SIOCGIFHWADDR
 0x8927

	)

56 
	#SIOCGIFSLAVE
 0x8929

	)

57 
	#SIOCSIFSLAVE
 0x8930

	)

58 
	#SIOCADDMULTI
 0x8931

	)

59 
	#SIOCDELMULTI
 0x8932

	)

60 
	#SIOCGIFINDEX
 0x8933

	)

61 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

62 
	#SIOCSIFPFLAGS
 0x8934

	)

63 
	#SIOCGIFPFLAGS
 0x8935

	)

64 
	#SIOCDIFADDR
 0x8936

	)

65 
	#SIOCSIFHWBROADCAST
 0x8937

	)

66 
	#SIOCGIFCOUNT
 0x8938

	)

68 
	#SIOCGIFBR
 0x8940

	)

69 
	#SIOCSIFBR
 0x8941

	)

71 
	#SIOCGIFTXQLEN
 0x8942

	)

72 
	#SIOCSIFTXQLEN
 0x8943

	)

77 
	#SIOCDARP
 0x8953

	)

78 
	#SIOCGARP
 0x8954

	)

79 
	#SIOCSARP
 0x8955

	)

82 
	#SIOCDRARP
 0x8960

	)

83 
	#SIOCGRARP
 0x8961

	)

84 
	#SIOCSRARP
 0x8962

	)

88 
	#SIOCGIFMAP
 0x8970

	)

89 
	#SIOCSIFMAP
 0x8971

	)

93 
	#SIOCADDDLCI
 0x8980

	)

94 
	#SIOCDELDLCI
 0x8981

	)

103 
	#SIOCDEVPRIVATE
 0x89F0

	)

109 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/locale.h

20 #i‡!
deföed
 
_LOCALE_H
 && !deföed 
_LANGINFO_H


24 #i‚de‡
_BITS_LOCALE_H


25 
	#_BITS_LOCALE_H
 1

	)

29 
	m__LC_CTYPE
 = 0,

30 
	m__LC_NUMERIC
 = 1,

31 
	m__LC_TIME
 = 2,

32 
	m__LC_COLLATE
 = 3,

33 
	m__LC_MONETARY
 = 4,

34 
	m__LC_MESSAGES
 = 5,

35 
	m__LC_ALL
 = 6,

36 
	m__LC_PAPER
 = 7,

37 
	m__LC_NAME
 = 8,

38 
	m__LC_ADDRESS
 = 9,

39 
	m__LC_TELEPHONE
 = 10,

40 
	m__LC_MEASUREMENT
 = 11,

41 
	m__LC_IDENTIFICATION
 = 12

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

89 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

93 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

96 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

99 
	#_POSIX_SEMAPHORES
 200809L

	)

102 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

105 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

106 
	#_POSIX_ASYNC_IO
 1

	)

108 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

110 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

113 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

116 
	#_LFS_LARGEFILE
 1

	)

117 
	#_LFS64_LARGEFILE
 1

	)

118 
	#_LFS64_STDIO
 1

	)

121 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

124 
	#_POSIX_CPUTIME
 0

	)

127 
	#_POSIX_THREAD_CPUTIME
 0

	)

130 
	#_POSIX_REGEXP
 1

	)

133 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

136 
	#_POSIX_SHELL
 1

	)

139 
	#_POSIX_TIMEOUTS
 200809L

	)

142 
	#_POSIX_SPIN_LOCKS
 200809L

	)

145 
	#_POSIX_SPAWN
 200809L

	)

148 
	#_POSIX_TIMERS
 200809L

	)

151 
	#_POSIX_BARRIERS
 200809L

	)

154 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

157 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

160 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

163 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

166 
	#_POSIX_ADVISORY_INFO
 200809L

	)

169 
	#_POSIX_IPV6
 200809L

	)

172 
	#_POSIX_RAW_SOCKETS
 200809L

	)

175 
	#_POSIX2_CHAR_TERM
 200809L

	)

178 
	#_POSIX_SPORADIC_SERVER
 -1

	)

179 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

182 
	#_POSIX_TRACE
 -1

	)

183 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

184 
	#_POSIX_TRACE_INHERIT
 -1

	)

185 
	#_POSIX_TRACE_LOG
 -1

	)

188 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/socket.h

21 #i‚de‡
__BITS_SOCKET_H


22 
	#__BITS_SOCKET_H


	)

24 #i‚de‡
_SYS_SOCKET_H


28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	~<sys/ty≥s.h
>

34 #i‚de‡
__sockÀn_t_deföed


35 
__sockÀn_t
 
	tsockÀn_t
;

36 
	#__sockÀn_t_deföed


	)

40 
	e__sockë_ty≥


42 
	mSOCK_STREAM
 = 1,

44 
	#SOCK_STREAM
 
SOCK_STREAM


	)

45 
	mSOCK_DGRAM
 = 2,

47 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

48 
	mSOCK_RAW
 = 3,

49 
	#SOCK_RAW
 
SOCK_RAW


	)

50 
	mSOCK_RDM
 = 4,

51 
	#SOCK_RDM
 
SOCK_RDM


	)

52 
	mSOCK_SEQPACKET
 = 5,

54 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

55 
	mSOCK_DCCP
 = 6,

56 
	#SOCK_DCCP
 
SOCK_DCCP


	)

57 
	mSOCK_PACKET
 = 10,

60 
	#SOCK_PACKET
 
SOCK_PACKET


	)

65 
	mSOCK_CLOEXEC
 = 02000000,

67 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

68 
	mSOCK_NONBLOCK
 = 04000

70 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

74 
	#PF_UNSPEC
 0

	)

75 
	#PF_LOCAL
 1

	)

76 
	#PF_UNIX
 
PF_LOCAL


	)

77 
	#PF_FILE
 
PF_LOCAL


	)

78 
	#PF_INET
 2

	)

79 
	#PF_AX25
 3

	)

80 
	#PF_IPX
 4

	)

81 
	#PF_APPLETALK
 5

	)

82 
	#PF_NETROM
 6

	)

83 
	#PF_BRIDGE
 7

	)

84 
	#PF_ATMPVC
 8

	)

85 
	#PF_X25
 9

	)

86 
	#PF_INET6
 10

	)

87 
	#PF_ROSE
 11

	)

88 
	#PF_DEC√t
 12

	)

89 
	#PF_NETBEUI
 13

	)

90 
	#PF_SECURITY
 14

	)

91 
	#PF_KEY
 15

	)

92 
	#PF_NETLINK
 16

	)

93 
	#PF_ROUTE
 
PF_NETLINK


	)

94 
	#PF_PACKET
 17

	)

95 
	#PF_ASH
 18

	)

96 
	#PF_ECONET
 19

	)

97 
	#PF_ATMSVC
 20

	)

98 
	#PF_RDS
 21

	)

99 
	#PF_SNA
 22

	)

100 
	#PF_IRDA
 23

	)

101 
	#PF_PPPOX
 24

	)

102 
	#PF_WANPIPE
 25

	)

103 
	#PF_LLC
 26

	)

104 
	#PF_CAN
 29

	)

105 
	#PF_TIPC
 30

	)

106 
	#PF_BLUETOOTH
 31

	)

107 
	#PF_IUCV
 32

	)

108 
	#PF_RXRPC
 33

	)

109 
	#PF_ISDN
 34

	)

110 
	#PF_PHONET
 35

	)

111 
	#PF_IEEE802154
 36

	)

112 
	#PF_MAX
 37

	)

115 
	#AF_UNSPEC
 
PF_UNSPEC


	)

116 
	#AF_LOCAL
 
PF_LOCAL


	)

117 
	#AF_UNIX
 
PF_UNIX


	)

118 
	#AF_FILE
 
PF_FILE


	)

119 
	#AF_INET
 
PF_INET


	)

120 
	#AF_AX25
 
PF_AX25


	)

121 
	#AF_IPX
 
PF_IPX


	)

122 
	#AF_APPLETALK
 
PF_APPLETALK


	)

123 
	#AF_NETROM
 
PF_NETROM


	)

124 
	#AF_BRIDGE
 
PF_BRIDGE


	)

125 
	#AF_ATMPVC
 
PF_ATMPVC


	)

126 
	#AF_X25
 
PF_X25


	)

127 
	#AF_INET6
 
PF_INET6


	)

128 
	#AF_ROSE
 
PF_ROSE


	)

129 
	#AF_DEC√t
 
PF_DEC√t


	)

130 
	#AF_NETBEUI
 
PF_NETBEUI


	)

131 
	#AF_SECURITY
 
PF_SECURITY


	)

132 
	#AF_KEY
 
PF_KEY


	)

133 
	#AF_NETLINK
 
PF_NETLINK


	)

134 
	#AF_ROUTE
 
PF_ROUTE


	)

135 
	#AF_PACKET
 
PF_PACKET


	)

136 
	#AF_ASH
 
PF_ASH


	)

137 
	#AF_ECONET
 
PF_ECONET


	)

138 
	#AF_ATMSVC
 
PF_ATMSVC


	)

139 
	#AF_RDS
 
PF_RDS


	)

140 
	#AF_SNA
 
PF_SNA


	)

141 
	#AF_IRDA
 
PF_IRDA


	)

142 
	#AF_PPPOX
 
PF_PPPOX


	)

143 
	#AF_WANPIPE
 
PF_WANPIPE


	)

144 
	#AF_LLC
 
PF_LLC


	)

145 
	#AF_CAN
 
PF_CAN


	)

146 
	#AF_TIPC
 
PF_TIPC


	)

147 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

148 
	#AF_IUCV
 
PF_IUCV


	)

149 
	#AF_RXRPC
 
PF_RXRPC


	)

150 
	#AF_ISDN
 
PF_ISDN


	)

151 
	#AF_PHONET
 
PF_PHONET


	)

152 
	#AF_IEEE802154
 
PF_IEEE802154


	)

153 
	#AF_MAX
 
PF_MAX


	)

159 
	#SOL_RAW
 255

	)

160 
	#SOL_DECNET
 261

	)

161 
	#SOL_X25
 262

	)

162 
	#SOL_PACKET
 263

	)

163 
	#SOL_ATM
 264

	)

164 
	#SOL_AAL
 265

	)

165 
	#SOL_IRDA
 266

	)

168 
	#SOMAXCONN
 128

	)

171 
	~<bôs/sockaddr.h
>

174 
	ssockaddr


176 
__SOCKADDR_COMMON
 (
ß_
);

177 
	mß_d©a
[14];

183 
	#__ss_Æig¡y≥
 

	)

184 
	#_SS_SIZE
 128

	)

185 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

187 
	ssockaddr_°‹age


189 
__SOCKADDR_COMMON
 (
ss_
);

190 
__ss_Æig¡y≥
 
	m__ss_Æign
;

191 
	m__ss_∑ddög
[
_SS_PADSIZE
];

198 
	mMSG_OOB
 = 0x01,

199 
	#MSG_OOB
 
MSG_OOB


	)

200 
	mMSG_PEEK
 = 0x02,

201 
	#MSG_PEEK
 
MSG_PEEK


	)

202 
	mMSG_DONTROUTE
 = 0x04,

203 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

204 #ifde‡
__USE_GNU


206 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

207 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

209 
	mMSG_CTRUNC
 = 0x08,

210 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

211 
	mMSG_PROXY
 = 0x10,

212 
	#MSG_PROXY
 
MSG_PROXY


	)

213 
	mMSG_TRUNC
 = 0x20,

214 
	#MSG_TRUNC
 
MSG_TRUNC


	)

215 
	mMSG_DONTWAIT
 = 0x40,

216 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

217 
	mMSG_EOR
 = 0x80,

218 
	#MSG_EOR
 
MSG_EOR


	)

219 
	mMSG_WAITALL
 = 0x100,

220 
	#MSG_WAITALL
 
MSG_WAITALL


	)

221 
	mMSG_FIN
 = 0x200,

222 
	#MSG_FIN
 
MSG_FIN


	)

223 
	mMSG_SYN
 = 0x400,

224 
	#MSG_SYN
 
MSG_SYN


	)

225 
	mMSG_CONFIRM
 = 0x800,

226 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

227 
	mMSG_RST
 = 0x1000,

228 
	#MSG_RST
 
MSG_RST


	)

229 
	mMSG_ERRQUEUE
 = 0x2000,

230 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

231 
	mMSG_NOSIGNAL
 = 0x4000,

232 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

233 
	mMSG_MORE
 = 0x8000,

234 
	#MSG_MORE
 
MSG_MORE


	)

236 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

239 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

245 
	smsghdr


247 *
	mmsg_«me
;

248 
sockÀn_t
 
	mmsg_«mñí
;

250 
iovec
 *
	mmsg_iov
;

251 
size_t
 
	mmsg_iovÀn
;

253 *
	mmsg_c⁄åﬁ
;

254 
size_t
 
	mmsg_c⁄åﬁÀn
;

259 
	mmsg_Êags
;

263 
	scmsghdr


265 
size_t
 
	mcmsg_Àn
;

270 
	mcmsg_Àvñ
;

271 
	mcmsg_ty≥
;

272 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

273 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

278 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

279 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

281 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

283 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

284 
	#CMSG_FIRSTHDR
(
mhdr
) \

285 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

286 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

287 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

288 & (
size_t
Ë~( (size_tË- 1))

	)

289 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

290 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

291 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

293 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

294 
cmsghdr
 *
__cmsg
Ë
__THROW
;

295 #ifde‡
__USE_EXTERN_INLINES


296 #i‚de‡
_EXTERN_INLINE


297 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

299 
_EXTERN_INLINE
 
cmsghdr
 *

300 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

302 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

306 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

307 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

308 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


309 + 
__mhdr
->
msg_c⁄åﬁÀn
)

310 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

311 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

314  
__cmsg
;

315 
	}
}

322 
	mSCM_RIGHTS
 = 0x01

323 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

324 #ifde‡
__USE_GNU


325 , 
	mSCM_CREDENTIALS
 = 0x02

326 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

330 #ifde‡
__USE_GNU


332 
	su¸ed


334 
pid_t
 
	mpid
;

335 
uid_t
 
	muid
;

336 
gid_t
 
	mgid
;

341 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


342 #i‚de‡
FIOGETOWN


343 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

345 #i‚de‡
FIOSETOWN


346 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

348 #i‚de‡
SIOCATMARK


349 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

351 #i‚de‡
SIOCGPGRP


352 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

354 #i‚de‡
SIOCGSTAMP


355 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

357 #i‚de‡
SIOCGSTAMPNS


358 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

360 #i‚de‡
SIOCSPGRP


361 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

366 
	~<asm/sockë.h
>

368 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


369 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


370 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


371 #unde‡
FIOGETOWN


373 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


374 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


375 #unde‡
FIOSETOWN


377 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


378 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


379 #unde‡
SIOCATMARK


381 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


382 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


383 #unde‡
SIOCGPGRP


385 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


386 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


387 #unde‡
SIOCGSTAMP


389 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


390 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


391 #unde‡
SIOCGSTAMPNS


393 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


394 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


395 #unde‡
SIOCSPGRP


400 
	slögî


402 
	ml_⁄off
;

403 
	ml_lögî
;

	@/usr/include/bits/socket2.h

20 #i‚de‡
_SYS_SOCKET_H


24 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

25 
__Êags
);

26 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

27 
__Êags
), 
ªcv
);

28 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

30 
__Êags
), 
__ªcv_chk
)

31 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

34 
__exã∫_Æways_ölöe
 
ssize_t


35 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

40  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

42 i‡(
__n
 > 
	`__bos0
 (
__buf
))

43  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

45  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

46 
	}
}

48 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

49 
size_t
 
__buÊí
, 
__Êags
,

50 
__SOCKADDR_ARG
 
__addr
,

51 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

52 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

53 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

54 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

55 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

56 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

57 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

58 
size_t
 
__buÊí
, 
__Êags
,

59 
__SOCKADDR_ARG
 
__addr
,

60 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

61 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

64 
__exã∫_Æways_ölöe
 
ssize_t


65 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

66 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

68 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

70 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

71  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

72 
__addr
, 
__addr_Àn
);

73 i‡(
__n
 > 
	`__bos0
 (
__buf
))

74  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

75 
__addr
, 
__addr_Àn
);

77  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

78 
	}
}

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__exã∫_Æways_ölöe
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__exã∫_Æways_ölöe
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0)

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__ª°ri˘
 
__§c
, *__ª°ri˘ 
__de°
,

91 
size_t
 
__Àn
))

93 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

94 
	}
}

96 
__exã∫_Æways_ölöe
 

97 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

99 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

100 
	}
}

103 
__exã∫_Æways_ölöe
 *

104 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

106  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

107 
	}
}

109 #ifde‡
__USE_GNU


110 
__exã∫_Æways_ölöe
 *

111 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

113  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

114 
	}
}

118 
__exã∫_Æways_ölöe
 *

119 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

120 
size_t
 
__Àn
))

122  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

123 
	}
}

126 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

127 
size_t
 
__de°Àn
Ë
__THROW
;

128 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

129 
__c⁄°
 *
__§c
,

130 
size_t
 
__n
), 
°≤˝y
);

132 
__exã∫_Æways_ölöe
 *

133 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

135 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

136 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

137  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

138  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

139 
	}
}

142 
__exã∫_Æways_ölöe
 *

143 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

145  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

146 
	}
}

149 
__exã∫_Æways_ölöe
 *

150 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

151 
size_t
 
__Àn
))

153  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

154 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

95 #unde‡
__USE_ISOC99


96 #unde‡
__USE_ISOC95


97 #unde‡
__USE_POSIX


98 #unde‡
__USE_POSIX2


99 #unde‡
__USE_POSIX199309


100 #unde‡
__USE_POSIX199506


101 #unde‡
__USE_XOPEN


102 #unde‡
__USE_XOPEN_EXTENDED


103 #unde‡
__USE_UNIX98


104 #unde‡
__USE_XOPEN2K


105 #unde‡
__USE_XOPEN2K8


106 #unde‡
__USE_LARGEFILE


107 #unde‡
__USE_LARGEFILE64


108 #unde‡
__USE_FILE_OFFSET64


109 #unde‡
__USE_BSD


110 #unde‡
__USE_SVID


111 #unde‡
__USE_MISC


112 #unde‡
__USE_ATFILE


113 #unde‡
__USE_GNU


114 #unde‡
__USE_REENTRANT


115 #unde‡
__USE_FORTIFY_LEVEL


116 #unde‡
__FAVOR_BSD


117 #unde‡
__KERNEL_STRICT_NAMES


121 #i‚de‡
_LOOSE_KERNEL_NAMES


122 
	#__KERNEL_STRICT_NAMES


	)

126 
	#__USE_ANSI
 1

	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

144 #i‡
deföed
 
_BSD_SOURCE
 && \

145 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

146 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

147 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

148 
	#__FAVOR_BSD
 1

	)

152 #ifde‡
_GNU_SOURCE


153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_POSIX_SOURCE


156 
	#_POSIX_SOURCE
 1

	)

157 #unde‡
_POSIX_C_SOURCE


158 
	#_POSIX_C_SOURCE
 200809L

	)

159 #unde‡
_XOPEN_SOURCE


160 
	#_XOPEN_SOURCE
 700

	)

161 #unde‡
_XOPEN_SOURCE_EXTENDED


162 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

163 #unde‡
_LARGEFILE64_SOURCE


164 
	#_LARGEFILE64_SOURCE
 1

	)

165 #unde‡
_BSD_SOURCE


166 
	#_BSD_SOURCE
 1

	)

167 #unde‡
_SVID_SOURCE


168 
	#_SVID_SOURCE
 1

	)

169 #unde‡
_ATFILE_SOURCE


170 
	#_ATFILE_SOURCE
 1

	)

175 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

176 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

177 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

178 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

179 
	#_BSD_SOURCE
 1

	)

180 
	#_SVID_SOURCE
 1

	)

187 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

188 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

189 
	#__USE_ISOC99
 1

	)

193 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

194 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

195 
	#__USE_ISOC95
 1

	)

200 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

201 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

202 
	#_POSIX_SOURCE
 1

	)

203 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

204 
	#_POSIX_C_SOURCE
 2

	)

205 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

206 
	#_POSIX_C_SOURCE
 199506L

	)

207 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

208 
	#_POSIX_C_SOURCE
 200112L

	)

210 
	#_POSIX_C_SOURCE
 200809L

	)

212 
	#__USE_POSIX_IMPLICITLY
 1

	)

215 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


216 
	#__USE_POSIX
 1

	)

219 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX2
 1

	)

223 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

224 
	#__USE_POSIX199309
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

228 
	#__USE_POSIX199506
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

232 
	#__USE_XOPEN2K
 1

	)

233 #unde‡
__USE_ISOC99


234 
	#__USE_ISOC99
 1

	)

237 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

238 
	#__USE_XOPEN2K8
 1

	)

239 #unde‡
_ATFILE_SOURCE


240 
	#_ATFILE_SOURCE
 1

	)

243 #ifdef 
_XOPEN_SOURCE


244 
	#__USE_XOPEN
 1

	)

245 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

246 
	#__USE_XOPEN_EXTENDED
 1

	)

247 
	#__USE_UNIX98
 1

	)

248 #unde‡
_LARGEFILE_SOURCE


249 
	#_LARGEFILE_SOURCE
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

252 
	#__USE_XOPEN2K8
 1

	)

254 
	#__USE_XOPEN2K
 1

	)

255 #unde‡
__USE_ISOC99


256 
	#__USE_ISOC99
 1

	)

259 #ifde‡
_XOPEN_SOURCE_EXTENDED


260 
	#__USE_XOPEN_EXTENDED
 1

	)

265 #ifde‡
_LARGEFILE_SOURCE


266 
	#__USE_LARGEFILE
 1

	)

269 #ifde‡
_LARGEFILE64_SOURCE


270 
	#__USE_LARGEFILE64
 1

	)

273 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

274 
	#__USE_FILE_OFFSET64
 1

	)

277 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


278 
	#__USE_MISC
 1

	)

281 #ifdef 
_BSD_SOURCE


282 
	#__USE_BSD
 1

	)

285 #ifdef 
_SVID_SOURCE


286 
	#__USE_SVID
 1

	)

289 #ifdef 
_ATFILE_SOURCE


290 
	#__USE_ATFILE
 1

	)

293 #ifdef 
_GNU_SOURCE


294 
	#__USE_GNU
 1

	)

297 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


298 
	#__USE_REENTRANT
 1

	)

301 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

302 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

303 #i‡
_FORTIFY_SOURCE
 > 1

304 
	#__USE_FORTIFY_LEVEL
 2

	)

306 
	#__USE_FORTIFY_LEVEL
 1

	)

309 
	#__USE_FORTIFY_LEVEL
 0

	)

313 
	~<bôs/¥edefs.h
>

316 
	#__STDC_ISO_10646__
 200009L

	)

324 #unde‡
__GNU_LIBRARY__


325 
	#__GNU_LIBRARY__
 6

	)

329 
	#__GLIBC__
 2

	)

330 
	#__GLIBC_MINOR__
 10

	)

332 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

333 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

336 #i‡
deföed
 
__GNUC__
 \

337 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

338 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

339 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

340 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

344 #i‚de‡
__ASSEMBLER__


345 #i‚de‡
_SYS_CDEFS_H


346 
	~<sys/cdefs.h
>

351 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


352 
	#__USE_LARGEFILE
 1

	)

353 
	#__USE_LARGEFILE64
 1

	)

359 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

360 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

361 && 
deföed
 
	g__exã∫_ölöe


362 
	#__USE_EXTERN_INLINES
 1

	)

367 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

368 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

369 && 
deföed
 
	g__exã∫_ölöe


370 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

378 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
Ë
__THROW
;

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/gssapi/gssapi_ext.h

26 #i‚de‡
GSSAPI_EXT_H_


27 
	#GSSAPI_EXT_H_


	)

29 
	~<gsßpi/gsßpi.h
>

31 #ifde‡
__˝lu•lus


39 
KRB5_CALLCONV
 
gssd_≤ame_to_uid


41 
gss_OID
,

42 
gss_OID
,

43 
uid_t
 *);

45 
KRB5_CALLCONV
 
	g__gss_u£rok


46 (c⁄° 
	ggss_«me_t
 ,

53 
	sgss_buf„r_£t_desc_°ru˘
 {

54 
size_t
 
	gcou¡
;

55 
gss_buf„r_desc
 *
	gñemíts
;

56 } 
	tgss_buf„r_£t_desc
, *
	tgss_buf„r_£t_t
;

58 
	#GSS_C_NO_BUFFER_SET
 ((
gss_buf„r_£t_t
Ë0)

	)

60 
OM_uöt32
 
KRB5_CALLCONV
 
	ggss_¸óã_em±y_buf„r_£t


61 (
	gOM_uöt32
 * ,

62 
	ggss_buf„r_£t_t
 * );

64 
OM_uöt32
 
KRB5_CALLCONV
 
	ggss_add_buf„r_£t_membî


65 (
	gOM_uöt32
 * ,

66 c⁄° 
	ggss_buf„r_t
 ,

67 
	ggss_buf„r_£t_t
 * );

69 
OM_uöt32
 
KRB5_CALLCONV
 
	ggss_ªÀa£_buf„r_£t


70 (
	gOM_uöt32
 * ,

71 
	ggss_buf„r_£t_t
 * );

73 
OM_uöt32
 
KRB5_CALLCONV
 
	ggss_öquúe_£c_c⁄ãxt_by_oid


74 (
	gOM_uöt32
 * ,

75 c⁄° 
	ggss_˘x_id_t
 ,

76 c⁄° 
	ggss_OID
 ,

77 
	ggss_buf„r_£t_t
 * );

79 
OM_uöt32
 
KRB5_CALLCONV
 
	ggss_öquúe_¸ed_by_oid


80 (
	gOM_uöt32
 * ,

81 c⁄° 
	ggss_¸ed_id_t
 ,

82 c⁄° 
	ggss_OID
 ,

83 
	ggss_buf„r_£t_t
 * );

85 
OM_uöt32
 
KRB5_CALLCONV
 
	ggss_£t_£c_c⁄ãxt_›ti⁄


86 (
	gOM_uöt32
 * ,

87 
	ggss_˘x_id_t
 * ,

88 c⁄° 
	ggss_OID
 ,

89 c⁄° 
	ggss_buf„r_t
 );

92 
OM_uöt32
 
KRB5_CALLCONV
 
	ggss•i_£t_¸ed_›ti⁄


93 (
	gOM_uöt32
 * ,

94 
	ggss_¸ed_id_t
 ,

95 c⁄° 
	ggss_OID
 ,

96 c⁄° 
	ggss_buf„r_t
 );

98 
OM_uöt32
 
KRB5_CALLCONV
 
	ggss•i_mech_övoke


99 (
	gOM_uöt32
 * ,

100 c⁄° 
	ggss_OID
 ,

101 c⁄° 
	ggss_OID
 ,

102 
	ggss_buf„r_t
 );

108 
OM_uöt32
 
KRB5_CALLCONV
 
	ggss_wøp_´ad


109 (
	gOM_uöt32
 * ,

110 
	ggss_˘x_id_t
 ,

112 
	ggss_q›_t
 ,

113 
	ggss_buf„r_t
 ,

114 
	ggss_buf„r_t
 ,

116 
	ggss_buf„r_t
 );

118 
OM_uöt32
 
KRB5_CALLCONV
 
	ggss_unwøp_´ad


119 (
	gOM_uöt32
 * ,

120 
	ggss_˘x_id_t
 ,

121 
	ggss_buf„r_t
 ,

122 
	ggss_buf„r_t
 ,

123 
	ggss_buf„r_t
 ,

125 
	ggss_q›_t
 * );

130 
	#GSS_C_DCE_STYLE
 0x1000

	)

131 
	#GSS_C_IDENTIFY_FLAG
 0x2000

	)

132 
	#GSS_C_EXTENDED_ERROR_FLAG
 0x4000

	)

139 
GSS_DLLIMP
 
gss_OID
 
GSS_C_INQ_SSPI_SESSION_KEY
;

141 
OM_uöt32
 
KRB5_CALLCONV
 
	ggss_com∂ëe_auth_tokí


142 (
OM_uöt32
 *
	gmö‹_°©us
,

143 c⁄° 
gss_˘x_id_t
 
	gc⁄ãxt_h™dÀ
,

144 
gss_buf„r_t
 
	göput_mesßge_buf„r
);

146 
	sgss_iov_buf„r_desc_°ru˘
 {

147 
OM_uöt32
 
	gty≥
;

148 
gss_buf„r_desc
 
	gbuf„r
;

149 } 
	tgss_iov_buf„r_desc
, *
	tgss_iov_buf„r_t
;

151 
	#GSS_C_NO_IOV_BUFFER
 ((
gss_iov_buf„r_t
)0)

	)

153 
	#GSS_IOV_BUFFER_TYPE_EMPTY
 0

	)

154 
	#GSS_IOV_BUFFER_TYPE_DATA
 1

	)

155 
	#GSS_IOV_BUFFER_TYPE_HEADER
 2

	)

156 
	#GSS_IOV_BUFFER_TYPE_MECH_PARAMS
 3

	)

157 
	#GSS_IOV_BUFFER_TYPE_TRAILER
 7

	)

158 
	#GSS_IOV_BUFFER_TYPE_PADDING
 9

	)

159 
	#GSS_IOV_BUFFER_TYPE_STREAM
 10

	)

160 
	#GSS_IOV_BUFFER_TYPE_SIGN_ONLY
 11

	)

162 
	#GSS_IOV_BUFFER_FLAG_MASK
 0xFFFF0000

	)

163 
	#GSS_IOV_BUFFER_FLAG_ALLOCATE
 0x00010000

	)

164 
	#GSS_IOV_BUFFER_FLAG_ALLOCATED
 0x00020000

	)

166 
	#GSS_IOV_BUFFER_TYPE
(
_ty≥
Ë((_ty≥Ë& ~(
GSS_IOV_BUFFER_FLAG_MASK
))

	)

167 
	#GSS_IOV_BUFFER_FLAGS
(
_ty≥
Ë((_ty≥Ë& 
GSS_IOV_BUFFER_FLAG_MASK
)

	)

204 
OM_uöt32
 
KRB5_CALLCONV
 
	ggss_wøp_iov


206 
	gOM_uöt32
 *,

207 
	ggss_˘x_id_t
,

209 
	ggss_q›_t
,

211 
	ggss_iov_buf„r_desc
 *,

225 
OM_uöt32
 
KRB5_CALLCONV
 
	ggss_unwøp_iov


227 
	gOM_uöt32
 *,

228 
	ggss_˘x_id_t
,

230 
	ggss_q›_t
 *,

231 
	ggss_iov_buf„r_desc
 *,

238 
OM_uöt32
 
KRB5_CALLCONV
 
	ggss_wøp_iov_Àngth


240 
	gOM_uöt32
 *,

241 
	ggss_˘x_id_t
,

243 
	ggss_q›_t
,

245 
	ggss_iov_buf„r_desc
 *,

251 
OM_uöt32
 
KRB5_CALLCONV
 
	ggss_ªÀa£_iov_buf„r


253 
	gOM_uöt32
 *,

254 
	ggss_iov_buf„r_desc
 *,

257 #ifde‡
__˝lu•lus


	@/usr/include/inttypes.h

23 #i‚de‡
_INTTYPES_H


24 
	#_INTTYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<°döt.h
>

31 #i‚de‡
____gwch¨_t_deföed


32 #ifde‡
__˝lu•lus


33 
	#__gwch¨_t
 
wch¨_t


	)

34 #ñi‡
deföed
 
__WCHAR_TYPE__


35 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

37 
	#__√ed_wch¨_t


	)

38 
	~<°ddef.h
>

39 
wch¨_t
 
	t__gwch¨_t
;

41 
	#____gwch¨_t_deföed
 1

	)

47 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


49 #i‡
__WORDSIZE
 == 64

50 
	#__PRI64_PREFIX
 "l"

	)

51 
	#__PRIPTR_PREFIX
 "l"

	)

53 
	#__PRI64_PREFIX
 "Œ"

	)

54 
	#__PRIPTR_PREFIX


	)

60 
	#PRId8
 "d"

	)

61 
	#PRId16
 "d"

	)

62 
	#PRId32
 "d"

	)

63 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

65 
	#PRIdLEAST8
 "d"

	)

66 
	#PRIdLEAST16
 "d"

	)

67 
	#PRIdLEAST32
 "d"

	)

68 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIdFAST8
 "d"

	)

71 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

73 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

76 
	#PRIi8
 "i"

	)

77 
	#PRIi16
 "i"

	)

78 
	#PRIi32
 "i"

	)

79 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

81 
	#PRIiLEAST8
 "i"

	)

82 
	#PRIiLEAST16
 "i"

	)

83 
	#PRIiLEAST32
 "i"

	)

84 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIiFAST8
 "i"

	)

87 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

89 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

92 
	#PRIo8
 "o"

	)

93 
	#PRIo16
 "o"

	)

94 
	#PRIo32
 "o"

	)

95 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

97 
	#PRIoLEAST8
 "o"

	)

98 
	#PRIoLEAST16
 "o"

	)

99 
	#PRIoLEAST32
 "o"

	)

100 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIoFAST8
 "o"

	)

103 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

105 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

108 
	#PRIu8
 "u"

	)

109 
	#PRIu16
 "u"

	)

110 
	#PRIu32
 "u"

	)

111 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

113 
	#PRIuLEAST8
 "u"

	)

114 
	#PRIuLEAST16
 "u"

	)

115 
	#PRIuLEAST32
 "u"

	)

116 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIuFAST8
 "u"

	)

119 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

121 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

124 
	#PRIx8
 "x"

	)

125 
	#PRIx16
 "x"

	)

126 
	#PRIx32
 "x"

	)

127 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

129 
	#PRIxLEAST8
 "x"

	)

130 
	#PRIxLEAST16
 "x"

	)

131 
	#PRIxLEAST32
 "x"

	)

132 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIxFAST8
 "x"

	)

135 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

137 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

140 
	#PRIX8
 "X"

	)

141 
	#PRIX16
 "X"

	)

142 
	#PRIX32
 "X"

	)

143 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

145 
	#PRIXLEAST8
 "X"

	)

146 
	#PRIXLEAST16
 "X"

	)

147 
	#PRIXLEAST32
 "X"

	)

148 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

150 
	#PRIXFAST8
 "X"

	)

151 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

153 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

157 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

158 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

159 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

160 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

161 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

162 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

166 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

167 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

168 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

169 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

170 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

171 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

177 
	#SCNd8
 "hhd"

	)

178 
	#SCNd16
 "hd"

	)

179 
	#SCNd32
 "d"

	)

180 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

182 
	#SCNdLEAST8
 "hhd"

	)

183 
	#SCNdLEAST16
 "hd"

	)

184 
	#SCNdLEAST32
 "d"

	)

185 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNdFAST8
 "hhd"

	)

188 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

190 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

193 
	#SCNi8
 "hhi"

	)

194 
	#SCNi16
 "hi"

	)

195 
	#SCNi32
 "i"

	)

196 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

198 
	#SCNiLEAST8
 "hhi"

	)

199 
	#SCNiLEAST16
 "hi"

	)

200 
	#SCNiLEAST32
 "i"

	)

201 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNiFAST8
 "hhi"

	)

204 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

206 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

209 
	#SCNu8
 "hhu"

	)

210 
	#SCNu16
 "hu"

	)

211 
	#SCNu32
 "u"

	)

212 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

214 
	#SCNuLEAST8
 "hhu"

	)

215 
	#SCNuLEAST16
 "hu"

	)

216 
	#SCNuLEAST32
 "u"

	)

217 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNuFAST8
 "hhu"

	)

220 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

222 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

225 
	#SCNo8
 "hho"

	)

226 
	#SCNo16
 "ho"

	)

227 
	#SCNo32
 "o"

	)

228 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

230 
	#SCNoLEAST8
 "hho"

	)

231 
	#SCNoLEAST16
 "ho"

	)

232 
	#SCNoLEAST32
 "o"

	)

233 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNoFAST8
 "hho"

	)

236 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

238 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

241 
	#SCNx8
 "hhx"

	)

242 
	#SCNx16
 "hx"

	)

243 
	#SCNx32
 "x"

	)

244 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

246 
	#SCNxLEAST8
 "hhx"

	)

247 
	#SCNxLEAST16
 "hx"

	)

248 
	#SCNxLEAST32
 "x"

	)

249 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

251 
	#SCNxFAST8
 "hhx"

	)

252 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

254 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

258 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

259 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

260 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

261 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

262 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

265 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

266 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

267 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

268 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

269 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

274 
	g__BEGIN_DECLS


276 #i‡
__WORDSIZE
 == 64

281 
	mquŸ
;

282 
	mªm
;

283 } 
	timaxdiv_t
;

290 
	mquŸ
;

291 
	mªm
;

292 } 
	timaxdiv_t
;

298 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

301 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

302 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

305 
ötmax_t
 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

306 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

309 
uötmax_t
 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

310 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

313 
ötmax_t
 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

314 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

315 
__THROW
;

318 
uötmax_t
 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

319 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

320 
__THROW
;

322 #ifde‡
__USE_EXTERN_INLINES


324 #i‡
__WORDSIZE
 == 64

326 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

327 **
__ª°ri˘
 
__íd±r
,

328 
__ba£
, 
__group
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

331 
__exã∫_ölöe
 
ötmax_t


332 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

333 
ba£
))

335  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

336 
	}
}

338 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *

339 
__ª°ri˘
 
__≈å
,

340 ** 
__ª°ri˘
 
__íd±r
,

341 
__ba£
, 
__group
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

344 
__exã∫_ölöe
 
uötmax_t


345 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

346 
ba£
))

348  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

349 
	}
}

351 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

352 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

353 
__ba£
, 
__group
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

356 
__exã∫_ölöe
 
ötmax_t


357 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

358 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

360  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

361 
	}
}

363 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

364 
__ª°ri˘
 
__≈å
,

365 
__gwch¨_t
 **

366 
__ª°ri˘
 
__íd±r
,

367 
__ba£
, 
__group
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

370 
__exã∫_ölöe
 
uötmax_t


371 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

372 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

374  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

375 
	}
}

379 
__exãnsi⁄__


380 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

381 **
__ª°ri˘
 
__íd±r
,

382 
__ba£
, 
__group
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

385 
__exã∫_ölöe
 
ötmax_t


386 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

387 
ba£
))

389  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

390 
	}
}

392 
__exãnsi⁄__


393 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

394 
__ª°ri˘
 
__≈å
,

396 
__ª°ri˘
 
__íd±r
,

397 
__ba£
,

398 
__group
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

401 
__exã∫_ölöe
 
uötmax_t


402 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

403 
ba£
))

405  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

406 
	}
}

408 
__exãnsi⁄__


409 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

410 
__ª°ri˘
 
__≈å
,

411 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

412 
__ba£
, 
__group
)

413 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

415 
__exã∫_ölöe
 
ötmax_t


416 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

417 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

419  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

420 
	}
}

423 
__exãnsi⁄__


424 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

425 
__ª°ri˘
 
__≈å
,

426 
__gwch¨_t
 **

427 
__ª°ri˘
 
__íd±r
,

428 
__ba£
,

429 
__group
)

430 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

432 
__exã∫_ölöe
 
uötmax_t


433 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

434 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

436  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

437 
	}
}

442 
	g__END_DECLS


	@/usr/include/krb5/krb5.h

2 #i‚de‡
KRB5_KRB5_H_INCLUDED


3 
	#KRB5_KRB5_H_INCLUDED


	)

59 #i‚de‡
KRB5_GENERAL__


60 
	#KRB5_GENERAL__


	)

63 #i‚de‡
KRB5_DEPRECATED


64 
	#KRB5_DEPRECATED
 0

	)

67 #i‡
deföed
(
__MACH__
Ë&& deföed(
__APPLE__
)

68 
	~<T¨gëC⁄dôi⁄Æs.h
>

69 #i‡
TARGET_RT_MAC_CFM


74 #i‡
deföed
(
_MSDOS
Ë|| deföed(
_WIN32
)

75 
	~<wö-mac.h
>

78 #i‚de‡
KRB5_CONFIG__


79 #i‚de‡
KRB5_CALLCONV


80 
	#KRB5_CALLCONV


	)

81 
	#KRB5_CALLCONV_C


	)

85 #i‚de‡
KRB5_CALLCONV_WRONG


86 
	#KRB5_CALLCONV_WRONG


	)

89 #i‚de‡
THREEPARAMOPEN


90 
	#THREEPARAMOPEN
(
x
,
y
,
z
Ë
	`›í
(x,y,z)

	)

93 
	#KRB5_OLD_CRYPTO


	)

95 
	~<°dlib.h
>

96 
	~<limôs.h
>

97 
	~<°d¨g.h
>

99 #i‚de‡
KRB5INT_BEGIN_DECLS


100 #i‡
deföed
(
__˝lu•lus
)

101 
	#KRB5INT_BEGIN_DECLS
 "C" {

	)

102 
	#KRB5INT_END_DECLS
 }

	)

104 
	#KRB5INT_BEGIN_DECLS


	)

105 
	#KRB5INT_END_DECLS


	)

109 
KRB5INT_BEGIN_DECLS


111 #i‡
TARGET_OS_MAC


112 #¥agm®
∑ck
(
push
,2)

115 #i‡(
__GNUC__
 * 10000 + 
__GNUC_MINOR__
 * 100 + 
__GNUC_PATCHLEVEL__
) >= 30203

116 
	#KRB5_ATTR_DEPRECATED
 
	`__©åibuã__
((
dïªˇãd
))

	)

117 #ñi‡
deföed
 
_WIN32


118 
	#KRB5_ATTR_DEPRECATED
 
	`__de˛•ec
(
dïªˇãd
)

	)

120 
	#KRB5_ATTR_DEPRECATED


	)

124 
_¥ofûe_t
;

135 
	tkrb5_o˘ë
;

137 #i‡
INT_MAX
 == 0x7fff

138 
	tkrb5_öt16
;

139 
	tkrb5_ui_2
;

140 #ñi‡
SHRT_MAX
 == 0x7fff

141 
	tkrb5_öt16
;

142 
	tkrb5_ui_2
;

144 #îr‹ 
undeföed
 16 
bô
 
ty≥


147 #i‡
INT_MAX
 == 0x7fffffffL

148 
	tkrb5_öt32
;

149 
	tkrb5_ui_4
;

150 #ñi‡
LONG_MAX
 == 0x7fffffffL

151 
	tkrb5_öt32
;

152 
	tkrb5_ui_4
;

153 #ñi‡
SHRT_MAX
 == 0x7fffffffL

154 
	tkrb5_öt32
;

155 
	tkrb5_ui_4
;

157 #îr‹: 
undeföed
 32 
bô
 
ty≥


160 
	#VALID_INT_BITS
 
INT_MAX


	)

161 
	#VALID_UINT_BITS
 
UINT_MAX


	)

163 
	#KRB5_INT32_MAX
 2147483647

	)

166 
	#KRB5_INT32_MIN
 (-
KRB5_INT32_MAX
-1)

	)

168 
	#KRB5_INT16_MAX
 65535

	)

171 
	#KRB5_INT16_MIN
 (-
KRB5_INT16_MAX
-1)

	)

185 #i‚de‡
FALSE


186 
	#FALSE
 0

	)

188 #i‚de‡
TRUE


189 
	#TRUE
 1

	)

192 
	tkrb5_boﬁón
;

193 
	tkrb5_msgty≥
;

194 
	tkrb5_kvno
;

196 
krb5_öt32
 
	tkrb5_addπy≥
;

197 
krb5_öt32
 
	tkrb5_í˘y≥
;

198 
krb5_öt32
 
	tkrb5_cksumty≥
;

199 
krb5_öt32
 
	tkrb5_authd©©y≥
;

200 
krb5_öt32
 
	tkrb5_keyußge
;

201 
krb5_öt32
 
	tkrb5_¸y±Ÿy≥
;

203 
krb5_öt32
 
	tkrb5_¥óuthty≥
;

204 
krb5_öt32
 
	tkrb5_Êags
;

205 
krb5_öt32
 
	tkrb5_time°amp
;

206 
krb5_öt32
 
	tkrb5_îr‹_code
;

207 
krb5_öt32
 
	tkrb5_dñèt
;

209 
krb5_îr‹_code
 
	tkrb5_magic
;

211 
	s_krb5_d©a
 {

212 
krb5_magic
 
	mmagic
;

213 
	mÀngth
;

214 *
	md©a
;

215 } 
	tkrb5_d©a
;

217 
	s_krb5_o˘ë_d©a
 {

218 
krb5_magic
 
	mmagic
;

219 
	mÀngth
;

220 
krb5_o˘ë
 *
	md©a
;

221 } 
	tkrb5_o˘ë_d©a
;

229 
	#SALT_TYPE_AFS_LENGTH
 
UINT_MAX


	)

230 
	#SALT_TYPE_NO_LENGTH
 
UINT_MAX


	)

232 * 
	tkrb5_poöãr
;

233 c⁄° * 
	tkrb5_c⁄°_poöãr
;

235 
	skrb5_¥öcùÆ_d©a
 {

236 
krb5_magic
 
	mmagic
;

237 
krb5_d©a
 
	mªÆm
;

238 
krb5_d©a
 *
	md©a
;

239 
krb5_öt32
 
	mÀngth
;

240 
krb5_öt32
 
	mty≥
;

241 } 
	tkrb5_¥öcùÆ_d©a
;

243 
krb5_¥öcùÆ_d©a
 * 
	tkrb5_¥öcùÆ
;

250 
	#KRB5_NT_UNKNOWN
 0

	)

252 
	#KRB5_NT_PRINCIPAL
 1

	)

254 
	#KRB5_NT_SRV_INST
 2

	)

256 
	#KRB5_NT_SRV_HST
 3

	)

258 
	#KRB5_NT_SRV_XHST
 4

	)

260 
	#KRB5_NT_UID
 5

	)

262 
	#KRB5_NT_X500_PRINCIPAL
 6

	)

264 
	#KRB5_NT_SMTP_NAME
 7

	)

266 
	#KRB5_NT_ENTERPRISE_PRINCIPAL
 10

	)

268 
	#KRB5_NT_MS_PRINCIPAL
 -128

	)

270 
	#KRB5_NT_MS_PRINCIPAL_AND_ID
 -129

	)

272 
	#KRB5_NT_ENT_PRINCIPAL_AND_ID
 -130

	)

275 c⁄° 
	tkrb5_¥öcùÆ_d©a
 *
	tkrb5_c⁄°_¥öcùÆ
;

277 
	#krb5_¥öc_ªÆm
(
c⁄ãxt
, 
¥öc
Ë(&’röc)->
ªÆm
)

	)

278 
	#krb5_¥öc_£t_ªÆm
(
c⁄ãxt
, 
¥öc
,
vÆue
Ë(’röc)->
ªÆm
 = *(vÆue))

	)

279 
	#krb5_¥öc_£t_ªÆm_Àngth
(
c⁄ãxt
, 
¥öc
,
vÆue
Ë’röc)->
ªÆm
.
Àngth
 = (vÆue)

	)

280 
	#krb5_¥öc_£t_ªÆm_d©a
(
c⁄ãxt
, 
¥öc
,
vÆue
Ë’röc)->
ªÆm
.
d©a
 = (vÆue)

	)

281 
	#krb5_¥öc_size
(
c⁄ãxt
, 
¥öc
Ë’röc)->
Àngth


	)

282 
	#krb5_¥öc_ty≥
(
c⁄ãxt
, 
¥öc
Ë’röc)->
ty≥


	)

283 
	#krb5_¥öc_«me
(
c⁄ãxt
, 
¥öc
Ë’röc)->
d©a


	)

284 
	#krb5_¥öc_comp⁄ít
(
c⁄ãxt
, 
¥öc
,
i
) \

285 (((
i
Ë< 
	`krb5_¥öc_size
(
c⁄ãxt
, 
¥öc
)) \

286 ? (
¥öc
)->
d©a
 + (
i
) \

287 : 
NULL
)

	)

292 
	#KRB5_REFERRAL_REALM
 ""

	)

297 
krb5_boﬁón
 
KRB5_CALLCONV
 
krb5_is_ª„ºÆ_ªÆm
(c⁄° 
krb5_d©a
 *);

308 
	s_krb5_addªss
 {

309 
krb5_magic
 
	mmagic
;

310 
krb5_addπy≥
 
	maddπy≥
;

311 
	mÀngth
;

312 
krb5_o˘ë
 *
	mc⁄ã¡s
;

313 } 
	tkrb5_addªss
;

316 
	#ADDRTYPE_INET
 0x0002

	)

317 
	#ADDRTYPE_CHAOS
 0x0005

	)

318 
	#ADDRTYPE_XNS
 0x0006

	)

319 
	#ADDRTYPE_ISO
 0x0007

	)

320 
	#ADDRTYPE_DDP
 0x0010

	)

321 
	#ADDRTYPE_NETBIOS
 0x0014

	)

322 
	#ADDRTYPE_INET6
 0x0018

	)

324 
	#ADDRTYPE_ADDRPORT
 0x0100

	)

325 
	#ADDRTYPE_IPPORT
 0x0101

	)

328 
	#ADDRTYPE_IS_LOCAL
(
addπy≥
Ë◊ddπy≥ & 0x8000)

	)

335 
	g_krb5_c⁄ãxt
;

336 
_krb5_c⁄ãxt
 * 
	tkrb5_c⁄ãxt
;

338 
	g_krb5_auth_c⁄ãxt
;

339 
_krb5_auth_c⁄ãxt
 * 
	tkrb5_auth_c⁄ãxt
;

341 
	g_krb5_¸y±osy°em_íåy
;

347 
	s_krb5_keyblock
 {

348 
krb5_magic
 
	mmagic
;

349 
krb5_í˘y≥
 
	mí˘y≥
;

350 
	mÀngth
;

351 
krb5_o˘ë
 *
	mc⁄ã¡s
;

352 } 
	tkrb5_keyblock
;

354 #ifde‡
KRB5_OLD_CRYPTO


355 
	s_krb5_í¸y±_block
 {

356 
krb5_magic
 
	mmagic
;

357 
krb5_í˘y≥
 
	m¸y±o_íåy
;

360 
krb5_keyblock
 *
	mkey
;

361 } 
	tkrb5_í¸y±_block
;

364 
	s_krb5_checksum
 {

365 
krb5_magic
 
	mmagic
;

366 
krb5_cksumty≥
 
	mchecksum_ty≥
;

367 
	mÀngth
;

368 
krb5_o˘ë
 *
	mc⁄ã¡s
;

369 } 
	tkrb5_checksum
;

371 
	s_krb5_íc_d©a
 {

372 
krb5_magic
 
	mmagic
;

373 
krb5_í˘y≥
 
	mí˘y≥
;

374 
krb5_kvno
 
	mkvno
;

375 
krb5_d©a
 
	mcùhîãxt
;

376 } 
	tkrb5_íc_d©a
;

378 
	s_krb5_¸y±o_iov
 {

379 
krb5_¸y±Ÿy≥
 
	mÊags
;

380 
krb5_d©a
 
	md©a
;

381 } 
	tkrb5_¸y±o_iov
;

384 
	#ENCTYPE_NULL
 0x0000

	)

385 
	#ENCTYPE_DES_CBC_CRC
 0x0001

	)

386 
	#ENCTYPE_DES_CBC_MD4
 0x0002

	)

387 
	#ENCTYPE_DES_CBC_MD5
 0x0003

	)

388 
	#ENCTYPE_DES_CBC_RAW
 0x0004

	)

390 
	#ENCTYPE_DES3_CBC_SHA
 0x0005

	)

391 
	#ENCTYPE_DES3_CBC_RAW
 0x0006

	)

392 
	#ENCTYPE_DES_HMAC_SHA1
 0x0008

	)

394 
	#ENCTYPE_DSA_SHA1_CMS
 0x0009

	)

395 
	#ENCTYPE_MD5_RSA_CMS
 0x000®

	)

396 
	#ENCTYPE_SHA1_RSA_CMS
 0x000b

	)

397 
	#ENCTYPE_RC2_CBC_ENV
 0x000¯

	)

398 
	#ENCTYPE_RSA_ENV
 0x000d

	)

399 
	#ENCTYPE_RSA_ES_OAEP_ENV
 0x000ê

	)

400 
	#ENCTYPE_DES3_CBC_ENV
 0x000‡

	)

402 
	#ENCTYPE_DES3_CBC_SHA1
 0x0010

	)

403 
	#ENCTYPE_AES128_CTS_HMAC_SHA1_96
 0x0011

	)

404 
	#ENCTYPE_AES256_CTS_HMAC_SHA1_96
 0x0012

	)

405 
	#ENCTYPE_ARCFOUR_HMAC
 0x0017

	)

406 
	#ENCTYPE_ARCFOUR_HMAC_EXP
 0x0018

	)

407 
	#ENCTYPE_UNKNOWN
 0x01ff

	)

409 
	#CKSUMTYPE_CRC32
 0x0001

	)

410 
	#CKSUMTYPE_RSA_MD4
 0x0002

	)

411 
	#CKSUMTYPE_RSA_MD4_DES
 0x0003

	)

412 
	#CKSUMTYPE_DESCBC
 0x0004

	)

415 
	#CKSUMTYPE_RSA_MD5
 0x0007

	)

416 
	#CKSUMTYPE_RSA_MD5_DES
 0x0008

	)

417 
	#CKSUMTYPE_NIST_SHA
 0x0009

	)

418 
	#CKSUMTYPE_HMAC_SHA1_DES3
 0x000c

	)

419 
	#CKSUMTYPE_HMAC_SHA1_96_AES128
 0x000f

	)

420 
	#CKSUMTYPE_HMAC_SHA1_96_AES256
 0x0010

	)

421 
	#CKSUMTYPE_MD5_HMAC_ARCFOUR
 -137

	)

422 
	#CKSUMTYPE_HMAC_MD5_ARCFOUR
 -138

	)

433 
	mKRB5_C_RANDSOURCE_OLDAPI
 = 0,

434 
	mKRB5_C_RANDSOURCE_OSRAND
 = 1,

435 
	mKRB5_C_RANDSOURCE_TRUSTEDPARTY
 = 2,

440 
	mKRB5_C_RANDSOURCE_TIMING
 = 3,

441 
	mKRB5_C_RANDSOURCE_EXTERNAL_PROTOCOL
 = 4,

442 
	mKRB5_C_RANDSOURCE_MAX
 = 5

445 #i‚de‡
krb5_roundup


447 
	#krb5_roundup
(
x
, 
y
Ë((((xË+ (yË- 1)/(y))*(y))

	)

453 
	#krb5_x
(
±r
,
¨gs
Ë(’å)?((*’å)Ë¨gs):(
	`ab‹t
(),1))

	)

454 
	#krb5_xc
(
±r
,
¨gs
Ë(’å)?((*’å)Ë¨gs):(
	`ab‹t
(),(*)0))

	)

456 
	#krb5_x
(
±r
,
¨gs
Ë((*’å)Ë¨gs)

	)

457 
	#krb5_xc
(
±r
,
¨gs
Ë((*’å)Ë¨gs)

	)

460 
krb5_îr‹_code
 
KRB5_CALLCONV


461 
	gkrb5_c_í¸y±


462 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, c⁄° 
krb5_keyblock
 *
	gkey
,

463 
krb5_keyußge
 
	gußge
, c⁄° 
krb5_d©a
 *
	gcùhî_°©e
,

464 c⁄° 
krb5_d©a
 *
	göput
, 
krb5_íc_d©a
 *
	gouçut
);

466 
krb5_îr‹_code
 
KRB5_CALLCONV


467 
	gkrb5_c_de¸y±


468 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, c⁄° 
krb5_keyblock
 *
	gkey
,

469 
krb5_keyußge
 
	gußge
, c⁄° 
krb5_d©a
 *
	gcùhî_°©e
,

470 c⁄° 
krb5_íc_d©a
 *
	göput
, 
krb5_d©a
 *
	gouçut
);

472 
krb5_îr‹_code
 
KRB5_CALLCONV


473 
	gkrb5_c_í¸y±_Àngth


474 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_í˘y≥
 
	gí˘y≥
,

475 
size_t
 
	göpuéí
, size_à*
	gÀngth
);

477 
krb5_îr‹_code
 
KRB5_CALLCONV


478 
	gkrb5_c_block_size


479 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_í˘y≥
 
	gí˘y≥
,

480 
size_t
 *
	gblocksize
);

482 
krb5_îr‹_code
 
KRB5_CALLCONV


483 
	gkrb5_c_keyÀngths


484 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_í˘y≥
 
	gí˘y≥
,

485 
size_t
 *
	gkeybyãs
, size_à*
	gkeyÀngth
);

487 
krb5_îr‹_code
 
KRB5_CALLCONV


488 
	gkrb5_c_öô_°©e


489 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

490 c⁄° 
krb5_keyblock
 *
	gkey
, 
krb5_keyußge
 
	gußge
,

491 
krb5_d©a
 *
	g√w_°©e
);

493 
krb5_îr‹_code
 
KRB5_CALLCONV


494 
	gkrb5_c_‰ì_°©e


495 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, c⁄° 
krb5_keyblock
 *
	gkey
, 
krb5_d©a
 *
	g°©e
);

497 
krb5_îr‹_code
 
KRB5_CALLCONV


498 
krb5_c_¥f
 (
krb5_c⁄ãxt
, c⁄° 
krb5_keyblock
 *,

499 
krb5_d©a
 *
ö
, krb5_d©®*
out
);

501 
krb5_îr‹_code
 
KRB5_CALLCONV


502 
krb5_c_¥f_Àngth
 (
krb5_c⁄ãxt
, 
krb5_í˘y≥
, 
size_t
 *
ouéí
);

503 
krb5_îr‹_code
 
KRB5_CALLCONV


504 
krb5_c_fx_cf2_sim∂e
(
krb5_c⁄ãxt
 
c⁄ãxt
,

505 
krb5_keyblock
 *
k1
, c⁄° *
≥µî1
,

506 
krb5_keyblock
 *
k2
, c⁄° *
≥µî2
,

507 
krb5_keyblock
 **
out
);

519 
krb5_îr‹_code
 
KRB5_CALLCONV


520 
	gkrb5_c_make_øndom_key


521 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_í˘y≥
 
	gí˘y≥
,

522 
krb5_keyblock
 *
	gk5_øndom_key
);

524 
krb5_îr‹_code
 
KRB5_CALLCONV


525 
	gkrb5_c_øndom_to_key


526 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_í˘y≥
 
	gí˘y≥
,

527 
krb5_d©a
 *
	gøndom_d©a
, 
krb5_keyblock
 *
	gk5_øndom_key
);

533 
krb5_îr‹_code
 
KRB5_CALLCONV


534 
	gkrb5_c_øndom_add_íå›y


535 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
	gøndsour˚_id
, c⁄° 
krb5_d©a
 *
	gd©a
);

538 
krb5_îr‹_code
 
KRB5_CALLCONV


539 
	gkrb5_c_øndom_make_o˘ës


540 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_d©a
 *
	gd©a
);

551 
krb5_îr‹_code
 
KRB5_CALLCONV


552 
	gkrb5_c_øndom_os_íå›y


553 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
	g°r⁄g
, *
	gsuc˚ss
);

555  
krb5_îr‹_code
 
KRB5_CALLCONV


556 
	gkrb5_c_øndom_£ed


557 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_d©a
 *
	gd©a
);

559 
krb5_îr‹_code
 
KRB5_CALLCONV


560 
	gkrb5_c_°rög_to_key


561 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_í˘y≥
 
	gí˘y≥
,

562 c⁄° 
krb5_d©a
 *
	g°rög
, c⁄° krb5_d©®*
	gß…
,

563 
krb5_keyblock
 *
	gkey
);

564 
krb5_îr‹_code
 
KRB5_CALLCONV


565 
krb5_c_°rög_to_key_wôh_∑øms
(
krb5_c⁄ãxt
 
c⁄ãxt
,

566 
krb5_í˘y≥
 
í˘y≥
,

567 c⁄° 
krb5_d©a
 *
°rög
,

568 c⁄° 
krb5_d©a
 *
ß…
,

569 c⁄° 
krb5_d©a
 *
∑øms
,

570 
krb5_keyblock
 *
key
);

572 
krb5_îr‹_code
 
KRB5_CALLCONV


573 
	gkrb5_c_í˘y≥_com∑ª


574 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_í˘y≥
 
	ge1
, krb5_í˘y≥ 
	ge2
,

575 
krb5_boﬁón
 *
	gsimû¨
);

577 
krb5_îr‹_code
 
KRB5_CALLCONV


578 
	gkrb5_c_make_checksum


579 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_cksumty≥
 
	gcksumty≥
,

580 c⁄° 
krb5_keyblock
 *
	gkey
, 
krb5_keyußge
 
	gußge
,

581 c⁄° 
krb5_d©a
 *
	göput
, 
krb5_checksum
 *
	gcksum
);

583 
krb5_îr‹_code
 
KRB5_CALLCONV


584 
	gkrb5_c_vîify_checksum


585 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

586 c⁄° 
krb5_keyblock
 *
	gkey
, 
krb5_keyußge
 
	gußge
,

587 c⁄° 
krb5_d©a
 *
	gd©a
,

588 c⁄° 
krb5_checksum
 *
	gcksum
,

589 
krb5_boﬁón
 *
	gvÆid
);

591 
krb5_îr‹_code
 
KRB5_CALLCONV


592 
	gkrb5_c_checksum_Àngth


593 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_cksumty≥
 
	gcksumty≥
,

594 
size_t
 *
	gÀngth
);

596 
krb5_îr‹_code
 
KRB5_CALLCONV


597 
	gkrb5_c_keyed_checksum_ty≥s


598 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_í˘y≥
 
	gí˘y≥
,

599 *
	gcou¡
, 
krb5_cksumty≥
 **
	gcksumty≥s
);

601 
	#KRB5_KEYUSAGE_AS_REQ_PA_ENC_TS
 1

	)

602 
	#KRB5_KEYUSAGE_KDC_REP_TICKET
 2

	)

603 
	#KRB5_KEYUSAGE_AS_REP_ENCPART
 3

	)

604 
	#KRB5_KEYUSAGE_TGS_REQ_AD_SESSKEY
 4

	)

605 
	#KRB5_KEYUSAGE_TGS_REQ_AD_SUBKEY
 5

	)

606 
	#KRB5_KEYUSAGE_TGS_REQ_AUTH_CKSUM
 6

	)

607 
	#KRB5_KEYUSAGE_TGS_REQ_AUTH
 7

	)

608 
	#KRB5_KEYUSAGE_TGS_REP_ENCPART_SESSKEY
 8

	)

609 
	#KRB5_KEYUSAGE_TGS_REP_ENCPART_SUBKEY
 9

	)

610 
	#KRB5_KEYUSAGE_AP_REQ_AUTH_CKSUM
 10

	)

611 
	#KRB5_KEYUSAGE_AP_REQ_AUTH
 11

	)

612 
	#KRB5_KEYUSAGE_AP_REP_ENCPART
 12

	)

613 
	#KRB5_KEYUSAGE_KRB_PRIV_ENCPART
 13

	)

614 
	#KRB5_KEYUSAGE_KRB_CRED_ENCPART
 14

	)

615 
	#KRB5_KEYUSAGE_KRB_SAFE_CKSUM
 15

	)

616 
	#KRB5_KEYUSAGE_APP_DATA_ENCRYPT
 16

	)

617 
	#KRB5_KEYUSAGE_APP_DATA_CKSUM
 17

	)

618 
	#KRB5_KEYUSAGE_KRB_ERROR_CKSUM
 18

	)

619 
	#KRB5_KEYUSAGE_AD_KDCISSUED_CKSUM
 19

	)

620 
	#KRB5_KEYUSAGE_AD_MTE
 20

	)

621 
	#KRB5_KEYUSAGE_AD_ITE
 21

	)

625 
	#KRB5_KEYUSAGE_GSS_TOK_MIC
 22

	)

626 
	#KRB5_KEYUSAGE_GSS_TOK_WRAP_INTEG
 23

	)

627 
	#KRB5_KEYUSAGE_GSS_TOK_WRAP_PRIV
 24

	)

631 
	#KRB5_KEYUSAGE_PA_SAM_CHALLENGE_CKSUM
 25

	)

632 
	#KRB5_KEYUSAGE_PA_SAM_CHALLENGE_TRACKID
 26

	)

633 
	#KRB5_KEYUSAGE_PA_SAM_RESPONSE
 27

	)

636 
	#KRB5_KEYUSAGE_PA_REFERRAL
 26

	)

638 
	#KRB5_KEYUSAGE_FAST_REQ_CHKSUM
 50

	)

639 
	#KRB5_KEYUSAGE_FAST_ENC
 51

	)

640 
	#KRB5_KEYUSAGE_FAST_REP
 52

	)

641 
	#KRB5_KEYUSAGE_FAST_FINISHED
 53

	)

642 
	#KRB5_KEYUSAGE_ENC_CHALLENGE_CLIENT
 54

	)

643 
	#KRB5_KEYUSAGE_ENC_CHALLENGE_KDC
 55

	)

645 
	#KRB5_KEYUSAGE_FAST_REP
 52

	)

646 
krb5_boﬁón
 
KRB5_CALLCONV
 
	gkrb5_c_vÆid_í˘y≥


647 (
krb5_í˘y≥
 
	gkty≥
);

648 
krb5_boﬁón
 
KRB5_CALLCONV
 
	gkrb5_c_vÆid_cksumty≥


649 (
krb5_cksumty≥
 
	g˘y≥
);

650 
krb5_boﬁón
 
KRB5_CALLCONV
 
	gkrb5_c_is_cﬁl_¥oof_cksum


651 (
krb5_cksumty≥
 
	g˘y≥
);

652 
krb5_boﬁón
 
KRB5_CALLCONV
 
	gkrb5_c_is_keyed_cksum


653 (
krb5_cksumty≥
 
	g˘y≥
);

656 
	#KRB5_CRYPTO_TYPE_EMPTY
 0

	)

657 
	#KRB5_CRYPTO_TYPE_HEADER
 1

	)

658 
	#KRB5_CRYPTO_TYPE_DATA
 2

	)

659 
	#KRB5_CRYPTO_TYPE_SIGN_ONLY
 3

	)

660 
	#KRB5_CRYPTO_TYPE_PADDING
 4

	)

661 
	#KRB5_CRYPTO_TYPE_TRAILER
 5

	)

662 
	#KRB5_CRYPTO_TYPE_CHECKSUM
 6

	)

663 
	#KRB5_CRYPTO_TYPE_STREAM
 7

	)

665 
krb5_îr‹_code
 
KRB5_CALLCONV


666 
	gkrb5_c_make_checksum_iov


667 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_cksumty≥
 
	gcksumty≥
,

668 c⁄° 
krb5_keyblock
 *
	gkey
, 
krb5_keyußge
 
	gußge
,

669 
krb5_¸y±o_iov
 *
	gd©a
, 
size_t
 
	gnum_d©a
);

671 
krb5_îr‹_code
 
KRB5_CALLCONV


672 
	gkrb5_c_vîify_checksum_iov


673 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

674 
krb5_cksumty≥
 
	gcksumty≥
,

675 c⁄° 
krb5_keyblock
 *
	gkey
, 
krb5_keyußge
 
	gußge
,

676 c⁄° 
krb5_¸y±o_iov
 *
	gd©a
, 
size_t
 
	gnum_d©a
,

677 
krb5_boﬁón
 *
	gvÆid
);

679 
krb5_îr‹_code
 
KRB5_CALLCONV


680 
	gkrb5_c_í¸y±_iov


681 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, c⁄° 
krb5_keyblock
 *
	gkey
,

682 
krb5_keyußge
 
	gußge
, c⁄° 
krb5_d©a
 *
	gcùhî_°©e
,

683 
krb5_¸y±o_iov
 *
	gd©a
, 
size_t
 
	gnum_d©a
);

685 
krb5_îr‹_code
 
KRB5_CALLCONV


686 
	gkrb5_c_de¸y±_iov


687 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, c⁄° 
krb5_keyblock
 *
	gkey
,

688 
krb5_keyußge
 
	gußge
, c⁄° 
krb5_d©a
 *
	gcùhî_°©e
,

689 
krb5_¸y±o_iov
 *
	gd©a
, 
size_t
 
	gnum_d©a
);

691 
krb5_îr‹_code
 
KRB5_CALLCONV


692 
	gkrb5_c_¸y±o_Àngth


693 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_í˘y≥
 
	gí˘y≥
,

694 
krb5_¸y±Ÿy≥
 
	gty≥
, *
	gsize
);

696 
krb5_îr‹_code
 
KRB5_CALLCONV


697 
	gkrb5_c_¸y±o_Àngth_iov


698 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_í˘y≥
 
	gí˘y≥
,

699 
krb5_¸y±o_iov
 *
	gd©a
, 
size_t
 
	gnum_d©a
);

701 
krb5_îr‹_code
 
KRB5_CALLCONV


702 
	gkrb5_c_∑ddög_Àngth


703 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_í˘y≥
 
	gí˘y≥
,

704 
size_t
 
	gd©a_Àngth
, *
	gsize
);

706 #ifde‡
KRB5_OLD_CRYPTO


711 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_í¸y±


712 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

713 
krb5_c⁄°_poöãr
 
	gö±r
,

714 
krb5_poöãr
 
	gouçå
,

715 
size_t
 
	gsize
,

716 
krb5_í¸y±_block
 * 
	geblock
,

717 
krb5_poöãr
 
	givec
);

718 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_de¸y±


719 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

720 
krb5_c⁄°_poöãr
 
	gö±r
,

721 
krb5_poöãr
 
	gouçå
,

722 
size_t
 
	gsize
,

723 
krb5_í¸y±_block
 * 
	geblock
,

724 
krb5_poöãr
 
	givec
);

725 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_¥o˚ss_key


726 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

727 
krb5_í¸y±_block
 * 
	geblock
,

728 c⁄° 
krb5_keyblock
 * 
	gkey
);

729 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_föish_key


730 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

731 
krb5_í¸y±_block
 * 
	geblock
);

732 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_°rög_to_key


733 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

734 c⁄° 
krb5_í¸y±_block
 * 
	geblock
,

735 
krb5_keyblock
 * 
	gkeyblock
,

736 c⁄° 
krb5_d©a
 * 
	gd©a
,

737 c⁄° 
krb5_d©a
 * 
	gß…
);

738 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_öô_øndom_key


739 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

740 c⁄° 
krb5_í¸y±_block
 * 
	geblock
,

741 c⁄° 
krb5_keyblock
 * 
	gkeyblock
,

742 
krb5_poöãr
 * 
	g±r
);

743 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_föish_øndom_key


744 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

745 c⁄° 
krb5_í¸y±_block
 * 
	geblock
,

746 
krb5_poöãr
 * 
	g±r
);

747 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_øndom_key


748 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

749 c⁄° 
krb5_í¸y±_block
 * 
	geblock
,

750 
krb5_poöãr
 
	g±r
,

751 
krb5_keyblock
 ** 
	gkeyblock
);

752 
krb5_í˘y≥
 
KRB5_CALLCONV
 
	gkrb5_eblock_í˘y≥


753 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

754 c⁄° 
krb5_í¸y±_block
 * 
	geblock
);

755 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_u£_í˘y≥


756 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

757 
krb5_í¸y±_block
 * 
	geblock
,

758 
krb5_í˘y≥
 
	gí˘y≥
);

759 
size_t
 
KRB5_CALLCONV
 
	gkrb5_í¸y±_size


760 (
size_t
 
	gÀngth
,

761 
krb5_í˘y≥
 
	g¸y±o
);

762 
size_t
 
KRB5_CALLCONV
 
	gkrb5_checksum_size


763 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

764 
krb5_cksumty≥
 
	g˘y≥
);

765 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_ˇlcuœã_checksum


766 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

767 
krb5_cksumty≥
 
	g˘y≥
,

768 
krb5_c⁄°_poöãr
 
	gö
, 
size_t
 
	gö_Àngth
,

769 
krb5_c⁄°_poöãr
 
	g£ed
, 
size_t
 
	g£ed_Àngth
,

770 
krb5_checksum
 * 
	goutcksum
);

771 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_vîify_checksum


772 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

773 
krb5_cksumty≥
 
	g˘y≥
,

774 c⁄° 
krb5_checksum
 * 
	gcksum
,

775 
krb5_c⁄°_poöãr
 
	gö
, 
size_t
 
	gö_Àngth
,

776 
krb5_c⁄°_poöãr
 
	g£ed
, 
size_t
 
	g£ed_Àngth
);

792 
	#KDC_OPT_FORWARDABLE
 0x40000000

	)

793 
	#KDC_OPT_FORWARDED
 0x20000000

	)

794 
	#KDC_OPT_PROXIABLE
 0x10000000

	)

795 
	#KDC_OPT_PROXY
 0x08000000

	)

796 
	#KDC_OPT_ALLOW_POSTDATE
 0x04000000

	)

797 
	#KDC_OPT_POSTDATED
 0x02000000

	)

799 
	#KDC_OPT_RENEWABLE
 0x00800000

	)

805 
	#KDC_OPT_REQUEST_ANONYMOUS
 0x00020000

	)

806 
	#KDC_OPT_CNAME_IN_ADDL_TKT
 0x00020000

	)

807 
	#KDC_OPT_CANONICALIZE
 0x00010000

	)

818 
	#KDC_OPT_DISABLE_TRANSITED_CHECK
 0x00000020

	)

819 
	#KDC_OPT_RENEWABLE_OK
 0x00000010

	)

820 
	#KDC_OPT_ENC_TKT_IN_SKEY
 0x00000008

	)

822 
	#KDC_OPT_RENEW
 0x00000002

	)

823 
	#KDC_OPT_VALIDATE
 0x00000001

	)

832 
	#KDC_TKT_COMMON_MASK
 0x54800000

	)

837 
	#AP_OPTS_RESERVED
 0x80000000

	)

838 
	#AP_OPTS_USE_SESSION_KEY
 0x40000000

	)

839 
	#AP_OPTS_MUTUAL_REQUIRED
 0x20000000

	)

867 
	#AP_OPTS_ETYPE_NEGOTIATION
 0x00000002

	)

868 
	#AP_OPTS_USE_SUBKEY
 0x00000001

	)

870 
	#AP_OPTS_WIRE_MASK
 0xfffffff0

	)

873 
	#AD_TYPE_RESERVED
 0x8000

	)

874 
	#AD_TYPE_EXTERNAL
 0x4000

	)

875 
	#AD_TYPE_REGISTERED
 0x2000

	)

877 
	#AD_TYPE_FIELD_TYPE_MASK
 0x1fff

	)

883 
	#TKT_FLG_FORWARDABLE
 0x40000000

	)

884 
	#TKT_FLG_FORWARDED
 0x20000000

	)

885 
	#TKT_FLG_PROXIABLE
 0x10000000

	)

886 
	#TKT_FLG_PROXY
 0x08000000

	)

887 
	#TKT_FLG_MAY_POSTDATE
 0x04000000

	)

888 
	#TKT_FLG_POSTDATED
 0x02000000

	)

889 
	#TKT_FLG_INVALID
 0x01000000

	)

890 
	#TKT_FLG_RENEWABLE
 0x00800000

	)

891 
	#TKT_FLG_INITIAL
 0x00400000

	)

892 
	#TKT_FLG_PRE_AUTH
 0x00200000

	)

893 
	#TKT_FLG_HW_AUTH
 0x00100000

	)

894 
	#TKT_FLG_TRANSIT_POLICY_CHECKED
 0x00080000

	)

895 
	#TKT_FLG_OK_AS_DELEGATE
 0x00040000

	)

896 
	#TKT_FLG_ANONYMOUS
 0x00020000

	)

916 
	#LR_TYPE_THIS_SERVER_ONLY
 0x8000

	)

918 
	#LR_TYPE_INTERPRETATION_MASK
 0x7fff

	)

921 
	#MSEC_DIRBIT
 0x8000

	)

922 
	#MSEC_VAL_MASK
 0x7fff

	)

933 
	#KRB5_PVNO
 5

	)

937 
	#KRB5_AS_REQ
 ((
krb5_msgty≥
)10Ë

	)

938 
	#KRB5_AS_REP
 ((
krb5_msgty≥
)11Ë

	)

939 
	#KRB5_TGS_REQ
 ((
krb5_msgty≥
)12Ë

	)

940 
	#KRB5_TGS_REP
 ((
krb5_msgty≥
)13Ë

	)

941 
	#KRB5_AP_REQ
 ((
krb5_msgty≥
)14Ë

	)

942 
	#KRB5_AP_REP
 ((
krb5_msgty≥
)15Ë

	)

943 
	#KRB5_SAFE
 ((
krb5_msgty≥
)20Ë

	)

944 
	#KRB5_PRIV
 ((
krb5_msgty≥
)21Ë

	)

945 
	#KRB5_CRED
 ((
krb5_msgty≥
)22Ë

	)

946 
	#KRB5_ERROR
 ((
krb5_msgty≥
)30Ë

	)

949 
	#KRB5_LRQ_NONE
 0

	)

950 
	#KRB5_LRQ_ALL_LAST_TGT
 1

	)

951 
	#KRB5_LRQ_ONE_LAST_TGT
 (-1)

	)

952 
	#KRB5_LRQ_ALL_LAST_INITIAL
 2

	)

953 
	#KRB5_LRQ_ONE_LAST_INITIAL
 (-2)

	)

954 
	#KRB5_LRQ_ALL_LAST_TGT_ISSUED
 3

	)

955 
	#KRB5_LRQ_ONE_LAST_TGT_ISSUED
 (-3)

	)

956 
	#KRB5_LRQ_ALL_LAST_RENEWAL
 4

	)

957 
	#KRB5_LRQ_ONE_LAST_RENEWAL
 (-4)

	)

958 
	#KRB5_LRQ_ALL_LAST_REQ
 5

	)

959 
	#KRB5_LRQ_ONE_LAST_REQ
 (-5)

	)

960 
	#KRB5_LRQ_ALL_PW_EXPTIME
 6

	)

961 
	#KRB5_LRQ_ONE_PW_EXPTIME
 (-6)

	)

964 
	#KRB5_PADATA_NONE
 0

	)

965 
	#KRB5_PADATA_AP_REQ
 1

	)

966 
	#KRB5_PADATA_TGS_REQ
 
KRB5_PADATA_AP_REQ


	)

967 
	#KRB5_PADATA_ENC_TIMESTAMP
 2

	)

968 
	#KRB5_PADATA_PW_SALT
 3

	)

970 
	#KRB5_PADATA_ENC_ENCKEY
 4

	)

972 
	#KRB5_PADATA_ENC_UNIX_TIME
 5

	)

973 
	#KRB5_PADATA_ENC_SANDIA_SECURID
 6

	)

974 
	#KRB5_PADATA_SESAME
 7

	)

975 
	#KRB5_PADATA_OSF_DCE
 8

	)

976 
	#KRB5_CYBERSAFE_SECUREID
 9

	)

977 
	#KRB5_PADATA_AFS3_SALT
 10

	)

978 
	#KRB5_PADATA_ETYPE_INFO
 11

	)

979 
	#KRB5_PADATA_SAM_CHALLENGE
 12

	)

980 
	#KRB5_PADATA_SAM_RESPONSE
 13

	)

981 
	#KRB5_PADATA_PK_AS_REQ_OLD
 14

	)

982 
	#KRB5_PADATA_PK_AS_REP_OLD
 15

	)

983 
	#KRB5_PADATA_PK_AS_REQ
 16

	)

984 
	#KRB5_PADATA_PK_AS_REP
 17

	)

985 
	#KRB5_PADATA_ETYPE_INFO2
 19

	)

986 
	#KRB5_PADATA_USE_SPECIFIED_KVNO
 20

	)

987 
	#KRB5_PADATA_SVR_REFERRAL_INFO
 20

	)

988 
	#KRB5_PADATA_SAM_REDIRECT
 21

	)

989 
	#KRB5_PADATA_GET_FROM_TYPED_DATA
 22

	)

990 
	#KRB5_PADATA_REFERRAL
 25

	)

991 
	#KRB5_PADATA_SAM_CHALLENGE_2
 30

	)

992 
	#KRB5_PADATA_SAM_RESPONSE_2
 31

	)

993 
	#KRB5_PADATA_PAC_REQUEST
 128

	)

994 
	#KRB5_PADATA_FOR_USER
 129

	)

995 
	#KRB5_PADATA_S4U_X509_USER
 130

	)

996 
	#KRB5_PADATA_FX_COOKIE
 133

	)

997 
	#KRB5_PADATA_FX_FAST
 136

	)

998 
	#KRB5_PADATA_FX_ERROR
 137

	)

999 
	#KRB5_PADATA_ENCRYPTED_CHALLENGE
 138

	)

1001 
	#KRB5_SAM_USE_SAD_AS_KEY
 0x80000000

	)

1002 
	#KRB5_SAM_SEND_ENCRYPTED_SAD
 0x40000000

	)

1003 
	#KRB5_SAM_MUST_PK_ENCRYPT_SAD
 0x20000000

	)

1006 
	#KRB5_PADATA_DASS
 16

	)

1009 
	#KRB5_DOMAIN_X500_COMPRESS
 1

	)

1012 
	#KRB5_ALTAUTH_ATT_CHALLENGE_RESPONSE
 64

	)

1015 
	#KRB5_AUTHDATA_IF_RELEVANT
 1

	)

1016 
	#KRB5_AUTHDATA_KDC_ISSUED
 4

	)

1017 
	#KRB5_AUTHDATA_AND_OR
 5

	)

1018 
	#KRB5_AUTHDATA_MANDATORY_FOR_KDC
 8

	)

1019 
	#KRB5_AUTHDATA_INITIAL_VERIFIED_CAS
 9

	)

1020 
	#KRB5_AUTHDATA_OSF_DCE
 64

	)

1021 
	#KRB5_AUTHDATA_SESAME
 65

	)

1022 
	#KRB5_AUTHDATA_WIN2K_PAC
 128

	)

1023 
	#KRB5_AUTHDATA_ETYPE_NEGOTIATION
 129

	)

1024 
	#KRB5_AUTHDATA_FX_ARMOR
 71

	)

1027 
	#KRB5_KPASSWD_SUCCESS
 0

	)

1028 
	#KRB5_KPASSWD_MALFORMED
 1

	)

1029 
	#KRB5_KPASSWD_HARDERROR
 2

	)

1030 
	#KRB5_KPASSWD_AUTHERROR
 3

	)

1031 
	#KRB5_KPASSWD_SOFTERROR
 4

	)

1034 
	#KRB5_KPASSWD_ACCESSDENIED
 5

	)

1035 
	#KRB5_KPASSWD_BAD_VERSION
 6

	)

1036 
	#KRB5_KPASSWD_INITIAL_FLAG_NEEDED
 7

	)

1043 
	s_krb5_tickë_times
 {

1044 
krb5_time°amp
 
	mauthtime
;

1046 
krb5_time°amp
 
	m°¨âime
;

1048 
krb5_time°amp
 
	mídtime
;

1049 
krb5_time°amp
 
	mª√w_tûl
;

1050 } 
	tkrb5_tickë_times
;

1053 
	s_krb5_authd©a
 {

1054 
krb5_magic
 
	mmagic
;

1055 
krb5_authd©©y≥
 
	mad_ty≥
;

1056 
	mÀngth
;

1057 
krb5_o˘ë
 *
	mc⁄ã¡s
;

1058 } 
	tkrb5_authd©a
;

1061 
	s_krb5_å™sôed
 {

1062 
krb5_magic
 
	mmagic
;

1063 
krb5_o˘ë
 
	må_ty≥
;

1064 
krb5_d©a
 
	må_c⁄ã¡s
;

1065 } 
	tkrb5_å™sôed
;

1067 
	s_krb5_íc_tkt_∑π
 {

1068 
krb5_magic
 
	mmagic
;

1070 
krb5_Êags
 
	mÊags
;

1071 
krb5_keyblock
 *
	m£ssi⁄
;

1072 
krb5_¥öcùÆ
 
	m˛õ¡
;

1073 
krb5_å™sôed
 
	må™sôed
;

1074 
krb5_tickë_times
 
	mtimes
;

1075 
krb5_addªss
 **
	mˇddrs
;

1076 
krb5_authd©a
 **
	mauth‹iz©i⁄_d©a
;

1077 } 
	tkrb5_íc_tkt_∑π
;

1079 
	s_krb5_tickë
 {

1080 
krb5_magic
 
	mmagic
;

1082 
krb5_¥öcùÆ
 
	m£rvî
;

1083 
krb5_íc_d©a
 
	míc_∑π
;

1085 
krb5_íc_tkt_∑π
 *
	míc_∑π2
;

1087 } 
	tkrb5_tickë
;

1090 
	s_krb5_authítiˇt‹
 {

1091 
krb5_magic
 
	mmagic
;

1092 
krb5_¥öcùÆ
 
	m˛õ¡
;

1093 
krb5_checksum
 *
	mchecksum
;

1094 
krb5_öt32
 
	mcu£c
;

1095 
krb5_time°amp
 
	m˘ime
;

1096 
krb5_keyblock
 *
	msubkey
;

1097 
krb5_ui_4
 
	m£q_numbî
;

1098 
krb5_authd©a
 **
	mauth‹iz©i⁄_d©a
;

1099 } 
	tkrb5_authítiˇt‹
;

1101 
	s_krb5_tkt_authít
 {

1102 
krb5_magic
 
	mmagic
;

1103 
krb5_tickë
 *
	mtickë
;

1104 
krb5_authítiˇt‹
 *
	mauthítiˇt‹
;

1105 
krb5_Êags
 
	m≠_›ti⁄s
;

1106 } 
	tkrb5_tkt_authít
;

1109 
	s_krb5_¸eds
 {

1110 
krb5_magic
 
	mmagic
;

1111 
krb5_¥öcùÆ
 
	m˛õ¡
;

1112 
krb5_¥öcùÆ
 
	m£rvî
;

1113 
krb5_keyblock
 
	mkeyblock
;

1114 
krb5_tickë_times
 
	mtimes
;

1115 
krb5_boﬁón
 
	mis_skey
;

1117 
krb5_Êags
 
	mtickë_Êags
;

1118 
krb5_addªss
 **
	maddªs£s
;

1119 
krb5_d©a
 
	mtickë
;

1120 
krb5_d©a
 
	m£c⁄d_tickë
;

1123 
krb5_authd©a
 **
	mauthd©a
;

1124 } 
	tkrb5_¸eds
;

1127 
	s_krb5_œ°_ªq_íåy
 {

1128 
krb5_magic
 
	mmagic
;

1129 
krb5_öt32
 
	mÃ_ty≥
;

1130 
krb5_time°amp
 
	mvÆue
;

1131 } 
	tkrb5_œ°_ªq_íåy
;

1134 
	s_krb5_∑_d©a
 {

1135 
krb5_magic
 
	mmagic
;

1136 
krb5_¥óuthty≥
 
	m∑_ty≥
;

1137 
	mÀngth
;

1138 
krb5_o˘ë
 *
	mc⁄ã¡s
;

1139 } 
	tkrb5_∑_d©a
;

1141 
	s_krb5_kdc_ªq
 {

1142 
krb5_magic
 
	mmagic
;

1143 
krb5_msgty≥
 
	mmsg_ty≥
;

1144 
krb5_∑_d©a
 **
	m∑d©a
;

1146 
krb5_Êags
 
	mkdc_›ti⁄s
;

1147 
krb5_¥öcùÆ
 
	m˛õ¡
;

1148 
krb5_¥öcùÆ
 
	m£rvî
;

1150 
krb5_time°amp
 
	m‰om
;

1151 
krb5_time°amp
 
	mtûl
;

1152 
krb5_time°amp
 
	mπime
;

1153 
krb5_öt32
 
	mn⁄˚
;

1154 
	mnkty≥s
;

1155 
krb5_í˘y≥
 *
	mkty≥
;

1156 
krb5_addªss
 **
	maddªs£s
;

1157 
krb5_íc_d©a
 
	mauth‹iz©i⁄_d©a
;

1158 
krb5_authd©a
 **
	mu√nc_authd©a
;

1160 
krb5_tickë
 **
	m£c⁄d_tickë
;

1167 * 
	mkdc_°©e
;

1168 } 
	tkrb5_kdc_ªq
;

1170 
	s_krb5_íc_kdc_ªp_∑π
 {

1171 
krb5_magic
 
	mmagic
;

1173 
krb5_msgty≥
 
	mmsg_ty≥
;

1174 
krb5_keyblock
 *
	m£ssi⁄
;

1175 
krb5_œ°_ªq_íåy
 **
	mœ°_ªq
;

1176 
krb5_öt32
 
	mn⁄˚
;

1177 
krb5_time°amp
 
	mkey_exp
;

1178 
krb5_Êags
 
	mÊags
;

1179 
krb5_tickë_times
 
	mtimes
;

1180 
krb5_¥öcùÆ
 
	m£rvî
;

1181 
krb5_addªss
 **
	mˇddrs
;

1183 
krb5_∑_d©a
 **
	míc_∑d©a
;

1184 } 
	tkrb5_íc_kdc_ªp_∑π
;

1186 
	s_krb5_kdc_ªp
 {

1187 
krb5_magic
 
	mmagic
;

1189 
krb5_msgty≥
 
	mmsg_ty≥
;

1190 
krb5_∑_d©a
 **
	m∑d©a
;

1191 
krb5_¥öcùÆ
 
	m˛õ¡
;

1192 
krb5_tickë
 *
	mtickë
;

1193 
krb5_íc_d©a
 
	míc_∑π
;

1195 
krb5_íc_kdc_ªp_∑π
 *
	míc_∑π2
;

1196 } 
	tkrb5_kdc_ªp
;

1199 
	s_krb5_îr‹
 {

1200 
krb5_magic
 
	mmagic
;

1202 
krb5_time°amp
 
	m˘ime
;

1203 
krb5_öt32
 
	mcu£c
;

1204 
krb5_öt32
 
	msu£c
;

1205 
krb5_time°amp
 
	m°ime
;

1206 
krb5_ui_4
 
	mîr‹
;

1207 
krb5_¥öcùÆ
 
	m˛õ¡
;

1209 
krb5_¥öcùÆ
 
	m£rvî
;

1210 
krb5_d©a
 
	mãxt
;

1211 
krb5_d©a
 
	me_d©a
;

1212 } 
	tkrb5_îr‹
;

1214 
	s_krb5_≠_ªq
 {

1215 
krb5_magic
 
	mmagic
;

1216 
krb5_Êags
 
	m≠_›ti⁄s
;

1217 
krb5_tickë
 *
	mtickë
;

1218 
krb5_íc_d©a
 
	mauthítiˇt‹
;

1219 } 
	tkrb5_≠_ªq
;

1221 
	s_krb5_≠_ªp
 {

1222 
krb5_magic
 
	mmagic
;

1223 
krb5_íc_d©a
 
	míc_∑π
;

1224 } 
	tkrb5_≠_ªp
;

1226 
	s_krb5_≠_ªp_íc_∑π
 {

1227 
krb5_magic
 
	mmagic
;

1228 
krb5_time°amp
 
	m˘ime
;

1229 
krb5_öt32
 
	mcu£c
;

1230 
krb5_keyblock
 *
	msubkey
;

1231 
krb5_ui_4
 
	m£q_numbî
;

1232 } 
	tkrb5_≠_ªp_íc_∑π
;

1234 
	s_krb5_ª•⁄£
 {

1235 
krb5_magic
 
	mmagic
;

1236 
krb5_o˘ë
 
	mmesßge_ty≥
;

1237 
krb5_d©a
 
	mª•⁄£
;

1238 
krb5_öt32
 
	mex≥˘ed_n⁄˚
;

1239 
krb5_time°amp
 
	mªque°_time
;

1240 } 
	tkrb5_ª•⁄£
;

1242 
	s_krb5_¸ed_öfo
 {

1243 
krb5_magic
 
	mmagic
;

1244 
krb5_keyblock
 *
	m£ssi⁄
;

1246 
krb5_¥öcùÆ
 
	m˛õ¡
;

1247 
krb5_¥öcùÆ
 
	m£rvî
;

1248 
krb5_Êags
 
	mÊags
;

1249 
krb5_tickë_times
 
	mtimes
;

1251 
krb5_addªss
 **
	mˇddrs
;

1252 } 
	tkrb5_¸ed_öfo
;

1254 
	s_krb5_¸ed_íc_∑π
 {

1255 
krb5_magic
 
	mmagic
;

1256 
krb5_öt32
 
	mn⁄˚
;

1257 
krb5_time°amp
 
	mtime°amp
;

1258 
krb5_öt32
 
	mu£c
;

1259 
krb5_addªss
 *
	ms_addªss
;

1260 
krb5_addªss
 *
	mr_addªss
;

1261 
krb5_¸ed_öfo
 **
	mtickë_öfo
;

1262 } 
	tkrb5_¸ed_íc_∑π
;

1264 
	s_krb5_¸ed
 {

1265 
krb5_magic
 
	mmagic
;

1266 
krb5_tickë
 **
	mtickës
;

1267 
krb5_íc_d©a
 
	míc_∑π
;

1268 
krb5_¸ed_íc_∑π
 *
	míc_∑π2
;

1269 } 
	tkrb5_¸ed
;

1272 
	s_∑sswd_phø£_ñemít
 {

1273 
krb5_magic
 
	mmagic
;

1274 
krb5_d©a
 *
	m∑sswd
;

1275 
krb5_d©a
 *
	mphø£
;

1276 } 
	t∑sswd_phø£_ñemít
;

1278 
	s_krb5_pwd_d©a
 {

1279 
krb5_magic
 
	mmagic
;

1280 
	m£quí˚_cou¡
;

1281 
∑sswd_phø£_ñemít
 **
	mñemít
;

1282 } 
	tkrb5_pwd_d©a
;

1289 
	s_krb5_∑_svr_ª„ºÆ_d©a
 {

1291 
krb5_¥öcùÆ
 
	m¥öcùÆ
;

1292 } 
	tkrb5_∑_svr_ª„ºÆ_d©a
;

1294 
	s_krb5_∑_£rvî_ª„ºÆ_d©a
 {

1295 
krb5_d©a
 *
	mª„ºed_ªÆm
;

1296 
krb5_¥öcùÆ
 
	måue_¥öcùÆ_«me
;

1297 
krb5_¥öcùÆ
 
	mªque°ed_¥öcùÆ_«me
;

1298 
krb5_time°amp
 
	mª„ºÆ_vÆid_u¡û
;

1299 
krb5_checksum
 
	mªp_cksum
;

1300 } 
	tkrb5_∑_£rvî_ª„ºÆ_d©a
;

1302 
	s_krb5_∑_∑c_ªq
 {

1304 
krb5_boﬁón
 
	mö˛ude_∑c
;

1305 } 
	tkrb5_∑_∑c_ªq
;

1311 
	#KRB5_AUTH_CONTEXT_DO_TIME
 0x00000001

	)

1312 
	#KRB5_AUTH_CONTEXT_RET_TIME
 0x00000002

	)

1313 
	#KRB5_AUTH_CONTEXT_DO_SEQUENCE
 0x00000004

	)

1314 
	#KRB5_AUTH_CONTEXT_RET_SEQUENCE
 0x00000008

	)

1315 
	#KRB5_AUTH_CONTEXT_PERMIT_ALL
 0x00000010

	)

1316 
	#KRB5_AUTH_CONTEXT_USE_SUBKEY
 0x00000020

	)

1318 
	skrb5_ª∂ay_d©a
 {

1319 
krb5_time°amp
 
	mtime°amp
;

1320 
krb5_öt32
 
	mu£c
;

1321 
krb5_ui_4
 
	m£q
;

1322 } 
	tkrb5_ª∂ay_d©a
;

1325 
	#KRB5_AUTH_CONTEXT_GENERATE_LOCAL_ADDR
 0x00000001

	)

1326 
	#KRB5_AUTH_CONTEXT_GENERATE_REMOTE_ADDR
 0x00000002

	)

1327 
	#KRB5_AUTH_CONTEXT_GENERATE_LOCAL_FULL_ADDR
 0x00000004

	)

1328 
	#KRB5_AUTH_CONTEXT_GENERATE_REMOTE_FULL_ADDR
 0x00000008

	)

1333 
	gkrb5_îr‹_code


1334 (
	tKRB5_CALLCONV
 * 
	tkrb5_mk_ªq_checksum_func
Ë(
	tkrb5_c⁄ãxt
, 
	tkrb5_auth_c⁄ãxt
 , *,

1335 
	tkrb5_d©a
 **);

1346 
krb5_poöãr
 
	tkrb5_cc_curs‹
;

1348 
	g_krb5_cˇche
;

1349 
_krb5_cˇche
 *
	tkrb5_cˇche
;

1350 
	g_krb5_cc_›s
;

1351 
_krb5_cc_›s
 
	tkrb5_cc_›s
;

1356 
	g_krb5_cccﬁ_curs‹
;

1357 
_krb5_cccﬁ_curs‹
 *
	tkrb5_cccﬁ_curs‹
;

1360 
	#KRB5_TC_MATCH_TIMES
 0x00000001

	)

1361 
	#KRB5_TC_MATCH_IS_SKEY
 0x00000002

	)

1362 
	#KRB5_TC_MATCH_FLAGS
 0x00000004

	)

1363 
	#KRB5_TC_MATCH_TIMES_EXACT
 0x00000008

	)

1364 
	#KRB5_TC_MATCH_FLAGS_EXACT
 0x00000010

	)

1365 
	#KRB5_TC_MATCH_AUTHDATA
 0x00000020

	)

1366 
	#KRB5_TC_MATCH_SRV_NAMEONLY
 0x00000040

	)

1367 
	#KRB5_TC_MATCH_2ND_TKT
 0x00000080

	)

1368 
	#KRB5_TC_MATCH_KTYPE
 0x00000100

	)

1369 
	#KRB5_TC_SUPPORTED_KTYPES
 0x00000200

	)

1372 
	#KRB5_TC_OPENCLOSE
 0x00000001

	)

1373 
	#KRB5_TC_NOTICKET
 0x00000002

	)

1375 c⁄° * 
KRB5_CALLCONV


1376 
krb5_cc_gë_«me
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
);

1378 
krb5_îr‹_code
 
KRB5_CALLCONV


1379 
krb5_cc_gí_√w
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 *
ˇche
);

1381 
krb5_îr‹_code
 
KRB5_CALLCONV


1382 
krb5_cc_öôülize
(
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
,

1383 
krb5_¥öcùÆ
 
¥öcùÆ
);

1385 
krb5_îr‹_code
 
KRB5_CALLCONV


1386 
krb5_cc_de°roy
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
);

1388 
krb5_îr‹_code
 
KRB5_CALLCONV


1389 
krb5_cc_˛o£
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
);

1391 
krb5_îr‹_code
 
KRB5_CALLCONV


1392 
krb5_cc_°‹e_¸ed
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
,

1393 
krb5_¸eds
 *
¸eds
);

1395 
krb5_îr‹_code
 
KRB5_CALLCONV


1396 
krb5_cc_ªåõve_¸ed
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
,

1397 
krb5_Êags
 
Êags
, 
krb5_¸eds
 *
m¸eds
,

1398 
krb5_¸eds
 *
¸eds
);

1400 
krb5_îr‹_code
 
KRB5_CALLCONV


1401 
krb5_cc_gë_¥öcùÆ
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
,

1402 
krb5_¥öcùÆ
 *
¥öcùÆ
);

1404 
krb5_îr‹_code
 
KRB5_CALLCONV


1405 
krb5_cc_°¨t_£q_gë
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
,

1406 
krb5_cc_curs‹
 *
curs‹
);

1408 
krb5_îr‹_code
 
KRB5_CALLCONV


1409 
krb5_cc_√xt_¸ed
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
,

1410 
krb5_cc_curs‹
 *
curs‹
, 
krb5_¸eds
 *
¸eds
);

1412 
krb5_îr‹_code
 
KRB5_CALLCONV


1413 
krb5_cc_íd_£q_gë
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
,

1414 
krb5_cc_curs‹
 *
curs‹
);

1416 
krb5_îr‹_code
 
KRB5_CALLCONV


1417 
krb5_cc_ªmove_¸ed
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
, 
krb5_Êags
 
Êags
,

1418 
krb5_¸eds
 *
¸eds
);

1420 
krb5_îr‹_code
 
KRB5_CALLCONV


1421 
krb5_cc_£t_Êags
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
, 
krb5_Êags
 
Êags
);

1423 
krb5_îr‹_code
 
KRB5_CALLCONV


1424 
krb5_cc_gë_Êags
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
, 
krb5_Êags
 *
Êags
);

1426 c⁄° * 
KRB5_CALLCONV


1427 
krb5_cc_gë_ty≥
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
ˇche
);

1429 
krb5_îr‹_code
 
KRB5_CALLCONV


1430 
krb5_cc_move
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
§c
, krb5_cˇchê
d°
);

1432 
krb5_îr‹_code
 
KRB5_CALLCONV


1433 
krb5_cc_œ°_ch™ge_time
 (

1434 
krb5_c⁄ãxt
 
c⁄ãxt
,

1435 
krb5_cˇche
 
cˇche
,

1436 
krb5_time°amp
 *
ch™ge_time
);

1438 
krb5_îr‹_code
 
KRB5_CALLCONV


1439 
krb5_cc_lock
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
cˇche
);

1441 
krb5_îr‹_code
 
KRB5_CALLCONV


1442 
krb5_cc_u∆ock
 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cˇche
 
cˇche
);

1445 
krb5_îr‹_code
 
KRB5_CALLCONV


1446 
krb5_cccﬁ_curs‹_√w
(
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cccﬁ_curs‹
 *
curs‹
);

1448 
krb5_îr‹_code
 
KRB5_CALLCONV


1449 
krb5_cccﬁ_curs‹_√xt
(

1450 
krb5_c⁄ãxt
 
c⁄ãxt
,

1451 
krb5_cccﬁ_curs‹
 
curs‹
,

1452 
krb5_cˇche
 *
cˇche
);

1454 
krb5_îr‹_code
 
KRB5_CALLCONV


1455 
krb5_cccﬁ_curs‹_‰ì
(
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_cccﬁ_curs‹
 *
curs‹
);

1457 
krb5_îr‹_code
 
KRB5_CALLCONV


1458 
krb5_cccﬁ_œ°_ch™ge_time
(
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_time°amp
 *
ch™ge_time
);

1460 
krb5_îr‹_code
 
KRB5_CALLCONV


1461 
krb5_cccﬁ_lock
(
krb5_c⁄ãxt
 
c⁄ãxt
);

1463 
krb5_îr‹_code
 
KRB5_CALLCONV


1464 
krb5_cccﬁ_u∆ock
(
krb5_c⁄ãxt
 
c⁄ãxt
);

1466 
krb5_îr‹_code
 
KRB5_CALLCONV


1467 
krb5_cc_√w_unique
(

1468 
krb5_c⁄ãxt
 
c⁄ãxt
,

1469 c⁄° *
ty≥
,

1470 c⁄° *
höt
,

1471 
krb5_cˇche
 *
id
);

1481 
	gkrb5_rc_°
;

1482 
krb5_rc_°
 *
	tkrb5_rˇche
;

1494 
	#MAX_KEYTAB_NAME_LEN
 1100

	)

1496 
krb5_poöãr
 
	tkrb5_kt_curs‹
;

1498 
	skrb5_keyèb_íåy_°
 {

1499 
krb5_magic
 
	mmagic
;

1500 
krb5_¥öcùÆ
 
	m¥öcùÆ
;

1501 
krb5_time°amp
 
	mtime°amp
;

1502 
krb5_kvno
 
	mvno
;

1503 
krb5_keyblock
 
	mkey
;

1504 } 
	tkrb5_keyèb_íåy
;

1506 
	g_krb5_kt
;

1507 
_krb5_kt
 *
	tkrb5_keyèb
;

1509 c⁄° * 
KRB5_CALLCONV


1510 
krb5_kt_gë_ty≥
 (
krb5_c⁄ãxt
, 
krb5_keyèb
 
keyèb
);

1511 
krb5_îr‹_code
 
KRB5_CALLCONV


1512 
krb5_kt_gë_«me
(
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_keyèb
 
keyèb
, *
«me
,

1513 
«mñí
);

1514 
krb5_îr‹_code
 
KRB5_CALLCONV


1515 
krb5_kt_˛o£
(
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_keyèb
 
keyèb
);

1516 
krb5_îr‹_code
 
KRB5_CALLCONV


1517 
krb5_kt_gë_íåy
(
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_keyèb
 
keyèb
,

1518 
krb5_c⁄°_¥öcùÆ
 
¥öcùÆ
, 
krb5_kvno
 
vno
,

1519 
krb5_í˘y≥
 
í˘y≥
, 
krb5_keyèb_íåy
 *
íåy
);

1520 
krb5_îr‹_code
 
KRB5_CALLCONV


1521 
krb5_kt_°¨t_£q_gë
(
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_keyèb
 
keyèb
,

1522 
krb5_kt_curs‹
 *
curs‹
);

1523 
krb5_îr‹_code
 
KRB5_CALLCONV


1524 
krb5_kt_√xt_íåy
(
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_keyèb
 
keyèb
,

1525 
krb5_keyèb_íåy
 *
íåy
, 
krb5_kt_curs‹
 *
curs‹
);

1526 
krb5_îr‹_code
 
KRB5_CALLCONV


1527 
krb5_kt_íd_£q_gë
(
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_keyèb
 
keyèb
,

1528 
krb5_kt_curs‹
 *
curs‹
);

1538 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_öô_c⁄ãxt


1539 (
	gkrb5_c⁄ãxt
 *);

1540 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_öô_£cuª_c⁄ãxt


1541 (
	gkrb5_c⁄ãxt
 *);

1542 
KRB5_CALLCONV
 
	gkrb5_‰ì_c⁄ãxt


1543 (
	gkrb5_c⁄ãxt
);

1544 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_c⁄ãxt


1545 (
	gkrb5_c⁄ãxt
, krb5_context *);

1547 
krb5_îr‹_code
 
KRB5_CALLCONV


1548 
	gkrb5_£t_deÁu…_tgs_í˘y≥s


1549 (
	gkrb5_c⁄ãxt
,

1550 c⁄° 
	gkrb5_í˘y≥
 *);

1552 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_gë_≥rmôãd_í˘y≥s


1553 (
	gkrb5_c⁄ãxt
, 
	gkrb5_í˘y≥
 **);

1555 
krb5_boﬁón
 
KRB5_CALLCONV
 
krb5_is_thªad_ß„
();

1559 
krb5_îr‹_code
 
KRB5_CALLCONV


1560 
	gkrb5_£rvî_de¸y±_tickë_keyèb


1561 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

1562 c⁄° 
krb5_keyèb
 
	gkt
,

1563 
krb5_tickë
 *
	gtickë
);

1565 
KRB5_CALLCONV
 
	gkrb5_‰ì_tgt_¸eds


1566 (
	gkrb5_c⁄ãxt
,

1567 
	gkrb5_¸eds
 **);

1569 
	#KRB5_GC_USER_USER
 1

	)

1570 
	#KRB5_GC_CACHED
 2

	)

1571 
	#KRB5_GC_CANONICALIZE
 4

	)

1573 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_gë_¸edítüls


1574 (
	gkrb5_c⁄ãxt
,

1575 
	gkrb5_Êags
,

1576 
	gkrb5_cˇche
,

1577 
	gkrb5_¸eds
 *,

1578 
	gkrb5_¸eds
 **);

1579 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_gë_¸edítüls_vÆid©e


1580 (
	gkrb5_c⁄ãxt
,

1581 
	gkrb5_Êags
,

1582 
	gkrb5_cˇche
,

1583 
	gkrb5_¸eds
 *,

1584 
	gkrb5_¸eds
 **);

1585 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_gë_¸edítüls_ª√w


1586 (
	gkrb5_c⁄ãxt
,

1587 
	gkrb5_Êags
,

1588 
	gkrb5_cˇche
,

1589 
	gkrb5_¸eds
 *,

1590 
	gkrb5_¸eds
 **);

1591 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_mk_ªq


1592 (
	gkrb5_c⁄ãxt
,

1593 
	gkrb5_auth_c⁄ãxt
 *,

1594 
	gkrb5_Êags
,

1597 
	gkrb5_d©a
 *,

1598 
	gkrb5_cˇche
,

1599 
	gkrb5_d©a
 * );

1600 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_mk_ªq_exãnded


1601 (
	gkrb5_c⁄ãxt
,

1602 
	gkrb5_auth_c⁄ãxt
 *,

1603 
	gkrb5_Êags
,

1604 
	gkrb5_d©a
 *,

1605 
	gkrb5_¸eds
 *,

1606 
	gkrb5_d©a
 * );

1607 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_mk_ªp


1608 (
	gkrb5_c⁄ãxt
,

1609 
	gkrb5_auth_c⁄ãxt
,

1610 
	gkrb5_d©a
 *);

1611 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_mk_ªp_d˚


1612 (
	gkrb5_c⁄ãxt
,

1613 
	gkrb5_auth_c⁄ãxt
,

1614 
	gkrb5_d©a
 *);

1615 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_rd_ªp


1616 (
	gkrb5_c⁄ãxt
,

1617 
	gkrb5_auth_c⁄ãxt
,

1618 c⁄° 
	gkrb5_d©a
 *,

1619 
	gkrb5_≠_ªp_íc_∑π
 **);

1620 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_rd_ªp_d˚


1621 (
	gkrb5_c⁄ãxt
,

1622 
	gkrb5_auth_c⁄ãxt
,

1623 c⁄° 
	gkrb5_d©a
 *,

1624 
	gkrb5_ui_4
 *);

1625 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_mk_îr‹


1626 (
	gkrb5_c⁄ãxt
,

1627 c⁄° 
	gkrb5_îr‹
 *,

1628 
	gkrb5_d©a
 * );

1629 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_rd_îr‹


1630 (
	gkrb5_c⁄ãxt
,

1631 c⁄° 
	gkrb5_d©a
 *,

1632 
	gkrb5_îr‹
 ** );

1633 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_rd_ß„


1634 (
	gkrb5_c⁄ãxt
,

1635 
	gkrb5_auth_c⁄ãxt
,

1636 c⁄° 
	gkrb5_d©a
 *,

1637 
	gkrb5_d©a
 *,

1638 
	gkrb5_ª∂ay_d©a
 *);

1639 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_rd_¥iv


1640 (
	gkrb5_c⁄ãxt
,

1641 
	gkrb5_auth_c⁄ãxt
,

1642 c⁄° 
	gkrb5_d©a
 *,

1643 
	gkrb5_d©a
 *,

1644 
	gkrb5_ª∂ay_d©a
 *);

1645 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_∑r£_«me


1646 (
	gkrb5_c⁄ãxt
,

1648 
	gkrb5_¥öcùÆ
 * );

1649 
	#KRB5_PRINCIPAL_PARSE_NO_REALM
 0x1

	)

1650 
	#KRB5_PRINCIPAL_PARSE_REQUIRE_REALM
 0x2

	)

1651 
	#KRB5_PRINCIPAL_PARSE_ENTERPRISE
 0x4

	)

1652 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_∑r£_«me_Êags


1653 (
	gkrb5_c⁄ãxt
,

1656 
	gkrb5_¥öcùÆ
 * );

1657 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_u≈¨£_«me


1658 (
	gkrb5_c⁄ãxt
,

1659 
	gkrb5_c⁄°_¥öcùÆ
,

1661 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_u≈¨£_«me_ext


1662 (
	gkrb5_c⁄ãxt
,

1663 
	gkrb5_c⁄°_¥öcùÆ
,

1666 
	#KRB5_PRINCIPAL_UNPARSE_SHORT
 0x1

	)

1667 
	#KRB5_PRINCIPAL_UNPARSE_NO_REALM
 0x2

	)

1668 
	#KRB5_PRINCIPAL_UNPARSE_DISPLAY
 0x4

	)

1669 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_u≈¨£_«me_Êags


1670 (
	gkrb5_c⁄ãxt
,

1671 
	gkrb5_c⁄°_¥öcùÆ
,

1674 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_u≈¨£_«me_Êags_ext


1675 (
	gkrb5_c⁄ãxt
,

1676 
	gkrb5_c⁄°_¥öcùÆ
,

1681 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_£t_¥öcùÆ_ªÆm


1682 (
	gkrb5_c⁄ãxt
, 
	gkrb5_¥öcùÆ
, const *);

1684 
krb5_boﬁón
 
KRB5_CALLCONV_WRONG
 
	gkrb5_addªss_£¨ch


1685 (
	gkrb5_c⁄ãxt
,

1686 c⁄° 
	gkrb5_addªss
 *,

1687 
krb5_addªss
 * const *);

1688 
krb5_boﬁón
 
KRB5_CALLCONV
 
	gkrb5_addªss_com∑ª


1689 (
	gkrb5_c⁄ãxt
,

1690 c⁄° 
	gkrb5_addªss
 *,

1691 c⁄° 
	gkrb5_addªss
 *);

1692 
KRB5_CALLCONV
 
	gkrb5_addªss_‹dî


1693 (
	gkrb5_c⁄ãxt
,

1694 c⁄° 
	gkrb5_addªss
 *,

1695 c⁄° 
	gkrb5_addªss
 *);

1696 
krb5_boﬁón
 
KRB5_CALLCONV
 
	gkrb5_ªÆm_com∑ª


1697 (
	gkrb5_c⁄ãxt
,

1698 
	gkrb5_c⁄°_¥öcùÆ
,

1699 
	gkrb5_c⁄°_¥öcùÆ
);

1700 
krb5_boﬁón
 
KRB5_CALLCONV
 
	gkrb5_¥öcùÆ_com∑ª


1701 (
	gkrb5_c⁄ãxt
,

1702 
	gkrb5_c⁄°_¥öcùÆ
,

1703 
	gkrb5_c⁄°_¥öcùÆ
);

1704 
krb5_boﬁón
 
KRB5_CALLCONV
 
	gkrb5_¥öcùÆ_com∑ª_™y_ªÆm


1705 (
	gkrb5_c⁄ãxt
,

1706 
	gkrb5_c⁄°_¥öcùÆ
,

1707 
	gkrb5_c⁄°_¥öcùÆ
);

1708 
	#KRB5_PRINCIPAL_COMPARE_IGNORE_REALM
 1

	)

1709 
	#KRB5_PRINCIPAL_COMPARE_ENTERPRISE
 2

	)

1710 
	#KRB5_PRINCIPAL_COMPARE_CASEFOLD
 4

	)

1711 
	#KRB5_PRINCIPAL_COMPARE_UTF8
 8

	)

1713 
krb5_boﬁón
 
KRB5_CALLCONV
 
	gkrb5_¥öcùÆ_com∑ª_Êags


1714 (
	gkrb5_c⁄ãxt
,

1715 
	gkrb5_c⁄°_¥öcùÆ
,

1716 
	gkrb5_c⁄°_¥öcùÆ
,

1718 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_öô_keyblock


1719 (
	gkrb5_c⁄ãxt
, 
krb5_í˘y≥
 
	gí˘y≥
,

1720 
size_t
 
	gÀngth
, 
krb5_keyblock
 **
	gout
);

1727 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_keyblock


1728 (
	gkrb5_c⁄ãxt
,

1729 c⁄° 
	gkrb5_keyblock
 *,

1730 
	gkrb5_keyblock
 **);

1731 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_keyblock_c⁄ã¡s


1732 (
	gkrb5_c⁄ãxt
,

1733 c⁄° 
	gkrb5_keyblock
 *,

1734 
	gkrb5_keyblock
 *);

1735 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_¸eds


1736 (
	gkrb5_c⁄ãxt
,

1737 c⁄° 
	gkrb5_¸eds
 *,

1738 
	gkrb5_¸eds
 **);

1739 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_d©a


1740 (
	gkrb5_c⁄ãxt
,

1741 c⁄° 
	gkrb5_d©a
 *,

1742 
	gkrb5_d©a
 **);

1743 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_¥öcùÆ


1744 (
	gkrb5_c⁄ãxt
,

1745 
	gkrb5_c⁄°_¥öcùÆ
,

1746 
	gkrb5_¥öcùÆ
 *);

1747 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_addªs£s


1748 (
	gkrb5_c⁄ãxt
,

1749 
krb5_addªss
 * const *,

1750 
	gkrb5_addªss
 ***);

1751 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_tickë


1752 (
	gkrb5_c⁄ãxt
,

1753 c⁄° 
	gkrb5_tickë
 *,

1754 
	gkrb5_tickë
 **);

1755 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_authd©a


1756 (
	gkrb5_c⁄ãxt
,

1757 
krb5_authd©a
 * const *,

1758 
	gkrb5_authd©a
 ***);

1759 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_mîge_authd©a


1760 (
	gkrb5_c⁄ãxt
,

1761 
krb5_authd©a
 * const *,

1762 
krb5_authd©a
 *const *,

1763 
	gkrb5_authd©a
 ***);

1767 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_authítiˇt‹


1768 (
	gkrb5_c⁄ãxt
,

1769 c⁄° 
	gkrb5_authítiˇt‹
 *,

1770 
	gkrb5_authítiˇt‹
 **);

1771 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_c›y_checksum


1772 (
	gkrb5_c⁄ãxt
,

1773 c⁄° 
	gkrb5_checksum
 *,

1774 
	gkrb5_checksum
 **);

1775 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_gë_£rvî_rˇche


1776 (
	gkrb5_c⁄ãxt
,

1777 c⁄° 
	gkrb5_d©a
 *, 
	gkrb5_rˇche
 *);

1778 
krb5_îr‹_code
 
KRB5_CALLCONV_C
 
	gkrb5_buûd_¥öcùÆ_ext


1779 (
	gkrb5_c⁄ãxt
, 
	gkrb5_¥öcùÆ
 *, , const *, ...);

1780 
krb5_îr‹_code
 
KRB5_CALLCONV_C
 
	gkrb5_buûd_¥öcùÆ


1781 (
	gkrb5_c⁄ãxt
, 
	gkrb5_¥öcùÆ
 *, , const *, ...)

1782 #i‡
__GNUC__
 >= 4

1783 
__©åibuã__
 ((
£¡öñ
))

1786 #i‡
KRB5_DEPRECATED


1787 
KRB5_ATTR_DEPRECATED
 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_buûd_¥öcùÆ_va


1788 (
	gkrb5_c⁄ãxt
,

1789 
	gkrb5_¥öcùÆ
, , c⁄° *, 
	gva_li°
);

1793 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_buûd_¥öcùÆ_Æloc_va


1794 (
	gkrb5_c⁄ãxt
, 
	gkrb5_¥öcùÆ
 *, , c⁄° *, 
	gva_li°
);

1796 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_425_c⁄v_¥öcùÆ


1797 (
	gkrb5_c⁄ãxt
,

1798 c⁄° *
	g«me
,

1799 c⁄° *
	gö°™˚
, c⁄° *
	gªÆm
,

1800 
krb5_¥öcùÆ
 *
	g¥öc
);

1802 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_524_c⁄v_¥öcùÆ


1803 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_c⁄°_¥öcùÆ
 
	g¥öc
,

1804 *
	g«me
, *
	gö°
, *
	gªÆm
);

1806 
	g¸edítüls
;

1807 
KRB5_CALLCONV
 
	gkrb5_524_c⁄vît_¸eds


1808 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_¸eds
 *
	gv5¸eds
,

1809 
¸edítüls
 *
	gv4¸eds
);

1810 #i‡
KRB5_DEPRECATED


1811 
	#krb524_c⁄vît_¸eds_kdc
 
krb5_524_c⁄vît_¸eds


	)

1812 
	#krb524_öô_ës
(
x
Ë(0)

	)

1816 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_kt_ªsﬁve


1817 (
	gkrb5_c⁄ãxt
,

1819 
	gkrb5_keyèb
 * );

1820 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_kt_deÁu…_«me


1821 (
	gkrb5_c⁄ãxt
,

1824 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_kt_deÁu…


1825 (
	gkrb5_c⁄ãxt
,

1826 
	gkrb5_keyèb
 * );

1827 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_‰ì_keyèb_íåy_c⁄ã¡s


1828 (
	gkrb5_c⁄ãxt
,

1829 
	gkrb5_keyèb_íåy
 * );

1832 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_kt_ªmove_íåy


1833 (
	gkrb5_c⁄ãxt
,

1834 
	gkrb5_keyèb
,

1835 
	gkrb5_keyèb_íåy
 * );

1836 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_kt_add_íåy


1837 (
	gkrb5_c⁄ãxt
,

1838 
	gkrb5_keyèb
,

1839 
	gkrb5_keyèb_íåy
 * );

1840 
krb5_îr‹_code
 
KRB5_CALLCONV_WRONG
 
	gkrb5_¥öcùÆ2ß…


1841 (
	gkrb5_c⁄ãxt
,

1842 
	gkrb5_c⁄°_¥öcùÆ
, 
	gkrb5_d©a
 *);

1846 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_cc_ªsﬁve


1847 (
	gkrb5_c⁄ãxt
,

1849 
	gkrb5_cˇche
 * );

1850 c⁄° * 
KRB5_CALLCONV
 
	gkrb5_cc_deÁu…_«me


1851 (
	gkrb5_c⁄ãxt
);

1852 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_cc_£t_deÁu…_«me


1853 (
	gkrb5_c⁄ãxt
, const *);

1854 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_cc_deÁu…


1855 (
	gkrb5_c⁄ãxt
,

1856 
	gkrb5_cˇche
 *);

1858 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_cc_c›y_¸eds


1859 (
krb5_c⁄ãxt
 
	gc⁄ãxt
,

1860 
krb5_cˇche
 
	göcc
,

1861 
krb5_cˇche
 
	goutcc
);

1865 
KRB5_CALLCONV
 
	gkrb5_‰ì_¥öcùÆ


1866 (
	gkrb5_c⁄ãxt
, 
	gkrb5_¥öcùÆ
 );

1867 
KRB5_CALLCONV
 
	gkrb5_‰ì_authítiˇt‹


1868 (
	gkrb5_c⁄ãxt
, 
	gkrb5_authítiˇt‹
 * );

1869 
KRB5_CALLCONV
 
	gkrb5_‰ì_addªs£s


1870 (
	gkrb5_c⁄ãxt
, 
	gkrb5_addªss
 ** );

1871 
KRB5_CALLCONV
 
	gkrb5_‰ì_authd©a


1872 (
	gkrb5_c⁄ãxt
, 
	gkrb5_authd©a
 ** );

1873 
KRB5_CALLCONV
 
	gkrb5_‰ì_tickë


1874 (
	gkrb5_c⁄ãxt
, 
	gkrb5_tickë
 * );

1875 
KRB5_CALLCONV
 
	gkrb5_‰ì_îr‹


1876 (
	gkrb5_c⁄ãxt
, 
	gkrb5_îr‹
 * );

1877 
KRB5_CALLCONV
 
	gkrb5_‰ì_¸eds


1878 (
	gkrb5_c⁄ãxt
, 
	gkrb5_¸eds
 *);

1879 
KRB5_CALLCONV
 
	gkrb5_‰ì_¸ed_c⁄ã¡s


1880 (
	gkrb5_c⁄ãxt
, 
	gkrb5_¸eds
 *);

1881 
KRB5_CALLCONV
 
	gkrb5_‰ì_checksum


1882 (
	gkrb5_c⁄ãxt
, 
	gkrb5_checksum
 *);

1883 
KRB5_CALLCONV
 
	gkrb5_‰ì_checksum_c⁄ã¡s


1884 (
	gkrb5_c⁄ãxt
, 
	gkrb5_checksum
 *);

1885 
KRB5_CALLCONV
 
	gkrb5_‰ì_keyblock


1886 (
	gkrb5_c⁄ãxt
, 
	gkrb5_keyblock
 *);

1887 
KRB5_CALLCONV
 
	gkrb5_‰ì_keyblock_c⁄ã¡s


1888 (
	gkrb5_c⁄ãxt
, 
	gkrb5_keyblock
 *);

1889 
KRB5_CALLCONV
 
	gkrb5_‰ì_≠_ªp_íc_∑π


1890 (
	gkrb5_c⁄ãxt
, 
	gkrb5_≠_ªp_íc_∑π
 *);

1891 
KRB5_CALLCONV
 
	gkrb5_‰ì_d©a


1892 (
	gkrb5_c⁄ãxt
, 
	gkrb5_d©a
 *);

1893 
KRB5_CALLCONV
 
	gkrb5_‰ì_d©a_c⁄ã¡s


1894 (
	gkrb5_c⁄ãxt
, 
	gkrb5_d©a
 *);

1895 
KRB5_CALLCONV
 
	gkrb5_‰ì_u≈¨£d_«me


1896 (
	gkrb5_c⁄ãxt
, *);

1897 
KRB5_CALLCONV
 
	gkrb5_‰ì_cksumty≥s


1898 (
	gkrb5_c⁄ãxt
, 
	gkrb5_cksumty≥
 *);

1901 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_us_timeofday


1902 (
	gkrb5_c⁄ãxt
,

1903 
	gkrb5_time°amp
 *,

1904 
	gkrb5_öt32
 * );

1905 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_timeofday


1906 (
	gkrb5_c⁄ãxt
,

1907 
	gkrb5_time°amp
 * );

1909 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_os_loˇœddr


1910 (
	gkrb5_c⁄ãxt
,

1911 
	gkrb5_addªss
 ***);

1912 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_gë_deÁu…_ªÆm


1913 (
	gkrb5_c⁄ãxt
,

1915 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_£t_deÁu…_ªÆm


1916 (
	gkrb5_c⁄ãxt
,

1918 
KRB5_CALLCONV
 
	gkrb5_‰ì_deÁu…_ªÆm


1919 (
	gkrb5_c⁄ãxt
,

1921 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_¢ame_to_¥öcùÆ


1922 (
	gkrb5_c⁄ãxt
,

1925 
	gkrb5_öt32
,

1926 
	gkrb5_¥öcùÆ
 *);

1927 
krb5_îr‹_code
 
KRB5_CALLCONV


1928 
	gkrb5_ch™ge_∑ssw‹d


1929 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_¸eds
 *
	g¸eds
, *
	g√wpw
,

1930 *
	gªsu…_code
, 
krb5_d©a
 *
	gªsu…_code_°rög
,

1931 
krb5_d©a
 *
	gªsu…_°rög
);

1932 
krb5_îr‹_code
 
KRB5_CALLCONV


1933 
	gkrb5_£t_∑ssw‹d


1934 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_¸eds
 *
	g¸eds
, *
	g√wpw
, 
krb5_¥öcùÆ
 
	gch™ge_∑ssw‹d_f‹
,

1935 *
	gªsu…_code
, 
krb5_d©a
 *
	gªsu…_code_°rög
, krb5_d©®*
	gªsu…_°rög
);

1936 
krb5_îr‹_code
 
KRB5_CALLCONV


1937 
	gkrb5_£t_∑ssw‹d_usög_cˇche


1938 (
krb5_c⁄ãxt
 
	gc⁄ãxt
, 
krb5_cˇche
 
	gcˇche
, *
	g√wpw
, 
krb5_¥öcùÆ
 
	gch™ge_∑ssw‹d_f‹
,

1939 *
	gªsu…_code
, 
krb5_d©a
 *
	gªsu…_code_°rög
, krb5_d©®*
	gªsu…_°rög
);

1941 
krb5_îr‹_code
 
KRB5_CALLCONV


1942 
	gkrb5_gë_¥ofûe


1943 (
	gkrb5_c⁄ãxt
, 
	g_¥ofûe_t
 * *);

1945 #i‡
KRB5_DEPRECATED


1946 
KRB5_ATTR_DEPRECATED
 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	gkrb5_gë_ö_tkt


1947 (
	gkrb5_c⁄ãxt
,

1948 
	gkrb5_Êags
,

1949 
krb5_addªss
 * const *,

1950 
	gkrb5_í˘y≥
 *,

1951 
	gkrb5_¥óuthty≥
 *,

1952 
	$krb5_îr‹_code
 ( * )(
krb5_c⁄ãxt
,

1953 
krb5_í˘y≥
,

1954 
krb5_d©a
 *,

1955 
krb5_c⁄°_poöãr
,

1956 
krb5_keyblock
 **),

1957 
krb5_c⁄°_poöãr
,

1958 
	$krb5_îr‹_code
 ( * )(
krb5_c⁄ãxt
,

1959 c⁄° 
krb5_keyblock
 *,

1960 
krb5_c⁄°_poöãr
,

1961 
krb5_kdc_ªp
 * ),

1962 
krb5_c⁄°_poöãr
,

1963 
krb5_¸eds
 *,

1964 
krb5_cˇche
,

1965 
krb5_kdc_ªp
 ** );

1967 
KRB5_ATTR_DEPRECATED
 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_gë_ö_tkt_wôh_∑ssw‹d


1968 (
krb5_c⁄ãxt
,

1969 
krb5_Êags
,

1970 
krb5_addªss
 * const *,

1971 
krb5_í˘y≥
 *,

1972 
krb5_¥óuthty≥
 *,

1974 
krb5_cˇche
,

1975 
krb5_¸eds
 *,

1976 
krb5_kdc_ªp
 ** );

1978 
KRB5_ATTR_DEPRECATED
 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_gë_ö_tkt_wôh_skey


1979 (
krb5_c⁄ãxt
,

1980 
krb5_Êags
,

1981 
krb5_addªss
 * const *,

1982 
krb5_í˘y≥
 *,

1983 
krb5_¥óuthty≥
 *,

1984 c⁄° 
krb5_keyblock
 *,

1985 
krb5_cˇche
,

1986 
krb5_¸eds
 *,

1987 
krb5_kdc_ªp
 ** );

1989 
KRB5_ATTR_DEPRECATED
 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_gë_ö_tkt_wôh_keyèb


1990 (
krb5_c⁄ãxt
,

1991 
krb5_Êags
,

1992 
krb5_addªss
 * const *,

1993 
krb5_í˘y≥
 *,

1994 
krb5_¥óuthty≥
 *,

1995 
krb5_keyèb
,

1996 
krb5_cˇche
,

1997 
krb5_¸eds
 *,

1998 
krb5_kdc_ªp
 ** );

2001 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_rd_ªq


2002 (
krb5_c⁄ãxt
,

2003 
krb5_auth_c⁄ãxt
 *,

2004 c⁄° 
krb5_d©a
 *,

2005 
krb5_c⁄°_¥öcùÆ
,

2006 
krb5_keyèb
,

2007 
krb5_Êags
 *,

2008 
krb5_tickë
 **);

2010 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_kt_ªad_£rvi˚_key


2011 (
krb5_c⁄ãxt
,

2012 
krb5_poöãr
,

2013 
krb5_¥öcùÆ
,

2014 
krb5_kvno
,

2015 
krb5_í˘y≥
,

2016 
krb5_keyblock
 **);

2017 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_mk_ß„


2018 (
krb5_c⁄ãxt
,

2019 
krb5_auth_c⁄ãxt
,

2020 c⁄° 
krb5_d©a
 *,

2021 
krb5_d©a
 *,

2022 
krb5_ª∂ay_d©a
 *);

2023 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_mk_¥iv


2024 (
krb5_c⁄ãxt
,

2025 
krb5_auth_c⁄ãxt
,

2026 c⁄° 
krb5_d©a
 *,

2027 
krb5_d©a
 *,

2028 
krb5_ª∂ay_d©a
 *);

2030 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_£ndauth


2031 (
krb5_c⁄ãxt
,

2032 
krb5_auth_c⁄ãxt
 *,

2033 
krb5_poöãr
,

2035 
krb5_¥öcùÆ
,

2036 
krb5_¥öcùÆ
,

2037 
krb5_Êags
,

2038 
krb5_d©a
 *,

2039 
krb5_¸eds
 *,

2040 
krb5_cˇche
,

2041 
krb5_îr‹
 **,

2042 
krb5_≠_ªp_íc_∑π
 **,

2043 
krb5_¸eds
 **);

2045 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_ªcvauth


2046 (
krb5_c⁄ãxt
,

2047 
krb5_auth_c⁄ãxt
 *,

2048 
krb5_poöãr
,

2050 
krb5_¥öcùÆ
,

2051 
krb5_öt32
,

2052 
krb5_keyèb
,

2053 
krb5_tickë
 **);

2054 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_ªcvauth_vîsi⁄


2055 (
krb5_c⁄ãxt
,

2056 
krb5_auth_c⁄ãxt
 *,

2057 
krb5_poöãr
,

2058 
krb5_¥öcùÆ
,

2059 
krb5_öt32
,

2060 
krb5_keyèb
,

2061 
krb5_tickë
 **,

2062 
krb5_d©a
 *);

2064 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_mk_n¸ed


2065 (
krb5_c⁄ãxt
,

2066 
krb5_auth_c⁄ãxt
,

2067 
krb5_¸eds
 **,

2068 
krb5_d©a
 **,

2069 
krb5_ª∂ay_d©a
 *);

2071 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_mk_1¸ed


2072 (
krb5_c⁄ãxt
,

2073 
krb5_auth_c⁄ãxt
,

2074 
krb5_¸eds
 *,

2075 
krb5_d©a
 **,

2076 
krb5_ª∂ay_d©a
 *);

2078 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_rd_¸ed


2079 (
krb5_c⁄ãxt
,

2080 
krb5_auth_c⁄ãxt
,

2081 
krb5_d©a
 *,

2082 
krb5_¸eds
 ***,

2083 
krb5_ª∂ay_d©a
 *);

2085 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_fwd_tgt_¸eds


2086 (
krb5_c⁄ãxt
,

2087 
krb5_auth_c⁄ãxt
,

2089 
krb5_¥öcùÆ
,

2090 
krb5_¥öcùÆ
,

2091 
krb5_cˇche
,

2092 
f‹w¨dabÀ
,

2093 
krb5_d©a
 *);

2095 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_öô


2096 (
krb5_c⁄ãxt
,

2097 
krb5_auth_c⁄ãxt
 *);

2099 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_‰ì


2100 (
krb5_c⁄ãxt
,

2101 
krb5_auth_c⁄ãxt
);

2103 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_£tÊags


2104 (
krb5_c⁄ãxt
,

2105 
krb5_auth_c⁄ãxt
,

2106 
krb5_öt32
);

2108 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_gëÊags


2109 (
krb5_c⁄ãxt
,

2110 
krb5_auth_c⁄ãxt
,

2111 
krb5_öt32
 *);

2113 
krb5_îr‹_code
 
KRB5_CALLCONV


2114 
	`krb5_auth_c⁄_£t_checksum_func
 (
krb5_c⁄ãxt
, 
krb5_auth_c⁄ãxt
,

2115 
krb5_mk_ªq_checksum_func
, *);

2117 
krb5_îr‹_code
 
KRB5_CALLCONV


2118 
	`krb5_auth_c⁄_gë_checksum_func
–
krb5_c⁄ãxt
, 
krb5_auth_c⁄ãxt
,

2119 
krb5_mk_ªq_checksum_func
 *, **);

2121 
krb5_îr‹_code
 
KRB5_CALLCONV_WRONG
 
krb5_auth_c⁄_£èddrs


2122 (
krb5_c⁄ãxt
,

2123 
krb5_auth_c⁄ãxt
,

2124 
krb5_addªss
 *,

2125 
krb5_addªss
 *);

2127 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_gëaddrs


2128 (
krb5_c⁄ãxt
,

2129 
krb5_auth_c⁄ãxt
,

2130 
krb5_addªss
 **,

2131 
krb5_addªss
 **);

2133 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_£ç‹ts


2134 (
krb5_c⁄ãxt
,

2135 
krb5_auth_c⁄ãxt
,

2136 
krb5_addªss
 *,

2137 
krb5_addªss
 *);

2139 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_£tu£ru£rkey


2140 (
krb5_c⁄ãxt
,

2141 
krb5_auth_c⁄ãxt
,

2142 
krb5_keyblock
 *);

2144 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_gëkey


2145 (
krb5_c⁄ãxt
,

2146 
krb5_auth_c⁄ãxt
,

2147 
krb5_keyblock
 **);

2149 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	`krb5_auth_c⁄_gë£ndsubkey
(

2150 
krb5_c⁄ãxt
, 
krb5_auth_c⁄ãxt
, 
krb5_keyblock
 **);

2152 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	`krb5_auth_c⁄_gëªcvsubkey
(

2153 
krb5_c⁄ãxt
, 
krb5_auth_c⁄ãxt
, 
krb5_keyblock
 **);

2155 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	`krb5_auth_c⁄_£t£ndsubkey
(

2156 
krb5_c⁄ãxt
, 
krb5_auth_c⁄ãxt
, 
krb5_keyblock
 *);

2158 
krb5_îr‹_code
 
KRB5_CALLCONV
 
	`krb5_auth_c⁄_£åecvsubkey
(

2159 
krb5_c⁄ãxt
, 
krb5_auth_c⁄ãxt
, 
krb5_keyblock
 *);

2161 #i‡
KRB5_DEPRECATED


2162 
KRB5_ATTR_DEPRECATED
 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_gëloˇlsubkey


2163 (
krb5_c⁄ãxt
,

2164 
krb5_auth_c⁄ãxt
,

2165 
krb5_keyblock
 **);

2167 
KRB5_ATTR_DEPRECATED
 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_gëªmŸesubkey


2168 (
krb5_c⁄ãxt
,

2169 
krb5_auth_c⁄ãxt
,

2170 
krb5_keyblock
 **);

2173 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_gëloˇl£qnumbî


2174 (
krb5_c⁄ãxt
,

2175 
krb5_auth_c⁄ãxt
,

2176 
krb5_öt32
 *);

2178 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_gëªmŸe£qnumbî


2179 (
krb5_c⁄ãxt
,

2180 
krb5_auth_c⁄ãxt
,

2181 
krb5_öt32
 *);

2183 #i‡
KRB5_DEPRECATED


2184 
KRB5_ATTR_DEPRECATED
 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_öôive˘‹


2185 (
krb5_c⁄ãxt
,

2186 
krb5_auth_c⁄ãxt
);

2189 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_£åˇche


2190 (
krb5_c⁄ãxt
,

2191 
krb5_auth_c⁄ãxt
,

2192 
krb5_rˇche
);

2194 
krb5_îr‹_code
 
KRB5_CALLCONV_WRONG
 
krb5_auth_c⁄_gërˇche


2195 (
krb5_c⁄ãxt
,

2196 
krb5_auth_c⁄ãxt
,

2197 
krb5_rˇche
 *);

2199 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_gëauthítiˇt‹


2200 (
krb5_c⁄ãxt
,

2201 
krb5_auth_c⁄ãxt
,

2202 
krb5_authítiˇt‹
 **);

2204 
	#KRB5_REALM_BRANCH_CHAR
 '.'

	)

2214 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_ªad_∑ssw‹d


2215 (
krb5_c⁄ãxt
,

2220 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_™ame_to_loˇ ame


2221 (
krb5_c⁄ãxt
,

2222 
krb5_c⁄°_¥öcùÆ
,

2225 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_gë_ho°_ªÆm


2226 (
krb5_c⁄ãxt
,

2229 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_gë_ÁŒback_ho°_ªÆm


2230 (
krb5_c⁄ãxt
,

2231 
krb5_d©a
 *,

2233 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_‰ì_ho°_ªÆm


2234 (
krb5_c⁄ãxt
,

2236 
krb5_boﬁón
 
KRB5_CALLCONV
 
krb5_ku£rok


2237 (
krb5_c⁄ãxt
,

2238 
krb5_¥öcùÆ
, const *);

2239 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_auth_c⁄_gíaddrs


2240 (
krb5_c⁄ãxt
,

2241 
krb5_auth_c⁄ãxt
,

2243 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_£t_ªÆ_time


2244 (
krb5_c⁄ãxt
, 
krb5_time°amp
, 
krb5_öt32
);

2246 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_gë_time_off£ts


2247 (
krb5_c⁄ãxt
, 
krb5_time°amp
 *, 
krb5_öt32
 *);

2250 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_°rög_to_í˘y≥


2251 (*, 
krb5_í˘y≥
 *);

2252 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_°rög_to_ß…ty≥


2253 (*, 
krb5_öt32
 *);

2254 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_°rög_to_cksumty≥


2255 (*, 
krb5_cksumty≥
 *);

2256 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_°rög_to_time°amp


2257 (*, 
krb5_time°amp
 *);

2258 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_°rög_to_dñèt


2259 (*, 
krb5_dñèt
 *);

2260 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_í˘y≥_to_°rög


2261 (
krb5_í˘y≥
, *, 
size_t
);

2262 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_ß…ty≥_to_°rög


2263 (
krb5_öt32
, *, 
size_t
);

2264 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_cksumty≥_to_°rög


2265 (
krb5_cksumty≥
, *, 
size_t
);

2266 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_time°amp_to_°rög


2267 (
krb5_time°amp
, *, 
size_t
);

2268 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_time°amp_to_sf°rög


2269 (
krb5_time°amp
, *, 
size_t
, *);

2270 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_dñèt_to_°rög


2271 (
krb5_dñèt
, *, 
size_t
);

2276 
	#KRB5_TGS_NAME
 "krbtgt"

	)

2277 
	#KRB5_TGS_NAME_SIZE
 6

	)

2280 
	#KRB5_RECVAUTH_SKIP_VERSION
 0x0001

	)

2281 
	#KRB5_RECVAUTH_BADAUTHVERS
 0x0002

	)

2284 
	s_krb5_¥om±
 {

2285 *
¥om±
;

2286 
hiddí
;

2287 
krb5_d©a
 *
ª∂y
;

2288 } 
	tkrb5_¥om±
;

2290 
	$krb5_îr‹_code
 (
	tKRB5_CALLCONV
 *
	tkrb5_¥om±î_f˘
)(
	tkrb5_c⁄ãxt
 
	tc⁄ãxt
,

2291 *
	td©a
,

2292 c⁄° *
	t«me
,

2293 c⁄° *
	tb™√r
,

2294 
	tnum_¥om±s
,

2295 
	tkrb5_¥om±
 
	t¥om±s
[]);

2298 
krb5_îr‹_code
 
KRB5_CALLCONV


2299 
	`krb5_¥om±î_posix
 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2300 *
d©a
,

2301 c⁄° *
«me
,

2302 c⁄° *
b™√r
,

2303 
num_¥om±s
,

2304 
krb5_¥om±
 
¥om±s
[]);

2306 
	s_krb5_gë_öô_¸eds_›t
 {

2307 
krb5_Êags
 
Êags
;

2308 
krb5_dñèt
 
tkt_li„
;

2309 
krb5_dñèt
 
ª√w_li„
;

2310 
f‹w¨dabÀ
;

2311 
¥oxübÀ
;

2312 
krb5_í˘y≥
 *
ëy≥_li°
;

2313 
ëy≥_li°_Àngth
;

2314 
krb5_addªss
 **
addªss_li°
;

2315 
krb5_¥óuthty≥
 *
¥óuth_li°
;

2316 
¥óuth_li°_Àngth
;

2317 
krb5_d©a
 *
ß…
;

2318 } 
	tkrb5_gë_öô_¸eds_›t
;

2320 
	#KRB5_GET_INIT_CREDS_OPT_TKT_LIFE
 0x0001

	)

2321 
	#KRB5_GET_INIT_CREDS_OPT_RENEW_LIFE
 0x0002

	)

2322 
	#KRB5_GET_INIT_CREDS_OPT_FORWARDABLE
 0x0004

	)

2323 
	#KRB5_GET_INIT_CREDS_OPT_PROXIABLE
 0x0008

	)

2324 
	#KRB5_GET_INIT_CREDS_OPT_ETYPE_LIST
 0x0010

	)

2325 
	#KRB5_GET_INIT_CREDS_OPT_ADDRESS_LIST
 0x0020

	)

2326 
	#KRB5_GET_INIT_CREDS_OPT_PREAUTH_LIST
 0x0040

	)

2327 
	#KRB5_GET_INIT_CREDS_OPT_SALT
 0x0080

	)

2328 
	#KRB5_GET_INIT_CREDS_OPT_CHG_PWD_PRMPT
 0x0100

	)

2329 
	#KRB5_GET_INIT_CREDS_OPT_CANONICALIZE
 0x0200

	)

2332 
krb5_îr‹_code
 
KRB5_CALLCONV


2333 
krb5_gë_öô_¸eds_›t_Æloc


2334 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2335 
krb5_gë_öô_¸eds_›t
 **
›t
);

2337 
KRB5_CALLCONV


2338 
krb5_gë_öô_¸eds_›t_‰ì


2339 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2340 
krb5_gë_öô_¸eds_›t
 *
›t
);

2342 
KRB5_CALLCONV


2343 
krb5_gë_öô_¸eds_›t_öô


2344 (
krb5_gë_öô_¸eds_›t
 *
›t
);

2346 
KRB5_CALLCONV


2347 
krb5_gë_öô_¸eds_›t_£t_tkt_li„


2348 (
krb5_gë_öô_¸eds_›t
 *
›t
,

2349 
krb5_dñèt
 
tkt_li„
);

2351 
KRB5_CALLCONV


2352 
krb5_gë_öô_¸eds_›t_£t_ª√w_li„


2353 (
krb5_gë_öô_¸eds_›t
 *
›t
,

2354 
krb5_dñèt
 
ª√w_li„
);

2356 
KRB5_CALLCONV


2357 
krb5_gë_öô_¸eds_›t_£t_f‹w¨dabÀ


2358 (
krb5_gë_öô_¸eds_›t
 *
›t
,

2359 
f‹w¨dabÀ
);

2361 
KRB5_CALLCONV


2362 
krb5_gë_öô_¸eds_›t_£t_¥oxübÀ


2363 (
krb5_gë_öô_¸eds_›t
 *
›t
,

2364 
¥oxübÀ
);

2366 
KRB5_CALLCONV


2367 
krb5_gë_öô_¸eds_›t_£t_ˇn⁄iˇlize


2368 (
krb5_gë_öô_¸eds_›t
 *
›t
,

2369 
ˇn⁄iˇlize
);

2371 
KRB5_CALLCONV


2372 
krb5_gë_öô_¸eds_›t_£t_ëy≥_li°


2373 (
krb5_gë_öô_¸eds_›t
 *
›t
,

2374 
krb5_í˘y≥
 *
ëy≥_li°
,

2375 
ëy≥_li°_Àngth
);

2377 
KRB5_CALLCONV


2378 
krb5_gë_öô_¸eds_›t_£t_addªss_li°


2379 (
krb5_gë_öô_¸eds_›t
 *
›t
,

2380 
krb5_addªss
 **
addªs£s
);

2382 
KRB5_CALLCONV


2383 
krb5_gë_öô_¸eds_›t_£t_¥óuth_li°


2384 (
krb5_gë_öô_¸eds_›t
 *
›t
,

2385 
krb5_¥óuthty≥
 *
¥óuth_li°
,

2386 
¥óuth_li°_Àngth
);

2388 
KRB5_CALLCONV


2389 
krb5_gë_öô_¸eds_›t_£t_ß…


2390 (
krb5_gë_öô_¸eds_›t
 *
›t
,

2391 
krb5_d©a
 *
ß…
);

2393 
KRB5_CALLCONV


2394 
krb5_gë_öô_¸eds_›t_£t_ch™ge_∑ssw‹d_¥om±


2395 (
krb5_gë_öô_¸eds_›t
 *
›t
,

2396 
¥om±
);

2399 
	s_krb5_gic_›t_∑_d©a
 {

2400 *
©å
;

2401 *
vÆue
;

2402 } 
	tkrb5_gic_›t_∑_d©a
;

2412 
krb5_îr‹_code
 
KRB5_CALLCONV


2413 
krb5_gë_öô_¸eds_›t_£t_∑


2414 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2415 
krb5_gë_öô_¸eds_›t
 *
›t
,

2416 c⁄° *
©å
,

2417 c⁄° *
vÆue
);

2419 
krb5_îr‹_code
 
KRB5_CALLCONV
 
krb5_gë_öô_¸eds_›t_£t_Á°_cˇche_«me


2420 (
krb5_c⁄ãxt
 
c⁄ãxt
, 
krb5_gë_öô_¸eds_›t
 *
›t
,

2421 c⁄° * 
Á°_cˇche_«me
);

2428 
krb5_îr‹_code
 
KRB5_CALLCONV


2429 
krb5_gë_öô_¸eds_∑ssw‹d


2430 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2431 
krb5_¸eds
 *
¸eds
,

2432 
krb5_¥öcùÆ
 
˛õ¡
,

2433 *
∑ssw‹d
,

2434 
krb5_¥om±î_f˘
 
¥om±î
,

2435 *
d©a
,

2436 
krb5_dñèt
 
°¨t_time
,

2437 *
ö_tkt_£rvi˚
,

2438 
krb5_gë_öô_¸eds_›t
 *
k5_gic_›ti⁄s
);

2440 
krb5_îr‹_code
 
KRB5_CALLCONV


2441 
krb5_gë_öô_¸eds_keyèb


2442 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2443 
krb5_¸eds
 *
¸eds
,

2444 
krb5_¥öcùÆ
 
˛õ¡
,

2445 
krb5_keyèb
 
¨g_keyèb
,

2446 
krb5_dñèt
 
°¨t_time
,

2447 *
ö_tkt_£rvi˚
,

2448 
krb5_gë_öô_¸eds_›t
 *
k5_gic_›ti⁄s
);

2450 
	s_krb5_vîify_öô_¸eds_›t
 {

2451 
krb5_Êags
 
Êags
;

2452 
≠_ªq_noÁû
;

2453 } 
	tkrb5_vîify_öô_¸eds_›t
;

2455 
	#KRB5_VERIFY_INIT_CREDS_OPT_AP_REQ_NOFAIL
 0x0001

	)

2457 
KRB5_CALLCONV


2458 
krb5_vîify_öô_¸eds_›t_öô


2459 (
krb5_vîify_öô_¸eds_›t
 *
k5_vic_›ti⁄s
);

2460 
KRB5_CALLCONV


2461 
krb5_vîify_öô_¸eds_›t_£t_≠_ªq_noÁû


2462 (
krb5_vîify_öô_¸eds_›t
 *
k5_vic_›ti⁄s
,

2463 
≠_ªq_noÁû
);

2465 
krb5_îr‹_code
 
KRB5_CALLCONV


2466 
krb5_vîify_öô_¸eds


2467 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2468 
krb5_¸eds
 *
¸eds
,

2469 
krb5_¥öcùÆ
 
≠_ªq_£rvî
,

2470 
krb5_keyèb
 
≠_ªq_keyèb
,

2471 
krb5_cˇche
 *
cˇche
,

2472 
krb5_vîify_öô_¸eds_›t
 *
k5_vic_›ti⁄s
);

2474 
krb5_îr‹_code
 
KRB5_CALLCONV


2475 
krb5_gë_vÆid©ed_¸eds


2476 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2477 
krb5_¸eds
 *
¸eds
,

2478 
krb5_¥öcùÆ
 
˛õ¡
,

2479 
krb5_cˇche
 
cˇche
,

2480 *
ö_tkt_£rvi˚
);

2482 
krb5_îr‹_code
 
KRB5_CALLCONV


2483 
krb5_gë_ª√wed_¸eds


2484 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2485 
krb5_¸eds
 *
¸eds
,

2486 
krb5_¥öcùÆ
 
˛õ¡
,

2487 
krb5_cˇche
 
cˇche
,

2488 *
ö_tkt_£rvi˚
);

2490 
krb5_îr‹_code
 
KRB5_CALLCONV


2491 
krb5_decode_tickë


2492 (c⁄° 
krb5_d©a
 *
code
,

2493 
krb5_tickë
 **
ªp
);

2495 
KRB5_CALLCONV


2496 
krb5_≠pdeÁu…_°rög


2497 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2498 c⁄° *
≠≤ame
,

2499 c⁄° 
krb5_d©a
 *
ªÆm
,

2500 c⁄° *
›ti⁄
,

2501 c⁄° *
deÁu…_vÆue
,

2502 ** 
ªt_vÆue
);

2504 
KRB5_CALLCONV


2505 
krb5_≠pdeÁu…_boﬁón


2506 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2507 c⁄° *
≠≤ame
,

2508 c⁄° 
krb5_d©a
 *
ªÆm
,

2509 c⁄° *
›ti⁄
,

2510 
deÁu…_vÆue
,

2511 *
ªt_vÆue
);

2517 
	#KRB5_PROMPT_TYPE_PASSWORD
 0x1

	)

2518 
	#KRB5_PROMPT_TYPE_NEW_PASSWORD
 0x2

	)

2519 
	#KRB5_PROMPT_TYPE_NEW_PASSWORD_AGAIN
 0x3

	)

2520 
	#KRB5_PROMPT_TYPE_PREAUTH
 0x4

	)

2522 
krb5_öt32
 
	tkrb5_¥om±_ty≥
;

2524 
krb5_¥om±_ty≥
* 
KRB5_CALLCONV
 
krb5_gë_¥om±_ty≥s


2525 (
krb5_c⁄ãxt
 
c⁄ãxt
);

2528 
KRB5_CALLCONV_C


2529 
	$krb5_£t_îr‹_mesßge
 (
krb5_c⁄ãxt
, 
krb5_îr‹_code
, const *, ...)

2530 #i‡!
	`deföed
(
__˝lu•lus
Ë&& (
__GNUC__
 > 2)

2531 
	`__©åibuã__
((
	$__f‹m©__
(
__¥ötf__
, 3, 4)))

2534 
KRB5_CALLCONV


2535 
	$krb5_v£t_îr‹_mesßge
 (
krb5_c⁄ãxt
, 
krb5_îr‹_code
, c⁄° *, 
va_li°
)

2536 #i‡!
	`deföed
(
__˝lu•lus
Ë&& (
__GNUC__
 > 2)

2537 
	`__©åibuã__
((
	$__f‹m©__
(
__¥ötf__
, 3, 0)))

2540 
KRB5_CALLCONV


2541 
	`krb5_c›y_îr‹_mesßge
 (
krb5_c⁄ãxt
, krb5_context);

2553 c⁄° * 
KRB5_CALLCONV


2554 
	`krb5_gë_îr‹_mesßge
 (
krb5_c⁄ãxt
, 
krb5_îr‹_code
);

2555 
KRB5_CALLCONV


2556 
	`krb5_‰ì_îr‹_mesßge
 (
krb5_c⁄ãxt
, const *);

2557 
KRB5_CALLCONV


2558 
	`krb5_˛ór_îr‹_mesßge
 (
krb5_c⁄ãxt
);

2560 
krb5_îr‹_code
 
KRB5_CALLCONV


2561 
	`krb5_decode_authd©a_c⁄èöî
(
krb5_c⁄ãxt
 
c⁄ãxt
,

2562 
krb5_authd©©y≥
 
ty≥
,

2563 c⁄° 
krb5_authd©a
 *
c⁄èöî
,

2564 
krb5_authd©a
 ***
authd©a
);

2565 
krb5_îr‹_code
 
KRB5_CALLCONV


2566 
	`krb5_ícode_authd©a_c⁄èöî
(
krb5_c⁄ãxt
 
c⁄ãxt
,

2567 
krb5_authd©©y≥
 
ty≥
,

2568 
krb5_authd©a
 * c⁄°*
authd©a
,

2569 
krb5_authd©a
 ***
c⁄èöî
);

2574 
krb5_∑c_d©a
;

2575 
krb5_∑c_d©a
 *
	tkrb5_∑c
;

2577 
krb5_îr‹_code
 
KRB5_CALLCONV


2578 
krb5_∑c_add_buf„r


2579 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2580 
krb5_∑c
 
∑c
,

2581 
krb5_ui_4
 
ty≥
,

2582 c⁄° 
krb5_d©a
 *
d©a
);

2584 
KRB5_CALLCONV


2585 
krb5_∑c_‰ì


2586 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2587 
krb5_∑c
 
∑c
);

2589 
krb5_îr‹_code
 
KRB5_CALLCONV


2590 
krb5_∑c_gë_buf„r


2591 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2592 
krb5_∑c
 
∑c
,

2593 
krb5_ui_4
 
ty≥
,

2594 
krb5_d©a
 *
d©a
);

2596 
krb5_îr‹_code
 
KRB5_CALLCONV


2597 
krb5_∑c_gë_ty≥s


2598 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2599 
krb5_∑c
 
∑c
,

2600 
size_t
 *
Àn
,

2601 
krb5_ui_4
 **
ty≥s
);

2603 
krb5_îr‹_code
 
KRB5_CALLCONV


2604 
krb5_∑c_öô


2605 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2606 
krb5_∑c
 *
∑c
);

2608 
krb5_îr‹_code
 
KRB5_CALLCONV


2609 
krb5_∑c_∑r£


2610 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2611 c⁄° *
±r
,

2612 
size_t
 
Àn
,

2613 
krb5_∑c
 *
∑c
);

2615 
krb5_îr‹_code
 
KRB5_CALLCONV


2616 
krb5_∑c_vîify


2617 (
krb5_c⁄ãxt
 
c⁄ãxt
,

2618 c⁄° 
krb5_∑c
 
∑c
,

2619 
krb5_time°amp
 
authtime
,

2620 
krb5_c⁄°_¥öcùÆ
 
¥öcùÆ
,

2621 c⁄° 
krb5_keyblock
 *
£rvî
,

2622 c⁄° 
krb5_keyblock
 *
¥ivsvr
);

2624 #i‡
TARGET_OS_MAC


2625 #¥agm®
	`∑ck
(
p›
)

2628 
KRB5INT_END_DECLS


2632 
	#krb5_c⁄°
 c⁄°

	)

2634 #unde‡
KRB5_ATTR_DEPRECATED


2642 
	~<ë/com_îr.h
>

2644 
	#KRB5KDC_ERR_NONE
 (-1765328384L)

	)

2645 
	#KRB5KDC_ERR_NAME_EXP
 (-1765328383L)

	)

2646 
	#KRB5KDC_ERR_SERVICE_EXP
 (-1765328382L)

	)

2647 
	#KRB5KDC_ERR_BAD_PVNO
 (-1765328381L)

	)

2648 
	#KRB5KDC_ERR_C_OLD_MAST_KVNO
 (-1765328380L)

	)

2649 
	#KRB5KDC_ERR_S_OLD_MAST_KVNO
 (-1765328379L)

	)

2650 
	#KRB5KDC_ERR_C_PRINCIPAL_UNKNOWN
 (-1765328378L)

	)

2651 
	#KRB5KDC_ERR_S_PRINCIPAL_UNKNOWN
 (-1765328377L)

	)

2652 
	#KRB5KDC_ERR_PRINCIPAL_NOT_UNIQUE
 (-1765328376L)

	)

2653 
	#KRB5KDC_ERR_NULL_KEY
 (-1765328375L)

	)

2654 
	#KRB5KDC_ERR_CANNOT_POSTDATE
 (-1765328374L)

	)

2655 
	#KRB5KDC_ERR_NEVER_VALID
 (-1765328373L)

	)

2656 
	#KRB5KDC_ERR_POLICY
 (-1765328372L)

	)

2657 
	#KRB5KDC_ERR_BADOPTION
 (-1765328371L)

	)

2658 
	#KRB5KDC_ERR_ETYPE_NOSUPP
 (-1765328370L)

	)

2659 
	#KRB5KDC_ERR_SUMTYPE_NOSUPP
 (-1765328369L)

	)

2660 
	#KRB5KDC_ERR_PADATA_TYPE_NOSUPP
 (-1765328368L)

	)

2661 
	#KRB5KDC_ERR_TRTYPE_NOSUPP
 (-1765328367L)

	)

2662 
	#KRB5KDC_ERR_CLIENT_REVOKED
 (-1765328366L)

	)

2663 
	#KRB5KDC_ERR_SERVICE_REVOKED
 (-1765328365L)

	)

2664 
	#KRB5KDC_ERR_TGT_REVOKED
 (-1765328364L)

	)

2665 
	#KRB5KDC_ERR_CLIENT_NOTYET
 (-1765328363L)

	)

2666 
	#KRB5KDC_ERR_SERVICE_NOTYET
 (-1765328362L)

	)

2667 
	#KRB5KDC_ERR_KEY_EXP
 (-1765328361L)

	)

2668 
	#KRB5KDC_ERR_PREAUTH_FAILED
 (-1765328360L)

	)

2669 
	#KRB5KDC_ERR_PREAUTH_REQUIRED
 (-1765328359L)

	)

2670 
	#KRB5KDC_ERR_SERVER_NOMATCH
 (-1765328358L)

	)

2671 
	#KRB5KDC_ERR_MUST_USE_USER2USER
 (-1765328357L)

	)

2672 
	#KRB5KDC_ERR_PATH_NOT_ACCEPTED
 (-1765328356L)

	)

2673 
	#KRB5KDC_ERR_SVC_UNAVAILABLE
 (-1765328355L)

	)

2674 
	#KRB5PLACEHOLD_30
 (-1765328354L)

	)

2675 
	#KRB5KRB_AP_ERR_BAD_INTEGRITY
 (-1765328353L)

	)

2676 
	#KRB5KRB_AP_ERR_TKT_EXPIRED
 (-1765328352L)

	)

2677 
	#KRB5KRB_AP_ERR_TKT_NYV
 (-1765328351L)

	)

2678 
	#KRB5KRB_AP_ERR_REPEAT
 (-1765328350L)

	)

2679 
	#KRB5KRB_AP_ERR_NOT_US
 (-1765328349L)

	)

2680 
	#KRB5KRB_AP_ERR_BADMATCH
 (-1765328348L)

	)

2681 
	#KRB5KRB_AP_ERR_SKEW
 (-1765328347L)

	)

2682 
	#KRB5KRB_AP_ERR_BADADDR
 (-1765328346L)

	)

2683 
	#KRB5KRB_AP_ERR_BADVERSION
 (-1765328345L)

	)

2684 
	#KRB5KRB_AP_ERR_MSG_TYPE
 (-1765328344L)

	)

2685 
	#KRB5KRB_AP_ERR_MODIFIED
 (-1765328343L)

	)

2686 
	#KRB5KRB_AP_ERR_BADORDER
 (-1765328342L)

	)

2687 
	#KRB5KRB_AP_ERR_ILL_CR_TKT
 (-1765328341L)

	)

2688 
	#KRB5KRB_AP_ERR_BADKEYVER
 (-1765328340L)

	)

2689 
	#KRB5KRB_AP_ERR_NOKEY
 (-1765328339L)

	)

2690 
	#KRB5KRB_AP_ERR_MUT_FAIL
 (-1765328338L)

	)

2691 
	#KRB5KRB_AP_ERR_BADDIRECTION
 (-1765328337L)

	)

2692 
	#KRB5KRB_AP_ERR_METHOD
 (-1765328336L)

	)

2693 
	#KRB5KRB_AP_ERR_BADSEQ
 (-1765328335L)

	)

2694 
	#KRB5KRB_AP_ERR_INAPP_CKSUM
 (-1765328334L)

	)

2695 
	#KRB5KRB_AP_PATH_NOT_ACCEPTED
 (-1765328333L)

	)

2696 
	#KRB5KRB_ERR_RESPONSE_TOO_BIG
 (-1765328332L)

	)

2697 
	#KRB5PLACEHOLD_53
 (-1765328331L)

	)

2698 
	#KRB5PLACEHOLD_54
 (-1765328330L)

	)

2699 
	#KRB5PLACEHOLD_55
 (-1765328329L)

	)

2700 
	#KRB5PLACEHOLD_56
 (-1765328328L)

	)

2701 
	#KRB5PLACEHOLD_57
 (-1765328327L)

	)

2702 
	#KRB5PLACEHOLD_58
 (-1765328326L)

	)

2703 
	#KRB5PLACEHOLD_59
 (-1765328325L)

	)

2704 
	#KRB5KRB_ERR_GENERIC
 (-1765328324L)

	)

2705 
	#KRB5KRB_ERR_FIELD_TOOLONG
 (-1765328323L)

	)

2706 
	#KRB5KDC_ERR_CLIENT_NOT_TRUSTED
 (-1765328322L)

	)

2707 
	#KRB5KDC_ERR_KDC_NOT_TRUSTED
 (-1765328321L)

	)

2708 
	#KRB5KDC_ERR_INVALID_SIG
 (-1765328320L)

	)

2709 
	#KRB5KDC_ERR_DH_KEY_PARAMETERS_NOT_ACCEPTED
 (-1765328319L)

	)

2710 
	#KRB5KDC_ERR_CERTIFICATE_MISMATCH
 (-1765328318L)

	)

2711 
	#KRB5KRB_AP_ERR_NO_TGT
 (-1765328317L)

	)

2712 
	#KRB5KDC_ERR_WRONG_REALM
 (-1765328316L)

	)

2713 
	#KRB5KRB_AP_ERR_USER_TO_USER_REQUIRED
 (-1765328315L)

	)

2714 
	#KRB5KDC_ERR_CANT_VERIFY_CERTIFICATE
 (-1765328314L)

	)

2715 
	#KRB5KDC_ERR_INVALID_CERTIFICATE
 (-1765328313L)

	)

2716 
	#KRB5KDC_ERR_REVOKED_CERTIFICATE
 (-1765328312L)

	)

2717 
	#KRB5KDC_ERR_REVOCATION_STATUS_UNKNOWN
 (-1765328311L)

	)

2718 
	#KRB5KDC_ERR_REVOCATION_STATUS_UNAVAILABLE
 (-1765328310L)

	)

2719 
	#KRB5KDC_ERR_CLIENT_NAME_MISMATCH
 (-1765328309L)

	)

2720 
	#KRB5KDC_ERR_KDC_NAME_MISMATCH
 (-1765328308L)

	)

2721 
	#KRB5KDC_ERR_INCONSISTENT_KEY_PURPOSE
 (-1765328307L)

	)

2722 
	#KRB5KDC_ERR_DIGEST_IN_CERT_NOT_ACCEPTED
 (-1765328306L)

	)

2723 
	#KRB5KDC_ERR_PA_CHECKSUM_MUST_BE_INCLUDED
 (-1765328305L)

	)

2724 
	#KRB5KDC_ERR_DIGEST_IN_SIGNED_DATA_NOT_ACCEPTED
 (-1765328304L)

	)

2725 
	#KRB5KDC_ERR_PUBLIC_KEY_ENCRYPTION_NOT_SUPPORTED
 (-1765328303L)

	)

2726 
	#KRB5PLACEHOLD_82
 (-1765328302L)

	)

2727 
	#KRB5PLACEHOLD_83
 (-1765328301L)

	)

2728 
	#KRB5PLACEHOLD_84
 (-1765328300L)

	)

2729 
	#KRB5PLACEHOLD_85
 (-1765328299L)

	)

2730 
	#KRB5PLACEHOLD_86
 (-1765328298L)

	)

2731 
	#KRB5PLACEHOLD_87
 (-1765328297L)

	)

2732 
	#KRB5PLACEHOLD_88
 (-1765328296L)

	)

2733 
	#KRB5PLACEHOLD_89
 (-1765328295L)

	)

2734 
	#KRB5PLACEHOLD_90
 (-1765328294L)

	)

2735 
	#KRB5PLACEHOLD_91
 (-1765328293L)

	)

2736 
	#KRB5PLACEHOLD_92
 (-1765328292L)

	)

2737 
	#KRB5KDC_ERR_UNKNOWN_CRITICAL_FAST_OPTION
 (-1765328291L)

	)

2738 
	#KRB5PLACEHOLD_94
 (-1765328290L)

	)

2739 
	#KRB5PLACEHOLD_95
 (-1765328289L)

	)

2740 
	#KRB5PLACEHOLD_96
 (-1765328288L)

	)

2741 
	#KRB5PLACEHOLD_97
 (-1765328287L)

	)

2742 
	#KRB5PLACEHOLD_98
 (-1765328286L)

	)

2743 
	#KRB5PLACEHOLD_99
 (-1765328285L)

	)

2744 
	#KRB5PLACEHOLD_100
 (-1765328284L)

	)

2745 
	#KRB5PLACEHOLD_101
 (-1765328283L)

	)

2746 
	#KRB5PLACEHOLD_102
 (-1765328282L)

	)

2747 
	#KRB5PLACEHOLD_103
 (-1765328281L)

	)

2748 
	#KRB5PLACEHOLD_104
 (-1765328280L)

	)

2749 
	#KRB5PLACEHOLD_105
 (-1765328279L)

	)

2750 
	#KRB5PLACEHOLD_106
 (-1765328278L)

	)

2751 
	#KRB5PLACEHOLD_107
 (-1765328277L)

	)

2752 
	#KRB5PLACEHOLD_108
 (-1765328276L)

	)

2753 
	#KRB5PLACEHOLD_109
 (-1765328275L)

	)

2754 
	#KRB5PLACEHOLD_110
 (-1765328274L)

	)

2755 
	#KRB5PLACEHOLD_111
 (-1765328273L)

	)

2756 
	#KRB5PLACEHOLD_112
 (-1765328272L)

	)

2757 
	#KRB5PLACEHOLD_113
 (-1765328271L)

	)

2758 
	#KRB5PLACEHOLD_114
 (-1765328270L)

	)

2759 
	#KRB5PLACEHOLD_115
 (-1765328269L)

	)

2760 
	#KRB5PLACEHOLD_116
 (-1765328268L)

	)

2761 
	#KRB5PLACEHOLD_117
 (-1765328267L)

	)

2762 
	#KRB5PLACEHOLD_118
 (-1765328266L)

	)

2763 
	#KRB5PLACEHOLD_119
 (-1765328265L)

	)

2764 
	#KRB5PLACEHOLD_120
 (-1765328264L)

	)

2765 
	#KRB5PLACEHOLD_121
 (-1765328263L)

	)

2766 
	#KRB5PLACEHOLD_122
 (-1765328262L)

	)

2767 
	#KRB5PLACEHOLD_123
 (-1765328261L)

	)

2768 
	#KRB5PLACEHOLD_124
 (-1765328260L)

	)

2769 
	#KRB5PLACEHOLD_125
 (-1765328259L)

	)

2770 
	#KRB5PLACEHOLD_126
 (-1765328258L)

	)

2771 
	#KRB5PLACEHOLD_127
 (-1765328257L)

	)

2772 
	#KRB5_ERR_RCSID
 (-1765328256L)

	)

2773 
	#KRB5_LIBOS_BADLOCKFLAG
 (-1765328255L)

	)

2774 
	#KRB5_LIBOS_CANTREADPWD
 (-1765328254L)

	)

2775 
	#KRB5_LIBOS_BADPWDMATCH
 (-1765328253L)

	)

2776 
	#KRB5_LIBOS_PWDINTR
 (-1765328252L)

	)

2777 
	#KRB5_PARSE_ILLCHAR
 (-1765328251L)

	)

2778 
	#KRB5_PARSE_MALFORMED
 (-1765328250L)

	)

2779 
	#KRB5_CONFIG_CANTOPEN
 (-1765328249L)

	)

2780 
	#KRB5_CONFIG_BADFORMAT
 (-1765328248L)

	)

2781 
	#KRB5_CONFIG_NOTENUFSPACE
 (-1765328247L)

	)

2782 
	#KRB5_BADMSGTYPE
 (-1765328246L)

	)

2783 
	#KRB5_CC_BADNAME
 (-1765328245L)

	)

2784 
	#KRB5_CC_UNKNOWN_TYPE
 (-1765328244L)

	)

2785 
	#KRB5_CC_NOTFOUND
 (-1765328243L)

	)

2786 
	#KRB5_CC_END
 (-1765328242L)

	)

2787 
	#KRB5_NO_TKT_SUPPLIED
 (-1765328241L)

	)

2788 
	#KRB5KRB_AP_WRONG_PRINC
 (-1765328240L)

	)

2789 
	#KRB5KRB_AP_ERR_TKT_INVALID
 (-1765328239L)

	)

2790 
	#KRB5_PRINC_NOMATCH
 (-1765328238L)

	)

2791 
	#KRB5_KDCREP_MODIFIED
 (-1765328237L)

	)

2792 
	#KRB5_KDCREP_SKEW
 (-1765328236L)

	)

2793 
	#KRB5_IN_TKT_REALM_MISMATCH
 (-1765328235L)

	)

2794 
	#KRB5_PROG_ETYPE_NOSUPP
 (-1765328234L)

	)

2795 
	#KRB5_PROG_KEYTYPE_NOSUPP
 (-1765328233L)

	)

2796 
	#KRB5_WRONG_ETYPE
 (-1765328232L)

	)

2797 
	#KRB5_PROG_SUMTYPE_NOSUPP
 (-1765328231L)

	)

2798 
	#KRB5_REALM_UNKNOWN
 (-1765328230L)

	)

2799 
	#KRB5_SERVICE_UNKNOWN
 (-1765328229L)

	)

2800 
	#KRB5_KDC_UNREACH
 (-1765328228L)

	)

2801 
	#KRB5_NO_LOCALNAME
 (-1765328227L)

	)

2802 
	#KRB5_MUTUAL_FAILED
 (-1765328226L)

	)

2803 
	#KRB5_RC_TYPE_EXISTS
 (-1765328225L)

	)

2804 
	#KRB5_RC_MALLOC
 (-1765328224L)

	)

2805 
	#KRB5_RC_TYPE_NOTFOUND
 (-1765328223L)

	)

2806 
	#KRB5_RC_UNKNOWN
 (-1765328222L)

	)

2807 
	#KRB5_RC_REPLAY
 (-1765328221L)

	)

2808 
	#KRB5_RC_IO
 (-1765328220L)

	)

2809 
	#KRB5_RC_NOIO
 (-1765328219L)

	)

2810 
	#KRB5_RC_PARSE
 (-1765328218L)

	)

2811 
	#KRB5_RC_IO_EOF
 (-1765328217L)

	)

2812 
	#KRB5_RC_IO_MALLOC
 (-1765328216L)

	)

2813 
	#KRB5_RC_IO_PERM
 (-1765328215L)

	)

2814 
	#KRB5_RC_IO_IO
 (-1765328214L)

	)

2815 
	#KRB5_RC_IO_UNKNOWN
 (-1765328213L)

	)

2816 
	#KRB5_RC_IO_SPACE
 (-1765328212L)

	)

2817 
	#KRB5_TRANS_CANTOPEN
 (-1765328211L)

	)

2818 
	#KRB5_TRANS_BADFORMAT
 (-1765328210L)

	)

2819 
	#KRB5_LNAME_CANTOPEN
 (-1765328209L)

	)

2820 
	#KRB5_LNAME_NOTRANS
 (-1765328208L)

	)

2821 
	#KRB5_LNAME_BADFORMAT
 (-1765328207L)

	)

2822 
	#KRB5_CRYPTO_INTERNAL
 (-1765328206L)

	)

2823 
	#KRB5_KT_BADNAME
 (-1765328205L)

	)

2824 
	#KRB5_KT_UNKNOWN_TYPE
 (-1765328204L)

	)

2825 
	#KRB5_KT_NOTFOUND
 (-1765328203L)

	)

2826 
	#KRB5_KT_END
 (-1765328202L)

	)

2827 
	#KRB5_KT_NOWRITE
 (-1765328201L)

	)

2828 
	#KRB5_KT_IOERR
 (-1765328200L)

	)

2829 
	#KRB5_NO_TKT_IN_RLM
 (-1765328199L)

	)

2830 
	#KRB5DES_BAD_KEYPAR
 (-1765328198L)

	)

2831 
	#KRB5DES_WEAK_KEY
 (-1765328197L)

	)

2832 
	#KRB5_BAD_ENCTYPE
 (-1765328196L)

	)

2833 
	#KRB5_BAD_KEYSIZE
 (-1765328195L)

	)

2834 
	#KRB5_BAD_MSIZE
 (-1765328194L)

	)

2835 
	#KRB5_CC_TYPE_EXISTS
 (-1765328193L)

	)

2836 
	#KRB5_KT_TYPE_EXISTS
 (-1765328192L)

	)

2837 
	#KRB5_CC_IO
 (-1765328191L)

	)

2838 
	#KRB5_FCC_PERM
 (-1765328190L)

	)

2839 
	#KRB5_FCC_NOFILE
 (-1765328189L)

	)

2840 
	#KRB5_FCC_INTERNAL
 (-1765328188L)

	)

2841 
	#KRB5_CC_WRITE
 (-1765328187L)

	)

2842 
	#KRB5_CC_NOMEM
 (-1765328186L)

	)

2843 
	#KRB5_CC_FORMAT
 (-1765328185L)

	)

2844 
	#KRB5_CC_NOT_KTYPE
 (-1765328184L)

	)

2845 
	#KRB5_INVALID_FLAGS
 (-1765328183L)

	)

2846 
	#KRB5_NO_2ND_TKT
 (-1765328182L)

	)

2847 
	#KRB5_NOCREDS_SUPPLIED
 (-1765328181L)

	)

2848 
	#KRB5_SENDAUTH_BADAUTHVERS
 (-1765328180L)

	)

2849 
	#KRB5_SENDAUTH_BADAPPLVERS
 (-1765328179L)

	)

2850 
	#KRB5_SENDAUTH_BADRESPONSE
 (-1765328178L)

	)

2851 
	#KRB5_SENDAUTH_REJECTED
 (-1765328177L)

	)

2852 
	#KRB5_PREAUTH_BAD_TYPE
 (-1765328176L)

	)

2853 
	#KRB5_PREAUTH_NO_KEY
 (-1765328175L)

	)

2854 
	#KRB5_PREAUTH_FAILED
 (-1765328174L)

	)

2855 
	#KRB5_RCACHE_BADVNO
 (-1765328173L)

	)

2856 
	#KRB5_CCACHE_BADVNO
 (-1765328172L)

	)

2857 
	#KRB5_KEYTAB_BADVNO
 (-1765328171L)

	)

2858 
	#KRB5_PROG_ATYPE_NOSUPP
 (-1765328170L)

	)

2859 
	#KRB5_RC_REQUIRED
 (-1765328169L)

	)

2860 
	#KRB5_ERR_BAD_HOSTNAME
 (-1765328168L)

	)

2861 
	#KRB5_ERR_HOST_REALM_UNKNOWN
 (-1765328167L)

	)

2862 
	#KRB5_SNAME_UNSUPP_NAMETYPE
 (-1765328166L)

	)

2863 
	#KRB5KRB_AP_ERR_V4_REPLY
 (-1765328165L)

	)

2864 
	#KRB5_REALM_CANT_RESOLVE
 (-1765328164L)

	)

2865 
	#KRB5_TKT_NOT_FORWARDABLE
 (-1765328163L)

	)

2866 
	#KRB5_FWD_BAD_PRINCIPAL
 (-1765328162L)

	)

2867 
	#KRB5_GET_IN_TKT_LOOP
 (-1765328161L)

	)

2868 
	#KRB5_CONFIG_NODEFREALM
 (-1765328160L)

	)

2869 
	#KRB5_SAM_UNSUPPORTED
 (-1765328159L)

	)

2870 
	#KRB5_SAM_INVALID_ETYPE
 (-1765328158L)

	)

2871 
	#KRB5_SAM_NO_CHECKSUM
 (-1765328157L)

	)

2872 
	#KRB5_SAM_BAD_CHECKSUM
 (-1765328156L)

	)

2873 
	#KRB5_KT_NAME_TOOLONG
 (-1765328155L)

	)

2874 
	#KRB5_KT_KVNONOTFOUND
 (-1765328154L)

	)

2875 
	#KRB5_APPL_EXPIRED
 (-1765328153L)

	)

2876 
	#KRB5_LIB_EXPIRED
 (-1765328152L)

	)

2877 
	#KRB5_CHPW_PWDNULL
 (-1765328151L)

	)

2878 
	#KRB5_CHPW_FAIL
 (-1765328150L)

	)

2879 
	#KRB5_KT_FORMAT
 (-1765328149L)

	)

2880 
	#KRB5_NOPERM_ETYPE
 (-1765328148L)

	)

2881 
	#KRB5_CONFIG_ETYPE_NOSUPP
 (-1765328147L)

	)

2882 
	#KRB5_OBSOLETE_FN
 (-1765328146L)

	)

2883 
	#KRB5_EAI_FAIL
 (-1765328145L)

	)

2884 
	#KRB5_EAI_NODATA
 (-1765328144L)

	)

2885 
	#KRB5_EAI_NONAME
 (-1765328143L)

	)

2886 
	#KRB5_EAI_SERVICE
 (-1765328142L)

	)

2887 
	#KRB5_ERR_NUMERIC_REALM
 (-1765328141L)

	)

2888 
	#KRB5_ERR_BAD_S2K_PARAMS
 (-1765328140L)

	)

2889 
	#KRB5_ERR_NO_SERVICE
 (-1765328139L)

	)

2890 
	#KRB5_CC_READONLY
 (-1765328138L)

	)

2891 
	#KRB5_CC_NOSUPP
 (-1765328137L)

	)

2892 
	#KRB5_DELTAT_BADFORMAT
 (-1765328136L)

	)

2893 
	#KRB5_PLUGIN_NO_HANDLE
 (-1765328135L)

	)

2894 
	#KRB5_PLUGIN_OP_NOTSUPP
 (-1765328134L)

	)

2895 
	#KRB5_ERR_INVALID_UTF8
 (-1765328133L)

	)

2896 
	#KRB5_ERR_FAST_REQUIRED
 (-1765328132L)

	)

2897 
	#KRB5_LOCAL_ADDR_REQUIRED
 (-1765328131L)

	)

2898 
	#KRB5_REMOTE_ADDR_REQUIRED
 (-1765328130L)

	)

2899 c⁄° 
îr‹_èbÀ
 
ë_krb5_îr‹_èbÀ
;

2900 
	`öôülize_krb5_îr‹_èbÀ
();

2903 
	`öôülize_krb5_îr‹_èbÀ_r
(
ë_li°
 **
li°
);

2905 
	#ERROR_TABLE_BASE_krb5
 (-1765328384L)

	)

2908 
	#öô_krb5_îr_tbl
 
öôülize_krb5_îr‹_èbÀ


	)

2909 
	#krb5_îr_ba£
 
ERROR_TABLE_BASE_krb5


	)

2915 
	~<ë/com_îr.h
>

2917 
	#KRB5_KDB_RCSID
 (-1780008448L)

	)

2918 
	#KRB5_KDB_INUSE
 (-1780008447L)

	)

2919 
	#KRB5_KDB_UK_SERROR
 (-1780008446L)

	)

2920 
	#KRB5_KDB_UK_RERROR
 (-1780008445L)

	)

2921 
	#KRB5_KDB_UNAUTH
 (-1780008444L)

	)

2922 
	#KRB5_KDB_NOENTRY
 (-1780008443L)

	)

2923 
	#KRB5_KDB_ILL_WILDCARD
 (-1780008442L)

	)

2924 
	#KRB5_KDB_DB_INUSE
 (-1780008441L)

	)

2925 
	#KRB5_KDB_DB_CHANGED
 (-1780008440L)

	)

2926 
	#KRB5_KDB_TRUNCATED_RECORD
 (-1780008439L)

	)

2927 
	#KRB5_KDB_RECURSIVELOCK
 (-1780008438L)

	)

2928 
	#KRB5_KDB_NOTLOCKED
 (-1780008437L)

	)

2929 
	#KRB5_KDB_BADLOCKMODE
 (-1780008436L)

	)

2930 
	#KRB5_KDB_DBNOTINITED
 (-1780008435L)

	)

2931 
	#KRB5_KDB_DBINITED
 (-1780008434L)

	)

2932 
	#KRB5_KDB_ILLDIRECTION
 (-1780008433L)

	)

2933 
	#KRB5_KDB_NOMASTERKEY
 (-1780008432L)

	)

2934 
	#KRB5_KDB_BADMASTERKEY
 (-1780008431L)

	)

2935 
	#KRB5_KDB_INVALIDKEYSIZE
 (-1780008430L)

	)

2936 
	#KRB5_KDB_CANTREAD_STORED
 (-1780008429L)

	)

2937 
	#KRB5_KDB_BADSTORED_MKEY
 (-1780008428L)

	)

2938 
	#KRB5_KDB_NOACTMASTERKEY
 (-1780008427L)

	)

2939 
	#KRB5_KDB_KVNONOMATCH
 (-1780008426L)

	)

2940 
	#KRB5_KDB_STORED_MKEY_NOTCURRENT
 (-1780008425L)

	)

2941 
	#KRB5_KDB_CANTLOCK_DB
 (-1780008424L)

	)

2942 
	#KRB5_KDB_DB_CORRUPT
 (-1780008423L)

	)

2943 
	#KRB5_KDB_BAD_VERSION
 (-1780008422L)

	)

2944 
	#KRB5_KDB_BAD_SALTTYPE
 (-1780008421L)

	)

2945 
	#KRB5_KDB_BAD_ENCTYPE
 (-1780008420L)

	)

2946 
	#KRB5_KDB_BAD_CREATEFLAGS
 (-1780008419L)

	)

2947 
	#KRB5_KDB_NO_PERMITTED_KEY
 (-1780008418L)

	)

2948 
	#KRB5_KDB_NO_MATCHING_KEY
 (-1780008417L)

	)

2949 
	#KRB5_KDB_DBTYPE_NOTFOUND
 (-1780008416L)

	)

2950 
	#KRB5_KDB_DBTYPE_NOSUP
 (-1780008415L)

	)

2951 
	#KRB5_KDB_DBTYPE_INIT
 (-1780008414L)

	)

2952 
	#KRB5_KDB_SERVER_INTERNAL_ERR
 (-1780008413L)

	)

2953 
	#KRB5_KDB_ACCESS_ERROR
 (-1780008412L)

	)

2954 
	#KRB5_KDB_INTERNAL_ERROR
 (-1780008411L)

	)

2955 
	#KRB5_KDB_CONSTRAINT_VIOLATION
 (-1780008410L)

	)

2956 
	#KRB5_LOG_CONV
 (-1780008409L)

	)

2957 
	#KRB5_LOG_UNSTABLE
 (-1780008408L)

	)

2958 
	#KRB5_LOG_CORRUPT
 (-1780008407L)

	)

2959 
	#KRB5_LOG_ERROR
 (-1780008406L)

	)

2960 c⁄° 
îr‹_èbÀ
 
ë_kdb5_îr‹_èbÀ
;

2961 
	`öôülize_kdb5_îr‹_èbÀ
();

2964 
	`öôülize_kdb5_îr‹_èbÀ_r
(
ë_li°
 **
li°
);

2966 
	#ERROR_TABLE_BASE_kdb5
 (-1780008448L)

	)

2969 
	#öô_kdb5_îr_tbl
 
öôülize_kdb5_îr‹_èbÀ


	)

2970 
	#kdb5_îr_ba£
 
ERROR_TABLE_BASE_kdb5


	)

2976 
	~<ë/com_îr.h
>

2978 
	#KV5M_NONE
 (-1760647424L)

	)

2979 
	#KV5M_PRINCIPAL
 (-1760647423L)

	)

2980 
	#KV5M_DATA
 (-1760647422L)

	)

2981 
	#KV5M_KEYBLOCK
 (-1760647421L)

	)

2982 
	#KV5M_CHECKSUM
 (-1760647420L)

	)

2983 
	#KV5M_ENCRYPT_BLOCK
 (-1760647419L)

	)

2984 
	#KV5M_ENC_DATA
 (-1760647418L)

	)

2985 
	#KV5M_CRYPTOSYSTEM_ENTRY
 (-1760647417L)

	)

2986 
	#KV5M_CS_TABLE_ENTRY
 (-1760647416L)

	)

2987 
	#KV5M_CHECKSUM_ENTRY
 (-1760647415L)

	)

2988 
	#KV5M_AUTHDATA
 (-1760647414L)

	)

2989 
	#KV5M_TRANSITED
 (-1760647413L)

	)

2990 
	#KV5M_ENC_TKT_PART
 (-1760647412L)

	)

2991 
	#KV5M_TICKET
 (-1760647411L)

	)

2992 
	#KV5M_AUTHENTICATOR
 (-1760647410L)

	)

2993 
	#KV5M_TKT_AUTHENT
 (-1760647409L)

	)

2994 
	#KV5M_CREDS
 (-1760647408L)

	)

2995 
	#KV5M_LAST_REQ_ENTRY
 (-1760647407L)

	)

2996 
	#KV5M_PA_DATA
 (-1760647406L)

	)

2997 
	#KV5M_KDC_REQ
 (-1760647405L)

	)

2998 
	#KV5M_ENC_KDC_REP_PART
 (-1760647404L)

	)

2999 
	#KV5M_KDC_REP
 (-1760647403L)

	)

3000 
	#KV5M_ERROR
 (-1760647402L)

	)

3001 
	#KV5M_AP_REQ
 (-1760647401L)

	)

3002 
	#KV5M_AP_REP
 (-1760647400L)

	)

3003 
	#KV5M_AP_REP_ENC_PART
 (-1760647399L)

	)

3004 
	#KV5M_RESPONSE
 (-1760647398L)

	)

3005 
	#KV5M_SAFE
 (-1760647397L)

	)

3006 
	#KV5M_PRIV
 (-1760647396L)

	)

3007 
	#KV5M_PRIV_ENC_PART
 (-1760647395L)

	)

3008 
	#KV5M_CRED
 (-1760647394L)

	)

3009 
	#KV5M_CRED_INFO
 (-1760647393L)

	)

3010 
	#KV5M_CRED_ENC_PART
 (-1760647392L)

	)

3011 
	#KV5M_PWD_DATA
 (-1760647391L)

	)

3012 
	#KV5M_ADDRESS
 (-1760647390L)

	)

3013 
	#KV5M_KEYTAB_ENTRY
 (-1760647389L)

	)

3014 
	#KV5M_CONTEXT
 (-1760647388L)

	)

3015 
	#KV5M_OS_CONTEXT
 (-1760647387L)

	)

3016 
	#KV5M_ALT_METHOD
 (-1760647386L)

	)

3017 
	#KV5M_ETYPE_INFO_ENTRY
 (-1760647385L)

	)

3018 
	#KV5M_DB_CONTEXT
 (-1760647384L)

	)

3019 
	#KV5M_AUTH_CONTEXT
 (-1760647383L)

	)

3020 
	#KV5M_KEYTAB
 (-1760647382L)

	)

3021 
	#KV5M_RCACHE
 (-1760647381L)

	)

3022 
	#KV5M_CCACHE
 (-1760647380L)

	)

3023 
	#KV5M_PREAUTH_OPS
 (-1760647379L)

	)

3024 
	#KV5M_SAM_CHALLENGE
 (-1760647378L)

	)

3025 
	#KV5M_SAM_CHALLENGE_2
 (-1760647377L)

	)

3026 
	#KV5M_SAM_KEY
 (-1760647376L)

	)

3027 
	#KV5M_ENC_SAM_RESPONSE_ENC
 (-1760647375L)

	)

3028 
	#KV5M_ENC_SAM_RESPONSE_ENC_2
 (-1760647374L)

	)

3029 
	#KV5M_SAM_RESPONSE
 (-1760647373L)

	)

3030 
	#KV5M_SAM_RESPONSE_2
 (-1760647372L)

	)

3031 
	#KV5M_PREDICTED_SAM_RESPONSE
 (-1760647371L)

	)

3032 
	#KV5M_PASSWD_PHRASE_ELEMENT
 (-1760647370L)

	)

3033 
	#KV5M_GSS_OID
 (-1760647369L)

	)

3034 
	#KV5M_GSS_QUEUE
 (-1760647368L)

	)

3035 
	#KV5M_FAST_ARMORED_REQ
 (-1760647367L)

	)

3036 
	#KV5M_FAST_REQ
 (-1760647366L)

	)

3037 
	#KV5M_FAST_RESPONSE
 (-1760647365L)

	)

3038 c⁄° 
îr‹_èbÀ
 
ë_kv5m_îr‹_èbÀ
;

3039 
	`öôülize_kv5m_îr‹_èbÀ
();

3042 
	`öôülize_kv5m_îr‹_èbÀ_r
(
ë_li°
 **
li°
);

3044 
	#ERROR_TABLE_BASE_kv5m
 (-1760647424L)

	)

3047 
	#öô_kv5m_îr_tbl
 
öôülize_kv5m_îr‹_èbÀ


	)

3048 
	#kv5m_îr_ba£
 
ERROR_TABLE_BASE_kv5m


	)

3054 
	~<ë/com_îr.h
>

3056 
	#KRB524_BADKEY
 (-1750206208L)

	)

3057 
	#KRB524_BADADDR
 (-1750206207L)

	)

3058 
	#KRB524_BADPRINC
 (-1750206206L)

	)

3059 
	#KRB524_BADREALM
 (-1750206205L)

	)

3060 
	#KRB524_V4ERR
 (-1750206204L)

	)

3061 
	#KRB524_ENCFULL
 (-1750206203L)

	)

3062 
	#KRB524_DECEMPTY
 (-1750206202L)

	)

3063 
	#KRB524_NOTRESP
 (-1750206201L)

	)

3064 
	#KRB524_KRB4_DISABLED
 (-1750206200L)

	)

3065 c⁄° 
îr‹_èbÀ
 
ë_k524_îr‹_èbÀ
;

3066 
	`öôülize_k524_îr‹_èbÀ
();

3069 
	`öôülize_k524_îr‹_èbÀ_r
(
ë_li°
 **
li°
);

3071 
	#ERROR_TABLE_BASE_k524
 (-1750206208L)

	)

3074 
	#öô_k524_îr_tbl
 
öôülize_k524_îr‹_èbÀ


	)

3075 
	#k524_îr_ba£
 
ERROR_TABLE_BASE_k524


	)

3081 
	~<ë/com_îr.h
>

3083 
	#ASN1_BAD_TIMEFORMAT
 (1859794432L)

	)

3084 
	#ASN1_MISSING_FIELD
 (1859794433L)

	)

3085 
	#ASN1_MISPLACED_FIELD
 (1859794434L)

	)

3086 
	#ASN1_TYPE_MISMATCH
 (1859794435L)

	)

3087 
	#ASN1_OVERFLOW
 (1859794436L)

	)

3088 
	#ASN1_OVERRUN
 (1859794437L)

	)

3089 
	#ASN1_BAD_ID
 (1859794438L)

	)

3090 
	#ASN1_BAD_LENGTH
 (1859794439L)

	)

3091 
	#ASN1_BAD_FORMAT
 (1859794440L)

	)

3092 
	#ASN1_PARSE_ERROR
 (1859794441L)

	)

3093 
	#ASN1_BAD_GMTIME
 (1859794442L)

	)

3094 
	#ASN1_MISMATCH_INDEF
 (1859794443L)

	)

3095 
	#ASN1_MISSING_EOC
 (1859794444L)

	)

3096 c⁄° 
îr‹_èbÀ
 
ë_a¢1_îr‹_èbÀ
;

3097 
	`öôülize_a¢1_îr‹_èbÀ
();

3100 
	`öôülize_a¢1_îr‹_èbÀ_r
(
ë_li°
 **
li°
);

3102 
	#ERROR_TABLE_BASE_a¢1
 (1859794432L)

	)

3105 
	#öô_a¢1_îr_tbl
 
öôülize_a¢1_îr‹_èbÀ


	)

3106 
	#a¢1_îr_ba£
 
ERROR_TABLE_BASE_a¢1


	)

	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 >(_Â)->_wide_d©a->
_IO_ªad_íd
,\

447 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

448 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

449 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

450 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
, 0) \

451 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

452 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

455 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

456 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

458 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

459 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

460 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

461 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

466 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

467 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

469 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

470 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

471 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 #ifde‡
_IO_MTSAFE_IO


474 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

475 
	#_IO_Êockfûe
(
_Â
) \

476 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

477 
	#_IO_fu∆ockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

480 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

481 
	#_IO_Êockfûe
(
_Â
Ë

	)

482 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

483 
	#_IO_·rylockfûe
(
_Â
Ë

	)

484 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

485 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

488 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

489 
_IO_va_li°
, *
__ª°ri˘
);

490 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

491 
_IO_va_li°
);

492 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

493 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

495 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

496 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

498 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

500 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


501 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

502 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

503 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

504 #i‡
__GNUC__
 >= 2

507 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


508 
	~<shlib-com∑t.h
>

509 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

510 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

511 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

512 c⁄° 
_IO_°dö_u£d
;

513 
wók_exã∫
 (
_IO_°dö_u£d
);

516 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


517 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

521 
	#_IO_fwide
(
__Â
, 
__mode
) \

522 ({ 
__ªsu…
 = (
__mode
); \

523 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

525 i‡((
__Â
)->
_mode
 == 0) \

527 (
__Â
)->
_mode
 = -1; \

528 
__ªsu…
 = (
__Â
)->
_mode
; \

530 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

531 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

533 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

534 
__ªsu…
; })

	)

537 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

538 
_IO_va_li°
, *
__ª°ri˘
);

539 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

540 
_IO_va_li°
);

541 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

542 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

545 #ifde‡
__LDBL_COMPAT


546 
	~<bôs/libio-ldbl.h
>

549 #ifde‡
__˝lu•lus


	@/usr/include/nl_types.h

19 #i‚de‡
_NL_TYPES_H


20 
	#_NL_TYPES_H
 1

	)

22 
	~<„©uªs.h
>

25 
	#NL_SETD
 1

	)

28 
	#NL_CAT_LOCALE
 1

	)

31 
__BEGIN_DECLS


34 *
	t∆_ˇtd
;

37 
	t∆_ôem
;

43 
∆_ˇtd
 
	$ˇt›í
 (
__c⁄°
 *
__ˇt_«me
, 
__Êag
Ë
	`__n⁄nuŒ
 ((1));

47 *
	$ˇtgës
 (
∆_ˇtd
 
__ˇèlog
, 
__£t
, 
__numbî
,

48 
__c⁄°
 *
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

51 
	$ˇt˛o£
 (
∆_ˇtd
 
__ˇèlog
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

53 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 *  (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

155 #ifdef 
__USE_POSIX199309


156 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

157 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

158 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

164 
	#S_ISUID
 
__S_ISUID


	)

165 
	#S_ISGID
 
__S_ISGID


	)

167 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


169 
	#S_ISVTX
 
__S_ISVTX


	)

172 
	#S_IRUSR
 
__S_IREAD


	)

173 
	#S_IWUSR
 
__S_IWRITE


	)

174 
	#S_IXUSR
 
__S_IEXEC


	)

176 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

178 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


179 
	#S_IREAD
 
S_IRUSR


	)

180 
	#S_IWRITE
 
S_IWUSR


	)

181 
	#S_IEXEC
 
S_IXUSR


	)

184 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

185 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

186 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

188 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

190 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

191 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

192 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

194 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

197 #ifdef 
__USE_BSD


199 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

200 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

201 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

203 
	#S_BLKSIZE
 512

	)

207 #i‚de‡
__USE_FILE_OFFSET64


209 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

210 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

214 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

216 #ifde‡
__REDIRECT_NTH


217 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

218 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

219 
	`__n⁄nuŒ
 ((1, 2));

220 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

221 
	`__n⁄nuŒ
 ((2));

223 
	#°©
 
°©64


	)

224 
	#f°©
 
f°©64


	)

227 #ifde‡
__USE_LARGEFILE64


228 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

229 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

230 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

233 #ifde‡
__USE_ATFILE


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

239 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

240 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

242 #ifde‡
__REDIRECT_NTH


243 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

244 
°©
 *
__ª°ri˘
 
__buf
,

245 
__Êag
),

246 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

248 
	#f°©©
 
f°©©64


	)

252 #ifde‡
__USE_LARGEFILE64


253 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

254 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

255 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

259 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


260 #i‚de‡
__USE_FILE_OFFSET64


263 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

264 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

266 #ifde‡
__REDIRECT_NTH


267 
	`__REDIRECT_NTH
 (
l°©
,

268 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

269 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

270 
	`__n⁄nuŒ
 ((1, 2));

272 
	#l°©
 
l°©64


	)

275 #ifde‡
__USE_LARGEFILE64


276 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

277 
°©64
 *
__ª°ri˘
 
__buf
)

278 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

284 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

285 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 #ifde‡
__USE_BSD


291 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


297 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

300 #ifde‡
__USE_ATFILE


303 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

304 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

312 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

314 #ifdef 
__USE_GNU


317 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

321 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1));

324 #ifde‡
__USE_ATFILE


328 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

329 
__THROW
 
	`__n⁄nuŒ
 ((2));

335 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


336 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

337 
__THROW
 
	`__n⁄nuŒ
 ((1));

339 #ifde‡
__USE_ATFILE


343 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

344 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1));

353 #ifde‡
__USE_ATFILE


357 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

361 #ifde‡
__USE_ATFILE


364 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

365 
__c⁄°
 
time•ec
 
__times
[2],

366 
__Êags
)

367 
__THROW
 
	`__n⁄nuŒ
 ((2));

370 #ifde‡
__USE_XOPEN2K8


372 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

390 #i‚de‡
_STAT_VER


391 
	#_STAT_VER
 0

	)

393 #i‚de‡
_MKNOD_VER


394 
	#_MKNOD_VER
 0

	)

398 #i‚de‡
__USE_FILE_OFFSET64


399 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

400 
__THROW
 
	`__n⁄nuŒ
 ((3));

401 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

402 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

403 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
, 
__Êag
)

407 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

409 #ifde‡
__REDIRECT_NTH


410 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

411 
°©
 *
__°©_buf
), 
__fx°©64
)

412 
	`__n⁄nuŒ
 ((3));

413 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

414 
°©
 *
__°©_buf
), 
__x°©64
)

415 
	`__n⁄nuŒ
 ((2, 3));

416 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

417 
°©
 *
__°©_buf
), 
__lx°©64
)

418 
	`__n⁄nuŒ
 ((2, 3));

419 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

420 
__c⁄°
 *
__fûíame
,

421 
°©
 *
__°©_buf
, 
__Êag
),

422 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

425 
	#__fx°©
 
__fx°©64


	)

426 
	#__x°©
 
__x°©64


	)

427 
	#__lx°©
 
__lx°©64


	)

431 #ifde‡
__USE_LARGEFILE64


432 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

433 
__THROW
 
	`__n⁄nuŒ
 ((3));

434 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

435 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

436 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
, 
__Êag
)

440 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

442 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

443 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

446 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

447 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

449 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES_IN_LIBC


452 
__exã∫_ölöe
 

453 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

455  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

456 
	}
}

458 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


459 
__exã∫_ölöe
 

460 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

462  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

463 
	}
}

466 
__exã∫_ölöe
 

467 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

469  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

470 
	}
}

472 #ifde‡
__USE_ATFILE


473 
__exã∫_ölöe
 

474 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

475 
__Êag
))

477  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

478 
	}
}

481 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


482 
__exã∫_ölöe
 

483 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

485  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

486 
	}
}

489 #ifde‡
__USE_ATFILE


490 
__exã∫_ölöe
 

491 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

492 
__dev_t
 
__dev
))

494  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

495 
	}
}

498 #i‡
deföed
 
__USE_LARGEFILE64
 \

499 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

500 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

501 
__exã∫_ölöe
 

502 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

504  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

505 
	}
}

507 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


508 
__exã∫_ölöe
 

509 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

511  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

512 
	}
}

515 
__exã∫_ölöe
 

516 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

518  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

519 
	}
}

521 #ifde‡
__USE_ATFILE


522 
__exã∫_ölöe
 

523 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

524 
__Êag
))

526  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

527 
	}
}

534 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
	$ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

41 
__wur
;

51 
ssize_t
 
	$wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

52 
__wur
;

55 #ifde‡
__USE_BSD


56 #i‚de‡
__USE_FILE_OFFSET64


66 
ssize_t
 
	$¥ódv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

67 
__off_t
 
__off£t
Ë
__wur
;

78 
ssize_t
 
	$pwrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

79 
__off_t
 
__off£t
Ë
__wur
;

81 #ifde‡
__REDIRECT


82 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

83 
__cou¡
, 
__off_t
 
__off£t
),

84 
¥ódv64
Ë
__wur
;

85 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

86 
__cou¡
, 
__off_t
 
__off£t
),

87 
pwrôev64
Ë
__wur
;

89 
	#¥ódv
 
¥ódv64


	)

90 
	#pwrôev
 
pwrôev64


	)

94 #ifde‡
__USE_LARGEFILE64


104 
ssize_t
 
	$¥ódv64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

105 
__off64_t
 
__off£t
Ë
__wur
;

116 
ssize_t
 
	$pwrôev64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

117 
__off64_t
 
__off£t
Ë
__wur
;

121 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/ioctls.h

1 #i‚de‡
_ASM_X86_IOCTLS_H


2 
	#_ASM_X86_IOCTLS_H


	)

4 
	~<asm/io˘l.h
>

8 
	#TCGETS
 0x5401

	)

9 
	#TCSETS
 0x5402

	)

10 
	#TCSETSW
 0x5403

	)

11 
	#TCSETSF
 0x5404

	)

12 
	#TCGETA
 0x5405

	)

13 
	#TCSETA
 0x5406

	)

14 
	#TCSETAW
 0x5407

	)

15 
	#TCSETAF
 0x5408

	)

16 
	#TCSBRK
 0x5409

	)

17 
	#TCXONC
 0x540A

	)

18 
	#TCFLSH
 0x540B

	)

19 
	#TIOCEXCL
 0x540C

	)

20 
	#TIOCNXCL
 0x540D

	)

21 
	#TIOCSCTTY
 0x540E

	)

22 
	#TIOCGPGRP
 0x540F

	)

23 
	#TIOCSPGRP
 0x5410

	)

24 
	#TIOCOUTQ
 0x5411

	)

25 
	#TIOCSTI
 0x5412

	)

26 
	#TIOCGWINSZ
 0x5413

	)

27 
	#TIOCSWINSZ
 0x5414

	)

28 
	#TIOCMGET
 0x5415

	)

29 
	#TIOCMBIS
 0x5416

	)

30 
	#TIOCMBIC
 0x5417

	)

31 
	#TIOCMSET
 0x5418

	)

32 
	#TIOCGSOFTCAR
 0x5419

	)

33 
	#TIOCSSOFTCAR
 0x541A

	)

34 
	#FIONREAD
 0x541B

	)

35 
	#TIOCINQ
 
FIONREAD


	)

36 
	#TIOCLINUX
 0x541C

	)

37 
	#TIOCCONS
 0x541D

	)

38 
	#TIOCGSERIAL
 0x541E

	)

39 
	#TIOCSSERIAL
 0x541F

	)

40 
	#TIOCPKT
 0x5420

	)

41 
	#FIONBIO
 0x5421

	)

42 
	#TIOCNOTTY
 0x5422

	)

43 
	#TIOCSETD
 0x5423

	)

44 
	#TIOCGETD
 0x5424

	)

45 
	#TCSBRKP
 0x5425

	)

47 
	#TIOCSBRK
 0x5427

	)

48 
	#TIOCCBRK
 0x5428

	)

49 
	#TIOCGSID
 0x5429

	)

50 
	#TCGETS2
 
	`_IOR
('T', 0x2A, 
ãrmios2
)

	)

51 
	#TCSETS2
 
	`_IOW
('T', 0x2B, 
ãrmios2
)

	)

52 
	#TCSETSW2
 
	`_IOW
('T', 0x2C, 
ãrmios2
)

	)

53 
	#TCSETSF2
 
	`_IOW
('T', 0x2D, 
ãrmios2
)

	)

54 
	#TIOCGRS485
 0x542E

	)

55 
	#TIOCSRS485
 0x542F

	)

56 
	#TIOCGPTN
 
	`_IOR
('T', 0x30, )

	)

58 
	#TIOCSPTLCK
 
	`_IOW
('T', 0x31, Ë

	)

59 
	#TCGETX
 0x5432

	)

60 
	#TCSETX
 0x5433

	)

61 
	#TCSETXF
 0x5434

	)

62 
	#TCSETXW
 0x5435

	)

64 
	#FIONCLEX
 0x5450

	)

65 
	#FIOCLEX
 0x5451

	)

66 
	#FIOASYNC
 0x5452

	)

67 
	#TIOCSERCONFIG
 0x5453

	)

68 
	#TIOCSERGWILD
 0x5454

	)

69 
	#TIOCSERSWILD
 0x5455

	)

70 
	#TIOCGLCKTRMIOS
 0x5456

	)

71 
	#TIOCSLCKTRMIOS
 0x5457

	)

72 
	#TIOCSERGSTRUCT
 0x5458

	)

73 
	#TIOCSERGETLSR
 0x5459

	)

74 
	#TIOCSERGETMULTI
 0x545A

	)

75 
	#TIOCSERSETMULTI
 0x545B

	)

77 
	#TIOCMIWAIT
 0x545C

	)

78 
	#TIOCGICOUNT
 0x545D

	)

79 
	#TIOCGHAYESESP
 0x545E

	)

80 
	#TIOCSHAYESESP
 0x545F

	)

81 
	#FIOQSIZE
 0x5460

	)

84 
	#TIOCPKT_DATA
 0

	)

85 
	#TIOCPKT_FLUSHREAD
 1

	)

86 
	#TIOCPKT_FLUSHWRITE
 2

	)

87 
	#TIOCPKT_STOP
 4

	)

88 
	#TIOCPKT_START
 8

	)

89 
	#TIOCPKT_NOSTOP
 16

	)

90 
	#TIOCPKT_DOSTOP
 32

	)

92 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm/socket.h

1 #i‚de‡
_ASM_X86_SOCKET_H


2 
	#_ASM_X86_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

26 
	#SO_PASSCRED
 16

	)

27 
	#SO_PEERCRED
 17

	)

28 
	#SO_RCVLOWAT
 18

	)

29 
	#SO_SNDLOWAT
 19

	)

30 
	#SO_RCVTIMEO
 20

	)

31 
	#SO_SNDTIMEO
 21

	)

34 
	#SO_SECURITY_AUTHENTICATION
 22

	)

35 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

36 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

38 
	#SO_BINDTODEVICE
 25

	)

41 
	#SO_ATTACH_FILTER
 26

	)

42 
	#SO_DETACH_FILTER
 27

	)

44 
	#SO_PEERNAME
 28

	)

45 
	#SO_TIMESTAMP
 29

	)

46 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

48 
	#SO_ACCEPTCONN
 30

	)

50 
	#SO_PEERSEC
 31

	)

51 
	#SO_PASSSEC
 34

	)

52 
	#SO_TIMESTAMPNS
 35

	)

53 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

55 
	#SO_MARK
 36

	)

57 
	#SO_TIMESTAMPING
 37

	)

58 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_SET_BTS
 "btsq"

	)

31 
	#__FD_CLR_BTR
 "båq"

	)

32 
	#__FD_ISSET_BT
 "btq"

	)

34 
	#__FD_ZERO_STOS
 "°o¶"

	)

35 
	#__FD_SET_BTS
 "bt¶"

	)

36 
	#__FD_CLR_BTR
 "bål"

	)

37 
	#__FD_ISSET_BT
 "bé"

	)

40 
	#__FD_ZERO
(
fd•
) \

42 
__d0
, 
__d1
; \

43 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

44 : "=c" (
__d0
), "=D" (
__d1
) \

45 : "a" (0), "0" ( (
fd_£t
) \

46 /  (
__fd_mask
)), \

47 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

49 } 0)

	)

51 
	#__FD_SET
(
fd
, 
fd•
) \

52 
__asm__
 
	`__vﬁ©ûe__
 (
__FD_SET_BTS
 " %1,%0" \

53 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

54 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

55 : "cc","mem‹y")

	)

56 
	#__FD_CLR
(
fd
, 
fd•
) \

57 
__asm__
 
	`__vﬁ©ûe__
 (
__FD_CLR_BTR
 " %1,%0" \

58 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

59 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

60 : "cc","mem‹y")

	)

61 
	#__FD_ISSET
(
fd
, 
fd•
) \

62 (
__exãnsi⁄__
 \

63 ({
__ªsu…
; \

64 
__asm__
 
	`__vﬁ©ûe__
 (
__FD_ISSET_BT
 " %1,%2 ; setcb %b0" \

65 : "=q" (
__ªsu…
) \

66 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
), \

67 "m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

69 
__ªsu…
; }))

	)

75 
	#__FD_ZERO
(
£t
) \

77 
__i
; \

78 
fd_£t
 *
__¨r
 = (
£t
); \

79 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

80 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

81 } 0)

	)

82 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

83 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

84 
	#__FD_ISSET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] & 
	`__FDMASK
 (d))

	)

	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/stat.h

19 #i‚de‡
_SYS_STAT_H


24 
	#_STAT_VER_KERNEL
 0

	)

26 #i‡
__WORDSIZE
 == 32

27 
	#_STAT_VER_SVR4
 2

	)

28 
	#_STAT_VER_LINUX
 3

	)

31 
	#_MKNOD_VER_LINUX
 1

	)

32 
	#_MKNOD_VER_SVR4
 2

	)

33 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

35 
	#_STAT_VER_LINUX
 1

	)

38 
	#_MKNOD_VER_LINUX
 0

	)

41 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

43 
	s°©


45 
__dev_t
 
	m°_dev
;

46 #i‡
__WORDSIZE
 == 32

47 
	m__∑d1
;

49 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


50 
__öo_t
 
	m°_öo
;

52 
__öo_t
 
	m__°_öo
;

54 #i‡
__WORDSIZE
 == 32

55 
__mode_t
 
	m°_mode
;

56 
__∆ök_t
 
	m°_∆ök
;

58 
__∆ök_t
 
	m°_∆ök
;

59 
__mode_t
 
	m°_mode
;

61 
__uid_t
 
	m°_uid
;

62 
__gid_t
 
	m°_gid
;

63 #i‡
__WORDSIZE
 == 64

64 
	m__∑d0
;

66 
__dev_t
 
	m°_rdev
;

67 #i‡
__WORDSIZE
 == 32

68 
	m__∑d2
;

70 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


71 
__off_t
 
	m°_size
;

73 
__off64_t
 
	m°_size
;

75 
__blksize_t
 
	m°_blksize
;

76 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


77 
__blk˙t_t
 
	m°_blocks
;

79 
__blk˙t64_t
 
	m°_blocks
;

81 #ifde‡
__USE_MISC


88 
time•ec
 
	m°_©im
;

89 
time•ec
 
	m°_mtim
;

90 
time•ec
 
	m°_˘im
;

91 
	#°_©ime
 
°_©im
.
tv_£c


	)

92 
	#°_mtime
 
°_mtim
.
tv_£c


	)

93 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

95 
__time_t
 
	m°_©ime
;

96 
	m°_©imí£c
;

97 
__time_t
 
	m°_mtime
;

98 
	m°_mtimí£c
;

99 
__time_t
 
	m°_˘ime
;

100 
	m°_˘imí£c
;

102 #i‡
__WORDSIZE
 == 64

103 
	m__unu£d
[3];

105 #i‚de‡
__USE_FILE_OFFSET64


106 
	m__unu£d4
;

107 
	m__unu£d5
;

109 
__öo64_t
 
	m°_öo
;

114 #ifde‡
__USE_LARGEFILE64


116 
	s°©64


118 
__dev_t
 
	m°_dev
;

119 #i‡
__WORDSIZE
 == 64

120 
__öo64_t
 
	m°_öo
;

121 
__∆ök_t
 
	m°_∆ök
;

122 
__mode_t
 
	m°_mode
;

124 
	m__∑d1
;

125 
__öo_t
 
	m__°_öo
;

126 
__mode_t
 
	m°_mode
;

127 
__∆ök_t
 
	m°_∆ök
;

129 
__uid_t
 
	m°_uid
;

130 
__gid_t
 
	m°_gid
;

131 #i‡
__WORDSIZE
 == 64

132 
	m__∑d0
;

133 
__dev_t
 
	m°_rdev
;

134 
__off_t
 
	m°_size
;

136 
__dev_t
 
	m°_rdev
;

137 
	m__∑d2
;

138 
__off64_t
 
	m°_size
;

140 
__blksize_t
 
	m°_blksize
;

141 
__blk˙t64_t
 
	m°_blocks
;

142 #ifde‡
__USE_MISC


149 
time•ec
 
	m°_©im
;

150 
time•ec
 
	m°_mtim
;

151 
time•ec
 
	m°_˘im
;

152 
	#°_©ime
 
°_©im
.
tv_£c


	)

153 
	#°_mtime
 
°_mtim
.
tv_£c


	)

154 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

156 
__time_t
 
	m°_©ime
;

157 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
	m°_˘imí£c
;

163 #i‡
__WORDSIZE
 == 64

164 
	m__unu£d
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

24 #ifde‡
__WCHAR_MAX__


25 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

27 
	#__WCHAR_MAX
 (2147483647)

	)

32 #ifde‡
__WCHAR_UNSIGNED__


33 
	#__WCHAR_MIN
 
L
'\0'

	)

37 #ñi‡
L
'\0' - 1 > 0

38 
	#__WCHAR_MIN
 
L
'\0'

	)

40 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/et/com_err.h

11 #i‡!
deföed
(
__COM_ERR_H
Ë&& !deföed(
__COM_ERR_H__
)

13 #ifde‡
__GNUC__


14 
	#COM_ERR_ATTR
(
x
Ë
	`__©åibuã__
(x)

	)

16 
	#COM_ERR_ATTR
(
x
)

	)

19 
	~<°d¨g.h
>

21 
	tîrcode_t
;

23 
	sîr‹_èbÀ
 {

24 c⁄° * c⁄° * 
	mmsgs
;

25 
	mba£
;

26 
	mn_msgs
;

28 
	gë_li°
;

30 
	$com_îr
 (const *, , const *, ...)

31 
	`COM_ERR_ATTR
((
	`f‹m©
(
¥ötf
, 3, 4)));

33 
	$com_îr_va
 (c⁄° *
whﬂmi
, 
îrcode_t
 
code
, c⁄° *
fmt
,

34 
va_li°
 
¨gs
)

35 
	`COM_ERR_ATTR
((
	`f‹m©
(
¥ötf
, 3, 0)));

37 c⁄° *
	`îr‹_mesßge
 ();

38 (*
com_îr_hook
Ë(c⁄° *, , c⁄° *, 
va_li°
);

39 (*
	`£t_com_îr_hook
 ((*) (const *, ,

40 c⁄° *, 
va_li°
)))

41 (c⁄° *, , c⁄° *, 
va_li°
);

42 (*
	$ª£t_com_îr_hook
 ()) (const *, ,

43 c⁄° *, 
va_li°
);

44 
	`öô_îr‹_èbÀ
(c⁄° * c⁄° *
msgs
, 
ba£
, 
cou¡
);

46 
îrcode_t
 
	`add_îr‹_èbÀ
(c⁄° 
îr‹_èbÀ
 * 
ë
);

47 
îrcode_t
 
	`ªmove_îr‹_èbÀ
(c⁄° 
îr‹_èbÀ
 * 
ë
);

48 
	`add_to_îr‹_èbÀ
(
ë_li°
 *
√w_èbÀ
);

51 c⁄° *
	`com_right
(
ë_li°
 *
li°
, 
code
);

52 
	`öôülize_îr‹_èbÀ_r
(
ë_li°
 **
li°
,

53 c⁄° **
mesßges
,

54 
num_îr‹s
,

55 
ba£
);

56 
	`‰ì_îr‹_èbÀ
(
ë_li°
 *
ë
);

59 
	`ë_li°_lock
();

60 
	`ë_li°_u∆ock
();

62 
	#__COM_ERR_H


	)

63 
	#__COM_ERR_H__


	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 #i‡
__GNUC_PREREQ
 (4,3)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

317 #i‡
__GNUC_PREREQ
 (4,3)

318 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

319 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

326 #i‡!
__GNUC_PREREQ
 (2,8)

327 
	#__exãnsi⁄__


	)

331 #i‡!
__GNUC_PREREQ
 (2,92)

332 
	#__ª°ri˘


	)

338 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


339 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

341 #ifde‡
__GNUC__


342 
	#__ª°ri˘_¨r


	)

344 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

345 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

348 
	#__ª°ri˘_¨r


	)

353 
	~<bôs/w‹dsize.h
>

355 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


356 
	#__LDBL_COMPAT
 1

	)

357 #ifde‡
__REDIRECT


358 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

359 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

360 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

361 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

362 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

363 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

364 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

365 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

366 
	#__LDBL_REDIR_DECL
(
«me
) \

367 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

368 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

369 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

370 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

371 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

374 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


375 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

376 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

377 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

378 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

379 
	#__LDBL_REDIR_DECL
(
«me
)

	)

380 #ifde‡
__REDIRECT


381 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/asm/sockios.h

1 #i‚de‡
_ASM_X86_SOCKIOS_H


2 
	#_ASM_X86_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

41 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


42 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


43 
±hªad_muãx_t
 
	t__libc_lock_t
;

44 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

46 
	t__libc_lock_t
;

47 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

49 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

50 #ifde‡
__USE_UNIX98


51 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

53 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

56 
__libc_lock_›aque__
 
	t__libc_lock_t
;

57 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

58 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

62 
±hªad_key_t
 
	t__libc_key_t
;

71 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

73 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

75 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

77 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

89 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

90 #i‡
LLL_LOCK_INITIALIZER
 == 0

91 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

92 
CLASS
 
__libc_lock_t
 
NAME
;

	)

94 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

95 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

98 #i‡
__LT_SPINLOCK_INIT
 == 0

99 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

100 
CLASS
 
__libc_lock_t
 
NAME
;

	)

102 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

103 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

107 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

108 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

112 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

113 #i‡
LLL_LOCK_INITIALIZER
 == 0

114 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

115 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

117 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

118 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

120 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

121 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

123 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

124 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

125 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

126 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

129 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

130 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

131 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

132 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

134 
	#__πld_lock_öôülize
(
NAME
) \

135 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

142 #ifde‡
__PIC__


143 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

144 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

145 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

147 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

148 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

152 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


153 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

154 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

155 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

156 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

157 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

159 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

160 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

161 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

162 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

163 
FUNC
 
ARGS


	)

169 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

170 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

172 
	#__libc_lock_öô
(
NAME
) \

173 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

175 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


178 
	#__libc_rwlock_öô
(
NAME
) \

179 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

181 
	#__libc_rwlock_öô
(
NAME
) \

182 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

186 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

187 
	#__libc_lock_öô_ªcursive
(
NAME
) \

188 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

190 
	#__libc_lock_öô_ªcursive
(
NAME
) \

192 i‡(
__±hªad_muãx_öô
 !
NULL
) \

194 
±hªad_muãx©å_t
 
__©å
; \

195 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

196 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

197 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

198 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

200 } 0)

	)

203 
	#__πld_lock_öô_ªcursive
(
NAME
) \

205 i‡(
__±hªad_muãx_öô
 !
NULL
) \

207 
±hªad_muãx©å_t
 
__©å
; \

208 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

209 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

210 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

211 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

213 } 0)

	)

218 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

219 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

221 
	#__libc_lock_föi
(
NAME
) \

222 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

224 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


225 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

227 
	#__libc_rwlock_föi
(
NAME
) \

228 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

232 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

233 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

235 
	#__libc_lock_föi_ªcursive
(
NAME
) \

236 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

240 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

241 
	#__libc_lock_lock
(
NAME
) \

242 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

244 
	#__libc_lock_lock
(
NAME
) \

245 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

247 
	#__libc_rwlock_rdlock
(
NAME
) \

248 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

249 
	#__libc_rwlock_wæock
(
NAME
) \

250 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

253 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

254 
	#__libc_lock_lock_ªcursive
(
NAME
) \

256 *
£lf
 = 
THREAD_SELF
; \

257 i‡((
NAME
).
ow√r
 !
£lf
) \

259 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

260 (
NAME
).
ow√r
 = 
£lf
; \

262 ++(
NAME
).
˙t
; \

263 } 0)

	)

265 
	#__libc_lock_lock_ªcursive
(
NAME
) \

266 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

270 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

271 
	#__libc_lock_åylock
(
NAME
) \

272 
	`Œl_åylock
 (
NAME
)

	)

274 
	#__libc_lock_åylock
(
NAME
) \

275 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

277 
	#__libc_rwlock_åyrdlock
(
NAME
) \

278 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

279 
	#__libc_rwlock_åywæock
(
NAME
) \

280 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

283 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

284 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

286 
ªsu…
 = 0; \

287 *
£lf
 = 
THREAD_SELF
; \

288 i‡((
NAME
).
ow√r
 !
£lf
) \

290 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

292 (
NAME
).
ow√r
 = 
£lf
; \

293 (
NAME
).
˙t
 = 1; \

296 
ªsu…
 = 
EBUSY
; \

299 ++(
NAME
).
˙t
; \

300 
ªsu…
; \

301 })

	)

303 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

304 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

307 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

308 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

311 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

312 
	#__libc_lock_u∆ock
(
NAME
) \

313 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

315 
	#__libc_lock_u∆ock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

318 
	#__libc_rwlock_u∆ock
(
NAME
) \

319 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

322 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

324 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

326 i‡(--(
NAME
).
˙t
 == 0) \

328 (
NAME
).
ow√r
 = 
NULL
; \

329 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

331 } 0)

	)

333 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

334 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

337 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


338 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

339 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

341 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

342 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

344 
	#__πld_lock_lock_ªcursive
(
NAME
) \

345 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

347 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

348 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

350 
	#__πld_lock_lock_ªcursive
(
NAME
) \

351 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

353 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

358 #i‡
PTHREAD_ONCE_INIT
 == 0

361 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

362 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

364 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

365 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

369 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

371 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

372 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

373 
INIT_FUNCTION
)); \

374 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

375 
	`INIT_FUNCTION
 (); \

376 (
ONCE_CONTROL
) |= 2; \

378 } 0)

	)

385 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

386 (*
routöe
Ë(*), *
¨g
);

387 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

388 
execuã
);

389 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

390 (*
routöe
Ë(*), *
¨g
);

391 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

392 
execuã
);

395 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

396 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

397 
_avaû
; \

398 i‡(
DOIT
) { \

399 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

400 i‡(
_avaû
) { \

401 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

402 
ARG
)); \

404 
_buf„r
.
__routöe
 = (
FCT
); \

405 
_buf„r
.
__¨g
 = (
ARG
); \

408 
_avaû
 = 0; \

409 }

	)

412 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

413 i‡(
_avaû
) { \

414 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

415 } i‡(
DOIT
) \

416 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

417 
	}

	)
}

420 
	#__libc_˛ónup_íd
(
DOIT
) \

421 i‡(
_avaû
) { \

422 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

423 } i‡(
DOIT
) \

424 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

428 
__exã∫_ölöe
 

429 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

431 i‡(
f
->
__do_ô
)

432 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

433 
	}
}

435 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

437 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

438 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

439 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

440 .
__do_ô
 = 1 };

	)

442 
	#__libc_˛ónup_p›
(
execuã
) \

443 
__˛‰ame
.
__do_ô
 = (
execuã
); \

444 } 0)

	)

448 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

449 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

452 
	#__libc_gë•ecific
(
KEY
) \

453 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

456 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

457 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

463 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

464 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

465 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

466 (*
__∑ª¡
) (),

467 (*
__chûd
) (),

468 *
__dso_h™dÀ
);

473 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

474 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

476 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

478 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

480 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

482 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

484 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

486 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

488 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

489 
__köd
);

491 #ifde‡
__USE_UNIX98


492 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

493 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

495 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

497 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

499 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

501 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

503 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

505 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

508 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

509 (*
__de°r_fun˘i⁄
) (*));

511 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

512 
__c⁄°
 *
__poöãr
);

514 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

516 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

517 (*
__öô_routöe
) ());

519 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

520 (*
__∑ª¡
) (),

521 (*
__chûd
) ());

527 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


528 #ifde‡
wók_exã∫


529 #i‡
_LIBC


530 
	~<bp-sym.h
>

532 
	#BP_SYM
 (
sym
Ë
	)
sym

534 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

535 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

536 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

537 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

538 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

539 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

540 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

541 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

542 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

543 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

544 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

545 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

546 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

547 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

548 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

549 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

550 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

551 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

552 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

553 
	$wók_exã∫
 (
__±hªad_öôülize
)

554 
	$wók_exã∫
 (
__±hªad_©f‹k
)

555 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

556 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

557 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

559 #¥agm®
wók
 
__±hªad_muãx_öô


560 #¥agm®
wók
 
__±hªad_muãx_de°roy


561 #¥agm®
wók
 
__±hªad_muãx_lock


562 #¥agm®
wók
 
__±hªad_muãx_åylock


563 #¥agm®
wók
 
__±hªad_muãx_u∆ock


564 #¥agm®
wók
 
__±hªad_muãx©å_öô


565 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


566 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


567 #¥agm®
wók
 
__±hªad_rwlock_de°roy


568 #¥agm®
wók
 
__±hªad_rwlock_rdlock


569 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


570 #¥agm®
wók
 
__±hªad_rwlock_wæock


571 #¥agm®
wók
 
__±hªad_rwlock_åywæock


572 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


573 #¥agm®
wók
 
__±hªad_key_¸óã


574 #¥agm®
wók
 
__±hªad_£t•ecific


575 #¥agm®
wók
 
__±hªad_gë•ecific


576 #¥agm®
wók
 
__±hªad_⁄˚


577 #¥agm®
wók
 
__±hªad_öôülize


578 #¥agm®
wók
 
__±hªad_©f‹k


579 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


580 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


581 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

55 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

56 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

61 #i‚de‡
_WINT_T


66 
	#_WINT_T


	)

67 
	twöt_t
;

71 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

72 && 
deföed
 
__WINT_TYPE__


73 
__BEGIN_NAMESPACE_STD


74 
__WINT_TYPE__
 
	twöt_t
;

75 
	g__END_NAMESPACE_STD


80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

561 #ifdef 
__USE_XOPEN2K8


564 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

663 
__isoc99_swsˇnf
)

664 
__THROW
 ;

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

718 
__THROW
 ;

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

64 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

65 
size_t
 
__ns1
), 
__wmemmove_chk
)

66 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

69 
__exã∫_Æways_ölöe
 
wch¨_t
 *

70 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

71 
size_t
 
__n
))

73 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

75 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

76  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

77 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

79 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

80  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

81 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

83  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

84 
	}
}

87 #ifde‡
__USE_GNU


88 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

89 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

90 
size_t
 
__ns1
Ë
__THROW
;

91 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

92 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

93 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

94 
size_t
 
__n
), 
wmemp˝y
);

95 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

96 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

97 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

98 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

99 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

102 
__exã∫_Æways_ölöe
 
wch¨_t
 *

103 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

104 
size_t
 
__n
))

106 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

108 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

109  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

110 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

112 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

113  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

114 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

116  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

117 
	}
}

121 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

122 
size_t
 
__ns
Ë
__THROW
;

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

124 
size_t
 
__n
), 
wmem£t
);

125 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

126 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

127 
size_t
 
__ns
), 
__wmem£t_chk
)

128 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

131 
__exã∫_Æways_ölöe
 
wch¨_t
 *

132 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

134 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

136 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

137  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

139 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

140  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

141 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

143  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

144 
	}
}

147 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
Ë
__THROW
;

150 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

151 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

152 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

154 
__exã∫_Æways_ölöe
 
wch¨_t
 *

155 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

158  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

159  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

160 
	}
}

163 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__§c
),

167 
w˝˝y
);

169 
__exã∫_Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

180 
size_t
 
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢˝y
);

185 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

186 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

187 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

188 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

189 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

192 
__exã∫_Æways_ölöe
 
wch¨_t
 *

193 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__exã∫_Æways_ölöe
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__exã∫_Æways_ölöe
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

265 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

266  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

267 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

268  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

269 
	}
}

272 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

273 
__Êag
, 
size_t
 
__s_Àn
,

274 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

275 
__THROW
 ;

277 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

278 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

279 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

280 
sw¥ötf
);

282 #ifde‡
__va_¨g_∑ck


283 
__exã∫_Æways_ölöe
 

284 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

285 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

287 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

288  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

289 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

290 
__fmt
, 
	`__va_¨g_∑ck
 ());

291  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

292 
	}
}

293 #ñi‡!
deföed
 
__˝lu•lus


295 
	#sw¥ötf
(
s
, 
n
, ...) \

296 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

297 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

298 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

299 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

302 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

303 
__Êag
, 
size_t
 
__s_Àn
,

304 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

305 
__gnuc_va_li°
 
__¨g
)

306 
__THROW
 ;

308 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

309 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

310 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

311 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

313 
__exã∫_Æways_ölöe
 

314 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

315 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

317 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

318  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

319 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

320  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

321 
	}
}

324 #i‡
__USE_FORTIFY_LEVEL
 > 1

326 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

328 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

330 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

331 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__gnuc_va_li°
 
__≠
);

333 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

336 #ifde‡
__va_¨g_∑ck


337 
__exã∫_Æways_ölöe
 

338 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

340  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

341 
	}
}

343 
__exã∫_Æways_ölöe
 

344 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

346  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

347 
	`__va_¨g_∑ck
 ());

348 
	}
}

349 #ñi‡!
deföed
 
__˝lu•lus


350 
	#w¥ötf
(...) \

351 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

352 
	#fw¥ötf
(
°ªam
, ...) \

353 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

356 
__exã∫_Æways_ölöe
 

357 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

359  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

360 
	}
}

362 
__exã∫_Æways_ölöe
 

363 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

364 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

366  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

367 
	}
}

371 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

372 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

373 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

374 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

375 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

376 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

377 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

378 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

379 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

382 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

383 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

385 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

387 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

388  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

389 
__n
, 
__°ªam
);

391 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

392  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

393 
__n
, 
__°ªam
);

395  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

396 
	}
}

398 #ifde‡
__USE_GNU


399 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

400 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

401 
__wur
;

402 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

403 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

404 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

405 
__wur
;

406 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

407 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

408 
__FILE
 *
__ª°ri˘
 
__°ªam
),

409 
__fgëws_u∆ocked_chk
)

410 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

413 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

414 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

416 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

418 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

419  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

420 
__n
, 
__°ªam
);

422 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

423  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

424 
__n
, 
__°ªam
);

426  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

427 
	}
}

431 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

432 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

433 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

434 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

437 
__exã∫_Æways_ölöe
 
__wur
 
size_t


438 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

443 
	#__WCHAR_MB_LEN_MAX
 16

	)

444 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


447 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

448  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

449  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

450 
	}
}

453 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

454 
__c⁄°
 **
__ª°ri˘
 
__§c
,

455 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

456 
size_t
 
__d°Àn
Ë
__THROW
;

457 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

458 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

459 
__c⁄°
 **
__ª°ri˘
 
__§c
,

460 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

461 
mb§towcs
);

462 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

463 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

464 
__c⁄°
 **
__ª°ri˘
 
__§c
,

465 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

466 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

467 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

470 
__exã∫_Æways_ölöe
 
size_t


471 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

472 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

474 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

476 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

477  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

478 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

480 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

481  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

485 
	}
}

488 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

489 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

490 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

491 
size_t
 
__d°Àn
Ë
__THROW
;

492 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

493 (*
__ª°ri˘
 
__d°
,

494 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

495 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

496 
wc§tombs
);

497 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

498 (*
__ª°ri˘
 
__d°
,

499 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

500 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

501 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

502 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

504 
__exã∫_Æways_ölöe
 
size_t


505 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

506 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

508 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

510 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

511  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

513 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

514  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

517 
	}
}

520 #ifde‡
__USE_GNU


521 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

522 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

523 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

524 
size_t
 
__d°Àn
Ë
__THROW
;

525 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

526 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

527 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

528 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

529 
mb¢πowcs
);

530 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

531 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

532 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

533 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

534 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

535 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

538 
__exã∫_Æways_ölöe
 
size_t


539 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

540 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

542 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

544 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

545  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

546 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

548 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

549  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

553 
	}
}

556 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

557 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

558 
size_t
 
__nwc
, size_à
__Àn
,

559 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

560 
__THROW
;

561 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

562 (*
__ª°ri˘
 
__d°
,

563 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

564 
size_t
 
__nwc
, size_à
__Àn
,

565 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

566 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

567 (*
__ª°ri˘
 
__d°
,

568 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

569 
size_t
 
__nwc
, size_à
__Àn
,

570 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

571 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

572 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

574 
__exã∫_Æways_ölöe
 
size_t


575 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

576 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

578 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

580 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

581  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

582 
	`__bos
 (
__d°
));

584 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

585  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

589 
	}
}

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	#__√ed_sig£t_t


	)

29 
	~<sig«l.h
>

30 
	~<bôs/±hªadty≥s.h
>

31 
	~<bôs/£tjmp.h
>

32 
	~<bôs/w‹dsize.h
>

38 
	mPTHREAD_CREATE_JOINABLE
,

39 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

40 
	mPTHREAD_CREATE_DETACHED


41 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

48 
	mPTHREAD_MUTEX_TIMED_NP
,

49 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

50 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

51 
	mPTHREAD_MUTEX_ADAPTIVE_NP


52 #ifde‡
__USE_UNIX98


54 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

55 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

56 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

57 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


59 #ifde‡
__USE_GNU


61 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


66 #ifde‡
__USE_XOPEN2K


70 
	mPTHREAD_MUTEX_STALLED
,

71 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

72 
	mPTHREAD_MUTEX_ROBUST
,

73 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


78 #ifde‡
__USE_UNIX98


82 
	mPTHREAD_PRIO_NONE
,

83 
	mPTHREAD_PRIO_INHERIT
,

84 
	mPTHREAD_PRIO_PROTECT


90 #i‡
__WORDSIZE
 == 64

91 
	#PTHREAD_MUTEX_INITIALIZER
 \

92 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

93 #ifde‡
__USE_GNU


94 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

102 
	#PTHREAD_MUTEX_INITIALIZER
 \

103 { { 0, 0, 0, 0, 0, { 0 } } }

	)

104 #ifde‡
__USE_GNU


105 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

109 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

110 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

116 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


119 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

120 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

121 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

122 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


126 
	#PTHREAD_RWLOCK_INITIALIZER
 \

127 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

128 #ifde‡
__USE_GNU


129 #i‡
__WORDSIZE
 == 64

130 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

132 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

134 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

136 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

137 0, 0, 0, 0 } }

	)

139 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

140 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

141 0 } }

	)

151 
	mPTHREAD_INHERIT_SCHED
,

152 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

153 
	mPTHREAD_EXPLICIT_SCHED


154 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

161 
	mPTHREAD_SCOPE_SYSTEM
,

162 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

163 
	mPTHREAD_SCOPE_PROCESS


164 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

171 
	mPTHREAD_PROCESS_PRIVATE
,

172 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

173 
	mPTHREAD_PROCESS_SHARED


174 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

180 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

184 
	s_±hªad_˛ónup_buf„r


186 (*
	m__routöe
) (*);

187 *
	m__¨g
;

188 
	m__ˇn˚…y≥
;

189 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

195 
	mPTHREAD_CANCEL_ENABLE
,

196 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

197 
	mPTHREAD_CANCEL_DISABLE


198 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

202 
	mPTHREAD_CANCEL_DEFERRED
,

203 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

204 
	mPTHREAD_CANCEL_ASYNCHRONOUS


205 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

207 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

211 
	#PTHREAD_ONCE_INIT
 0

	)

214 #ifde‡
__USE_XOPEN2K


218 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

222 
__BEGIN_DECLS


227 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

228 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

229 *(*
__°¨t_routöe
) (*),

230 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

236 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

244 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

246 #ifde‡
__USE_GNU


249 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

257 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

258 
__c⁄°
 
time•ec
 *
__ab°ime
);

265 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

269 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

272 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

280 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

283 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

288 *
__dëach°©e
)

289 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

292 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

293 
__dëach°©e
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

299 
size_t
 *
__gu¨dsize
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

303 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

304 
size_t
 
__gu¨dsize
)

305 
__THROW
 
	`__n⁄nuŒ
 ((1));

309 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


310 
__©å
,

311 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

315 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

316 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


317 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

320 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


321 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

325 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1));

329 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


330 
__©å
, *
__ª°ri˘
 
__öhîô
)

331 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

334 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

335 
__öhîô
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1));

340 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

341 *
__ª°ri˘
 
__sc›e
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

345 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

346 
__THROW
 
	`__n⁄nuŒ
 ((1));

349 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


350 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

357 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

358 *
__°ackaddr
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

362 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


363 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

364 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

369 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

370 
size_t
 
__°acksize
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1));

373 #ifde‡
__USE_XOPEN2K


375 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

376 **
__ª°ri˘
 
__°ackaddr
,

377 
size_t
 *
__ª°ri˘
 
__°acksize
)

378 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

383 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

384 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

387 #ifde‡
__USE_GNU


390 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

391 
size_t
 
__˝u£tsize
,

392 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

397 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

398 
size_t
 
__˝u£tsize
,

399 
˝u_£t_t
 *
__˝u£t
)

400 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

406 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

407 
__THROW
 
	`__n⁄nuŒ
 ((2));

415 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

416 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

417 
__THROW
 
	`__n⁄nuŒ
 ((3));

420 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

421 *
__ª°ri˘
 
__pﬁicy
,

422 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

423 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

426 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

427 
__THROW
;

430 #ifde‡
__USE_UNIX98


432 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

435 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

438 #ifde‡
__USE_GNU


443 
	$±hªad_yõld
 (Ë
__THROW
;

448 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

449 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

450 
__THROW
 
	`__n⁄nuŒ
 ((3));

453 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

454 
˝u_£t_t
 *
__˝u£t
)

455 
__THROW
 
	`__n⁄nuŒ
 ((3));

468 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

469 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

480 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

484 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

487 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

492 
	`±hªad_ã°ˇn˚l
 ();

501 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

502 
__mask_was_ßved
;

503 } 
__ˇn˚l_jmp_buf
[1];

504 *
__∑d
[4];

505 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

508 #i‚de‡
__˛ónup_f˘_©åibuã


509 
	#__˛ónup_f˘_©åibuã


	)

514 
	s__±hªad_˛ónup_‰ame


516 (*
__ˇn˚l_routöe
) (*);

517 *
__ˇn˚l_¨g
;

518 
__do_ô
;

519 
__ˇn˚l_ty≥
;

522 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


523 #ifde‡
__˝lu•lus


525 ˛as†
	c__±hªad_˛ónup_˛ass


527 (*
__ˇn˚l_routöe
) (*);

528 *
__ˇn˚l_¨g
;

529 
__do_ô
;

530 
__ˇn˚l_ty≥
;

532 
public
:

533 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

534 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

535 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

536 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

537 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

538 &
__ˇn˚l_ty≥
); 
	}
}

539 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

549 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

551 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

555 
	#±hªad_˛ónup_p›
(
execuã
) \

556 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

557 } 0)

	)

559 #ifde‡
__USE_GNU


563 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

565 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

566 
__˛‰ame
.
	`__de„r
 ()

	)

571 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

572 
__˛‰ame
.
	`__ª°‹e
 (); \

573 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

574 } 0)

	)

581 
__exã∫_ölöe
 

582 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

584 i‡(
__‰ame
->
__do_ô
)

585 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

586 
	}
}

595 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

597 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

598 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

599 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

600 .
__do_ô
 = 1 };

	)

604 
	#±hªad_˛ónup_p›
(
execuã
) \

605 
__˛‰ame
.
__do_ô
 = (
execuã
); \

606 } 0)

	)

608 #ifde‡
__USE_GNU


612 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

614 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

615 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

616 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

617 .
__do_ô
 = 1 }; \

618 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

619 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

624 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

625 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

626 
__˛‰ame
.
__do_ô
 = (
execuã
); \

627 } 0)

	)

638 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

640 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

641 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

642 *
__ˇn˚l_¨g
 = (
¨g
); \

643 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

644 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

645 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

647 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

648 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

652 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

653 dÿ{

	)

654 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

655 
__˛ónup_f˘_©åibuã
;

659 
	#±hªad_˛ónup_p›
(
execuã
) \

662 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 i‡(
execuã
) \

664 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

665 } 0)

	)

666 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

667 
__˛ónup_f˘_©åibuã
;

669 #ifde‡
__USE_GNU


673 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

675 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

676 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

677 *
__ˇn˚l_¨g
 = (
¨g
); \

678 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

679 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

680 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

682 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

683 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

687 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

688 dÿ{

	)

689 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

690 
__˛ónup_f˘_©åibuã
;

695 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

698 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

699 i‡(
execuã
) \

700 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

701 
	}
} 0)

	)

702 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

703 
__˛ónup_f˘_©åibuã
;

707 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

708 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

709 #i‚de‡
SHARED


710 
	`__©åibuã__
 ((
__wók__
))

716 
__jmp_buf_èg
;

717 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

723 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

724 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1));

728 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

729 
__THROW
 
	`__n⁄nuŒ
 ((1));

732 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

733 
__THROW
 
	`__n⁄nuŒ
 ((1));

736 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

737 
__THROW
 
	`__n⁄nuŒ
 ((1));

739 #ifde‡
__USE_XOPEN2K


741 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

742 
__c⁄°
 
time•ec
 *
__ª°ri˘


743 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

747 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

748 
__THROW
 
	`__n⁄nuŒ
 ((1));

751 #ifde‡
__USE_UNIX98


753 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

754 
__ª°ri˘
 
__muãx
,

755 *
__ª°ri˘
 
__¥io˚ûög
)

756 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

760 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

761 
__¥io˚ûög
,

762 *
__ª°ri˘
 
__ﬁd_˚ûög
)

763 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

767 #ifde‡
__USE_XOPEN2K8


769 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROW
 
	`__n⁄nuŒ
 ((1));

771 #ifde‡
__USE_GNU


772 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

773 
__THROW
 
	`__n⁄nuŒ
 ((1));

782 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

783 
__THROW
 
	`__n⁄nuŒ
 ((1));

786 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

787 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

791 
__ª°ri˘
 
__©å
,

792 *
__ª°ri˘
 
__psh¨ed
)

793 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

797 
__psh¨ed
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

800 #ifde‡
__USE_UNIX98


802 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


803 
__©å
, *
__ª°ri˘
 
__köd
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

809 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1));

813 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

814 
__ª°ri˘
 
__©å
,

815 *
__ª°ri˘
 
__¥Ÿocﬁ
)

816 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

820 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

821 
__¥Ÿocﬁ
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__¥io˚ûög
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__¥io˚ûög
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

836 #ifde‡
__USE_XOPEN2K


838 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

839 *
__robu°√ss
)

840 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

841 #ifde‡
__USE_GNU


842 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

843 *
__robu°√ss
)

844 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

848 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

849 
__robu°√ss
)

850 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_GNU


852 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

853 
__robu°√ss
)

854 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


864 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

865 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


866 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

870 
__THROW
 
	`__n⁄nuŒ
 ((1));

873 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

880 #ifde‡
__USE_XOPEN2K


882 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

883 
__c⁄°
 
time•ec
 *
__ª°ri˘


884 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

888 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1));

895 #ifde‡
__USE_XOPEN2K


897 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

898 
__c⁄°
 
time•ec
 *
__ª°ri˘


899 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

903 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

904 
__THROW
 
	`__n⁄nuŒ
 ((1));

910 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

911 
__THROW
 
	`__n⁄nuŒ
 ((1));

914 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

915 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

919 
__ª°ri˘
 
__©å
,

920 *
__ª°ri˘
 
__psh¨ed
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

924 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

925 
__psh¨ed
)

926 
__THROW
 
	`__n⁄nuŒ
 ((1));

929 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

930 
__ª°ri˘
 
__©å
,

931 *
__ª°ri˘
 
__¥ef
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

935 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

936 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

945 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


946 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

954 
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

966 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

967 
	`__n⁄nuŒ
 ((1, 2));

976 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

977 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

978 
__c⁄°
 
time•ec
 *
__ª°ri˘


979 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

984 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

989 
__THROW
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

993 
__ª°ri˘
 
__©å
,

994 *
__ª°ri˘
 
__psh¨ed
)

995 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

998 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

999 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1001 #ifde‡
__USE_XOPEN2K


1003 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1004 
__ª°ri˘
 
__©å
,

1005 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1009 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1010 
__˛ockid_t
 
__˛ock_id
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1));

1015 #ifde‡
__USE_XOPEN2K


1020 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1));

1024 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1025 
__THROW
 
	`__n⁄nuŒ
 ((1));

1028 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1045 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1046 
__©å
, 
__cou¡
)

1047 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1051 
__THROW
 
	`__n⁄nuŒ
 ((1));

1054 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1064 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1068 
__ª°ri˘
 
__©å
,

1069 *
__ª°ri˘
 
__psh¨ed
)

1070 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1073 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1074 
__psh¨ed
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1087 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1088 (*
__de°r_fun˘i⁄
) (*))

1089 
__THROW
 
	`__n⁄nuŒ
 ((1));

1092 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1095 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1098 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1099 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1102 #ifde‡
__USE_XOPEN2K


1104 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1105 
__˛ockid_t
 *
__˛ock_id
)

1106 
__THROW
 
	`__n⁄nuŒ
 ((2));

1121 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1122 (*
__∑ª¡
) (),

1123 (*
__chûd
Ë()Ë
__THROW
;

1126 #ifde‡
__USE_EXTERN_INLINES


1128 
__exã∫_ölöe
 

1129 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1131  
__thªad1
 =
__thªad2
;

1132 
	}
}

1135 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<°ddef.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

35 
	~<bôs/sched.h
>

37 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

40 
__BEGIN_DECLS


43 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

44 
__THROW
;

47 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

50 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

51 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

54 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

57 
	$sched_yõld
 (Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

66 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

69 #ifde‡
__USE_GNU


71 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

72 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

73 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

74 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

75 
˝u£ç
)

	)

76 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

77 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

80 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

81 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

84 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

86 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

87 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

88 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

89 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

91 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

92 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

93 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

94 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

95 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

96 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

97 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

105 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

106 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

110 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

111 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

114 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

115 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

118 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #ifde‡
__USE_XOPEN


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

37 #ifde‡
__USE_MISC


39 
	#CSIGNAL
 0x000000f‡

	)

40 
	#CLONE_VM
 0x00000100

	)

41 
	#CLONE_FS
 0x00000200

	)

42 
	#CLONE_FILES
 0x00000400

	)

43 
	#CLONE_SIGHAND
 0x00000800

	)

44 
	#CLONE_PTRACE
 0x00002000

	)

45 
	#CLONE_VFORK
 0x00004000

	)

47 
	#CLONE_PARENT
 0x00008000

	)

49 
	#CLONE_THREAD
 0x00010000

	)

50 
	#CLONE_NEWNS
 0x00020000

	)

51 
	#CLONE_SYSVSEM
 0x00040000

	)

52 
	#CLONE_SETTLS
 0x00080000

	)

53 
	#CLONE_PARENT_SETTID
 0x00100000

	)

55 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

57 
	#CLONE_DETACHED
 0x00400000

	)

58 
	#CLONE_UNTRACED
 0x00800000

	)

60 
	#CLONE_CHILD_SETTID
 0x01000000

	)

62 
	#CLONE_NEWUTS
 0x04000000

	)

63 
	#CLONE_NEWIPC
 0x08000000

	)

64 
	#CLONE_NEWUSER
 0x10000000

	)

65 
	#CLONE_NEWPID
 0x20000000

	)

66 
	#CLONE_NEWNET
 0x40000000

	)

67 
	#CLONE_IO
 0x80000000

	)

71 
	ssched_∑øm


73 
	m__sched_¥i‹ôy
;

76 
	g__BEGIN_DECLS


78 #ifde‡
__USE_MISC


80 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

81 
__Êags
, *
__¨g
, ...Ë
__THROW
;

84 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

87 
	$sched_gë˝u
 (Ë
__THROW
;

90 
__END_DECLS


94 #i‡!
deföed
 
__deföed_sched∑øm
 \

95 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

96 
	#__deföed_sched∑øm
 1

	)

98 
	s__sched_∑øm


100 
__sched_¥i‹ôy
;

102 #unde‡
__√ed_sched∑øm


106 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


107 
	#__˝u_£t_t_deföed


	)

109 
	#__CPU_SETSIZE
 1024

	)

110 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

113 
	t__˝u_mask
;

116 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

117 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

122 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

123 } 
	t˝u_£t_t
;

126 #i‡
	`__GNUC_PREREQ
 (2, 91)

127 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

128 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

132 
size_t
 
__i
; \

133 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

134 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

135 
__i
 = 0; __ò< 
__imax
; ++__i) \

136 
__bôs
[
__i
] = 0; \

137 
	}
} 0)

	)

139 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

140 (
__exãnsi⁄__
 \

141 ({ 
size_t
 
__˝u
 = (
˝u
); \

142 
__˝u
 < 8 * (
£tsize
) \

143 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

144 |
	`__CPUMASK
 (
__˝u
)) \

145 : 0; }))

	)

146 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 &~
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? ((((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

159 : 0; }))

	)

161 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

162 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

164 #i‡
__GNUC_PREREQ
 (2, 91)

165 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

166 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
__exãnsi⁄__
 \

170 ({ 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

171 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

172 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

173 
size_t
 
__i
; \

174 
__i
 = 0; __ò< 
__imax
; ++__i) \

175 i‡(
__bôs
[
__i
] != __bits[__i]) \

177 
__i
 =
__imax
; }))

	)

180 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

181 (
__exãnsi⁄__
 \

182 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

183 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

184 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

185 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

186 
size_t
 
__i
; \

187 
__i
 = 0; __ò< 
__imax
; ++__i) \

188 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

189 
__de°
; }))

	)

191 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

192 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

193 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

194 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

196 
__BEGIN_DECLS


198 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

199 
__THROW
;

200 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

201 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

203 
__END_DECLS


	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@
1
.
1
/usr/include
205
5125
config.h
src/adium/ESPurpleSIPEAccount.h
src/adium/ESSIPELibpurpleServicePlugin.h
src/adium/ESSIPEService.h
src/api/core-depurple.h
src/api/sipe-backend.h
src/api/sipe-common.h
src/api/sipe-core.h
src/api/sipe-crypt.h
src/api/sipe-digest.h
src/api/sipe-media.h
src/api/sipe-mime.h
src/api/sipe-nls.h
src/core/http-conn.c
src/core/http-conn.h
src/core/md4.c
src/core/md4.h
src/core/sip-csta.c
src/core/sip-csta.h
src/core/sip-sec-krb5.c
src/core/sip-sec-krb5.h
src/core/sip-sec-mech.h
src/core/sip-sec-ntlm-tests.c
src/core/sip-sec-ntlm.c
src/core/sip-sec-ntlm.h
src/core/sip-sec-sspi.c
src/core/sip-sec-sspi.h
src/core/sip-sec.c
src/core/sip-sec.h
src/core/sip-transport.c
src/core/sip-transport.h
src/core/sipe-buddy.c
src/core/sipe-buddy.h
src/core/sipe-cal.c
src/core/sipe-cal.h
src/core/sipe-chat.c
src/core/sipe-chat.h
src/core/sipe-conf.c
src/core/sipe-conf.h
src/core/sipe-core-private.h
src/core/sipe-core.c
src/core/sipe-crypt.c
src/core/sipe-dialog.c
src/core/sipe-dialog.h
src/core/sipe-digest.c
src/core/sipe-domino.c
src/core/sipe-domino.h
src/core/sipe-ews.c
src/core/sipe-ews.h
src/core/sipe-ft.c
src/core/sipe-ft.h
src/core/sipe-media.c
src/core/sipe-mime.c
src/core/sipe-schedule.c
src/core/sipe-schedule.h
src/core/sipe-session.c
src/core/sipe-session.h
src/core/sipe-sign.c
src/core/sipe-sign.h
src/core/sipe-utils.c
src/core/sipe-utils.h
src/core/sipe-win32dep.c
src/core/sipe-win32dep.h
src/core/sipe-xml-tests.c
src/core/sipe-xml.c
src/core/sipe-xml.h
src/core/sipe.c
src/core/sipe.h
src/core/sipmsg.c
src/core/sipmsg.h
src/core/uuid.c
src/core/uuid.h
src/miranda/miranda-backend.cpp
src/miranda/sipe-miranda.cpp
src/miranda/sipe-miranda.h
src/purple/purple-connection.c
src/purple/purple-crypt.c
src/purple/purple-debug.c
src/purple/purple-digest.c
src/purple/purple-dnsquery.c
src/purple/purple-markup.c
src/purple/purple-media.c
src/purple/purple-mime.c
src/purple/purple-network.c
src/purple/purple-plugin.c
src/purple/purple-private.h
src/purple/purple-schedule.c
src/purple/purple-setting.c
src/purple/purple-transport.c
src/purple/tests-load.c
src/purple/tests.c
/usr/include/arpa/inet.h
/usr/include/ctype.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/gssapi/gssapi.h
/usr/include/gssapi/gssapi_krb5.h
/usr/include/krb5.h
/usr/include/langinfo.h
/usr/include/net/if.h
/usr/include/netinet/in.h
/usr/include/nss.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/ioctl.h
/usr/include/sys/socket.h
/usr/include/sys/types.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/in.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/locale.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sigset.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/gssapi/gssapi_ext.h
/usr/include/inttypes.h
/usr/include/krb5/krb5.h
/usr/include/libio.h
/usr/include/nl_types.h
/usr/include/stdint.h
/usr/include/sys/select.h
/usr/include/sys/stat.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/uio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/ioctls.h
/usr/include/asm/socket.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/predefs.h
/usr/include/bits/select.h
/usr/include/bits/sockaddr.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/et/com_err.h
/usr/include/gnu/stubs.h
/usr/include/limits.h
/usr/include/linux/errno.h
/usr/include/sys/cdefs.h
/usr/include/asm/errno.h
/usr/include/asm/ioctl.h
/usr/include/asm/sockios.h
/usr/include/bits/libc-lock.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/xopen_lim.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/ioctl.h
/usr/include/bits/local_lim.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/bits/setjmp.h
/usr/include/linux/limits.h
/usr/include/sched.h
/usr/include/signal.h
/usr/include/bits/sched.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/sys/ucontext.h
